{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/img/avatar.jpg","path":"img/avatar.jpg","modified":0,"renderable":0},{"_id":"source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":0},{"_id":"source/img/default_cover/geomeric1.jpg","path":"img/default_cover/geomeric1.jpg","modified":0,"renderable":0},{"_id":"source/img/default_cover/geomeric2.png","path":"img/default_cover/geomeric2.png","modified":0,"renderable":0},{"_id":"source/img/default_cover/geomeric10.png","path":"img/default_cover/geomeric10.png","modified":0,"renderable":0},{"_id":"source/img/default_cover/geomeric5.png","path":"img/default_cover/geomeric5.png","modified":0,"renderable":0},{"_id":"source/img/default_cover/geomeric3.png","path":"img/default_cover/geomeric3.png","modified":0,"renderable":0},{"_id":"source/img/default_cover/geomeric4.jpg","path":"img/default_cover/geomeric4.jpg","modified":0,"renderable":0},{"_id":"source/img/default_cover/geomeric7.jpg","path":"img/default_cover/geomeric7.jpg","modified":0,"renderable":0},{"_id":"source/img/default_cover/geomeric8.png","path":"img/default_cover/geomeric8.png","modified":0,"renderable":0},{"_id":"source/img/default_cover/geomeric6.png","path":"img/default_cover/geomeric6.png","modified":0,"renderable":0},{"_id":"source/img/default_cover/geomeric9.png","path":"img/default_cover/geomeric9.png","modified":0,"renderable":0},{"_id":"source/img/posts/java/interview/1.png","path":"img/posts/java/interview/1.png","modified":0,"renderable":0},{"_id":"source/img/posts/java/interview/10.png","path":"img/posts/java/interview/10.png","modified":0,"renderable":0},{"_id":"source/img/posts/java/interview/3.png","path":"img/posts/java/interview/3.png","modified":0,"renderable":0},{"_id":"source/img/posts/java/interview/2.png","path":"img/posts/java/interview/2.png","modified":0,"renderable":0},{"_id":"source/img/posts/java/interview/4.png","path":"img/posts/java/interview/4.png","modified":0,"renderable":0},{"_id":"source/img/posts/java/interview/8.png","path":"img/posts/java/interview/8.png","modified":0,"renderable":0},{"_id":"source/img/posts/java/interview/9.png","path":"img/posts/java/interview/9.png","modified":0,"renderable":0},{"_id":"source/img/posts/java/interview/5.png","path":"img/posts/java/interview/5.png","modified":0,"renderable":0},{"_id":"source/img/posts/java/interview/6.png","path":"img/posts/java/interview/6.png","modified":0,"renderable":0},{"_id":"source/img/posts/java/interview/7.png","path":"img/posts/java/interview/7.png","modified":0,"renderable":0},{"_id":"node_modules/hexo-theme-butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1},{"_id":"source/img/bg.jpg","path":"img/bg.jpg","modified":0,"renderable":0},{"_id":"source/img/image.png","path":"img/image.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/_data/link.yml","hash":"bd3be0627c327f2cb2f02a2682f6c1d164525558","modified":1758693608729},{"_id":"source/categories/index.md","hash":"e1c70c56073dca6cbc6a30219c550fb6ead2ee5d","modified":1758693608751},{"_id":"source/link/index.md","hash":"651e1b8a041e1bd292af33358d669d37a99f17cf","modified":1758693608782},{"_id":"source/tags/index.md","hash":"b14a5646ddce6c7c0ffb1770675573f5f6e6d11a","modified":1758693608784},{"_id":"source/img/favicon.png","hash":"0a89c027b57958499837f186dea4ec9e8e790213","modified":1696916625596},{"_id":"source/_posts/docker/用 Dockerfile 文件构建带 systemd 的ubuntu 22.04.md","hash":"84ee1a1884abe87dafcaa1da3ef54c7a9f2878f1","modified":1758693608731},{"_id":"source/self/Kimbiedark.css","hash":"99b997bf64e3ab437253a45cbda32cd45bd7717c","modified":1758693608783},{"_id":"source/_posts/k8s/k8s 创建单节点 mysql 并持久化存储.md","hash":"96ee6142c6d5e1d56f0cdf053b6b5a8d171b533c","modified":1758693608735},{"_id":"source/_posts/linux/vi 常用命令.md","hash":"84cb086adb81517e0c5f12f85f58dc663e99489b","modified":1758693608740},{"_id":"source/_posts/ceph/Ceph 安装记录.md","hash":"8b9cdbb5ed0a518b84f2bd0823ebf174202de2b2","modified":1758693608729},{"_id":"source/_posts/ceph/Ceph 集群部署.md","hash":"e1bc8f91780330f94d09ae95d2c77d75517282ad","modified":1758693608730},{"_id":"source/img/default_cover/geomeric1.jpg","hash":"6ba7958abd428a49adc2dfba728d3c38786e49c3","modified":1696916625586},{"_id":"source/_posts/k8s/k8s创建ubuntu22.04并暴露22端口.md","hash":"7008d80e937c29b99fdfea600f1c4666e803595b","modified":1758693608736},{"_id":"source/img/default_cover/geomeric10.png","hash":"b2508e510986db497afd39f91bded81c3f8d4e7b","modified":1696916625586},{"_id":"source/img/default_cover/geomeric2.png","hash":"9afbfe90fc2a0f97524dd8f3b2171d488e3ce6ad","modified":1696916625587},{"_id":"source/css/pace/flash.css","hash":"1429efd930b6fcf2fb435e224ca00e218179d7cf","modified":1758693608752},{"_id":"source/_posts/java/debug/MySQL 8.0 Public Key Retrieval is not allowed 错误的解决方法.md","hash":"0bb04920d87a46376047cf954fce397eb469a3ae","modified":1758693608731},{"_id":"source/_posts/java/note/HashMap 与 TreeMap.md","hash":"38d64001ef54c79abbafe8d7247b0f737fa3a34a","modified":1758693608734},{"_id":"source/_posts/k8s/kubevirt/cloud-init 无法调整分区大小：当 LANG 不是 en_US 时，growpart 不起作用.md","hash":"901de87c79d463eece7c2569937c1e803bfd1aff","modified":1758693608736},{"_id":"source/_posts/k8s/study/k8s 网络策略.md","hash":"46a3b0ff447c54bb8929bf5ee3504ed006d32887","modified":1758693608737},{"_id":"source/_posts/java/interview/index.md","hash":"b63dd22b08d8f7f532ca6aa80fa387ccba558e19","modified":1758693608733},{"_id":"source/img/posts/java/interview/1.png","hash":"26ee7f89480f0612309c1a59bd9bd4b6ae372141","modified":1696916625597},{"_id":"source/img/posts/java/interview/10.png","hash":"501a45864e2d5bed9ac42813396ebeab5bf54792","modified":1696916625597},{"_id":"source/img/posts/java/interview/3.png","hash":"6a0aa673a8a157e3793f23076d97665aff0c9f31","modified":1696916625599},{"_id":"source/img/posts/java/interview/2.png","hash":"8598079d5ff823018c265046635618ec9cf9c921","modified":1696916625598},{"_id":"source/img/posts/java/interview/4.png","hash":"cdab7714ec1432bb781014fe3449ee8d02531fc7","modified":1696916625599},{"_id":"source/img/posts/java/interview/8.png","hash":"1ae9a5fc3c9a2ea129431e17d423c8df1f54d021","modified":1696916625601},{"_id":"source/img/posts/java/interview/9.png","hash":"e7a2830e353d2411ed1cafcda6ebcb1674c61bd3","modified":1696916625601},{"_id":"source/img/posts/java/interview/6.png","hash":"420c3e4955a62cdd516bd8cf5507574ceb247879","modified":1696916625600},{"_id":"source/img/posts/java/interview/7.png","hash":"97b54bad797f7968813e8195f3f75e362c5e45af","modified":1696916625600},{"_id":"source/img/background2.jpg","hash":"b9899ce05d40b0268ffd049739192ac4fffd772d","modified":1696916625585},{"_id":"source/img/default_cover/geomeric3.png","hash":"7253e3d1188054ba6fcecf710a3ff2c5fd8f46ce","modified":1696916625588},{"_id":"source/img/default_cover/geomeric4.jpg","hash":"fe03714e9bce1a6147013d17533b97b9ae6ea946","modified":1696916625588},{"_id":"source/img/default_cover/geomeric9.png","hash":"850293b0f7eebc6142beb6b58a4b8800eebd0e72","modified":1696916625596},{"_id":"source/img/posts/java/interview/5.png","hash":"e647fb51905cd28eb692f3b9993787b0a4832087","modified":1696916625600},{"_id":"source/img/avatar.jpg","hash":"8f21176c7655a4b1add025bb014168505b2959e0","modified":1696916625581},{"_id":"source/img/default_cover/geomeric7.jpg","hash":"49102890f34bac8aebf3555e5c6b4e0dba8f1103","modified":1696916625594},{"_id":"source/img/default_cover/geomeric8.png","hash":"3e0ec2b27fa9a2077ab408af9a2f842ca1ff377b","modified":1696916625595},{"_id":"source/img/default_cover/geomeric6.png","hash":"7aa9294f0e9ab317384c6c73102ba31df4210c50","modified":1696916625593},{"_id":"source/img/default_cover/geomeric5.png","hash":"28f315e2c6e320d196fea9d6bd2f65272712945f","modified":1696916625591},{"_id":"node_modules/hexo-theme-butterfly/README.md","hash":"b5d6e7271b88d1a63755386442663af03e36a428","modified":1696916652223},{"_id":"node_modules/hexo-theme-butterfly/package.json","hash":"656d8b548940d7d214459cd8853007af38e6c465","modified":1696916652220},{"_id":"node_modules/hexo-theme-butterfly/README_CN.md","hash":"86569b94949392e9b981608433495f0941d20b0c","modified":1696916652222},{"_id":"node_modules/hexo-theme-butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1696916651963},{"_id":"node_modules/hexo-theme-butterfly/layout/category.pug","hash":"710708cfdb436bc875602abf096c919ccdf544db","modified":1696916652265},{"_id":"node_modules/hexo-theme-butterfly/layout/page.pug","hash":"baf469784aef227e4cc840550888554588e87a13","modified":1696916652316},{"_id":"node_modules/hexo-theme-butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1696916652303},{"_id":"node_modules/hexo-theme-butterfly/plugins.yml","hash":"d0e179ae31cdc62037062432b0ee7a9008155a73","modified":1696916652432},{"_id":"node_modules/hexo-theme-butterfly/layout/archive.pug","hash":"a0c034c2d319320a54046805e80b58dc48b7e233","modified":1696916652245},{"_id":"node_modules/hexo-theme-butterfly/_config.yml","hash":"459517785a7161e07c333bfe2900243b6287f905","modified":1696916652423},{"_id":"node_modules/hexo-theme-butterfly/layout/post.pug","hash":"fc9f45252d78fcd15e4a82bfd144401cba5b169a","modified":1696916652322},{"_id":"node_modules/hexo-theme-butterfly/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1696916652338},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"7dfe7189ffeaebb6db13842237f8e124649bea3d","modified":1696916652425},{"_id":"node_modules/hexo-theme-butterfly/languages/en.yml","hash":"4e9cdb7a3570929bcf082de7a4eac49140dddc73","modified":1696916652427},{"_id":"node_modules/hexo-theme-butterfly/languages/default.yml","hash":"4025c0ba440eb24705dd0293ca9ca84efb3105cc","modified":1696916652426},{"_id":"node_modules/hexo-theme-butterfly/languages/zh-CN.yml","hash":"7dd849c3ba34986c57c764d9e36150b4bfffd2e9","modified":1696916652436},{"_id":"node_modules/hexo-theme-butterfly/.github/workflows/publish.yml","hash":"05857c2f265246d8de00e31037f2720709540c09","modified":1696916652434},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/404.pug","hash":"cb49f737aca272ccfeb62880bd651eccee72a129","modified":1696916652229},{"_id":"node_modules/hexo-theme-butterfly/languages/zh-TW.yml","hash":"ee01e068f12dc33adfae5733824ea1255deb5ca6","modified":1696916652437},{"_id":"node_modules/hexo-theme-butterfly/.github/workflows/stale.yml","hash":"ac62b989b5550c756e1986fcc68f243170705383","modified":1696916652435},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/footer.pug","hash":"02390a5b6ae1f57497b22ba2e6be9f13cfb7acac","modified":1696916652285},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"fc468a93a64c7a3e408fbac921c9f5a5a8f32027","modified":1696916652424},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"996640605ed1e8e35182f0fd9a60a88783b24b03","modified":1696916652430},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/additional-js.pug","hash":"aca0ec7ef69b21d1f242c62fed389468a0f0e1a2","modified":1696916652236},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/cdn.js","hash":"21fb5aabe043486d095c4c8cce361ed85ba88a26","modified":1696916652041},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/404.js","hash":"83cd7f73225ccad123afbd526ce1834eb1eb6a6d","modified":1696916652009},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/comment.js","hash":"5351e0bc09e6b5b3f6d30f333a2520626a28ca3a","modified":1696916652044},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head.pug","hash":"dd9fde431add984330e3178e06a8d74705e7340e","modified":1696916652291},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/sidebar.pug","hash":"9f0e9e039f304439007460fa0a7c8ac18e0ffd37","modified":1696916652334},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/stylus.js","hash":"9819f0996234fbd80d6c50a9e526c56ebf22588d","modified":1696916652206},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/init.js","hash":"428b94c7b9e83f7ea36227dee66bfe3c23aee4a8","modified":1696916652059},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/layout.pug","hash":"7fa9ae4b70b87fc97e992dde5944681f92b59bea","modified":1696916652306},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/pagination.pug","hash":"4c85de4dea4dca4e5088097a79bd6d7009cbf8ef","modified":1696916652317},{"_id":"node_modules/hexo-theme-butterfly/scripts/filters/random_cover.js","hash":"8d25f47434deae870bbffd07efe528a40363ab4d","modified":1696916652194},{"_id":"node_modules/hexo-theme-butterfly/scripts/filters/post_lazyload.js","hash":"932df912976261929f809b7dbd4eb473e7787345","modified":1696916652184},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/aside_categories.js","hash":"e00efdb5d02bc5c6eb4159e498af69fa61a7dbb9","modified":1696916652032},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/welcome.js","hash":"8ad9911b755cba13dde2cc055c3f857a6b0dd20e","modified":1696916652219},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/aside_archives.js","hash":"2ec66513d5322f185d2071acc052978ba9415a8e","modified":1696916652029},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/findArchiveLength.js","hash":"9ea86bd7a3c3fca3324f70b1cd4d9e42f9efb08d","modified":1696916652046},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/page.js","hash":"ce5d5a3d07b0d76ac5e96e5f9e5783f4b601b6be","modified":1696916652173},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/rightside.pug","hash":"d15124c488273ea0801a042888feadc9261d0b2f","modified":1696916652332},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/flink.js","hash":"ab62919fa567b95fbe14889517abda649991b1ee","modified":1696916652049},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/inject_head_js.js","hash":"4238e06ff448ff2ee717cd4c874f37f04d35da06","modified":1696916652061},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/button.js","hash":"91d954f6e9fe6e571eb8ec9f8996294b2dc3688e","modified":1696916652038},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/related_post.js","hash":"4677be4175da6800c0b3b8c1614e593f73df8831","modified":1696916652201},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/hide.js","hash":"396c3ab1bcf1c7693ad7e506eadd13016c6769b6","modified":1696916652055},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/gallery.js","hash":"950b3dbac0b21717458a8d1769cbfc454d0eff54","modified":1696916652053},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/label.js","hash":"03b2afef41d02bd1045c89578a02402c28356006","modified":1696916652068},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/inlineImg.js","hash":"a43ee2c7871bdd93cb6beb804429e404570f7929","modified":1696916652065},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/note.js","hash":"d51812b43924f1bbf413c67499510dd125022005","modified":1696916652171},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/timeline.js","hash":"300eb779588bf35a1b687d9f829d866074b707e3","modified":1696916652212},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/mermaid.js","hash":"531808a290b8bdd66bac2faab211ada8e9646a37","modified":1696916652169},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/score.js","hash":"ea679dfe12d0e2290113b4a9d00663ce7a5ee5ad","modified":1696916652204},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/tabs.js","hash":"6c6e415623d0fd39da016d9e353bb4f5cca444f5","modified":1696916652208},{"_id":"node_modules/hexo-theme-butterfly/source/css/index.styl","hash":"755490867fd8afe47d5cce24faea2ca172b0c4dd","modified":1696916652400},{"_id":"node_modules/hexo-theme-butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1696916652224},{"_id":"node_modules/hexo-theme-butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1696916652003},{"_id":"node_modules/hexo-theme-butterfly/source/js/main.js","hash":"0227b5bd233a3c66582e0ee820cdb353ce52ece1","modified":1696916652168},{"_id":"node_modules/hexo-theme-butterfly/source/js/tw_cn.js","hash":"42b106354d72a0ea1fe62587b313a5b7de3cc393","modified":1696916652215},{"_id":"node_modules/hexo-theme-butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1696916651997},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/Open_Graph.pug","hash":"8aa8d799aedbfd811195b84a451bc4b6e2647c12","modified":1696916652315},{"_id":"node_modules/hexo-theme-butterfly/source/css/var.styl","hash":"30abbb8eed880d51f61f336064d93abd709e0115","modified":1696916652420},{"_id":"node_modules/hexo-theme-butterfly/source/js/utils.js","hash":"aaaedc207440095da1ffabcad870fc2641befb0e","modified":1696916652217},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1696916652289},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/noscript.pug","hash":"d16ad2ee0ff5751fd7f8a5ce1b83935518674977","modified":1696916652314},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/config_site.pug","hash":"7df90c8e432e33716517ab918b0a125bc284041b","modified":1696916652269},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/analytics.pug","hash":"67e1c3b48e4ca7ee0b2c76d3ca7476b9883cf105","modified":1696916652243},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/site_verification.pug","hash":"e2e8d681f183f00ce5ee239c42d2e36b3744daad","modified":1696916652335},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1696916652324},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/config.pug","hash":"75e7a524af64fbaaaf7b05a1b1922bf6940d7afe","modified":1696916652270},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/nav.pug","hash":"f61659aa457d1a2d1baa3a13157996cfac4d6609","modified":1696916652313},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/preconnect.pug","hash":"a03b3ddc06e7aa9fd07eea0d5f97c8d5addd2315","modified":1696916652323},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/social.pug","hash":"5de9a82032cdad1db3b868b797460921cd775fc2","modified":1696916652336},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/index.pug","hash":"944d6e9dd50df3395f3a2c7ad9db667d50dea4ed","modified":1696916652293},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/index.pug","hash":"131f344d68b4c241d6e03849b243ee792fcd3cea","modified":1696916652293},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/pace.pug","hash":"6ab4e301c92586505d6cddce1b3ad23b7c79010d","modified":1696916652315},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/menu_item.pug","hash":"31346a210f4f9912c5b29f51d8f659913492f388","modified":1696916652309},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/fullpage-loading.pug","hash":"9e8c5788602b29a527ef35fe8a20076a5fa969bd","modified":1696916652286},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/post-info.pug","hash":"9698f22751778dde063cbfbd01c59ca4462ccd85","modified":1696916652321},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/default-page.pug","hash":"12c65c174d26a41821df9bad26cdf1087ec5b0ca","modified":1696916652272},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/mixins/post-ui.pug","hash":"1ed873db25eec869beebb6873f04e19f0b0f4134","modified":1696916652321},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/mixins/article-sort.pug","hash":"90554c2ca5ba946f4c02e1bc5fe2859cef1b1594","modified":1696916652252},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1696916652265},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/post/reward.pug","hash":"864869c43fe5b5bb6f4ac6b13dd4bfb16ea47550","modified":1696916652330},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/aplayer.pug","hash":"c7cfade2b160380432c47eef4cd62273b6508c58","modified":1696916652245},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/tags.pug","hash":"9621991359e22b14049346f1cf87bdedc94edf5a","modified":1696916652339},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/flink.pug","hash":"f9ce83978b217a71a2eb8761dc14b09866faa3f4","modified":1696916652284},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/post/post-copyright.pug","hash":"ebecba46a5f4efe1c98a386df06c56e26fbd07b9","modified":1696916652320},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/effect.pug","hash":"6528e86656906117a1af6b90e0349c2c4651d5e1","modified":1696916652280},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1696916652253},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/pjax.pug","hash":"cde142861edfc7aab435b8a0ebb84d9ba450fb5b","modified":1696916652319},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/prismjs.pug","hash":"ffb9ea15a2b54423cd4cd441e2d061b8233e9b58","modified":1696916652323},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/pangu.pug","hash":"0f024e36b8116118233e10118714bde304e01e12","modified":1696916652318},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_announcement.pug","hash":"ae392459ad401a083ca51ee0b27526b3c1e1faed","modified":1696916652254},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_bottom_self.pug","hash":"13dc8ce922e2e2332fe6ad5856ebb5dbf9ea4444","modified":1696916652257},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":1696916652255},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":1696916652258},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/subtitle.pug","hash":"8044b9c18b34b019ffe26b7383e7e80356b5e4b5","modified":1696916652337},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_tags.pug","hash":"eceb4420a64c720f0d2741e89d6229bbb3d87353","modified":1696916652261},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_author.pug","hash":"03c6afabbf1ac729c7fb21c7ec06da0190b0fdc7","modified":1696916652255},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_post_toc.pug","hash":"3057a2f6f051355e35d3b205121af8735100eacf","modified":1696916652260},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_newest_comment.pug","hash":"7834bf7c711e739fd33cfcd0b53d151013b3d449","modified":1696916652259},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_recent_post.pug","hash":"e5aac7b28ed4123d75797263c64e74ac547945bc","modified":1696916652261},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_top_self.pug","hash":"ae67c6d4130a6c075058a9c1faea1648bcc6f83e","modified":1696916652262},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_webinfo.pug","hash":"35ce167c5a275211bfc1fa3d49adfde5b404d98f","modified":1696916652263},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/chat.styl","hash":"f9a5d3f1fc5ed0ed2ee4c1eaa58ed650d11ddebd","modified":1696916652365},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/index.pug","hash":"010e3d548ababca2280c4fc4168d9a4a1ee4f536","modified":1696916652303},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/aside.styl","hash":"57adf29a3e36e4ea84384e36c034eb294dffb208","modified":1696916652359},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/footer.styl","hash":"83a7a70eb0532ea9c4267939fe484af915fca01e","modified":1696916652379},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/head.styl","hash":"8cd2aaa32cd68cd1908c9001444a811c3d0f9267","modified":1696916652387},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/loading.styl","hash":"ac2aeee9926f75b2a0098efe1c114126987430f2","modified":1696916652405},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/comments.styl","hash":"c61dccca690d486c3d9c29cf028d87b777385141","modified":1696916652366},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/pagination.styl","hash":"fb9f78bfbb79579f1d752cb73fb6d25c8418e0fd","modified":1696916652410},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/rightside.styl","hash":"bbc884d6b2158a833b77a1bbc07248e17874b22e","modified":1696916652415},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/relatedposts.styl","hash":"d53de408cb27a2e704aba7f7402b7caebe0410d8","modified":1696916652412},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/post.styl","hash":"fc9424d9c5def2201ec1d04dc79d0beedc1d2175","modified":1696916652410},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/third-party.styl","hash":"5556c9bf4f53a90cb9b4945cd76a8849bd67f3f3","modified":1696916652419},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/reward.styl","hash":"c5cfed620708807a48076b5ee59b0ba84e29aa80","modified":1696916652414},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/sidebar.styl","hash":"631ca35a38bc4ac052e9caf47508ff1f99842fc7","modified":1696916652416},{"_id":"node_modules/hexo-theme-butterfly/source/css/_global/index.styl","hash":"51868d861c94a9f1ad7c0dbd66d2f475c5d4ea62","modified":1696916652394},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight.styl","hash":"57a19eb0c418d92a88b143f56ccb8cd60e6d7ad0","modified":1696916652391},{"_id":"node_modules/hexo-theme-butterfly/source/css/_global/function.styl","hash":"e0de61a059b5e6c7b8ebc7149b4650bdcd69af5e","modified":1696916652384},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/categories.styl","hash":"f01ee74948cedb44e53cd3bb1ef36b7d2778ede7","modified":1696916652364},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/theme.styl","hash":"bcd384c8b2aa0390c9eb69ac1abbfd1240ce1da4","modified":1696916652418},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/404.styl","hash":"50dbb9e6d98c71ffe16741b8c1b0c1b9771efd2b","modified":1696916652352},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/archives.styl","hash":"c9e98027f2dd730ce389c2047f62ebb748955fcf","modified":1696916652356},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/common.styl","hash":"4e320e16d49bc18085045937681f7331a1e243ca","modified":1696916652368},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/tags.styl","hash":"580feb7e8b0822a1be48ac380f8c5c53b1523321","modified":1696916652417},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/homepage.styl","hash":"b3ea08d9460122751144a3ca835e009a460d6ad3","modified":1696916652392},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/button.styl","hash":"45f0c32bdea117540f6b14ebac6450d7142bd710","modified":1696916652363},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/gallery.styl","hash":"81ad85acf0e0fe7f9ee23c16a700e7154574d5dd","modified":1696916652386},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/flink.styl","hash":"98d755b686ee833e9da10afaa40c4ec2bd66c19a","modified":1696916652379},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/hexo.styl","hash":"d76c38adf1d9c1279ef4241835667789f5b736e0","modified":1696916652389},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/label.styl","hash":"66c59e193d794cdb02cca7bd1dc4aea5a19d7e84","modified":1696916652403},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/inlineImg.styl","hash":"df9d405c33a9a68946b530410f64096bcb72560c","modified":1696916652402},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/note.styl","hash":"85ae91c83691ea4511f4277da1194a185251cc78","modified":1696916652408},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/hide.styl","hash":"ce489ca2e249e2a3cf71584e20d84bdb022e3475","modified":1696916652389},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/index.styl","hash":"20a3134e1302b62bfc881f4ec43f398267111f22","modified":1696916652399},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/tabs.styl","hash":"bf9568444dd54e39dc59b461323dcd38942f27d9","modified":1696916652416},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/algolia.styl","hash":"649a054e73278b6724bd4dd9b94724791ec5c928","modified":1696916652354},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/local-search.styl","hash":"a86e4e9198b225b4b73a7a45f04b86cbbed0d231","modified":1696916652407},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/timeline.styl","hash":"f071156d439556e7463ed4bc61ceee87170d5d08","modified":1696916652419},{"_id":"node_modules/hexo-theme-butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1696916651975},{"_id":"node_modules/hexo-theme-butterfly/source/css/_mode/readmode.styl","hash":"c481d1f689a4e6d7ee492a03751bda47a30225ce","modified":1696916652411},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/algolia.js","hash":"fd86281d4f0f99ce173e49c1a0df3507fe268d37","modified":1696916652022},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"ed6906b7c6aa7046bbad95dfdda9211997be7099","modified":1696916652231},{"_id":"node_modules/hexo-theme-butterfly/source/css/_mode/darkmode.styl","hash":"e4f948b0d4eb5483b2b360e56cbfe3359751b438","modified":1696916652369},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/abcjs/index.pug","hash":"f58f1648d2d71311bafca4833f20b605bb5f18c8","modified":1696916652294},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/local-search.js","hash":"8509cbd954ee9e099dcfbbfdafba70893a56e9ae","modified":1696916652164},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"d85c3737b5c9548553a78b757a7698df126a52cf","modified":1696916652273},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"b2d274db84ef22fbd6d5ea8f4404821898934209","modified":1696916652294},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"0344477a2cf38698318ead2681c63ac12f01586e","modified":1696916652283},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"001e8be47854b891efe04013c240c38fed4185eb","modified":1696916652324},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"d02f3cc9e6183e7d05c7e90e9ae1dee5ce21f297","modified":1696916652349},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"39427e107230a10790972349c9dd4c4f31d55eb7","modified":1696916652346},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"5f86add36eeffbed61d11f08972a13697b4d9437","modified":1696916652247},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"56c028ba0ea8fac19f0125114d765dfc56ce2b48","modified":1696916652342},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/crisp.pug","hash":"2fb098a7aa45010a8cd212dc0bd5308c6e7c63e3","modified":1696916652270},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/chatra.pug","hash":"ddce8352b371a1fb426bdb6c33f587eb37a69647","modified":1696916652268},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/index.pug","hash":"618e1b7f9204049b07beb9e1363c844a78a9ace3","modified":1696916652295},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"9b57a8e13de8fc51a5f550854e47164fd8ac1be8","modified":1696916652271},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/messenger.pug","hash":"e39a9c37adf4cb15a2ba3b2cc65542ffea88650d","modified":1696916652311},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"6e17b2cea503eabeb328835038812cfa95f15871","modified":1696916652278},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/artalk.pug","hash":"5d5d8a0a3a7690d6d01e3feb91c2a36a5cd651b1","modified":1696916652249},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/tidio.pug","hash":"dd61eca6e9a45f63e09bdefba89fe285a81ba096","modified":1696916652340},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/disqus.pug","hash":"9ef303da16d180619da18b146ddb9bc35f66bdbf","modified":1696916652275},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/giscus.pug","hash":"5127bc550a2edb1ab9f45416e1964c76e8201544","modified":1696916652286},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"0704efed9079c867ab5f7bee7381a6c869154c73","modified":1696916652281},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"2fc5627eb63118c83df9422b47c801822e28df98","modified":1696916652288},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/remark42.pug","hash":"598790433e3c9be28b0063bff08d257acd0abf75","modified":1696916652326},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/index.pug","hash":"35ae7980f658a349c5956c5699efd435b604b836","modified":1696916652296},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/js.pug","hash":"00ed91c52939b9675b316137f854d13684c895a6","modified":1696916652304},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"4d78f6266d0870c06c10eaf47c951bd4d9a7732e","modified":1696916652344},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/index.pug","hash":"b8ae5fd7d74e1edcef21f5004fc96147e064d219","modified":1696916652298},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/livere.pug","hash":"52ea8aa26b84d3ad38ae28cdf0f163e9ca8dced7","modified":1696916652307},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/utterances.pug","hash":"2a8d02ed9303092e8816f6489a443e7388102470","modified":1696916652345},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/katex.pug","hash":"dfcbd9881be569ea420eff1a6b00e4f4dbe2138e","modified":1696916652304},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/mathjax.pug","hash":"fc072ac839401174b5d3cf9acd3b694246c23a55","modified":1696916652308},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/waline.pug","hash":"0a1b8fe95623b095eb7ede3f30ca327684d1e613","modified":1696916652350},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/valine.pug","hash":"e55b9c0f8ced231f47eb88bd7f4ec99f29c5c29d","modified":1696916652347},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"4ec0642f2d5444acfab570a6f8c7868e7ff43fde","modified":1696916652299},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/mermaid.pug","hash":"d0ce1891b042dcc2c93cacc866e38721b94aa4c4","modified":1696916652310},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"8c0d9a45bd2d83cc6d0e7bbfe172a09ff33c0178","modified":1696916652251},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"0330e3063ccf0ce40e4828b8d4fbef62362e8195","modified":1696916652289},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"4fe8faf77b8420fc031ae1b54f78b2ece9fcc07e","modified":1696916652273},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/index.pug","hash":"a99a41334387ee9a46c6f8e8212331a29a10d159","modified":1696916652299},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"44991d67abb81784c5cdb4337b2b9798fc4361e1","modified":1696916652340},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"aa6061183a32472cd1882fce445a5049108a984b","modified":1696916652329},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"b7b2aa5be4112065d5066c0f066f5f58721153bf","modified":1696916652348},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/algolia.pug","hash":"9c3c109a12d2b6916e8b4965cca12f521510ead9","modified":1696916652241},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/local-search.pug","hash":"5ebd5e8d39c9f77f5b2d983f6cd6802ccaf98746","modified":1696916652307},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"ae1ccd78926cc19399d396b237d5161d7cde44a8","modified":1696916652351},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/docsearch.pug","hash":"1c3e101445c5571ba998ce293d3984319df1b3b0","modified":1696916652279},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/add-this.pug","hash":"2980f1889226ca981aa23b8eb1853fde26dcf89a","modified":1696916652234},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/addtoany.pug","hash":"85c92f8a7e44d7cd1c86f089a05be438535e5362","modified":1696916652237},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/index.pug","hash":"4c4a9c15215ae8ac5eadb0e086b278f76db9ee92","modified":1696916652300},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/share-js.pug","hash":"c7dd2b2ae9b23aa0a60fffd7df9e9f76ef52033e","modified":1696916652333},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/index.styl","hash":"5dc2e0bcae9a54bfb9bdcc82d02ae5a3cf1ca97d","modified":1696916652397},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight/index.styl","hash":"18804c58239d95798fa86d0597f32d7f7dd30051","modified":1696916652396},{"_id":"source/img/background.jpg","hash":"b07a9acafb0ceaff1c41d1f26617d05bb8dd51b2","modified":1696916625584},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1696916652378},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight/diff.styl","hash":"cf1fae641c927621a4df1be5ca4a853b9b526e23","modified":1696916652373},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"8970cc1916c982b64a1478792b2822d1d31e276d","modified":1696916652404},{"_id":"source/img/bg.jpg","hash":"88b0a9106c32c15128ec1d8ae4b5463b6e83de29","modified":1697769856628},{"_id":"source/_posts/openid/OpenID.md","hash":"e6d9faf2963f22c066c31d7c0adb14378ea66283","modified":1758693608748},{"_id":"source/img/image.png","hash":"7705d4388668f460dcedbdb137dd8865953f4cd0","modified":1698990444279},{"_id":"source/_posts/k8s/安装 longhorn 出现的坑.md","hash":"323599ffb91dfdb384d4e8fe036fa47e43027554","modified":1758693608738},{"_id":"source/_posts/oauth2/OAuth2 的简单解释.md","hash":"6d39c4242e9e1f07f524408f729a1740625965b5","modified":1758693608741},{"_id":"source/_posts/mysql/mysql 查看表字段注释.md","hash":"971cb98582674e84e26ee90617ae18268305dac0","modified":1758693608741},{"_id":"source/_posts/k8s/MetaLib 安装.md","hash":"6565766fa11fa6ec48af04caec7172aa2dcb845f","modified":1758693608735},{"_id":"source/_posts/java/技术文章梳理.md","hash":"5f53436f06eb5a62f0d7a131f2f30270b3443f2f","modified":1758693608734},{"_id":"source/_posts/life/重塑生活的八个步骤.md","hash":"1c9bdc8f09645fe784f6ca807d118a4fde5a8c56","modified":1758693608739},{"_id":"source/_posts/linux/Linux 根目录扩容操作.md","hash":"24b4246096ac8be6dc5043a3da85abf35f5a1f8a","modified":1703831091379},{"_id":"source/_posts/work/2.ERA在线部署.md","hash":"853fe1c3a03bf11f5eaec1a7888b7fefc56042e2","modified":1703831879262},{"_id":"source/_posts/mysql/mysql 创建用户并赋予管理员权限.md","hash":"5198ddc7815e620c131e966a94d3dc853f23ecfd","modified":1758693608740},{"_id":"source/_posts/mysql/20250924.md","hash":"d70afef62640279f8b0a604af60f104be7e1f868","modified":1758694384740},{"_id":"public/self/Kimbiedark.css","hash":"fa424a5e5354a654fca7070b6da278d5c8da7726","modified":1758694153179},{"_id":"public/css/pace/flash.css","hash":"cc37a951e00c2d64fe21c741ed2999bf66a31987","modified":1758694153179},{"_id":"public/search.xml","hash":"c31792bb54c2f690478ba6fa2cb39a08f490c61d","modified":1758694153179},{"_id":"public/404.html","hash":"579bc1aed5890ae551abf0430d2e1aa94eaf3fd1","modified":1758694153179},{"_id":"public/tags/index.html","hash":"7835c04de569913b0191b28c1aa89c0a69a474b9","modified":1758694153179},{"_id":"public/categories/index.html","hash":"31939cefbe614e9f4ff55a03dec752af7b636013","modified":1758694153179},{"_id":"public/link/index.html","hash":"bb2ced32051252ca4a3efbfc7b3db3cd13ec1d1d","modified":1758694153179},{"_id":"public/2025/09/24/mysql/20250924/index.html","hash":"75baf4f398fb9093e5713ee67ad597569813ae25","modified":1758694153179},{"_id":"public/2023/12/29/linux/Linux 根目录扩容操作/index.html","hash":"a834244be090f5e941d9dd9b951b70538e9b880a","modified":1758694153179},{"_id":"public/2023/12/29/mysql/mysql 创建用户并赋予管理员权限/index.html","hash":"eceb09988fd5395d5597aa395263314ce4931ce1","modified":1758694153179},{"_id":"public/2023/12/28/java/技术文章梳理/index.html","hash":"93f4e0948b2bc1d2ab123d689bf3bad38b493d1d","modified":1758694153179},{"_id":"public/2023/12/28/k8s/MetaLib 安装/index.html","hash":"da3ec5d45f7606f379d643bc543c3056df3cad09","modified":1758694153179},{"_id":"public/2023/12/28/work/2.ERA在线部署/index.html","hash":"9d62a55f6b0f0e80f22c52eb0789ccd300884f4d","modified":1758694153179},{"_id":"public/2023/12/27/mysql/mysql 查看表字段注释/index.html","hash":"98acfd740c0020927bfb68fb94c0a95170f1a0df","modified":1758694153179},{"_id":"public/2023/12/18/life/重塑生活的八个步骤/index.html","hash":"a29ab59b14464cbd50a09f538f6696707702c4b3","modified":1758694153179},{"_id":"public/2023/11/03/k8s/安装 longhorn 出现的坑/index.html","hash":"32905ab57883eb90788652a4d5d6cc18b9843141","modified":1758694153179},{"_id":"public/2023/11/02/oauth2/OAuth2 的简单解释/index.html","hash":"63f793504d338eeb9b29c2e704aa326f6bf7afed","modified":1758694153179},{"_id":"public/2023/10/26/openid/OpenID/index.html","hash":"17343e6e513b2aa9764f2b7d792e665f698da905","modified":1758694153179},{"_id":"public/2023/10/20/docker/用 Dockerfile 文件构建带 systemd 的ubuntu 22.04/index.html","hash":"d488781609b202a76a2824c013ff98dda0e1d877","modified":1758694153179},{"_id":"public/2023/10/10/k8s/k8s 创建单节点 mysql 并持久化存储/index.html","hash":"309549e89442d3067f23da5eae982b20755cca20","modified":1758694153179},{"_id":"public/2023/06/14/k8s/kubevirt/cloud-init 无法调整分区大小：当 LANG 不是 en_US 时，growpart 不起作用/index.html","hash":"7b3aa548f2d6fa266527830b002d66828bf4af3a","modified":1758694153179},{"_id":"public/2023/06/12/k8s/k8s创建ubuntu22.04并暴露22端口/index.html","hash":"fee3b7d888c922e029620e65a5521cb1cb0bfe4e","modified":1758694153179},{"_id":"public/2023/06/12/java/debug/MySQL 8.0 Public Key Retrieval is not allowed 错误的解决方法/index.html","hash":"64676b87e89fff1e65cb635400be08d5d532b622","modified":1758694153179},{"_id":"public/2023/06/12/k8s/study/k8s 网络策略/index.html","hash":"ab9a0e4c0e365ba022fa73f8f7ea1bc333144fc9","modified":1758694153179},{"_id":"public/2021/10/01/ceph/Ceph 集群部署/index.html","hash":"fafd324f8b8914ca587d9bdbd75dad1bf35882c9","modified":1758694153179},{"_id":"public/2021/09/30/ceph/Ceph 安装记录/index.html","hash":"8c3ebbb27fc334ff38dbebc4d71fbb78b34d7684","modified":1758694153179},{"_id":"public/2020/01/01/java/interview/index/index.html","hash":"e8a7ca467cd05d287f12abaa67df82f0a37831b8","modified":1758694153179},{"_id":"public/2021/07/31/linux/vi 常用命令/index.html","hash":"d350d0d5bfbc0b6d0aa9bbb521959391f62436ab","modified":1758694153179},{"_id":"public/2020/01/01/java/note/HashMap 与 TreeMap/index.html","hash":"b69519d59f412eee396c32657bc2e5e08f3baf3e","modified":1758694153179},{"_id":"public/categories/Ceph-学习/index.html","hash":"0b9a83290fe453e56e097d4c3cf0ca8a71d38bb3","modified":1758694153179},{"_id":"public/categories/容器-虚拟化/index.html","hash":"1782d6bbeb6cb0e366e77d391230adb5d2a010fe","modified":1758694153179},{"_id":"public/categories/Docker/index.html","hash":"7a7549df41377c7d0e883c561a67af4406639ffd","modified":1758694153179},{"_id":"public/categories/linux/index.html","hash":"9f6fd0198cd1a521c2a92c06722f49736ea30b91","modified":1758694153179},{"_id":"public/categories/遇坑记录/index.html","hash":"7bd4165b07de5d7f2c1e672ee10fcd2fd2289582","modified":1758694153179},{"_id":"public/categories/虚拟化/index.html","hash":"c8a8bfa0c153eab815a88afc1751e08c57115844","modified":1758694153179},{"_id":"public/categories/Java/index.html","hash":"7b11b2fefcddaf6c971ae4f2c07d800aa4714d8b","modified":1758694153179},{"_id":"public/categories/标准化文档/index.html","hash":"dce828186a445e27813b6e0861345014c4f79f98","modified":1758694153179},{"_id":"public/categories/mysql/index.html","hash":"3c52932eb58b7f9b15aee2acf10c2bc9ef0cdb38","modified":1758694153179},{"_id":"public/categories/技术栈/index.html","hash":"50220f59b79d871551c51dc2b3b04763fffffe49","modified":1758694153179},{"_id":"public/categories/k8s/index.html","hash":"72e50b619c1d1e364c443601373c823290082109","modified":1758694153179},{"_id":"public/index.html","hash":"de5a871b6dd6d04475d1d5f40c0b91ca2543955a","modified":1758694153179},{"_id":"public/categories/生活/index.html","hash":"dbc679d65f6356b30e73b44a8adbc43bbbaa7c7c","modified":1758694153179},{"_id":"public/categories/工作/index.html","hash":"d65b1a3398446b80a2a5f89e13f93c7dbd5d15f5","modified":1758694153179},{"_id":"public/page/2/index.html","hash":"63198a37db366f3ba927a80734abed1f0eb61194","modified":1758694153179},{"_id":"public/page/3/index.html","hash":"02e4964636a3a194881d9bb01e45fb6569fe18bc","modified":1758694153179},{"_id":"public/archives/index.html","hash":"e0b6c220870136e3af9d44f49bf61268fbaf0ccc","modified":1758694153179},{"_id":"public/archives/page/2/index.html","hash":"53b490cfc95193e397f155b1428181d93848cc95","modified":1758694153179},{"_id":"public/archives/page/3/index.html","hash":"1ecafcc180b6c5587b6bd5142f089cf4641543e9","modified":1758694153179},{"_id":"public/archives/2020/index.html","hash":"20488528598547f2d7b517e17a587ea4561d22c2","modified":1758694153179},{"_id":"public/archives/2020/01/index.html","hash":"fa1de61cf778bec965b5f0fe49a20c1051aa1783","modified":1758694153179},{"_id":"public/archives/2021/07/index.html","hash":"2c144df33c275f677c353b1390c8c00abdfd65c6","modified":1758694153179},{"_id":"public/archives/2021/index.html","hash":"9f7bfd3979c99554a21575e669373342dc42f92b","modified":1758694153179},{"_id":"public/archives/2021/09/index.html","hash":"31442f76a808e70495d04c2d9515fd9d85778657","modified":1758694153179},{"_id":"public/archives/2021/10/index.html","hash":"f09e47a8915acce5bceaac75e04dca01bd4ce0dd","modified":1758694153179},{"_id":"public/archives/2023/index.html","hash":"9cde687263d2e67eb612d31e72a751ba9099b905","modified":1758694153179},{"_id":"public/archives/2023/page/2/index.html","hash":"9e3c5b9ad6e790f561abb824fc5cb74e6d7b338b","modified":1758694153179},{"_id":"public/archives/2023/11/index.html","hash":"fd4dada5c4e89b3bbb0623a600dd9c9e92c5fc43","modified":1758694153179},{"_id":"public/archives/2023/06/index.html","hash":"ca7011ddcaae1340b020c162e0ff5214d830aa96","modified":1758694153179},{"_id":"public/archives/2023/10/index.html","hash":"da6deb2cc2b6e112eef28f2cefcd99bc22292eea","modified":1758694153179},{"_id":"public/archives/2023/12/index.html","hash":"d1a1d2736e2fa47bd1c55da11828f87a7f10cf13","modified":1758694153179},{"_id":"public/archives/2025/index.html","hash":"fb60aa8bc3ff1675d3383ac0ab977f63056e9d58","modified":1758694153179},{"_id":"public/archives/2025/09/index.html","hash":"b1644829baf2add1b9fdd3f9a47eb5378f66f02d","modified":1758694153179},{"_id":"public/tags/Dockerfile/index.html","hash":"b203d4327509bf221918f43b4c339a34d326ba20","modified":1758694153179},{"_id":"public/tags/k8s/index.html","hash":"7d76cdb191df960a9f3327c8e0c8a46904bb8e46","modified":1758694153179},{"_id":"public/tags/ceph/index.html","hash":"2c9285bb6fe2ff65577c387446a0d2450b437c00","modified":1758694153179},{"_id":"public/tags/vi/index.html","hash":"6421e5dae44b1937969d95df32e8ea0e5a9443b0","modified":1758694153179},{"_id":"public/tags/java-遇坑记录，mysql/index.html","hash":"0fba38796c118cd62ae1c3e6235f8860673be407","modified":1758694153179},{"_id":"public/tags/学习/index.html","hash":"6422c372ede342d048b3a6799980e2540ec4b6c1","modified":1758694153179},{"_id":"public/tags/Java-笔记/index.html","hash":"103b4d6d0308dd8d8d76faa8b55db6db4bc39c32","modified":1758694153179},{"_id":"public/tags/kubevirt/index.html","hash":"8f0244ea632aeefb9416bbd4f5ed8e1944277cc6","modified":1758694153179},{"_id":"public/tags/Java-面试/index.html","hash":"6bb66bdd9e7d033cbd7d7b3e30997c0efc5547ac","modified":1758694153179},{"_id":"public/tags/openid/index.html","hash":"302fd58e31f0a729ebe418395dd861397f808efc","modified":1758694153179},{"_id":"public/tags/OAuth-2-0/index.html","hash":"98a001803d7219bde73d46c3dc6fcfdc823f1374","modified":1758694153179},{"_id":"public/tags/mysql/index.html","hash":"81b9ed763b6b35ea9a8fb28f8141ffd37226a5df","modified":1758694153179},{"_id":"public/tags/linux/index.html","hash":"d82f121c24778b564325195513ceda48789a99ac","modified":1758694153179},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1758694153179},{"_id":"public/img/default_cover/geomeric1.jpg","hash":"6ba7958abd428a49adc2dfba728d3c38786e49c3","modified":1758694153179},{"_id":"public/img/default_cover/geomeric2.png","hash":"9afbfe90fc2a0f97524dd8f3b2171d488e3ce6ad","modified":1758694153179},{"_id":"public/img/default_cover/geomeric10.png","hash":"b2508e510986db497afd39f91bded81c3f8d4e7b","modified":1758694153179},{"_id":"public/img/posts/java/interview/1.png","hash":"26ee7f89480f0612309c1a59bd9bd4b6ae372141","modified":1758694153179},{"_id":"public/img/posts/java/interview/10.png","hash":"501a45864e2d5bed9ac42813396ebeab5bf54792","modified":1758694153179},{"_id":"public/img/posts/java/interview/3.png","hash":"6a0aa673a8a157e3793f23076d97665aff0c9f31","modified":1758694153179},{"_id":"public/img/posts/java/interview/2.png","hash":"8598079d5ff823018c265046635618ec9cf9c921","modified":1758694153179},{"_id":"public/img/posts/java/interview/4.png","hash":"cdab7714ec1432bb781014fe3449ee8d02531fc7","modified":1758694153179},{"_id":"public/img/posts/java/interview/8.png","hash":"1ae9a5fc3c9a2ea129431e17d423c8df1f54d021","modified":1758694153179},{"_id":"public/img/posts/java/interview/9.png","hash":"e7a2830e353d2411ed1cafcda6ebcb1674c61bd3","modified":1758694153179},{"_id":"public/img/posts/java/interview/7.png","hash":"97b54bad797f7968813e8195f3f75e362c5e45af","modified":1758694153179},{"_id":"public/img/posts/java/interview/6.png","hash":"420c3e4955a62cdd516bd8cf5507574ceb247879","modified":1758694153179},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1758694153179},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1758694153179},{"_id":"public/img/image.png","hash":"7705d4388668f460dcedbdb137dd8865953f4cd0","modified":1758694153179},{"_id":"public/css/hbe.style.css","hash":"72959894400fd5c350106cb558c39fa51f722cbd","modified":1758694153179},{"_id":"public/lib/hbe.js","hash":"fb05fcd82bb28d3b2887d388cabea7f9b1a318eb","modified":1758694153179},{"_id":"public/img/default_cover/geomeric3.png","hash":"7253e3d1188054ba6fcecf710a3ff2c5fd8f46ce","modified":1758694153179},{"_id":"public/img/default_cover/geomeric4.jpg","hash":"fe03714e9bce1a6147013d17533b97b9ae6ea946","modified":1758694153179},{"_id":"public/img/default_cover/geomeric9.png","hash":"850293b0f7eebc6142beb6b58a4b8800eebd0e72","modified":1758694153179},{"_id":"public/img/posts/java/interview/5.png","hash":"e647fb51905cd28eb692f3b9993787b0a4832087","modified":1758694153179},{"_id":"public/css/index.css","hash":"ecf43661140af84b05d53db2b781443ce0d7593d","modified":1758694153179},{"_id":"public/js/main.js","hash":"0227b5bd233a3c66582e0ee820cdb353ce52ece1","modified":1758694153179},{"_id":"public/js/tw_cn.js","hash":"42b106354d72a0ea1fe62587b313a5b7de3cc393","modified":1758694153179},{"_id":"public/js/search/algolia.js","hash":"fd86281d4f0f99ce173e49c1a0df3507fe268d37","modified":1758694153179},{"_id":"public/js/utils.js","hash":"aaaedc207440095da1ffabcad870fc2641befb0e","modified":1758694153179},{"_id":"public/js/search/local-search.js","hash":"8509cbd954ee9e099dcfbbfdafba70893a56e9ae","modified":1758694153179},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1758694153179},{"_id":"public/img/avatar.jpg","hash":"8f21176c7655a4b1add025bb014168505b2959e0","modified":1758694153179},{"_id":"public/img/default_cover/geomeric7.jpg","hash":"49102890f34bac8aebf3555e5c6b4e0dba8f1103","modified":1758694153179},{"_id":"public/img/default_cover/geomeric8.png","hash":"3e0ec2b27fa9a2077ab408af9a2f842ca1ff377b","modified":1758694153179},{"_id":"public/img/default_cover/geomeric6.png","hash":"7aa9294f0e9ab317384c6c73102ba31df4210c50","modified":1758694153179},{"_id":"public/img/default_cover/geomeric5.png","hash":"28f315e2c6e320d196fea9d6bd2f65272712945f","modified":1758694153179},{"_id":"public/img/bg.jpg","hash":"88b0a9106c32c15128ec1d8ae4b5463b6e83de29","modified":1758694153179}],"Category":[{"name":"Docker","_id":"clny08vf500045ovf7bbn2etq"},{"name":"容器/虚拟化","_id":"clny08vf9000c5ovf4n57h7n9"},{"name":"Ceph 学习","_id":"clny08vfb000i5ovf4soy741i"},{"name":"linux","_id":"clny08vfd000o5ovf110j0ti1"},{"name":"遇坑记录","_id":"clny08vfg000y5ovf8idz8hjc"},{"name":"虚拟化","_id":"clny08vfh00165ovfc8zb5dug"},{"name":"Java","_id":"clny08vfi001b5ovf3eu8a2q3"},{"name":"标准化文档","_id":"clo6vbzvz0001xcvf5utxadpz"},{"name":"mysql","_id":"clqn5fifm0001mg7h4xp874rc"},{"name":"技术栈","_id":"clqqa13nk000296jx4okwakya"},{"name":"k8s","_id":"clqqa13no000696jxb6074bt0"},{"name":"生活","_id":"clqqa13np000996jxaa9s7on5"},{"name":"工作","_id":"clqqa13nq000d96jxfysf9cw3"}],"Data":[{"_id":"link","data":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}],"Page":[{"title":"分类","date":"2023-05-24T15:06:47.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2023-05-24 23:06:47\ntype: \"categories\"\n---\n","updated":"2025-09-24T06:00:08.751Z","path":"categories/index.html","_id":"clny08vex00005ovf7a22bp75","comments":1,"layout":"page","content":"","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}},"cover":"/img/default_cover/geomeric9.png","cover_type":"img","excerpt":"","more":""},{"title":"标签","date":"2025-09-24T06:00:08.784Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: {{date}}\ntype: \"tags\"\n---\n","updated":"2025-09-24T06:00:08.784Z","path":"tags/index.html","_id":"clny08vf300025ovfe0f36nku","comments":1,"layout":"page","content":"","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}},"cover":"/img/default_cover/geomeric9.png","cover_type":"img","excerpt":"","more":""},{"_content":"/*\n    Name:     Kimbie (dark)\n    Author:   Jan T. Sott\n    License:  Creative Commons Attribution-ShareAlike 4.0 Unported License\n    URL:      https://github.com/idleberg/Kimbie-highlight.js\n*/\n\n/* 新添加的内容\n  ------------------------------------- \n  --hl-color                  代码框字体顔色 【必须】 (把下面.hljs的 color复制到这里来)\n  --hl-bg                     代码框背景色 【必须】 (把下面.hljs的 background复制到这里来)\n  --hltools-bg: #321a0f       代码框顶部工具栏背景色 【可选】(如果你关掉了 copy、lang 和 shrink,可不用配置这个）\n  --hltools-color: #fff       代码框顶部工具栏字体顔色 【可选】(如果你关掉了 copy、lang 和 shrink,可不用配置这个）\n  --hlnumber-bg: #221a0f      代码框行数背景色 【可选】(如果已经关掉 line_number,可以不用配置这个)\n  --hlnumber-color: #fff      代码框行数字体顔色 【可选】 (如果已经关掉 line_number,可以不用配置这个)\n  --hlscrollbar-bg: #d3af86   代码框滚动条顔色 【可选】（默认为主题主顔色）\n  --hlexpand-bg: #d3af86      代码框底部展开背景色 【可选】(如果已经关掉 highlight_height_limit,可以不用配置这个)\n*/\n\n:root {\n    --hl-color: #d3af86;\n    --hl-bg: #221a0f;\n    --hltools-bg: #321a0f;\n    --hltools-color: #fff;\n    --hlnumber-bg: #221a0f;\n    --hlnumber-color: #fff;\n    --hlscrollbar-bg: #d3af86;\n    --hlexpand-bg: #d3af86;\n}\n\n/* Kimbie Comment */\n.hljs-comment,\n.hljs-quote {\n    color: #d6baad;\n}\n\n/* Kimbie Red */\n.hljs-variable,\n.hljs-template-variable,\n.hljs-tag,\n.hljs-name,\n.hljs-selector-id,\n.hljs-selector-class,\n.hljs-regexp,\n.hljs-meta {\n    color: #dc3958;\n}\n\n/* Kimbie Orange */\n.hljs-number,\n.hljs-built_in,\n.hljs-builtin-name,\n.hljs-literal,\n.hljs-type,\n.hljs-params,\n.hljs-deletion,\n.hljs-link {\n    color: #f79a32;\n}\n\n/* Kimbie Yellow */\n.hljs-title,\n.hljs-section,\n.hljs-attribute {\n    color: #f06431;\n}\n\n/* Kimbie Green */\n.hljs-string,\n.hljs-symbol,\n.hljs-bullet,\n.hljs-addition {\n    color: #889b4a;\n}\n\n/* Kimbie Purple */\n.hljs-keyword,\n.hljs-selector-tag,\n.hljs-function {\n    color: #98676a;\n}\n\n/* 更改的内容 把.hljs改为 #article-container figure.highlight .hljs *、\n  /* ------------------------------------- */\n#article-container figure.highlight .hljs {\n    display: block;\n    overflow-x: auto;\n    background: #221a0f;\n    color: #d3af86;\n    padding: 0.5em;\n}\n\n.hljs-emphasis {\n    font-style: italic;\n}\n\n.hljs-strong {\n    font-weight: bold;\n}","source":"self/Kimbiedark.css","raw":"/*\n    Name:     Kimbie (dark)\n    Author:   Jan T. Sott\n    License:  Creative Commons Attribution-ShareAlike 4.0 Unported License\n    URL:      https://github.com/idleberg/Kimbie-highlight.js\n*/\n\n/* 新添加的内容\n  ------------------------------------- \n  --hl-color                  代码框字体顔色 【必须】 (把下面.hljs的 color复制到这里来)\n  --hl-bg                     代码框背景色 【必须】 (把下面.hljs的 background复制到这里来)\n  --hltools-bg: #321a0f       代码框顶部工具栏背景色 【可选】(如果你关掉了 copy、lang 和 shrink,可不用配置这个）\n  --hltools-color: #fff       代码框顶部工具栏字体顔色 【可选】(如果你关掉了 copy、lang 和 shrink,可不用配置这个）\n  --hlnumber-bg: #221a0f      代码框行数背景色 【可选】(如果已经关掉 line_number,可以不用配置这个)\n  --hlnumber-color: #fff      代码框行数字体顔色 【可选】 (如果已经关掉 line_number,可以不用配置这个)\n  --hlscrollbar-bg: #d3af86   代码框滚动条顔色 【可选】（默认为主题主顔色）\n  --hlexpand-bg: #d3af86      代码框底部展开背景色 【可选】(如果已经关掉 highlight_height_limit,可以不用配置这个)\n*/\n\n:root {\n    --hl-color: #d3af86;\n    --hl-bg: #221a0f;\n    --hltools-bg: #321a0f;\n    --hltools-color: #fff;\n    --hlnumber-bg: #221a0f;\n    --hlnumber-color: #fff;\n    --hlscrollbar-bg: #d3af86;\n    --hlexpand-bg: #d3af86;\n}\n\n/* Kimbie Comment */\n.hljs-comment,\n.hljs-quote {\n    color: #d6baad;\n}\n\n/* Kimbie Red */\n.hljs-variable,\n.hljs-template-variable,\n.hljs-tag,\n.hljs-name,\n.hljs-selector-id,\n.hljs-selector-class,\n.hljs-regexp,\n.hljs-meta {\n    color: #dc3958;\n}\n\n/* Kimbie Orange */\n.hljs-number,\n.hljs-built_in,\n.hljs-builtin-name,\n.hljs-literal,\n.hljs-type,\n.hljs-params,\n.hljs-deletion,\n.hljs-link {\n    color: #f79a32;\n}\n\n/* Kimbie Yellow */\n.hljs-title,\n.hljs-section,\n.hljs-attribute {\n    color: #f06431;\n}\n\n/* Kimbie Green */\n.hljs-string,\n.hljs-symbol,\n.hljs-bullet,\n.hljs-addition {\n    color: #889b4a;\n}\n\n/* Kimbie Purple */\n.hljs-keyword,\n.hljs-selector-tag,\n.hljs-function {\n    color: #98676a;\n}\n\n/* 更改的内容 把.hljs改为 #article-container figure.highlight .hljs *、\n  /* ------------------------------------- */\n#article-container figure.highlight .hljs {\n    display: block;\n    overflow-x: auto;\n    background: #221a0f;\n    color: #d3af86;\n    padding: 0.5em;\n}\n\n.hljs-emphasis {\n    font-style: italic;\n}\n\n.hljs-strong {\n    font-weight: bold;\n}","date":"2025-09-24T06:00:08.783Z","updated":"2025-09-24T06:00:08.783Z","path":"self/Kimbiedark.css","layout":"false","_id":"clny08vf700065ovf9s1k1mvz","title":"","comments":1,"content":"/*\n    Name:     Kimbie (dark)\n    Author:   Jan T. Sott\n    License:  Creative Commons Attribution-ShareAlike 4.0 Unported License\n    URL:      https://github.com/idleberg/Kimbie-highlight.js\n*/\n\n/* 新添加的内容\n  ------------------------------------- \n  --hl-color                  代码框字体顔色 【必须】 (把下面.hljs的 color复制到这里来)\n  --hl-bg                     代码框背景色 【必须】 (把下面.hljs的 background复制到这里来)\n  --hltools-bg: #321a0f       代码框顶部工具栏背景色 【可选】(如果你关掉了 copy、lang 和 shrink,可不用配置这个）\n  --hltools-color: #fff       代码框顶部工具栏字体顔色 【可选】(如果你关掉了 copy、lang 和 shrink,可不用配置这个）\n  --hlnumber-bg: #221a0f      代码框行数背景色 【可选】(如果已经关掉 line_number,可以不用配置这个)\n  --hlnumber-color: #fff      代码框行数字体顔色 【可选】 (如果已经关掉 line_number,可以不用配置这个)\n  --hlscrollbar-bg: #d3af86   代码框滚动条顔色 【可选】（默认为主题主顔色）\n  --hlexpand-bg: #d3af86      代码框底部展开背景色 【可选】(如果已经关掉 highlight_height_limit,可以不用配置这个)\n*/\n\n:root {\n    --hl-color: #d3af86;\n    --hl-bg: #221a0f;\n    --hltools-bg: #321a0f;\n    --hltools-color: #fff;\n    --hlnumber-bg: #221a0f;\n    --hlnumber-color: #fff;\n    --hlscrollbar-bg: #d3af86;\n    --hlexpand-bg: #d3af86;\n}\n\n/* Kimbie Comment */\n.hljs-comment,\n.hljs-quote {\n    color: #d6baad;\n}\n\n/* Kimbie Red */\n.hljs-variable,\n.hljs-template-variable,\n.hljs-tag,\n.hljs-name,\n.hljs-selector-id,\n.hljs-selector-class,\n.hljs-regexp,\n.hljs-meta {\n    color: #dc3958;\n}\n\n/* Kimbie Orange */\n.hljs-number,\n.hljs-built_in,\n.hljs-builtin-name,\n.hljs-literal,\n.hljs-type,\n.hljs-params,\n.hljs-deletion,\n.hljs-link {\n    color: #f79a32;\n}\n\n/* Kimbie Yellow */\n.hljs-title,\n.hljs-section,\n.hljs-attribute {\n    color: #f06431;\n}\n\n/* Kimbie Green */\n.hljs-string,\n.hljs-symbol,\n.hljs-bullet,\n.hljs-addition {\n    color: #889b4a;\n}\n\n/* Kimbie Purple */\n.hljs-keyword,\n.hljs-selector-tag,\n.hljs-function {\n    color: #98676a;\n}\n\n/* 更改的内容 把.hljs改为 #article-container figure.highlight .hljs *、\n  /* ------------------------------------- */\n#article-container figure.highlight .hljs {\n    display: block;\n    overflow-x: auto;\n    background: #221a0f;\n    color: #d3af86;\n    padding: 0.5em;\n}\n\n.hljs-emphasis {\n    font-style: italic;\n}\n\n.hljs-strong {\n    font-weight: bold;\n}","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}},"cover":"/img/default_cover/geomeric1.jpg","cover_type":"img","excerpt":"","more":"/*\n    Name:     Kimbie (dark)\n    Author:   Jan T. Sott\n    License:  Creative Commons Attribution-ShareAlike 4.0 Unported License\n    URL:      https://github.com/idleberg/Kimbie-highlight.js\n*/\n\n/* 新添加的内容\n  ------------------------------------- \n  --hl-color                  代码框字体顔色 【必须】 (把下面.hljs的 color复制到这里来)\n  --hl-bg                     代码框背景色 【必须】 (把下面.hljs的 background复制到这里来)\n  --hltools-bg: #321a0f       代码框顶部工具栏背景色 【可选】(如果你关掉了 copy、lang 和 shrink,可不用配置这个）\n  --hltools-color: #fff       代码框顶部工具栏字体顔色 【可选】(如果你关掉了 copy、lang 和 shrink,可不用配置这个）\n  --hlnumber-bg: #221a0f      代码框行数背景色 【可选】(如果已经关掉 line_number,可以不用配置这个)\n  --hlnumber-color: #fff      代码框行数字体顔色 【可选】 (如果已经关掉 line_number,可以不用配置这个)\n  --hlscrollbar-bg: #d3af86   代码框滚动条顔色 【可选】（默认为主题主顔色）\n  --hlexpand-bg: #d3af86      代码框底部展开背景色 【可选】(如果已经关掉 highlight_height_limit,可以不用配置这个)\n*/\n\n:root {\n    --hl-color: #d3af86;\n    --hl-bg: #221a0f;\n    --hltools-bg: #321a0f;\n    --hltools-color: #fff;\n    --hlnumber-bg: #221a0f;\n    --hlnumber-color: #fff;\n    --hlscrollbar-bg: #d3af86;\n    --hlexpand-bg: #d3af86;\n}\n\n/* Kimbie Comment */\n.hljs-comment,\n.hljs-quote {\n    color: #d6baad;\n}\n\n/* Kimbie Red */\n.hljs-variable,\n.hljs-template-variable,\n.hljs-tag,\n.hljs-name,\n.hljs-selector-id,\n.hljs-selector-class,\n.hljs-regexp,\n.hljs-meta {\n    color: #dc3958;\n}\n\n/* Kimbie Orange */\n.hljs-number,\n.hljs-built_in,\n.hljs-builtin-name,\n.hljs-literal,\n.hljs-type,\n.hljs-params,\n.hljs-deletion,\n.hljs-link {\n    color: #f79a32;\n}\n\n/* Kimbie Yellow */\n.hljs-title,\n.hljs-section,\n.hljs-attribute {\n    color: #f06431;\n}\n\n/* Kimbie Green */\n.hljs-string,\n.hljs-symbol,\n.hljs-bullet,\n.hljs-addition {\n    color: #889b4a;\n}\n\n/* Kimbie Purple */\n.hljs-keyword,\n.hljs-selector-tag,\n.hljs-function {\n    color: #98676a;\n}\n\n/* 更改的内容 把.hljs改为 #article-container figure.highlight .hljs *、\n  /* ------------------------------------- */\n#article-container figure.highlight .hljs {\n    display: block;\n    overflow-x: auto;\n    background: #221a0f;\n    color: #d3af86;\n    padding: 0.5em;\n}\n\n.hljs-emphasis {\n    font-style: italic;\n}\n\n.hljs-strong {\n    font-weight: bold;\n}"},{"title":"友情链接","date":"2023-05-24T15:13:32.000Z","type":"link","_content":"","source":"link/index.md","raw":"---\ntitle: 友情链接\ndate: 2023-05-24 23:13:32\ntype: \"link\"\n---\n","updated":"2025-09-24T06:00:08.782Z","path":"link/index.html","_id":"clny08vf800085ovf7442h9ys","comments":1,"layout":"page","content":"","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}},"cover":"/img/default_cover/geomeric9.png","cover_type":"img","excerpt":"","more":""},{"_content":".pace {\n\t-webkit-pointer-events: none;\n\tpointer-events: none;\n\t-webkit-user-select: none;\n\t-moz-user-select: none;\n\tuser-select: none;\n}\n\n.pace-inactive {\n\tdisplay: none;\n}\n\n.pace .pace-progress {\n\tbackground: #29d;\n\tposition: fixed;\n\tz-index: 2000;\n\ttop: 0;\n\tright: 100%;\n\twidth: 100%;\n\theight: 2px;\n}\n\n.pace .pace-progress-inner {\n\tdisplay: block;\n\tposition: absolute;\n\tright: 0px;\n\twidth: 100px;\n\theight: 100%;\n\tbox-shadow: 0 0 10px #29d, 0 0 5px #29d;\n\topacity: 1.0;\n\t-webkit-transform: rotate(3deg) translate(0px, -4px);\n\t-moz-transform: rotate(3deg) translate(0px, -4px);\n\t-ms-transform: rotate(3deg) translate(0px, -4px);\n\t-o-transform: rotate(3deg) translate(0px, -4px);\n\ttransform: rotate(3deg) translate(0px, -4px);\n}\n\n.pace .pace-activity {\n\tdisplay: block;\n\tposition: fixed;\n\tz-index: 2000;\n\ttop: 15px;\n\tright: 15px;\n\twidth: 14px;\n\theight: 14px;\n\tborder: solid 2px transparent;\n\tborder-top-color: #29d;\n\tborder-left-color: #29d;\n\tborder-radius: 10px;\n\t-webkit-animation: pace-spinner 400ms linear infinite;\n\t-moz-animation: pace-spinner 400ms linear infinite;\n\t-ms-animation: pace-spinner 400ms linear infinite;\n\t-o-animation: pace-spinner 400ms linear infinite;\n\tanimation: pace-spinner 400ms linear infinite;\n}\n\n@-webkit-keyframes pace-spinner {\n\t0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\n\t100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\n}\n@-moz-keyframes pace-spinner {\n\t0% { -moz-transform: rotate(0deg); transform: rotate(0deg); }\n\t100% { -moz-transform: rotate(360deg); transform: rotate(360deg); }\n}\n@-o-keyframes pace-spinner {\n\t0% { -o-transform: rotate(0deg); transform: rotate(0deg); }\n\t100% { -o-transform: rotate(360deg); transform: rotate(360deg); }\n}\n@-ms-keyframes pace-spinner {\n\t0% { -ms-transform: rotate(0deg); transform: rotate(0deg); }\n\t100% { -ms-transform: rotate(360deg); transform: rotate(360deg); }\n}\n@keyframes pace-spinner {\n\t0% { transform: rotate(0deg); transform: rotate(0deg); }\n\t100% { transform: rotate(360deg); transform: rotate(360deg); }\n}","source":"css/pace/flash.css","raw":".pace {\n\t-webkit-pointer-events: none;\n\tpointer-events: none;\n\t-webkit-user-select: none;\n\t-moz-user-select: none;\n\tuser-select: none;\n}\n\n.pace-inactive {\n\tdisplay: none;\n}\n\n.pace .pace-progress {\n\tbackground: #29d;\n\tposition: fixed;\n\tz-index: 2000;\n\ttop: 0;\n\tright: 100%;\n\twidth: 100%;\n\theight: 2px;\n}\n\n.pace .pace-progress-inner {\n\tdisplay: block;\n\tposition: absolute;\n\tright: 0px;\n\twidth: 100px;\n\theight: 100%;\n\tbox-shadow: 0 0 10px #29d, 0 0 5px #29d;\n\topacity: 1.0;\n\t-webkit-transform: rotate(3deg) translate(0px, -4px);\n\t-moz-transform: rotate(3deg) translate(0px, -4px);\n\t-ms-transform: rotate(3deg) translate(0px, -4px);\n\t-o-transform: rotate(3deg) translate(0px, -4px);\n\ttransform: rotate(3deg) translate(0px, -4px);\n}\n\n.pace .pace-activity {\n\tdisplay: block;\n\tposition: fixed;\n\tz-index: 2000;\n\ttop: 15px;\n\tright: 15px;\n\twidth: 14px;\n\theight: 14px;\n\tborder: solid 2px transparent;\n\tborder-top-color: #29d;\n\tborder-left-color: #29d;\n\tborder-radius: 10px;\n\t-webkit-animation: pace-spinner 400ms linear infinite;\n\t-moz-animation: pace-spinner 400ms linear infinite;\n\t-ms-animation: pace-spinner 400ms linear infinite;\n\t-o-animation: pace-spinner 400ms linear infinite;\n\tanimation: pace-spinner 400ms linear infinite;\n}\n\n@-webkit-keyframes pace-spinner {\n\t0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\n\t100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\n}\n@-moz-keyframes pace-spinner {\n\t0% { -moz-transform: rotate(0deg); transform: rotate(0deg); }\n\t100% { -moz-transform: rotate(360deg); transform: rotate(360deg); }\n}\n@-o-keyframes pace-spinner {\n\t0% { -o-transform: rotate(0deg); transform: rotate(0deg); }\n\t100% { -o-transform: rotate(360deg); transform: rotate(360deg); }\n}\n@-ms-keyframes pace-spinner {\n\t0% { -ms-transform: rotate(0deg); transform: rotate(0deg); }\n\t100% { -ms-transform: rotate(360deg); transform: rotate(360deg); }\n}\n@keyframes pace-spinner {\n\t0% { transform: rotate(0deg); transform: rotate(0deg); }\n\t100% { transform: rotate(360deg); transform: rotate(360deg); }\n}","date":"2025-09-24T06:00:08.752Z","updated":"2025-09-24T06:00:08.752Z","path":"css/pace/flash.css","layout":"false","_id":"clny08vf9000a5ovf47yrems2","title":"","comments":1,"content":".pace {\n\t-webkit-pointer-events: none;\n\tpointer-events: none;\n\t-webkit-user-select: none;\n\t-moz-user-select: none;\n\tuser-select: none;\n}\n\n.pace-inactive {\n\tdisplay: none;\n}\n\n.pace .pace-progress {\n\tbackground: #29d;\n\tposition: fixed;\n\tz-index: 2000;\n\ttop: 0;\n\tright: 100%;\n\twidth: 100%;\n\theight: 2px;\n}\n\n.pace .pace-progress-inner {\n\tdisplay: block;\n\tposition: absolute;\n\tright: 0px;\n\twidth: 100px;\n\theight: 100%;\n\tbox-shadow: 0 0 10px #29d, 0 0 5px #29d;\n\topacity: 1.0;\n\t-webkit-transform: rotate(3deg) translate(0px, -4px);\n\t-moz-transform: rotate(3deg) translate(0px, -4px);\n\t-ms-transform: rotate(3deg) translate(0px, -4px);\n\t-o-transform: rotate(3deg) translate(0px, -4px);\n\ttransform: rotate(3deg) translate(0px, -4px);\n}\n\n.pace .pace-activity {\n\tdisplay: block;\n\tposition: fixed;\n\tz-index: 2000;\n\ttop: 15px;\n\tright: 15px;\n\twidth: 14px;\n\theight: 14px;\n\tborder: solid 2px transparent;\n\tborder-top-color: #29d;\n\tborder-left-color: #29d;\n\tborder-radius: 10px;\n\t-webkit-animation: pace-spinner 400ms linear infinite;\n\t-moz-animation: pace-spinner 400ms linear infinite;\n\t-ms-animation: pace-spinner 400ms linear infinite;\n\t-o-animation: pace-spinner 400ms linear infinite;\n\tanimation: pace-spinner 400ms linear infinite;\n}\n\n@-webkit-keyframes pace-spinner {\n\t0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\n\t100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\n}\n@-moz-keyframes pace-spinner {\n\t0% { -moz-transform: rotate(0deg); transform: rotate(0deg); }\n\t100% { -moz-transform: rotate(360deg); transform: rotate(360deg); }\n}\n@-o-keyframes pace-spinner {\n\t0% { -o-transform: rotate(0deg); transform: rotate(0deg); }\n\t100% { -o-transform: rotate(360deg); transform: rotate(360deg); }\n}\n@-ms-keyframes pace-spinner {\n\t0% { -ms-transform: rotate(0deg); transform: rotate(0deg); }\n\t100% { -ms-transform: rotate(360deg); transform: rotate(360deg); }\n}\n@keyframes pace-spinner {\n\t0% { transform: rotate(0deg); transform: rotate(0deg); }\n\t100% { transform: rotate(360deg); transform: rotate(360deg); }\n}","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}},"cover":"/img/default_cover/geomeric2.png","cover_type":"img","excerpt":"","more":".pace {\n\t-webkit-pointer-events: none;\n\tpointer-events: none;\n\t-webkit-user-select: none;\n\t-moz-user-select: none;\n\tuser-select: none;\n}\n\n.pace-inactive {\n\tdisplay: none;\n}\n\n.pace .pace-progress {\n\tbackground: #29d;\n\tposition: fixed;\n\tz-index: 2000;\n\ttop: 0;\n\tright: 100%;\n\twidth: 100%;\n\theight: 2px;\n}\n\n.pace .pace-progress-inner {\n\tdisplay: block;\n\tposition: absolute;\n\tright: 0px;\n\twidth: 100px;\n\theight: 100%;\n\tbox-shadow: 0 0 10px #29d, 0 0 5px #29d;\n\topacity: 1.0;\n\t-webkit-transform: rotate(3deg) translate(0px, -4px);\n\t-moz-transform: rotate(3deg) translate(0px, -4px);\n\t-ms-transform: rotate(3deg) translate(0px, -4px);\n\t-o-transform: rotate(3deg) translate(0px, -4px);\n\ttransform: rotate(3deg) translate(0px, -4px);\n}\n\n.pace .pace-activity {\n\tdisplay: block;\n\tposition: fixed;\n\tz-index: 2000;\n\ttop: 15px;\n\tright: 15px;\n\twidth: 14px;\n\theight: 14px;\n\tborder: solid 2px transparent;\n\tborder-top-color: #29d;\n\tborder-left-color: #29d;\n\tborder-radius: 10px;\n\t-webkit-animation: pace-spinner 400ms linear infinite;\n\t-moz-animation: pace-spinner 400ms linear infinite;\n\t-ms-animation: pace-spinner 400ms linear infinite;\n\t-o-animation: pace-spinner 400ms linear infinite;\n\tanimation: pace-spinner 400ms linear infinite;\n}\n\n@-webkit-keyframes pace-spinner {\n\t0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\n\t100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\n}\n@-moz-keyframes pace-spinner {\n\t0% { -moz-transform: rotate(0deg); transform: rotate(0deg); }\n\t100% { -moz-transform: rotate(360deg); transform: rotate(360deg); }\n}\n@-o-keyframes pace-spinner {\n\t0% { -o-transform: rotate(0deg); transform: rotate(0deg); }\n\t100% { -o-transform: rotate(360deg); transform: rotate(360deg); }\n}\n@-ms-keyframes pace-spinner {\n\t0% { -ms-transform: rotate(0deg); transform: rotate(0deg); }\n\t100% { -ms-transform: rotate(360deg); transform: rotate(360deg); }\n}\n@keyframes pace-spinner {\n\t0% { transform: rotate(0deg); transform: rotate(0deg); }\n\t100% { transform: rotate(360deg); transform: rotate(360deg); }\n}"}],"Post":[{"title":"用 Dockerfile 文件构建带 systemd 的ubuntu 22.04","date":"2023-10-19T16:00:00.000Z","updated":"2025-09-24T06:00:08.731Z","copyright":false,"_content":"\n# 用 Dockerfile 文件构建带 systemd 的ubuntu 22.04\n\n## Dockerfile 文件\n```Dockerfile\nFROM ubuntu:22.04\nWORKDIR /root\n# noninteractive 配置时不需要输入任何信息\nENV DEBIAN_FRONTEND=\"noninteractive\"\n# 配置时区\nENV TZ=Asia/Shanghai\n# 配置apt源\nRUN sed -i 's@//.*archive.ubuntu.com@//mirrors.ustc.edu.cn@g' /etc/apt/sources.list\n# 安装必要的软件\nRUN apt update && apt install -y init locales\n# 配置语言环境\nRUN locale-gen en_US.UTF-8\n# 配置 entrypoint 为 init, 是 init 可以作为 pid 1 运行, 并且可以启动 systemd\nENTRYPOINT [\"/usr/sbin/init\"]\n```\n\n## 构建镜像\n```bash\ndocker build -t ubuntu:22.04-systemd .\n```\n\n## 运行容器\n```bash\ndocker run -it --privileged --name ubuntu -h ubuntu ubuntu:22.04-systemd\n```\n","source":"_posts/docker/用 Dockerfile 文件构建带 systemd 的ubuntu 22.04.md","raw":"---\ntitle: 用 Dockerfile 文件构建带 systemd 的ubuntu 22.04\ndate: 2023-10-20\nupdated:\ntags: [Dockerfile]\ncategories: Docker\ncopyright: false\n---\n\n# 用 Dockerfile 文件构建带 systemd 的ubuntu 22.04\n\n## Dockerfile 文件\n```Dockerfile\nFROM ubuntu:22.04\nWORKDIR /root\n# noninteractive 配置时不需要输入任何信息\nENV DEBIAN_FRONTEND=\"noninteractive\"\n# 配置时区\nENV TZ=Asia/Shanghai\n# 配置apt源\nRUN sed -i 's@//.*archive.ubuntu.com@//mirrors.ustc.edu.cn@g' /etc/apt/sources.list\n# 安装必要的软件\nRUN apt update && apt install -y init locales\n# 配置语言环境\nRUN locale-gen en_US.UTF-8\n# 配置 entrypoint 为 init, 是 init 可以作为 pid 1 运行, 并且可以启动 systemd\nENTRYPOINT [\"/usr/sbin/init\"]\n```\n\n## 构建镜像\n```bash\ndocker build -t ubuntu:22.04-systemd .\n```\n\n## 运行容器\n```bash\ndocker run -it --privileged --name ubuntu -h ubuntu ubuntu:22.04-systemd\n```\n","slug":"docker/用 Dockerfile 文件构建带 systemd 的ubuntu 22.04","published":1,"_id":"clny08vf000015ovffvbgfro5","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"用-Dockerfile-文件构建带-systemd-的ubuntu-22-04\"><a href=\"#用-Dockerfile-文件构建带-systemd-的ubuntu-22-04\" class=\"headerlink\" title=\"用 Dockerfile 文件构建带 systemd 的ubuntu 22.04\"></a>用 Dockerfile 文件构建带 systemd 的ubuntu 22.04</h1><h2 id=\"Dockerfile-文件\"><a href=\"#Dockerfile-文件\" class=\"headerlink\" title=\"Dockerfile 文件\"></a>Dockerfile 文件</h2><pre class=\"line-numbers language-Dockerfile\" data-language=\"Dockerfile\"><code class=\"language-Dockerfile\">FROM ubuntu:22.04\nWORKDIR &#x2F;root\n# noninteractive 配置时不需要输入任何信息\nENV DEBIAN_FRONTEND&#x3D;&quot;noninteractive&quot;\n# 配置时区\nENV TZ&#x3D;Asia&#x2F;Shanghai\n# 配置apt源\nRUN sed -i &#39;s@&#x2F;&#x2F;.*archive.ubuntu.com@&#x2F;&#x2F;mirrors.ustc.edu.cn@g&#39; &#x2F;etc&#x2F;apt&#x2F;sources.list\n# 安装必要的软件\nRUN apt update &amp;&amp; apt install -y init locales\n# 配置语言环境\nRUN locale-gen en_US.UTF-8\n# 配置 entrypoint 为 init, 是 init 可以作为 pid 1 运行, 并且可以启动 systemd\nENTRYPOINT [&quot;&#x2F;usr&#x2F;sbin&#x2F;init&quot;]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> build <span class=\"token parameter variable\">-t</span> ubuntu:22.04-systemd <span class=\"token builtin class-name\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"运行容器\"><a href=\"#运行容器\" class=\"headerlink\" title=\"运行容器\"></a>运行容器</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-it</span> <span class=\"token parameter variable\">--privileged</span> <span class=\"token parameter variable\">--name</span> ubuntu <span class=\"token parameter variable\">-h</span> ubuntu ubuntu:22.04-systemd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}},"cover":"/img/default_cover/geomeric2.png","cover_type":"img","excerpt":"","more":"<h1 id=\"用-Dockerfile-文件构建带-systemd-的ubuntu-22-04\"><a href=\"#用-Dockerfile-文件构建带-systemd-的ubuntu-22-04\" class=\"headerlink\" title=\"用 Dockerfile 文件构建带 systemd 的ubuntu 22.04\"></a>用 Dockerfile 文件构建带 systemd 的ubuntu 22.04</h1><h2 id=\"Dockerfile-文件\"><a href=\"#Dockerfile-文件\" class=\"headerlink\" title=\"Dockerfile 文件\"></a>Dockerfile 文件</h2><pre class=\"line-numbers language-Dockerfile\" data-language=\"Dockerfile\"><code class=\"language-Dockerfile\">FROM ubuntu:22.04\nWORKDIR &#x2F;root\n# noninteractive 配置时不需要输入任何信息\nENV DEBIAN_FRONTEND&#x3D;&quot;noninteractive&quot;\n# 配置时区\nENV TZ&#x3D;Asia&#x2F;Shanghai\n# 配置apt源\nRUN sed -i &#39;s@&#x2F;&#x2F;.*archive.ubuntu.com@&#x2F;&#x2F;mirrors.ustc.edu.cn@g&#39; &#x2F;etc&#x2F;apt&#x2F;sources.list\n# 安装必要的软件\nRUN apt update &amp;&amp; apt install -y init locales\n# 配置语言环境\nRUN locale-gen en_US.UTF-8\n# 配置 entrypoint 为 init, 是 init 可以作为 pid 1 运行, 并且可以启动 systemd\nENTRYPOINT [&quot;&#x2F;usr&#x2F;sbin&#x2F;init&quot;]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> build <span class=\"token parameter variable\">-t</span> ubuntu:22.04-systemd <span class=\"token builtin class-name\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"运行容器\"><a href=\"#运行容器\" class=\"headerlink\" title=\"运行容器\"></a>运行容器</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-it</span> <span class=\"token parameter variable\">--privileged</span> <span class=\"token parameter variable\">--name</span> ubuntu <span class=\"token parameter variable\">-h</span> ubuntu ubuntu:22.04-systemd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n"},{"title":"k8s 创建单节点 mysql 并持久化存储","date":"2023-10-10T05:00:00.000Z","updated":"2025-09-24T06:00:08.735Z","keywords":"k8s","copyright":false,"_content":"\n# k8s 创建单节点 mysql 并持久化存储\n\n## 配置示例\n\n1. 创建 pvc\n\n```yaml\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: mysql-data\n  namespace: dev\nspec:\n  accessModes:\n    - ReadWriteMany\n  storageClassName: csi-cephfs-sc-retain\n  resources:\n    requests:\n      storage: 50Gi\n```\n\n2. mysql 的一些资源配置\n\n```yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: mysql-config\n  namespace: dev\ndata:\n  rootPwd: \"d72a3dpe\"\n  config.cnf: \"\"\n\n---\n# deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: mysql\n  namespace: dev\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: mysql\n  template:\n    metadata:\n      labels:\n        app: mysql\n    spec:\n      containers:\n        - name: mysql\n          image: mysql:8.1.0\n          imagePullPolicy: IfNotPresent\n          args:\n            - --character-set-server=utf8mb4\n            - --collation-server=utf8mb4_unicode_ci\n          ports:\n            - containerPort: 3306\n            - containerPort: 33060\n          env:\n            - name: MYSQL_ROOT_PASSWORD\n              valueFrom:\n                configMapKeyRef:\n                  name: mysql-config\n                  key: rootPwd\n          volumeMounts:\n            - name: config-dir\n              mountPath: /etc/mysql/conf.d\n              readOnly: true\n            - name: data-dir\n              mountPath: /var/lib/mysql\n      volumes:\n        - name: config-dir\n          configMap:\n            name: mysql-config\n            items:\n              # name 是对应 secret 中的 key, path 是挂载 secret 后的子文件路径\n              - key: config.cnf\n                path: config.cnf\n        - name: data-dir\n          persistentVolumeClaim:\n            claimName: mysql-data\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: mysql\n  namespace: dev\nspec:\n  selector:\n    app: mysql\n  ports:\n    - name: mysql\n      protocol: TCP\n      port: 3306\n      targetPort: 3306\n  type: NodePort\n```\n","source":"_posts/k8s/k8s 创建单节点 mysql 并持久化存储.md","raw":"---\ntitle: k8s 创建单节点 mysql 并持久化存储\ndate: 2023-10-10 13:00:00\nupdated:\ntags: k8s\ncategories: 容器/虚拟化\nkeywords: k8s\ncopyright: false\n---\n\n# k8s 创建单节点 mysql 并持久化存储\n\n## 配置示例\n\n1. 创建 pvc\n\n```yaml\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: mysql-data\n  namespace: dev\nspec:\n  accessModes:\n    - ReadWriteMany\n  storageClassName: csi-cephfs-sc-retain\n  resources:\n    requests:\n      storage: 50Gi\n```\n\n2. mysql 的一些资源配置\n\n```yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: mysql-config\n  namespace: dev\ndata:\n  rootPwd: \"d72a3dpe\"\n  config.cnf: \"\"\n\n---\n# deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: mysql\n  namespace: dev\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: mysql\n  template:\n    metadata:\n      labels:\n        app: mysql\n    spec:\n      containers:\n        - name: mysql\n          image: mysql:8.1.0\n          imagePullPolicy: IfNotPresent\n          args:\n            - --character-set-server=utf8mb4\n            - --collation-server=utf8mb4_unicode_ci\n          ports:\n            - containerPort: 3306\n            - containerPort: 33060\n          env:\n            - name: MYSQL_ROOT_PASSWORD\n              valueFrom:\n                configMapKeyRef:\n                  name: mysql-config\n                  key: rootPwd\n          volumeMounts:\n            - name: config-dir\n              mountPath: /etc/mysql/conf.d\n              readOnly: true\n            - name: data-dir\n              mountPath: /var/lib/mysql\n      volumes:\n        - name: config-dir\n          configMap:\n            name: mysql-config\n            items:\n              # name 是对应 secret 中的 key, path 是挂载 secret 后的子文件路径\n              - key: config.cnf\n                path: config.cnf\n        - name: data-dir\n          persistentVolumeClaim:\n            claimName: mysql-data\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: mysql\n  namespace: dev\nspec:\n  selector:\n    app: mysql\n  ports:\n    - name: mysql\n      protocol: TCP\n      port: 3306\n      targetPort: 3306\n  type: NodePort\n```\n","slug":"k8s/k8s 创建单节点 mysql 并持久化存储","published":1,"_id":"clny08vf400035ovf39yk3bau","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"k8s-创建单节点-mysql-并持久化存储\"><a href=\"#k8s-创建单节点-mysql-并持久化存储\" class=\"headerlink\" title=\"k8s 创建单节点 mysql 并持久化存储\"></a>k8s 创建单节点 mysql 并持久化存储</h1><h2 id=\"配置示例\"><a href=\"#配置示例\" class=\"headerlink\" title=\"配置示例\"></a>配置示例</h2><ol>\n<li>创建 pvc</li>\n</ol>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> PersistentVolumeClaim\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mysql<span class=\"token punctuation\">-</span>data\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> dev\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">accessModes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> ReadWriteMany\n  <span class=\"token key atrule\">storageClassName</span><span class=\"token punctuation\">:</span> csi<span class=\"token punctuation\">-</span>cephfs<span class=\"token punctuation\">-</span>sc<span class=\"token punctuation\">-</span>retain\n  <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">storage</span><span class=\"token punctuation\">:</span> 50Gi<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li>mysql 的一些资源配置</li>\n</ol>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ConfigMap\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mysql<span class=\"token punctuation\">-</span>config\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> dev\n<span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">rootPwd</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"d72a3dpe\"</span>\n  <span class=\"token key atrule\">config.cnf</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span>\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token comment\"># deployment.yaml</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mysql\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> dev\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> mysql\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> mysql\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mysql\n          <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> mysql<span class=\"token punctuation\">:</span>8.1.0\n          <span class=\"token key atrule\">imagePullPolicy</span><span class=\"token punctuation\">:</span> IfNotPresent\n          <span class=\"token key atrule\">args</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>character<span class=\"token punctuation\">-</span>set<span class=\"token punctuation\">-</span>server=utf8mb4\n            <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>collation<span class=\"token punctuation\">-</span>server=utf8mb4_unicode_ci\n          <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3306</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">33060</span>\n          <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> MYSQL_ROOT_PASSWORD\n              <span class=\"token key atrule\">valueFrom</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">configMapKeyRef</span><span class=\"token punctuation\">:</span>\n                  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mysql<span class=\"token punctuation\">-</span>config\n                  <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> rootPwd\n          <span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> config<span class=\"token punctuation\">-</span>dir\n              <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /etc/mysql/conf.d\n              <span class=\"token key atrule\">readOnly</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">-</span>dir\n              <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /var/lib/mysql\n      <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> config<span class=\"token punctuation\">-</span>dir\n          <span class=\"token key atrule\">configMap</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mysql<span class=\"token punctuation\">-</span>config\n            <span class=\"token key atrule\">items</span><span class=\"token punctuation\">:</span>\n              <span class=\"token comment\"># name 是对应 secret 中的 key, path 是挂载 secret 后的子文件路径</span>\n              <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> config.cnf\n                <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> config.cnf\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">-</span>dir\n          <span class=\"token key atrule\">persistentVolumeClaim</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">claimName</span><span class=\"token punctuation\">:</span> mysql<span class=\"token punctuation\">-</span>data\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mysql\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> dev\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> mysql\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mysql\n      <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3306</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3306</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> NodePort<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}},"cover":"/img/default_cover/geomeric6.png","cover_type":"img","excerpt":"","more":"<h1 id=\"k8s-创建单节点-mysql-并持久化存储\"><a href=\"#k8s-创建单节点-mysql-并持久化存储\" class=\"headerlink\" title=\"k8s 创建单节点 mysql 并持久化存储\"></a>k8s 创建单节点 mysql 并持久化存储</h1><h2 id=\"配置示例\"><a href=\"#配置示例\" class=\"headerlink\" title=\"配置示例\"></a>配置示例</h2><ol>\n<li>创建 pvc</li>\n</ol>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> PersistentVolumeClaim\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mysql<span class=\"token punctuation\">-</span>data\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> dev\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">accessModes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> ReadWriteMany\n  <span class=\"token key atrule\">storageClassName</span><span class=\"token punctuation\">:</span> csi<span class=\"token punctuation\">-</span>cephfs<span class=\"token punctuation\">-</span>sc<span class=\"token punctuation\">-</span>retain\n  <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">storage</span><span class=\"token punctuation\">:</span> 50Gi<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li>mysql 的一些资源配置</li>\n</ol>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ConfigMap\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mysql<span class=\"token punctuation\">-</span>config\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> dev\n<span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">rootPwd</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"d72a3dpe\"</span>\n  <span class=\"token key atrule\">config.cnf</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span>\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token comment\"># deployment.yaml</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mysql\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> dev\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> mysql\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> mysql\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mysql\n          <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> mysql<span class=\"token punctuation\">:</span>8.1.0\n          <span class=\"token key atrule\">imagePullPolicy</span><span class=\"token punctuation\">:</span> IfNotPresent\n          <span class=\"token key atrule\">args</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>character<span class=\"token punctuation\">-</span>set<span class=\"token punctuation\">-</span>server=utf8mb4\n            <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>collation<span class=\"token punctuation\">-</span>server=utf8mb4_unicode_ci\n          <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3306</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">33060</span>\n          <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> MYSQL_ROOT_PASSWORD\n              <span class=\"token key atrule\">valueFrom</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">configMapKeyRef</span><span class=\"token punctuation\">:</span>\n                  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mysql<span class=\"token punctuation\">-</span>config\n                  <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> rootPwd\n          <span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> config<span class=\"token punctuation\">-</span>dir\n              <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /etc/mysql/conf.d\n              <span class=\"token key atrule\">readOnly</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">-</span>dir\n              <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /var/lib/mysql\n      <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> config<span class=\"token punctuation\">-</span>dir\n          <span class=\"token key atrule\">configMap</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mysql<span class=\"token punctuation\">-</span>config\n            <span class=\"token key atrule\">items</span><span class=\"token punctuation\">:</span>\n              <span class=\"token comment\"># name 是对应 secret 中的 key, path 是挂载 secret 后的子文件路径</span>\n              <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> config.cnf\n                <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> config.cnf\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">-</span>dir\n          <span class=\"token key atrule\">persistentVolumeClaim</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">claimName</span><span class=\"token punctuation\">:</span> mysql<span class=\"token punctuation\">-</span>data\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mysql\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> dev\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> mysql\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mysql\n      <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3306</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3306</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> NodePort<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n"},{"title":"Ceph 安装记录","date":"2021-09-30T08:00:00.000Z","cover":"/img/default_cover/geomeric6.png","_content":"\nceph 安装记录\n<!-- more -->\n```bash bash\nsudo su\napt install -y python-is-python3 systemd chrony\n\nchronyc sources\n\n172.31.18.113 ceph-01\n172.31.26.40 ceph-02\n172.31.24.19 ceph-03\n\n\n\n# 安装 docker\nsudo apt-get install -y apt-transport-https  ca-certificates  curl  software-properties-common gnupg1 gnupg2\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\napt-key fingerprint 0EBFCD88\nsudo add-apt-repository    \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\napt-get update\napt-get -y install docker-ce\n\n\n# 下载\ncurl --silent --remote-name --location https://github.com/ceph/ceph/raw/quincy/src/cephadm/cephadm\nchmod +x cephadm\n\n./cephadm add-repo --release quincy\n\n./cephadm install\nwhich cephadm\n\ncephadm shell\ncephadm shell -- ceph -s\n\ncephadm bootstrap --mon-ip *<mon-ip>*\ncephadm add-repo --release quincy\ncephadm install ceph-common\nceph -v\nceph status\n\nceph orch host label add *<host>* _admin\n\nssh-copy-id -f -i /etc/ceph/ceph.pub root@ceph-02\nssh-copy-id -f -i /etc/ceph/ceph.pub root@ceph-03\n\nceph orch host add ip-172-31-26-40 172.31.26.40 --labels _admin\nceph orch host add ip-172-31-24-19 172.31.24.19 --labels _admin\n\nceph orch apply osd --all-available-devices\n\n\nceph fs volume create fs-01 --placement=\"ip-172-31-18-113\"\nstat /sbin/mount.ceph\n\nmount -t ceph cephuser@.fs-01=/ -o secret=AQCR52Rjyuu7ChAAzZs+tBmFrp3bGvYAHZHwJg==\n\n# 挂载cephfs 前提条件\nssh {user}@{mon-host} \"sudo ceph config generate-minimal-conf\" | sudo tee /etc/ceph/ceph.conf\nchmod 644 /etc/ceph/ceph.conf\nssh {user}@{mon-host} \"sudo ceph fs authorize cephfs client.djx / rw\" | sudo tee /etc/ceph/ceph.client.foo.keyring\nchmod 600 /etc/ceph/ceph.client.foo.keyring\n\n# 挂载 cephfs\nmount -t ceph djx@f97eeb7c-5bed-11ed-9dfb-05518952193e.fs-01=/ /mnt/fs-01 -o mon_addr=172.31.18.113:6789/172.31.26.40:6789/172.31.24.19:6789,secret=AQCR52Rjyuu7ChAAzZs+tBmFrp3bGvYAHZHwJg==\n\n\n# 操作服务\nceph orch <start|stop|restart|redeploy|reconfig> <service_name>\n\n```\n","source":"_posts/ceph/Ceph 安装记录.md","raw":"---\ntitle: \"Ceph 安装记录\"\ntags: ceph\ncategories: Ceph 学习\ndate: 2021-09-30 16:00:00\ncover:\n---\n\nceph 安装记录\n<!-- more -->\n```bash bash\nsudo su\napt install -y python-is-python3 systemd chrony\n\nchronyc sources\n\n172.31.18.113 ceph-01\n172.31.26.40 ceph-02\n172.31.24.19 ceph-03\n\n\n\n# 安装 docker\nsudo apt-get install -y apt-transport-https  ca-certificates  curl  software-properties-common gnupg1 gnupg2\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\napt-key fingerprint 0EBFCD88\nsudo add-apt-repository    \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\napt-get update\napt-get -y install docker-ce\n\n\n# 下载\ncurl --silent --remote-name --location https://github.com/ceph/ceph/raw/quincy/src/cephadm/cephadm\nchmod +x cephadm\n\n./cephadm add-repo --release quincy\n\n./cephadm install\nwhich cephadm\n\ncephadm shell\ncephadm shell -- ceph -s\n\ncephadm bootstrap --mon-ip *<mon-ip>*\ncephadm add-repo --release quincy\ncephadm install ceph-common\nceph -v\nceph status\n\nceph orch host label add *<host>* _admin\n\nssh-copy-id -f -i /etc/ceph/ceph.pub root@ceph-02\nssh-copy-id -f -i /etc/ceph/ceph.pub root@ceph-03\n\nceph orch host add ip-172-31-26-40 172.31.26.40 --labels _admin\nceph orch host add ip-172-31-24-19 172.31.24.19 --labels _admin\n\nceph orch apply osd --all-available-devices\n\n\nceph fs volume create fs-01 --placement=\"ip-172-31-18-113\"\nstat /sbin/mount.ceph\n\nmount -t ceph cephuser@.fs-01=/ -o secret=AQCR52Rjyuu7ChAAzZs+tBmFrp3bGvYAHZHwJg==\n\n# 挂载cephfs 前提条件\nssh {user}@{mon-host} \"sudo ceph config generate-minimal-conf\" | sudo tee /etc/ceph/ceph.conf\nchmod 644 /etc/ceph/ceph.conf\nssh {user}@{mon-host} \"sudo ceph fs authorize cephfs client.djx / rw\" | sudo tee /etc/ceph/ceph.client.foo.keyring\nchmod 600 /etc/ceph/ceph.client.foo.keyring\n\n# 挂载 cephfs\nmount -t ceph djx@f97eeb7c-5bed-11ed-9dfb-05518952193e.fs-01=/ /mnt/fs-01 -o mon_addr=172.31.18.113:6789/172.31.26.40:6789/172.31.24.19:6789,secret=AQCR52Rjyuu7ChAAzZs+tBmFrp3bGvYAHZHwJg==\n\n\n# 操作服务\nceph orch <start|stop|restart|redeploy|reconfig> <service_name>\n\n```\n","slug":"ceph/Ceph 安装记录","published":1,"updated":"2025-09-24T06:00:08.729Z","_id":"clny08vf700075ovf8wcv6o0c","comments":1,"layout":"post","photos":[],"link":"","content":"<p>ceph 安装记录</p>\n<span id=\"more\"></span>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>bash</span></div><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">su</span>\n<span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> python-is-python3 systemd chrony\n\nchronyc sources\n\n<span class=\"token number\">172.31</span>.18.113 ceph-01\n<span class=\"token number\">172.31</span>.26.40 ceph-02\n<span class=\"token number\">172.31</span>.24.19 ceph-03\n\n\n\n<span class=\"token comment\"># 安装 docker</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> apt-transport-https  ca-certificates  <span class=\"token function\">curl</span>  software-properties-common gnupg1 gnupg2\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-fsSL</span> https://download.docker.com/linux/ubuntu/gpg <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> apt-key <span class=\"token function\">add</span> -\napt-key fingerprint 0EBFCD88\n<span class=\"token function\">sudo</span> add-apt-repository    <span class=\"token string\">\"deb [arch=amd64] https://download.docker.com/linux/ubuntu <span class=\"token variable\"><span class=\"token variable\">$(</span>lsb_release <span class=\"token parameter variable\">-cs</span><span class=\"token variable\">)</span></span> stable\"</span>\n<span class=\"token function\">apt-get</span> update\n<span class=\"token function\">apt-get</span> <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> docker-ce\n\n\n<span class=\"token comment\"># 下载</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">--silent</span> --remote-name <span class=\"token parameter variable\">--location</span> https://github.com/ceph/ceph/raw/quincy/src/cephadm/cephadm\n<span class=\"token function\">chmod</span> +x cephadm\n\n./cephadm add-repo <span class=\"token parameter variable\">--release</span> quincy\n\n./cephadm <span class=\"token function\">install</span>\n<span class=\"token function\">which</span> cephadm\n\ncephadm shell\ncephadm shell -- ceph <span class=\"token parameter variable\">-s</span>\n\ncephadm bootstrap --mon-ip *<span class=\"token operator\">&lt;</span>mon-ip<span class=\"token operator\">></span>*\ncephadm add-repo <span class=\"token parameter variable\">--release</span> quincy\ncephadm <span class=\"token function\">install</span> ceph-common\nceph <span class=\"token parameter variable\">-v</span>\nceph status\n\nceph orch <span class=\"token function\">host</span> label <span class=\"token function\">add</span> *<span class=\"token operator\">&lt;</span>host<span class=\"token operator\">></span>* _admin\n\nssh-copy-id <span class=\"token parameter variable\">-f</span> <span class=\"token parameter variable\">-i</span> /etc/ceph/ceph.pub root@ceph-02\nssh-copy-id <span class=\"token parameter variable\">-f</span> <span class=\"token parameter variable\">-i</span> /etc/ceph/ceph.pub root@ceph-03\n\nceph orch <span class=\"token function\">host</span> <span class=\"token function\">add</span> ip-172-31-26-40 <span class=\"token number\">172.31</span>.26.40 <span class=\"token parameter variable\">--labels</span> _admin\nceph orch <span class=\"token function\">host</span> <span class=\"token function\">add</span> ip-172-31-24-19 <span class=\"token number\">172.31</span>.24.19 <span class=\"token parameter variable\">--labels</span> _admin\n\nceph orch apply osd --all-available-devices\n\n\nceph fs volume create fs-01 <span class=\"token parameter variable\">--placement</span><span class=\"token operator\">=</span><span class=\"token string\">\"ip-172-31-18-113\"</span>\n<span class=\"token function\">stat</span> /sbin/mount.ceph\n\n<span class=\"token function\">mount</span> <span class=\"token parameter variable\">-t</span> ceph cephuser@.fs-01<span class=\"token operator\">=</span>/ <span class=\"token parameter variable\">-o</span> <span class=\"token assign-left variable\">secret</span><span class=\"token operator\">=</span>AQCR52Rjyuu7ChAAzZs+tBmFrp3bGvYAHZHwJg<span class=\"token operator\">==</span>\n\n<span class=\"token comment\"># 挂载cephfs 前提条件</span>\n<span class=\"token function\">ssh</span> <span class=\"token punctuation\">&#123;</span>user<span class=\"token punctuation\">&#125;</span>@<span class=\"token punctuation\">&#123;</span>mon-host<span class=\"token punctuation\">&#125;</span> <span class=\"token string\">\"sudo ceph config generate-minimal-conf\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/ceph/ceph.conf\n<span class=\"token function\">chmod</span> <span class=\"token number\">644</span> /etc/ceph/ceph.conf\n<span class=\"token function\">ssh</span> <span class=\"token punctuation\">&#123;</span>user<span class=\"token punctuation\">&#125;</span>@<span class=\"token punctuation\">&#123;</span>mon-host<span class=\"token punctuation\">&#125;</span> <span class=\"token string\">\"sudo ceph fs authorize cephfs client.djx / rw\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/ceph/ceph.client.foo.keyring\n<span class=\"token function\">chmod</span> <span class=\"token number\">600</span> /etc/ceph/ceph.client.foo.keyring\n\n<span class=\"token comment\"># 挂载 cephfs</span>\n<span class=\"token function\">mount</span> <span class=\"token parameter variable\">-t</span> ceph djx@f97eeb7c-5bed-11ed-9dfb-05518952193e.fs-01<span class=\"token operator\">=</span>/ /mnt/fs-01 <span class=\"token parameter variable\">-o</span> <span class=\"token assign-left variable\">mon_addr</span><span class=\"token operator\">=</span><span class=\"token number\">172.31</span>.18.113:6789/172.31.26.40:6789/172.31.24.19:6789,secret<span class=\"token operator\">=</span>AQCR52Rjyuu7ChAAzZs+tBmFrp3bGvYAHZHwJg<span class=\"token operator\">==</span>\n\n\n<span class=\"token comment\"># 操作服务</span>\nceph orch <span class=\"token operator\">&lt;</span>start<span class=\"token operator\">|</span>stop<span class=\"token operator\">|</span>restart<span class=\"token operator\">|</span>redeploy<span class=\"token operator\">|</span>reconfig<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>service_name<span class=\"token operator\">></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}},"cover_type":"img","excerpt":"<p>ceph 安装记录</p>","more":"<pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>bash</span></div><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">su</span>\n<span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> python-is-python3 systemd chrony\n\nchronyc sources\n\n<span class=\"token number\">172.31</span>.18.113 ceph-01\n<span class=\"token number\">172.31</span>.26.40 ceph-02\n<span class=\"token number\">172.31</span>.24.19 ceph-03\n\n\n\n<span class=\"token comment\"># 安装 docker</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> apt-transport-https  ca-certificates  <span class=\"token function\">curl</span>  software-properties-common gnupg1 gnupg2\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-fsSL</span> https://download.docker.com/linux/ubuntu/gpg <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> apt-key <span class=\"token function\">add</span> -\napt-key fingerprint 0EBFCD88\n<span class=\"token function\">sudo</span> add-apt-repository    <span class=\"token string\">\"deb [arch=amd64] https://download.docker.com/linux/ubuntu <span class=\"token variable\"><span class=\"token variable\">$(</span>lsb_release <span class=\"token parameter variable\">-cs</span><span class=\"token variable\">)</span></span> stable\"</span>\n<span class=\"token function\">apt-get</span> update\n<span class=\"token function\">apt-get</span> <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> docker-ce\n\n\n<span class=\"token comment\"># 下载</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">--silent</span> --remote-name <span class=\"token parameter variable\">--location</span> https://github.com/ceph/ceph/raw/quincy/src/cephadm/cephadm\n<span class=\"token function\">chmod</span> +x cephadm\n\n./cephadm add-repo <span class=\"token parameter variable\">--release</span> quincy\n\n./cephadm <span class=\"token function\">install</span>\n<span class=\"token function\">which</span> cephadm\n\ncephadm shell\ncephadm shell -- ceph <span class=\"token parameter variable\">-s</span>\n\ncephadm bootstrap --mon-ip *<span class=\"token operator\">&lt;</span>mon-ip<span class=\"token operator\">></span>*\ncephadm add-repo <span class=\"token parameter variable\">--release</span> quincy\ncephadm <span class=\"token function\">install</span> ceph-common\nceph <span class=\"token parameter variable\">-v</span>\nceph status\n\nceph orch <span class=\"token function\">host</span> label <span class=\"token function\">add</span> *<span class=\"token operator\">&lt;</span>host<span class=\"token operator\">></span>* _admin\n\nssh-copy-id <span class=\"token parameter variable\">-f</span> <span class=\"token parameter variable\">-i</span> /etc/ceph/ceph.pub root@ceph-02\nssh-copy-id <span class=\"token parameter variable\">-f</span> <span class=\"token parameter variable\">-i</span> /etc/ceph/ceph.pub root@ceph-03\n\nceph orch <span class=\"token function\">host</span> <span class=\"token function\">add</span> ip-172-31-26-40 <span class=\"token number\">172.31</span>.26.40 <span class=\"token parameter variable\">--labels</span> _admin\nceph orch <span class=\"token function\">host</span> <span class=\"token function\">add</span> ip-172-31-24-19 <span class=\"token number\">172.31</span>.24.19 <span class=\"token parameter variable\">--labels</span> _admin\n\nceph orch apply osd --all-available-devices\n\n\nceph fs volume create fs-01 <span class=\"token parameter variable\">--placement</span><span class=\"token operator\">=</span><span class=\"token string\">\"ip-172-31-18-113\"</span>\n<span class=\"token function\">stat</span> /sbin/mount.ceph\n\n<span class=\"token function\">mount</span> <span class=\"token parameter variable\">-t</span> ceph cephuser@.fs-01<span class=\"token operator\">=</span>/ <span class=\"token parameter variable\">-o</span> <span class=\"token assign-left variable\">secret</span><span class=\"token operator\">=</span>AQCR52Rjyuu7ChAAzZs+tBmFrp3bGvYAHZHwJg<span class=\"token operator\">==</span>\n\n<span class=\"token comment\"># 挂载cephfs 前提条件</span>\n<span class=\"token function\">ssh</span> <span class=\"token punctuation\">&#123;</span>user<span class=\"token punctuation\">&#125;</span>@<span class=\"token punctuation\">&#123;</span>mon-host<span class=\"token punctuation\">&#125;</span> <span class=\"token string\">\"sudo ceph config generate-minimal-conf\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/ceph/ceph.conf\n<span class=\"token function\">chmod</span> <span class=\"token number\">644</span> /etc/ceph/ceph.conf\n<span class=\"token function\">ssh</span> <span class=\"token punctuation\">&#123;</span>user<span class=\"token punctuation\">&#125;</span>@<span class=\"token punctuation\">&#123;</span>mon-host<span class=\"token punctuation\">&#125;</span> <span class=\"token string\">\"sudo ceph fs authorize cephfs client.djx / rw\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/ceph/ceph.client.foo.keyring\n<span class=\"token function\">chmod</span> <span class=\"token number\">600</span> /etc/ceph/ceph.client.foo.keyring\n\n<span class=\"token comment\"># 挂载 cephfs</span>\n<span class=\"token function\">mount</span> <span class=\"token parameter variable\">-t</span> ceph djx@f97eeb7c-5bed-11ed-9dfb-05518952193e.fs-01<span class=\"token operator\">=</span>/ /mnt/fs-01 <span class=\"token parameter variable\">-o</span> <span class=\"token assign-left variable\">mon_addr</span><span class=\"token operator\">=</span><span class=\"token number\">172.31</span>.18.113:6789/172.31.26.40:6789/172.31.24.19:6789,secret<span class=\"token operator\">=</span>AQCR52Rjyuu7ChAAzZs+tBmFrp3bGvYAHZHwJg<span class=\"token operator\">==</span>\n\n\n<span class=\"token comment\"># 操作服务</span>\nceph orch <span class=\"token operator\">&lt;</span>start<span class=\"token operator\">|</span>stop<span class=\"token operator\">|</span>restart<span class=\"token operator\">|</span>redeploy<span class=\"token operator\">|</span>reconfig<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>service_name<span class=\"token operator\">></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"title":"vi 常用命令","toc":true,"date":"2021-07-31T11:21:00.000Z","updated":"2021-07-31T11:21:00.000Z","cover":"/img/default_cover/geomeric10.png","_content":"\n## Vi 常用命令\n\n### 进入 vi 的命令\n\n|         命令          | 描述                                              |\n| :-------------------: | ------------------------------------------------- |\n|      vi filename      | 打开或新建文件，并将光标置于第一行首              |\n|    vi +n filename     | 打开文件，并将光标置于第 n 行首                   |\n|     vi + filename     | 打开文件，并将光标置于最后一行首                  |\n| vi +/pattern filename | 打开文件，并将光标置于第一个与 pattern 匹配的串处 |\n|    vi -r filename     | 在上次正用 vi 编辑时发生系统崩溃，恢复 filename   |\n| vi filename….filename | 打开多个文件，依次进行编辑                        |\n\n<!-- more -->\n\n### 移动光标类命令\n\n|    命令     | 描述                             |\n| :---------: | -------------------------------- |\n|      h      | 光标左移一个字符                 |\n|      l      | 光标右移一个字符                 |\n|    space    | 光标右移一个字符                 |\n|  Backspace  | 光标左移一个字符                 |\n| k 或 Ctrl+p | 光标上移一行                     |\n| j 或 Ctrl+n | 光标下移一行                     |\n|    Enter    | 光标下移一行                     |\n|   w 或 W    | 光标右移一个字至字首             |\n|   b 或 B    | 光标左移一个字至字首             |\n|   e 或 E    | 光标右移一个字至字尾             |\n|      (      | 光标移至句首                     |\n|      )      | 光标移至句尾                     |\n|      {      | 光标移至段落开头                 |\n|      }      | 光标移至段落结尾                 |\n|     nG      | 光标移至第 n 行首                |\n|      G      | 到最后一行                       |\n|     n+      | 光标下移 n 行                    |\n|     n-      | 光标上移 n 行                    |\n|     n$      | 光标移至第 n 行尾                |\n|      H      | 光标移至屏幕顶行                 |\n|      M      | 光标移至屏幕中间行               |\n|      L      | 光标移至屏幕最后行               |\n|      0      | （注意是数字零）光标移至当前行首 |\n|      $      | 光标移至当前行尾                 |\n\n### 屏幕翻滚类命令\n\n|   命令    | 描述                                                   |\n| :-------: | ------------------------------------------------------ |\n|  Ctrl+u   | 向文件首翻半屏                                         |\n| Ctrl ＋ b | 向文件首翻一屏                                         |\n|  Ctrl+d   | 向文件尾翻半屏                                         |\n|  Ctrl+f   | 向文件尾翻一屏                                         |\n|    nz     | 将第 n 行滚至屏幕顶部，不指定 n 时将当前行滚至屏幕顶部 |\n\n### 插入文本类命令\n\n|    命令    | 描述                                                 |\n| :--------: | ---------------------------------------------------- |\n|     i      | 在光标前                                             |\n|     I      | 在当前行首                                           |\n|     a      | 光标后                                               |\n|     A      | 在当前行尾                                           |\n|     o      | 在当前行之下新开一行                                 |\n|     O      | 在当前行之上新开一行                                 |\n|     r      | 替换当前字符                                         |\n|     R      | 替换当前字符及其后的字符，直至按 ESC 键              |\n|     s      | 从当前光标位置处开始，以输入的文本替代指定数目的字符 |\n|     S      | 删除指定数目的行，并以所输入文本代替之               |\n| ncw 或 nCW | 修改指定数目的字                                     |\n|    nCC     | 修改指定数目的行                                     |\n\n### 删除命令\n\n|    命令    | 描述                                            |\n| :--------: | ----------------------------------------------- |\n| ndw 或 ndW | 删除光标处开始及其后的 n-1 个字                 |\n|     do     | 删至行首                                        |\n|     d$     | 删至行尾                                        |\n|    ndd     | 删除当前行及其后 n-1 行                         |\n|   x 或 X   | 删除一个字符，x 删除光标后的，而 X 删除光标前的 |\n|   Ctrl+u   | 删除输入方式下所输入的文本                      |\n\n### 搜索及替换命令\n\n|       命令       | 描述                                   |\n| :--------------: | -------------------------------------- |\n|     /pattern     | 从光标开始处向文件尾搜索 pattern       |\n|     ?pattern     | 从光标开始处向文件首搜索 pattern       |\n|        n         | 在同一方向重复上一次搜索命令           |\n|        N         | 在反方向上重复上一次搜索命令           |\n|   ：s/p1/p2/g    | 将当前行中所有 p1 均用 p2 替代         |\n| ：n1,n2s/p1/p2/g | 将第 n1 至 n2 行中所有 p1 均用 p2 替代 |\n|  ：g/p1/s//p2/g  | 将文件中所有 p1 均用 p2 替换           |\n\n### 选项设置\n\n|    命令    | 描述                                                 |\n| :--------: | ---------------------------------------------------- |\n|    all     | 列出所有选项设置情况                                 |\n|    term    | 设置终端类型                                         |\n| ignorance  | 在搜索中忽略大小写                                   |\n|    list    | 显示制表位(Ctrl+I)和行尾标志（$)                     |\n|   number   | 显示行号                                             |\n|   report   | 显示由面向行的命令修改过的数目                       |\n|   terse    | 显示简短的警告信息                                   |\n|    warn    | 在转到别的文件时若没保存当前文件则显示 NO write 信息 |\n|  nomagic   | 允许在搜索模式中，使用前面不带“\\”的特殊字符          |\n| nowrapscan | 禁止 vi 在搜索到达文件两端时，又从另一端开始         |\n|    mesg    | 允许 vi 显示其他用户用 write 写到自己终端上的信息    |\n\n### 最后行方式命令\n\n|       命令        | 描述                                                                                                              |\n| :---------------: | ----------------------------------------------------------------------------------------------------------------- |\n|   ：n1,n2 co n3   | 将 n1 行到 n2 行之间的内容拷贝到第 n3 行下                                                                        |\n|   ：n1,n2 m n3    | 将 n1 行到 n2 行之间的内容移至到第 n3 行下                                                                        |\n|     ：n1,n2 d     | 将 n1 行到 n2 行之间的内容删除                                                                                    |\n|        ：w        | 保存当前文件                                                                                                      |\n|   ：e filename    | 打开文件 filename 进行编辑                                                                                        |\n|        ：x        | 保存当前文件并退出                                                                                                |\n|        ：q        | 退出 vi                                                                                                           |\n|       ：q!        | 不保存文件并退出 vi                                                                                               |\n|    ：!command     | 执行 shell 命令 command                                                                                           |\n| ：n1,n2 w!command | 将文件中 n1 行至 n2 行的内容作为 command 的输入并执行之，若不指定 n1，n2，则表示将整个文件内容作为 command 的输入 |\n|    ：r!command    | 将命令 command 的输出结果放到当前行                                                                               |\n\n### 寄存器操作\n\n| 命令  | 描述                                                                             |\n| :---: | -------------------------------------------------------------------------------- |\n| “?nyy | 将当前行及其下 n 行的内容保存到寄存器？中，其中?为一个字母，n 为一个数字         |\n| “?nyw | 将当前行及其下 n 个字保存到寄存器？中，其中?为一个字母，n 为一个数字             |\n| “?nyl | 将当前行及其下 n 个字符保存到寄存器？中，其中?为一个字母，n 为一个数字           |\n|  “?p  | 取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字 |\n|  ndd  | 将当前行及其下共 n 行文本删除，并将所删内容放到 1 号删除寄存器中                 |\n\n### 保存退出\n\n|    命令     | 描述                           |\n| :---------: | ------------------------------ |\n|     zz      | 保存并退出                     |\n| :w filename | 写入文件                       |\n|     :W      | 写入文件                       |\n|     :x      | 保存(如果当前文件修改过)并退出 |\n|     :q!     | 不保存文件，直接退出           |\n|     :q      | 退出 vi                        |\n","source":"_posts/linux/vi 常用命令.md","raw":"---\ntitle: vi 常用命令\ntags: vi\ncategories: linux\ntoc: true\ndate: 2021-07-31 19:21:00\nupdated: 2021-07-31 19:21:00\ncover:\n---\n\n## Vi 常用命令\n\n### 进入 vi 的命令\n\n|         命令          | 描述                                              |\n| :-------------------: | ------------------------------------------------- |\n|      vi filename      | 打开或新建文件，并将光标置于第一行首              |\n|    vi +n filename     | 打开文件，并将光标置于第 n 行首                   |\n|     vi + filename     | 打开文件，并将光标置于最后一行首                  |\n| vi +/pattern filename | 打开文件，并将光标置于第一个与 pattern 匹配的串处 |\n|    vi -r filename     | 在上次正用 vi 编辑时发生系统崩溃，恢复 filename   |\n| vi filename….filename | 打开多个文件，依次进行编辑                        |\n\n<!-- more -->\n\n### 移动光标类命令\n\n|    命令     | 描述                             |\n| :---------: | -------------------------------- |\n|      h      | 光标左移一个字符                 |\n|      l      | 光标右移一个字符                 |\n|    space    | 光标右移一个字符                 |\n|  Backspace  | 光标左移一个字符                 |\n| k 或 Ctrl+p | 光标上移一行                     |\n| j 或 Ctrl+n | 光标下移一行                     |\n|    Enter    | 光标下移一行                     |\n|   w 或 W    | 光标右移一个字至字首             |\n|   b 或 B    | 光标左移一个字至字首             |\n|   e 或 E    | 光标右移一个字至字尾             |\n|      (      | 光标移至句首                     |\n|      )      | 光标移至句尾                     |\n|      {      | 光标移至段落开头                 |\n|      }      | 光标移至段落结尾                 |\n|     nG      | 光标移至第 n 行首                |\n|      G      | 到最后一行                       |\n|     n+      | 光标下移 n 行                    |\n|     n-      | 光标上移 n 行                    |\n|     n$      | 光标移至第 n 行尾                |\n|      H      | 光标移至屏幕顶行                 |\n|      M      | 光标移至屏幕中间行               |\n|      L      | 光标移至屏幕最后行               |\n|      0      | （注意是数字零）光标移至当前行首 |\n|      $      | 光标移至当前行尾                 |\n\n### 屏幕翻滚类命令\n\n|   命令    | 描述                                                   |\n| :-------: | ------------------------------------------------------ |\n|  Ctrl+u   | 向文件首翻半屏                                         |\n| Ctrl ＋ b | 向文件首翻一屏                                         |\n|  Ctrl+d   | 向文件尾翻半屏                                         |\n|  Ctrl+f   | 向文件尾翻一屏                                         |\n|    nz     | 将第 n 行滚至屏幕顶部，不指定 n 时将当前行滚至屏幕顶部 |\n\n### 插入文本类命令\n\n|    命令    | 描述                                                 |\n| :--------: | ---------------------------------------------------- |\n|     i      | 在光标前                                             |\n|     I      | 在当前行首                                           |\n|     a      | 光标后                                               |\n|     A      | 在当前行尾                                           |\n|     o      | 在当前行之下新开一行                                 |\n|     O      | 在当前行之上新开一行                                 |\n|     r      | 替换当前字符                                         |\n|     R      | 替换当前字符及其后的字符，直至按 ESC 键              |\n|     s      | 从当前光标位置处开始，以输入的文本替代指定数目的字符 |\n|     S      | 删除指定数目的行，并以所输入文本代替之               |\n| ncw 或 nCW | 修改指定数目的字                                     |\n|    nCC     | 修改指定数目的行                                     |\n\n### 删除命令\n\n|    命令    | 描述                                            |\n| :--------: | ----------------------------------------------- |\n| ndw 或 ndW | 删除光标处开始及其后的 n-1 个字                 |\n|     do     | 删至行首                                        |\n|     d$     | 删至行尾                                        |\n|    ndd     | 删除当前行及其后 n-1 行                         |\n|   x 或 X   | 删除一个字符，x 删除光标后的，而 X 删除光标前的 |\n|   Ctrl+u   | 删除输入方式下所输入的文本                      |\n\n### 搜索及替换命令\n\n|       命令       | 描述                                   |\n| :--------------: | -------------------------------------- |\n|     /pattern     | 从光标开始处向文件尾搜索 pattern       |\n|     ?pattern     | 从光标开始处向文件首搜索 pattern       |\n|        n         | 在同一方向重复上一次搜索命令           |\n|        N         | 在反方向上重复上一次搜索命令           |\n|   ：s/p1/p2/g    | 将当前行中所有 p1 均用 p2 替代         |\n| ：n1,n2s/p1/p2/g | 将第 n1 至 n2 行中所有 p1 均用 p2 替代 |\n|  ：g/p1/s//p2/g  | 将文件中所有 p1 均用 p2 替换           |\n\n### 选项设置\n\n|    命令    | 描述                                                 |\n| :--------: | ---------------------------------------------------- |\n|    all     | 列出所有选项设置情况                                 |\n|    term    | 设置终端类型                                         |\n| ignorance  | 在搜索中忽略大小写                                   |\n|    list    | 显示制表位(Ctrl+I)和行尾标志（$)                     |\n|   number   | 显示行号                                             |\n|   report   | 显示由面向行的命令修改过的数目                       |\n|   terse    | 显示简短的警告信息                                   |\n|    warn    | 在转到别的文件时若没保存当前文件则显示 NO write 信息 |\n|  nomagic   | 允许在搜索模式中，使用前面不带“\\”的特殊字符          |\n| nowrapscan | 禁止 vi 在搜索到达文件两端时，又从另一端开始         |\n|    mesg    | 允许 vi 显示其他用户用 write 写到自己终端上的信息    |\n\n### 最后行方式命令\n\n|       命令        | 描述                                                                                                              |\n| :---------------: | ----------------------------------------------------------------------------------------------------------------- |\n|   ：n1,n2 co n3   | 将 n1 行到 n2 行之间的内容拷贝到第 n3 行下                                                                        |\n|   ：n1,n2 m n3    | 将 n1 行到 n2 行之间的内容移至到第 n3 行下                                                                        |\n|     ：n1,n2 d     | 将 n1 行到 n2 行之间的内容删除                                                                                    |\n|        ：w        | 保存当前文件                                                                                                      |\n|   ：e filename    | 打开文件 filename 进行编辑                                                                                        |\n|        ：x        | 保存当前文件并退出                                                                                                |\n|        ：q        | 退出 vi                                                                                                           |\n|       ：q!        | 不保存文件并退出 vi                                                                                               |\n|    ：!command     | 执行 shell 命令 command                                                                                           |\n| ：n1,n2 w!command | 将文件中 n1 行至 n2 行的内容作为 command 的输入并执行之，若不指定 n1，n2，则表示将整个文件内容作为 command 的输入 |\n|    ：r!command    | 将命令 command 的输出结果放到当前行                                                                               |\n\n### 寄存器操作\n\n| 命令  | 描述                                                                             |\n| :---: | -------------------------------------------------------------------------------- |\n| “?nyy | 将当前行及其下 n 行的内容保存到寄存器？中，其中?为一个字母，n 为一个数字         |\n| “?nyw | 将当前行及其下 n 个字保存到寄存器？中，其中?为一个字母，n 为一个数字             |\n| “?nyl | 将当前行及其下 n 个字符保存到寄存器？中，其中?为一个字母，n 为一个数字           |\n|  “?p  | 取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字 |\n|  ndd  | 将当前行及其下共 n 行文本删除，并将所删内容放到 1 号删除寄存器中                 |\n\n### 保存退出\n\n|    命令     | 描述                           |\n| :---------: | ------------------------------ |\n|     zz      | 保存并退出                     |\n| :w filename | 写入文件                       |\n|     :W      | 写入文件                       |\n|     :x      | 保存(如果当前文件修改过)并退出 |\n|     :q!     | 不保存文件，直接退出           |\n|     :q      | 退出 vi                        |\n","slug":"linux/vi 常用命令","published":1,"_id":"clny08vf800095ovf5oipeh5f","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"Vi-常用命令\"><a href=\"#Vi-常用命令\" class=\"headerlink\" title=\"Vi 常用命令\"></a>Vi 常用命令</h2><h3 id=\"进入-vi-的命令\"><a href=\"#进入-vi-的命令\" class=\"headerlink\" title=\"进入 vi 的命令\"></a>进入 vi 的命令</h3><table>\n<thead>\n<tr>\n<th align=\"center\">命令</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">vi filename</td>\n<td>打开或新建文件，并将光标置于第一行首</td>\n</tr>\n<tr>\n<td align=\"center\">vi +n filename</td>\n<td>打开文件，并将光标置于第 n 行首</td>\n</tr>\n<tr>\n<td align=\"center\">vi + filename</td>\n<td>打开文件，并将光标置于最后一行首</td>\n</tr>\n<tr>\n<td align=\"center\">vi +&#x2F;pattern filename</td>\n<td>打开文件，并将光标置于第一个与 pattern 匹配的串处</td>\n</tr>\n<tr>\n<td align=\"center\">vi -r filename</td>\n<td>在上次正用 vi 编辑时发生系统崩溃，恢复 filename</td>\n</tr>\n<tr>\n<td align=\"center\">vi filename….filename</td>\n<td>打开多个文件，依次进行编辑</td>\n</tr>\n</tbody></table>\n<span id=\"more\"></span>\n\n<h3 id=\"移动光标类命令\"><a href=\"#移动光标类命令\" class=\"headerlink\" title=\"移动光标类命令\"></a>移动光标类命令</h3><table>\n<thead>\n<tr>\n<th align=\"center\">命令</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">h</td>\n<td>光标左移一个字符</td>\n</tr>\n<tr>\n<td align=\"center\">l</td>\n<td>光标右移一个字符</td>\n</tr>\n<tr>\n<td align=\"center\">space</td>\n<td>光标右移一个字符</td>\n</tr>\n<tr>\n<td align=\"center\">Backspace</td>\n<td>光标左移一个字符</td>\n</tr>\n<tr>\n<td align=\"center\">k 或 Ctrl+p</td>\n<td>光标上移一行</td>\n</tr>\n<tr>\n<td align=\"center\">j 或 Ctrl+n</td>\n<td>光标下移一行</td>\n</tr>\n<tr>\n<td align=\"center\">Enter</td>\n<td>光标下移一行</td>\n</tr>\n<tr>\n<td align=\"center\">w 或 W</td>\n<td>光标右移一个字至字首</td>\n</tr>\n<tr>\n<td align=\"center\">b 或 B</td>\n<td>光标左移一个字至字首</td>\n</tr>\n<tr>\n<td align=\"center\">e 或 E</td>\n<td>光标右移一个字至字尾</td>\n</tr>\n<tr>\n<td align=\"center\">(</td>\n<td>光标移至句首</td>\n</tr>\n<tr>\n<td align=\"center\">)</td>\n<td>光标移至句尾</td>\n</tr>\n<tr>\n<td align=\"center\">{</td>\n<td>光标移至段落开头</td>\n</tr>\n<tr>\n<td align=\"center\">}</td>\n<td>光标移至段落结尾</td>\n</tr>\n<tr>\n<td align=\"center\">nG</td>\n<td>光标移至第 n 行首</td>\n</tr>\n<tr>\n<td align=\"center\">G</td>\n<td>到最后一行</td>\n</tr>\n<tr>\n<td align=\"center\">n+</td>\n<td>光标下移 n 行</td>\n</tr>\n<tr>\n<td align=\"center\">n-</td>\n<td>光标上移 n 行</td>\n</tr>\n<tr>\n<td align=\"center\">n$</td>\n<td>光标移至第 n 行尾</td>\n</tr>\n<tr>\n<td align=\"center\">H</td>\n<td>光标移至屏幕顶行</td>\n</tr>\n<tr>\n<td align=\"center\">M</td>\n<td>光标移至屏幕中间行</td>\n</tr>\n<tr>\n<td align=\"center\">L</td>\n<td>光标移至屏幕最后行</td>\n</tr>\n<tr>\n<td align=\"center\">0</td>\n<td>（注意是数字零）光标移至当前行首</td>\n</tr>\n<tr>\n<td align=\"center\">$</td>\n<td>光标移至当前行尾</td>\n</tr>\n</tbody></table>\n<h3 id=\"屏幕翻滚类命令\"><a href=\"#屏幕翻滚类命令\" class=\"headerlink\" title=\"屏幕翻滚类命令\"></a>屏幕翻滚类命令</h3><table>\n<thead>\n<tr>\n<th align=\"center\">命令</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Ctrl+u</td>\n<td>向文件首翻半屏</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl ＋ b</td>\n<td>向文件首翻一屏</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl+d</td>\n<td>向文件尾翻半屏</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl+f</td>\n<td>向文件尾翻一屏</td>\n</tr>\n<tr>\n<td align=\"center\">nz</td>\n<td>将第 n 行滚至屏幕顶部，不指定 n 时将当前行滚至屏幕顶部</td>\n</tr>\n</tbody></table>\n<h3 id=\"插入文本类命令\"><a href=\"#插入文本类命令\" class=\"headerlink\" title=\"插入文本类命令\"></a>插入文本类命令</h3><table>\n<thead>\n<tr>\n<th align=\"center\">命令</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">i</td>\n<td>在光标前</td>\n</tr>\n<tr>\n<td align=\"center\">I</td>\n<td>在当前行首</td>\n</tr>\n<tr>\n<td align=\"center\">a</td>\n<td>光标后</td>\n</tr>\n<tr>\n<td align=\"center\">A</td>\n<td>在当前行尾</td>\n</tr>\n<tr>\n<td align=\"center\">o</td>\n<td>在当前行之下新开一行</td>\n</tr>\n<tr>\n<td align=\"center\">O</td>\n<td>在当前行之上新开一行</td>\n</tr>\n<tr>\n<td align=\"center\">r</td>\n<td>替换当前字符</td>\n</tr>\n<tr>\n<td align=\"center\">R</td>\n<td>替换当前字符及其后的字符，直至按 ESC 键</td>\n</tr>\n<tr>\n<td align=\"center\">s</td>\n<td>从当前光标位置处开始，以输入的文本替代指定数目的字符</td>\n</tr>\n<tr>\n<td align=\"center\">S</td>\n<td>删除指定数目的行，并以所输入文本代替之</td>\n</tr>\n<tr>\n<td align=\"center\">ncw 或 nCW</td>\n<td>修改指定数目的字</td>\n</tr>\n<tr>\n<td align=\"center\">nCC</td>\n<td>修改指定数目的行</td>\n</tr>\n</tbody></table>\n<h3 id=\"删除命令\"><a href=\"#删除命令\" class=\"headerlink\" title=\"删除命令\"></a>删除命令</h3><table>\n<thead>\n<tr>\n<th align=\"center\">命令</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">ndw 或 ndW</td>\n<td>删除光标处开始及其后的 n-1 个字</td>\n</tr>\n<tr>\n<td align=\"center\">do</td>\n<td>删至行首</td>\n</tr>\n<tr>\n<td align=\"center\">d$</td>\n<td>删至行尾</td>\n</tr>\n<tr>\n<td align=\"center\">ndd</td>\n<td>删除当前行及其后 n-1 行</td>\n</tr>\n<tr>\n<td align=\"center\">x 或 X</td>\n<td>删除一个字符，x 删除光标后的，而 X 删除光标前的</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl+u</td>\n<td>删除输入方式下所输入的文本</td>\n</tr>\n</tbody></table>\n<h3 id=\"搜索及替换命令\"><a href=\"#搜索及替换命令\" class=\"headerlink\" title=\"搜索及替换命令\"></a>搜索及替换命令</h3><table>\n<thead>\n<tr>\n<th align=\"center\">命令</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">&#x2F;pattern</td>\n<td>从光标开始处向文件尾搜索 pattern</td>\n</tr>\n<tr>\n<td align=\"center\">?pattern</td>\n<td>从光标开始处向文件首搜索 pattern</td>\n</tr>\n<tr>\n<td align=\"center\">n</td>\n<td>在同一方向重复上一次搜索命令</td>\n</tr>\n<tr>\n<td align=\"center\">N</td>\n<td>在反方向上重复上一次搜索命令</td>\n</tr>\n<tr>\n<td align=\"center\">：s&#x2F;p1&#x2F;p2&#x2F;g</td>\n<td>将当前行中所有 p1 均用 p2 替代</td>\n</tr>\n<tr>\n<td align=\"center\">：n1,n2s&#x2F;p1&#x2F;p2&#x2F;g</td>\n<td>将第 n1 至 n2 行中所有 p1 均用 p2 替代</td>\n</tr>\n<tr>\n<td align=\"center\">：g&#x2F;p1&#x2F;s&#x2F;&#x2F;p2&#x2F;g</td>\n<td>将文件中所有 p1 均用 p2 替换</td>\n</tr>\n</tbody></table>\n<h3 id=\"选项设置\"><a href=\"#选项设置\" class=\"headerlink\" title=\"选项设置\"></a>选项设置</h3><table>\n<thead>\n<tr>\n<th align=\"center\">命令</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">all</td>\n<td>列出所有选项设置情况</td>\n</tr>\n<tr>\n<td align=\"center\">term</td>\n<td>设置终端类型</td>\n</tr>\n<tr>\n<td align=\"center\">ignorance</td>\n<td>在搜索中忽略大小写</td>\n</tr>\n<tr>\n<td align=\"center\">list</td>\n<td>显示制表位(Ctrl+I)和行尾标志（$)</td>\n</tr>\n<tr>\n<td align=\"center\">number</td>\n<td>显示行号</td>\n</tr>\n<tr>\n<td align=\"center\">report</td>\n<td>显示由面向行的命令修改过的数目</td>\n</tr>\n<tr>\n<td align=\"center\">terse</td>\n<td>显示简短的警告信息</td>\n</tr>\n<tr>\n<td align=\"center\">warn</td>\n<td>在转到别的文件时若没保存当前文件则显示 NO write 信息</td>\n</tr>\n<tr>\n<td align=\"center\">nomagic</td>\n<td>允许在搜索模式中，使用前面不带“\\”的特殊字符</td>\n</tr>\n<tr>\n<td align=\"center\">nowrapscan</td>\n<td>禁止 vi 在搜索到达文件两端时，又从另一端开始</td>\n</tr>\n<tr>\n<td align=\"center\">mesg</td>\n<td>允许 vi 显示其他用户用 write 写到自己终端上的信息</td>\n</tr>\n</tbody></table>\n<h3 id=\"最后行方式命令\"><a href=\"#最后行方式命令\" class=\"headerlink\" title=\"最后行方式命令\"></a>最后行方式命令</h3><table>\n<thead>\n<tr>\n<th align=\"center\">命令</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">：n1,n2 co n3</td>\n<td>将 n1 行到 n2 行之间的内容拷贝到第 n3 行下</td>\n</tr>\n<tr>\n<td align=\"center\">：n1,n2 m n3</td>\n<td>将 n1 行到 n2 行之间的内容移至到第 n3 行下</td>\n</tr>\n<tr>\n<td align=\"center\">：n1,n2 d</td>\n<td>将 n1 行到 n2 行之间的内容删除</td>\n</tr>\n<tr>\n<td align=\"center\">：w</td>\n<td>保存当前文件</td>\n</tr>\n<tr>\n<td align=\"center\">：e filename</td>\n<td>打开文件 filename 进行编辑</td>\n</tr>\n<tr>\n<td align=\"center\">：x</td>\n<td>保存当前文件并退出</td>\n</tr>\n<tr>\n<td align=\"center\">：q</td>\n<td>退出 vi</td>\n</tr>\n<tr>\n<td align=\"center\">：q!</td>\n<td>不保存文件并退出 vi</td>\n</tr>\n<tr>\n<td align=\"center\">：!command</td>\n<td>执行 shell 命令 command</td>\n</tr>\n<tr>\n<td align=\"center\">：n1,n2 w!command</td>\n<td>将文件中 n1 行至 n2 行的内容作为 command 的输入并执行之，若不指定 n1，n2，则表示将整个文件内容作为 command 的输入</td>\n</tr>\n<tr>\n<td align=\"center\">：r!command</td>\n<td>将命令 command 的输出结果放到当前行</td>\n</tr>\n</tbody></table>\n<h3 id=\"寄存器操作\"><a href=\"#寄存器操作\" class=\"headerlink\" title=\"寄存器操作\"></a>寄存器操作</h3><table>\n<thead>\n<tr>\n<th align=\"center\">命令</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">“?nyy</td>\n<td>将当前行及其下 n 行的内容保存到寄存器？中，其中?为一个字母，n 为一个数字</td>\n</tr>\n<tr>\n<td align=\"center\">“?nyw</td>\n<td>将当前行及其下 n 个字保存到寄存器？中，其中?为一个字母，n 为一个数字</td>\n</tr>\n<tr>\n<td align=\"center\">“?nyl</td>\n<td>将当前行及其下 n 个字符保存到寄存器？中，其中?为一个字母，n 为一个数字</td>\n</tr>\n<tr>\n<td align=\"center\">“?p</td>\n<td>取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字</td>\n</tr>\n<tr>\n<td align=\"center\">ndd</td>\n<td>将当前行及其下共 n 行文本删除，并将所删内容放到 1 号删除寄存器中</td>\n</tr>\n</tbody></table>\n<h3 id=\"保存退出\"><a href=\"#保存退出\" class=\"headerlink\" title=\"保存退出\"></a>保存退出</h3><table>\n<thead>\n<tr>\n<th align=\"center\">命令</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">zz</td>\n<td>保存并退出</td>\n</tr>\n<tr>\n<td align=\"center\">:w filename</td>\n<td>写入文件</td>\n</tr>\n<tr>\n<td align=\"center\">:W</td>\n<td>写入文件</td>\n</tr>\n<tr>\n<td align=\"center\">:x</td>\n<td>保存(如果当前文件修改过)并退出</td>\n</tr>\n<tr>\n<td align=\"center\">:q!</td>\n<td>不保存文件，直接退出</td>\n</tr>\n<tr>\n<td align=\"center\">:q</td>\n<td>退出 vi</td>\n</tr>\n</tbody></table>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}},"cover_type":"img","excerpt":"<h2 id=\"Vi-常用命令\"><a href=\"#Vi-常用命令\" class=\"headerlink\" title=\"Vi 常用命令\"></a>Vi 常用命令</h2><h3 id=\"进入-vi-的命令\"><a href=\"#进入-vi-的命令\" class=\"headerlink\" title=\"进入 vi 的命令\"></a>进入 vi 的命令</h3><table>\n<thead>\n<tr>\n<th align=\"center\">命令</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">vi filename</td>\n<td>打开或新建文件，并将光标置于第一行首</td>\n</tr>\n<tr>\n<td align=\"center\">vi +n filename</td>\n<td>打开文件，并将光标置于第 n 行首</td>\n</tr>\n<tr>\n<td align=\"center\">vi + filename</td>\n<td>打开文件，并将光标置于最后一行首</td>\n</tr>\n<tr>\n<td align=\"center\">vi +&#x2F;pattern filename</td>\n<td>打开文件，并将光标置于第一个与 pattern 匹配的串处</td>\n</tr>\n<tr>\n<td align=\"center\">vi -r filename</td>\n<td>在上次正用 vi 编辑时发生系统崩溃，恢复 filename</td>\n</tr>\n<tr>\n<td align=\"center\">vi filename….filename</td>\n<td>打开多个文件，依次进行编辑</td>\n</tr>\n</tbody></table>","more":"<h3 id=\"移动光标类命令\"><a href=\"#移动光标类命令\" class=\"headerlink\" title=\"移动光标类命令\"></a>移动光标类命令</h3><table>\n<thead>\n<tr>\n<th align=\"center\">命令</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">h</td>\n<td>光标左移一个字符</td>\n</tr>\n<tr>\n<td align=\"center\">l</td>\n<td>光标右移一个字符</td>\n</tr>\n<tr>\n<td align=\"center\">space</td>\n<td>光标右移一个字符</td>\n</tr>\n<tr>\n<td align=\"center\">Backspace</td>\n<td>光标左移一个字符</td>\n</tr>\n<tr>\n<td align=\"center\">k 或 Ctrl+p</td>\n<td>光标上移一行</td>\n</tr>\n<tr>\n<td align=\"center\">j 或 Ctrl+n</td>\n<td>光标下移一行</td>\n</tr>\n<tr>\n<td align=\"center\">Enter</td>\n<td>光标下移一行</td>\n</tr>\n<tr>\n<td align=\"center\">w 或 W</td>\n<td>光标右移一个字至字首</td>\n</tr>\n<tr>\n<td align=\"center\">b 或 B</td>\n<td>光标左移一个字至字首</td>\n</tr>\n<tr>\n<td align=\"center\">e 或 E</td>\n<td>光标右移一个字至字尾</td>\n</tr>\n<tr>\n<td align=\"center\">(</td>\n<td>光标移至句首</td>\n</tr>\n<tr>\n<td align=\"center\">)</td>\n<td>光标移至句尾</td>\n</tr>\n<tr>\n<td align=\"center\">{</td>\n<td>光标移至段落开头</td>\n</tr>\n<tr>\n<td align=\"center\">}</td>\n<td>光标移至段落结尾</td>\n</tr>\n<tr>\n<td align=\"center\">nG</td>\n<td>光标移至第 n 行首</td>\n</tr>\n<tr>\n<td align=\"center\">G</td>\n<td>到最后一行</td>\n</tr>\n<tr>\n<td align=\"center\">n+</td>\n<td>光标下移 n 行</td>\n</tr>\n<tr>\n<td align=\"center\">n-</td>\n<td>光标上移 n 行</td>\n</tr>\n<tr>\n<td align=\"center\">n$</td>\n<td>光标移至第 n 行尾</td>\n</tr>\n<tr>\n<td align=\"center\">H</td>\n<td>光标移至屏幕顶行</td>\n</tr>\n<tr>\n<td align=\"center\">M</td>\n<td>光标移至屏幕中间行</td>\n</tr>\n<tr>\n<td align=\"center\">L</td>\n<td>光标移至屏幕最后行</td>\n</tr>\n<tr>\n<td align=\"center\">0</td>\n<td>（注意是数字零）光标移至当前行首</td>\n</tr>\n<tr>\n<td align=\"center\">$</td>\n<td>光标移至当前行尾</td>\n</tr>\n</tbody></table>\n<h3 id=\"屏幕翻滚类命令\"><a href=\"#屏幕翻滚类命令\" class=\"headerlink\" title=\"屏幕翻滚类命令\"></a>屏幕翻滚类命令</h3><table>\n<thead>\n<tr>\n<th align=\"center\">命令</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Ctrl+u</td>\n<td>向文件首翻半屏</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl ＋ b</td>\n<td>向文件首翻一屏</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl+d</td>\n<td>向文件尾翻半屏</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl+f</td>\n<td>向文件尾翻一屏</td>\n</tr>\n<tr>\n<td align=\"center\">nz</td>\n<td>将第 n 行滚至屏幕顶部，不指定 n 时将当前行滚至屏幕顶部</td>\n</tr>\n</tbody></table>\n<h3 id=\"插入文本类命令\"><a href=\"#插入文本类命令\" class=\"headerlink\" title=\"插入文本类命令\"></a>插入文本类命令</h3><table>\n<thead>\n<tr>\n<th align=\"center\">命令</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">i</td>\n<td>在光标前</td>\n</tr>\n<tr>\n<td align=\"center\">I</td>\n<td>在当前行首</td>\n</tr>\n<tr>\n<td align=\"center\">a</td>\n<td>光标后</td>\n</tr>\n<tr>\n<td align=\"center\">A</td>\n<td>在当前行尾</td>\n</tr>\n<tr>\n<td align=\"center\">o</td>\n<td>在当前行之下新开一行</td>\n</tr>\n<tr>\n<td align=\"center\">O</td>\n<td>在当前行之上新开一行</td>\n</tr>\n<tr>\n<td align=\"center\">r</td>\n<td>替换当前字符</td>\n</tr>\n<tr>\n<td align=\"center\">R</td>\n<td>替换当前字符及其后的字符，直至按 ESC 键</td>\n</tr>\n<tr>\n<td align=\"center\">s</td>\n<td>从当前光标位置处开始，以输入的文本替代指定数目的字符</td>\n</tr>\n<tr>\n<td align=\"center\">S</td>\n<td>删除指定数目的行，并以所输入文本代替之</td>\n</tr>\n<tr>\n<td align=\"center\">ncw 或 nCW</td>\n<td>修改指定数目的字</td>\n</tr>\n<tr>\n<td align=\"center\">nCC</td>\n<td>修改指定数目的行</td>\n</tr>\n</tbody></table>\n<h3 id=\"删除命令\"><a href=\"#删除命令\" class=\"headerlink\" title=\"删除命令\"></a>删除命令</h3><table>\n<thead>\n<tr>\n<th align=\"center\">命令</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">ndw 或 ndW</td>\n<td>删除光标处开始及其后的 n-1 个字</td>\n</tr>\n<tr>\n<td align=\"center\">do</td>\n<td>删至行首</td>\n</tr>\n<tr>\n<td align=\"center\">d$</td>\n<td>删至行尾</td>\n</tr>\n<tr>\n<td align=\"center\">ndd</td>\n<td>删除当前行及其后 n-1 行</td>\n</tr>\n<tr>\n<td align=\"center\">x 或 X</td>\n<td>删除一个字符，x 删除光标后的，而 X 删除光标前的</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl+u</td>\n<td>删除输入方式下所输入的文本</td>\n</tr>\n</tbody></table>\n<h3 id=\"搜索及替换命令\"><a href=\"#搜索及替换命令\" class=\"headerlink\" title=\"搜索及替换命令\"></a>搜索及替换命令</h3><table>\n<thead>\n<tr>\n<th align=\"center\">命令</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">&#x2F;pattern</td>\n<td>从光标开始处向文件尾搜索 pattern</td>\n</tr>\n<tr>\n<td align=\"center\">?pattern</td>\n<td>从光标开始处向文件首搜索 pattern</td>\n</tr>\n<tr>\n<td align=\"center\">n</td>\n<td>在同一方向重复上一次搜索命令</td>\n</tr>\n<tr>\n<td align=\"center\">N</td>\n<td>在反方向上重复上一次搜索命令</td>\n</tr>\n<tr>\n<td align=\"center\">：s&#x2F;p1&#x2F;p2&#x2F;g</td>\n<td>将当前行中所有 p1 均用 p2 替代</td>\n</tr>\n<tr>\n<td align=\"center\">：n1,n2s&#x2F;p1&#x2F;p2&#x2F;g</td>\n<td>将第 n1 至 n2 行中所有 p1 均用 p2 替代</td>\n</tr>\n<tr>\n<td align=\"center\">：g&#x2F;p1&#x2F;s&#x2F;&#x2F;p2&#x2F;g</td>\n<td>将文件中所有 p1 均用 p2 替换</td>\n</tr>\n</tbody></table>\n<h3 id=\"选项设置\"><a href=\"#选项设置\" class=\"headerlink\" title=\"选项设置\"></a>选项设置</h3><table>\n<thead>\n<tr>\n<th align=\"center\">命令</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">all</td>\n<td>列出所有选项设置情况</td>\n</tr>\n<tr>\n<td align=\"center\">term</td>\n<td>设置终端类型</td>\n</tr>\n<tr>\n<td align=\"center\">ignorance</td>\n<td>在搜索中忽略大小写</td>\n</tr>\n<tr>\n<td align=\"center\">list</td>\n<td>显示制表位(Ctrl+I)和行尾标志（$)</td>\n</tr>\n<tr>\n<td align=\"center\">number</td>\n<td>显示行号</td>\n</tr>\n<tr>\n<td align=\"center\">report</td>\n<td>显示由面向行的命令修改过的数目</td>\n</tr>\n<tr>\n<td align=\"center\">terse</td>\n<td>显示简短的警告信息</td>\n</tr>\n<tr>\n<td align=\"center\">warn</td>\n<td>在转到别的文件时若没保存当前文件则显示 NO write 信息</td>\n</tr>\n<tr>\n<td align=\"center\">nomagic</td>\n<td>允许在搜索模式中，使用前面不带“\\”的特殊字符</td>\n</tr>\n<tr>\n<td align=\"center\">nowrapscan</td>\n<td>禁止 vi 在搜索到达文件两端时，又从另一端开始</td>\n</tr>\n<tr>\n<td align=\"center\">mesg</td>\n<td>允许 vi 显示其他用户用 write 写到自己终端上的信息</td>\n</tr>\n</tbody></table>\n<h3 id=\"最后行方式命令\"><a href=\"#最后行方式命令\" class=\"headerlink\" title=\"最后行方式命令\"></a>最后行方式命令</h3><table>\n<thead>\n<tr>\n<th align=\"center\">命令</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">：n1,n2 co n3</td>\n<td>将 n1 行到 n2 行之间的内容拷贝到第 n3 行下</td>\n</tr>\n<tr>\n<td align=\"center\">：n1,n2 m n3</td>\n<td>将 n1 行到 n2 行之间的内容移至到第 n3 行下</td>\n</tr>\n<tr>\n<td align=\"center\">：n1,n2 d</td>\n<td>将 n1 行到 n2 行之间的内容删除</td>\n</tr>\n<tr>\n<td align=\"center\">：w</td>\n<td>保存当前文件</td>\n</tr>\n<tr>\n<td align=\"center\">：e filename</td>\n<td>打开文件 filename 进行编辑</td>\n</tr>\n<tr>\n<td align=\"center\">：x</td>\n<td>保存当前文件并退出</td>\n</tr>\n<tr>\n<td align=\"center\">：q</td>\n<td>退出 vi</td>\n</tr>\n<tr>\n<td align=\"center\">：q!</td>\n<td>不保存文件并退出 vi</td>\n</tr>\n<tr>\n<td align=\"center\">：!command</td>\n<td>执行 shell 命令 command</td>\n</tr>\n<tr>\n<td align=\"center\">：n1,n2 w!command</td>\n<td>将文件中 n1 行至 n2 行的内容作为 command 的输入并执行之，若不指定 n1，n2，则表示将整个文件内容作为 command 的输入</td>\n</tr>\n<tr>\n<td align=\"center\">：r!command</td>\n<td>将命令 command 的输出结果放到当前行</td>\n</tr>\n</tbody></table>\n<h3 id=\"寄存器操作\"><a href=\"#寄存器操作\" class=\"headerlink\" title=\"寄存器操作\"></a>寄存器操作</h3><table>\n<thead>\n<tr>\n<th align=\"center\">命令</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">“?nyy</td>\n<td>将当前行及其下 n 行的内容保存到寄存器？中，其中?为一个字母，n 为一个数字</td>\n</tr>\n<tr>\n<td align=\"center\">“?nyw</td>\n<td>将当前行及其下 n 个字保存到寄存器？中，其中?为一个字母，n 为一个数字</td>\n</tr>\n<tr>\n<td align=\"center\">“?nyl</td>\n<td>将当前行及其下 n 个字符保存到寄存器？中，其中?为一个字母，n 为一个数字</td>\n</tr>\n<tr>\n<td align=\"center\">“?p</td>\n<td>取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字</td>\n</tr>\n<tr>\n<td align=\"center\">ndd</td>\n<td>将当前行及其下共 n 行文本删除，并将所删内容放到 1 号删除寄存器中</td>\n</tr>\n</tbody></table>\n<h3 id=\"保存退出\"><a href=\"#保存退出\" class=\"headerlink\" title=\"保存退出\"></a>保存退出</h3><table>\n<thead>\n<tr>\n<th align=\"center\">命令</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">zz</td>\n<td>保存并退出</td>\n</tr>\n<tr>\n<td align=\"center\">:w filename</td>\n<td>写入文件</td>\n</tr>\n<tr>\n<td align=\"center\">:W</td>\n<td>写入文件</td>\n</tr>\n<tr>\n<td align=\"center\">:x</td>\n<td>保存(如果当前文件修改过)并退出</td>\n</tr>\n<tr>\n<td align=\"center\">:q!</td>\n<td>不保存文件，直接退出</td>\n</tr>\n<tr>\n<td align=\"center\">:q</td>\n<td>退出 vi</td>\n</tr>\n</tbody></table>"},{"title":"k8s 创建 ubuntu22.04 并暴露22端口","date":"2023-06-11T16:00:00.000Z","updated":"2025-09-24T06:00:08.736Z","keywords":"Java 面试","description":"Java 精选","copyright":false,"_content":"\n要在Kubernetes中创建一个Ubuntu 20.04容器暴露22端口并在后台永久运行，可以按照以下步骤进行操作：\n\n## 创建一个名为`ubuntu-ssh`的Deployment：\n\n```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: ubuntu-ssh\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: ubuntu-ssh\n  template:\n    metadata:\n      labels:\n        app: ubuntu-ssh\n    spec:\n      containers:\n      - name: ubuntu-ssh\n        image: ubuntu:20.04\n        command: [\"/bin/bash\"]\n        args: [\"-c\", \"while true; do sleep 30; done\"]\n        ports:\n        - containerPort: 22\n```\n\n这将创建一个名为`ubuntu-ssh`的Deployment，该Deployment将在单个Pod中运行一个名为`ubuntu-ssh`的容器。容器将使用`ubuntu:20.04`作为基本镜像，运行一个无限循环的`sleep`命令来保持容器运行，并暴露22端口。\n\n## 创建一个名为`ubuntu-ssh`的Service：\n\n```yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: ubuntu-ssh\nspec:\n  selector:\n    app: ubuntu-ssh\n  ports:\n  - name: ssh\n    protocol: TCP\n    port: 22\n    targetPort: 22\n  type: ClusterIP\n```\n\n\n\n这将创建一个名为`ubuntu-ssh`的Service，并将其连接到Deployment。Service将使用`ClusterIP`类型，并在22端口上公开SSH服务。\n\n## 在容器中安装SSH服务器：\n\n```bash\nkubectl exec -it <ubuntu-ssh-pod> -- /bin/bash\napt-get update\napt-get install -y openssh-server\n```\n\n这将在运行`ubuntu-ssh`容器的Pod中打开一个shell，并安装SSH服务器。\n\n## 在容器中配置SSH服务器：\n\n```bash\necho 'root:password' | chpasswd\nsed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\n    service ssh restart\n```\n\n这将设置root用户的密码为`password`，启用root用户的SSH登录，并重新启动SSH服务器。\n\n现在，您已经在Kubernetes中创建了一个Ubuntu 20.04容器，该容器暴露22端口并在后台永久运行。您可以使用SSH客户端连接到该容器，例如：\n\n```bash\nssh root@<service-ip>\n```\n\n其中，`<service-ip>`是在步骤2中创建的Service的IP地址。","source":"_posts/k8s/k8s创建ubuntu22.04并暴露22端口.md","raw":"---\n# 【必需】文章标题\ntitle: k8s 创建 ubuntu22.04 并暴露22端口\n# 【必需】文章创建日期\ndate: 2023-06-12\n# 【可选】文章更新日期\nupdated:\n# 【可选】文章标签\ntags: k8s\n# 【可选】文章分类\ncategories: 容器/虚拟化\n# 【可选】文章关键字\nkeywords: Java 面试\n# 【可选】文章描述\ndescription: Java 精选\ncopyright: false\n---\n\n要在Kubernetes中创建一个Ubuntu 20.04容器暴露22端口并在后台永久运行，可以按照以下步骤进行操作：\n\n## 创建一个名为`ubuntu-ssh`的Deployment：\n\n```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: ubuntu-ssh\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: ubuntu-ssh\n  template:\n    metadata:\n      labels:\n        app: ubuntu-ssh\n    spec:\n      containers:\n      - name: ubuntu-ssh\n        image: ubuntu:20.04\n        command: [\"/bin/bash\"]\n        args: [\"-c\", \"while true; do sleep 30; done\"]\n        ports:\n        - containerPort: 22\n```\n\n这将创建一个名为`ubuntu-ssh`的Deployment，该Deployment将在单个Pod中运行一个名为`ubuntu-ssh`的容器。容器将使用`ubuntu:20.04`作为基本镜像，运行一个无限循环的`sleep`命令来保持容器运行，并暴露22端口。\n\n## 创建一个名为`ubuntu-ssh`的Service：\n\n```yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: ubuntu-ssh\nspec:\n  selector:\n    app: ubuntu-ssh\n  ports:\n  - name: ssh\n    protocol: TCP\n    port: 22\n    targetPort: 22\n  type: ClusterIP\n```\n\n\n\n这将创建一个名为`ubuntu-ssh`的Service，并将其连接到Deployment。Service将使用`ClusterIP`类型，并在22端口上公开SSH服务。\n\n## 在容器中安装SSH服务器：\n\n```bash\nkubectl exec -it <ubuntu-ssh-pod> -- /bin/bash\napt-get update\napt-get install -y openssh-server\n```\n\n这将在运行`ubuntu-ssh`容器的Pod中打开一个shell，并安装SSH服务器。\n\n## 在容器中配置SSH服务器：\n\n```bash\necho 'root:password' | chpasswd\nsed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\n    service ssh restart\n```\n\n这将设置root用户的密码为`password`，启用root用户的SSH登录，并重新启动SSH服务器。\n\n现在，您已经在Kubernetes中创建了一个Ubuntu 20.04容器，该容器暴露22端口并在后台永久运行。您可以使用SSH客户端连接到该容器，例如：\n\n```bash\nssh root@<service-ip>\n```\n\n其中，`<service-ip>`是在步骤2中创建的Service的IP地址。","slug":"k8s/k8s创建ubuntu22.04并暴露22端口","published":1,"_id":"clny08vf9000b5ovf291p39hv","comments":1,"layout":"post","photos":[],"link":"","content":"<p>要在Kubernetes中创建一个Ubuntu 20.04容器暴露22端口并在后台永久运行，可以按照以下步骤进行操作：</p>\n<h2 id=\"创建一个名为ubuntu-ssh的Deployment：\"><a href=\"#创建一个名为ubuntu-ssh的Deployment：\" class=\"headerlink\" title=\"创建一个名为ubuntu-ssh的Deployment：\"></a>创建一个名为<code>ubuntu-ssh</code>的Deployment：</h2><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>ssh\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>ssh\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>ssh\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>ssh\n        <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">:</span><span class=\"token number\">20.04</span>\n        <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"/bin/bash\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token key atrule\">args</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"-c\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"while true; do sleep 30; done\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">22</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这将创建一个名为<code>ubuntu-ssh</code>的Deployment，该Deployment将在单个Pod中运行一个名为<code>ubuntu-ssh</code>的容器。容器将使用<code>ubuntu:20.04</code>作为基本镜像，运行一个无限循环的<code>sleep</code>命令来保持容器运行，并暴露22端口。</p>\n<h2 id=\"创建一个名为ubuntu-ssh的Service：\"><a href=\"#创建一个名为ubuntu-ssh的Service：\" class=\"headerlink\" title=\"创建一个名为ubuntu-ssh的Service：\"></a>创建一个名为<code>ubuntu-ssh</code>的Service：</h2><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>ssh\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>ssh\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ssh\n    <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">22</span>\n    <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">22</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> ClusterIP<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>这将创建一个名为<code>ubuntu-ssh</code>的Service，并将其连接到Deployment。Service将使用<code>ClusterIP</code>类型，并在22端口上公开SSH服务。</p>\n<h2 id=\"在容器中安装SSH服务器：\"><a href=\"#在容器中安装SSH服务器：\" class=\"headerlink\" title=\"在容器中安装SSH服务器：\"></a>在容器中安装SSH服务器：</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> <span class=\"token operator\">&lt;</span>ubuntu-ssh-pod<span class=\"token operator\">></span> -- /bin/bash\n<span class=\"token function\">apt-get</span> update\n<span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> openssh-server<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>这将在运行<code>ubuntu-ssh</code>容器的Pod中打开一个shell，并安装SSH服务器。</p>\n<h2 id=\"在容器中配置SSH服务器：\"><a href=\"#在容器中配置SSH服务器：\" class=\"headerlink\" title=\"在容器中配置SSH服务器：\"></a>在容器中配置SSH服务器：</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'root:password'</span> <span class=\"token operator\">|</span> chpasswd\n<span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s/#PermitRootLogin prohibit-password/PermitRootLogin yes/'</span> /etc/ssh/sshd_config\n    <span class=\"token function\">service</span> <span class=\"token function\">ssh</span> restart<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>这将设置root用户的密码为<code>password</code>，启用root用户的SSH登录，并重新启动SSH服务器。</p>\n<p>现在，您已经在Kubernetes中创建了一个Ubuntu 20.04容器，该容器暴露22端口并在后台永久运行。您可以使用SSH客户端连接到该容器，例如：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ssh</span> root@<span class=\"token operator\">&lt;</span>service-ip<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>其中，<code>&lt;service-ip&gt;</code>是在步骤2中创建的Service的IP地址。</p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}},"cover":"/img/default_cover/geomeric3.png","cover_type":"img","excerpt":"","more":"<p>要在Kubernetes中创建一个Ubuntu 20.04容器暴露22端口并在后台永久运行，可以按照以下步骤进行操作：</p>\n<h2 id=\"创建一个名为ubuntu-ssh的Deployment：\"><a href=\"#创建一个名为ubuntu-ssh的Deployment：\" class=\"headerlink\" title=\"创建一个名为ubuntu-ssh的Deployment：\"></a>创建一个名为<code>ubuntu-ssh</code>的Deployment：</h2><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>ssh\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>ssh\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>ssh\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>ssh\n        <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">:</span><span class=\"token number\">20.04</span>\n        <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"/bin/bash\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token key atrule\">args</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"-c\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"while true; do sleep 30; done\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">22</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这将创建一个名为<code>ubuntu-ssh</code>的Deployment，该Deployment将在单个Pod中运行一个名为<code>ubuntu-ssh</code>的容器。容器将使用<code>ubuntu:20.04</code>作为基本镜像，运行一个无限循环的<code>sleep</code>命令来保持容器运行，并暴露22端口。</p>\n<h2 id=\"创建一个名为ubuntu-ssh的Service：\"><a href=\"#创建一个名为ubuntu-ssh的Service：\" class=\"headerlink\" title=\"创建一个名为ubuntu-ssh的Service：\"></a>创建一个名为<code>ubuntu-ssh</code>的Service：</h2><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>ssh\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>ssh\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ssh\n    <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">22</span>\n    <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">22</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> ClusterIP<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>这将创建一个名为<code>ubuntu-ssh</code>的Service，并将其连接到Deployment。Service将使用<code>ClusterIP</code>类型，并在22端口上公开SSH服务。</p>\n<h2 id=\"在容器中安装SSH服务器：\"><a href=\"#在容器中安装SSH服务器：\" class=\"headerlink\" title=\"在容器中安装SSH服务器：\"></a>在容器中安装SSH服务器：</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> <span class=\"token operator\">&lt;</span>ubuntu-ssh-pod<span class=\"token operator\">></span> -- /bin/bash\n<span class=\"token function\">apt-get</span> update\n<span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> openssh-server<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>这将在运行<code>ubuntu-ssh</code>容器的Pod中打开一个shell，并安装SSH服务器。</p>\n<h2 id=\"在容器中配置SSH服务器：\"><a href=\"#在容器中配置SSH服务器：\" class=\"headerlink\" title=\"在容器中配置SSH服务器：\"></a>在容器中配置SSH服务器：</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'root:password'</span> <span class=\"token operator\">|</span> chpasswd\n<span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s/#PermitRootLogin prohibit-password/PermitRootLogin yes/'</span> /etc/ssh/sshd_config\n    <span class=\"token function\">service</span> <span class=\"token function\">ssh</span> restart<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>这将设置root用户的密码为<code>password</code>，启用root用户的SSH登录，并重新启动SSH服务器。</p>\n<p>现在，您已经在Kubernetes中创建了一个Ubuntu 20.04容器，该容器暴露22端口并在后台永久运行。您可以使用SSH客户端连接到该容器，例如：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ssh</span> root@<span class=\"token operator\">&lt;</span>service-ip<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>其中，<code>&lt;service-ip&gt;</code>是在步骤2中创建的Service的IP地址。</p>\n"},{"title":"MySQL 8.0 Public Key Retrieval is not allowed 错误的解决方法","date":"2023-06-11T16:00:00.000Z","updated":"2025-09-24T06:00:08.731Z","keywords":"Public Key Retrieval is not allowed","copyright":false,"_content":"\n在使用 MySQL 8.0 时重启应用后提示 com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Public Key Retrieval is not allowed\n\n最简单的解决方法是在连接后面添加 `allowPublicKeyRetrieval=true`\n\n文档中(https://mysql-net.github.io/MySqlConnector/connection-options/)给出的解释是：\n\n如果用户使用了 sha256_password 认证，密码在传输过程中必须使用 TLS 协议保护，但是如果 RSA 公钥不可用，可以使用服务器提供的公钥；可以在连接中通过 ServerRSAPublicKeyFile 指定服务器的 RSA 公钥，或者AllowPublicKeyRetrieval=True参数以允许客户端从服务器获取公钥；但是需要注意的是 AllowPublicKeyRetrieval=True可能会导致恶意的代理通过中间人攻击(MITM)获取到明文密码，所以默认是关闭的，必须显式开启\n\n![img](https://raw.githubusercontent.com/JasonDong97/blog_pics/master/img/20190406221957566.png)","source":"_posts/java/debug/MySQL 8.0 Public Key Retrieval is not allowed 错误的解决方法.md","raw":"---\ntitle: MySQL 8.0 Public Key Retrieval is not allowed 错误的解决方法\ndate: 2023-06-12\nupdated:\ntags: java, 遇坑记录，mysql\ncategories: 遇坑记录\nkeywords: Public Key Retrieval is not allowed\ncopyright: false\n---\n\n在使用 MySQL 8.0 时重启应用后提示 com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Public Key Retrieval is not allowed\n\n最简单的解决方法是在连接后面添加 `allowPublicKeyRetrieval=true`\n\n文档中(https://mysql-net.github.io/MySqlConnector/connection-options/)给出的解释是：\n\n如果用户使用了 sha256_password 认证，密码在传输过程中必须使用 TLS 协议保护，但是如果 RSA 公钥不可用，可以使用服务器提供的公钥；可以在连接中通过 ServerRSAPublicKeyFile 指定服务器的 RSA 公钥，或者AllowPublicKeyRetrieval=True参数以允许客户端从服务器获取公钥；但是需要注意的是 AllowPublicKeyRetrieval=True可能会导致恶意的代理通过中间人攻击(MITM)获取到明文密码，所以默认是关闭的，必须显式开启\n\n![img](https://raw.githubusercontent.com/JasonDong97/blog_pics/master/img/20190406221957566.png)","slug":"java/debug/MySQL 8.0 Public Key Retrieval is not allowed 错误的解决方法","published":1,"_id":"clny08vfa000f5ovfdse5ebgy","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在使用 MySQL 8.0 时重启应用后提示 com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Public Key Retrieval is not allowed</p>\n<p>最简单的解决方法是在连接后面添加 <code>allowPublicKeyRetrieval=true</code></p>\n<p>文档中(<a href=\"https://mysql-net.github.io/MySqlConnector/connection-options/)%E7%BB%99%E5%87%BA%E7%9A%84%E8%A7%A3%E9%87%8A%E6%98%AF%EF%BC%9A\">https://mysql-net.github.io/MySqlConnector/connection-options/)给出的解释是：</a></p>\n<p>如果用户使用了 sha256_password 认证，密码在传输过程中必须使用 TLS 协议保护，但是如果 RSA 公钥不可用，可以使用服务器提供的公钥；可以在连接中通过 ServerRSAPublicKeyFile 指定服务器的 RSA 公钥，或者AllowPublicKeyRetrieval&#x3D;True参数以允许客户端从服务器获取公钥；但是需要注意的是 AllowPublicKeyRetrieval&#x3D;True可能会导致恶意的代理通过中间人攻击(MITM)获取到明文密码，所以默认是关闭的，必须显式开启</p>\n<p><img src=\"https://raw.githubusercontent.com/JasonDong97/blog_pics/master/img/20190406221957566.png\" alt=\"img\"></p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}},"cover":"/img/default_cover/geomeric8.png","cover_type":"img","excerpt":"","more":"<p>在使用 MySQL 8.0 时重启应用后提示 com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Public Key Retrieval is not allowed</p>\n<p>最简单的解决方法是在连接后面添加 <code>allowPublicKeyRetrieval=true</code></p>\n<p>文档中(<a href=\"https://mysql-net.github.io/MySqlConnector/connection-options/)%E7%BB%99%E5%87%BA%E7%9A%84%E8%A7%A3%E9%87%8A%E6%98%AF%EF%BC%9A\">https://mysql-net.github.io/MySqlConnector/connection-options/)给出的解释是：</a></p>\n<p>如果用户使用了 sha256_password 认证，密码在传输过程中必须使用 TLS 协议保护，但是如果 RSA 公钥不可用，可以使用服务器提供的公钥；可以在连接中通过 ServerRSAPublicKeyFile 指定服务器的 RSA 公钥，或者AllowPublicKeyRetrieval&#x3D;True参数以允许客户端从服务器获取公钥；但是需要注意的是 AllowPublicKeyRetrieval&#x3D;True可能会导致恶意的代理通过中间人攻击(MITM)获取到明文密码，所以默认是关闭的，必须显式开启</p>\n<p><img src=\"https://raw.githubusercontent.com/JasonDong97/blog_pics/master/img/20190406221957566.png\" alt=\"img\"></p>\n"},{"title":"Ceph集群部署","toc":true,"cover":"/img/default_cover/geomeric9.png","date":"2021-10-01T08:00:00.000Z","_content":"\n# 一、Ceph 简介\n\n> 一个 Ceph 存储集群需要至少一个 Ceph 监视器、Ceph 管理器和 Ceph OSD(对象存储守护进程)。在运行 Ceph 文件系统客户端时，也需要 Ceph 元数据服务器。\n\n<!-- more -->\n\n- **Monitors**:\n\n  - Ceph 监视器(`ceph-mon`)维护着展示集群状态的各种图表，包括监视器图、管理器图、OSD 图、MDS 图和 CRUSH 图。这些图是 Ceph 守护进程相互协调所必需的关键集群状态。\n  - 监视器还负责管理守护进程和客户端之间的身份验证。为了实现冗余和高可用性，通常需要至少三个监视器。\n\n- **Managers**: [Ceph Manager](https://docs.ceph.com/en/latest/glossary/#term-Ceph-Manager)守护程序(`ceph-mgr`)\n\n  - 负责跟踪运行时指标和 Ceph 群集的当前状态，包括存储利用率、当前性能指标和系统负载。\n  - Ceph Manager 守护程序还托管基于 python 的模块来管理和公开 Ceph 群集信息，包括基于 Web 的[Ceph 仪表板和](https://docs.ceph.com/en/latest/mgr/dashboard/#mgr-dashboard) [REST API](https://docs.ceph.com/en/latest/mgr/restful)。高可用性通常需要至少两个管理器。\n\n- **OSDs**: [Ceph OSD](https://docs.ceph.com/en/latest/glossary/#term-Ceph-OSD) (object storage daemon, `ceph-osd`)存储数据，处理数据复制，恢复，重新平衡，并提供一些监视信息到 Ceph 监视器和管理器,通过检查其他 Ceph OSD 守护进程检测信号.冗余和高可用性通常需要至少 3 个 Ceph OSD。\n- **MDSs**: [Ceph 元数据服务器](https://docs.ceph.com/en/latest/glossary/#term-Ceph-Metadata-Server)（MDS, `ceph-mds`）代表[Ceph 文件系统](https://docs.ceph.com/en/latest/glossary/#term-Ceph-File-System)存储元数据（即 Ceph 块设备和 Ceph 对象存储不使用 MDS）。Ceph 元数据服务器允许 POSIX 文件系统用户执行基本命令 (如`ls`, `find`, `etc`等)，而不会给 Ceph 存储群集带来巨大负担。\n\n> Ceph 将数据存储为逻辑存储池中的对象。使用[CRUSH 算法](https://docs.ceph.com/en/latest/glossary/#term-CRUSH)，Ceph 计算哪个放置组应包含对象，并进一步计算哪个 Ceph OSD 守护程序应存储该放置组。CRUSH 算法使 Ceph 存储群集能够动态扩展、重新平衡和恢复。\n\n参考链接：\n\n- [https://mp.weixin.qq.com/s/TWXPPk7hE1D4AGsHg7CIMg](https://mp.weixin.qq.com/s/TWXPPk7hE1D4AGsHg7CIMg)\n- [https://www.jianshu.com/p/cc3ece850433](https://www.jianshu.com/p/cc3ece850433)\n- [https://mp.weixin.qq.com/s/QXRdyYKSKIa1aLNI8dOGcQ](https://mp.weixin.qq.com/s/QXRdyYKSKIa1aLNI8dOGcQ)\n- [https://blog.csdn.net/xiaoquqi/article/details/43055031](https://blog.csdn.net/xiaoquqi/article/details/43055031)\n\n# 二、Cephadm 部署集群\n\n简单，简述，详细参考：[https://docs.ceph.com/en/latest/cephadm/#cephadm](https://docs.ceph.com/en/latest/cephadm/#cephadm)\n\n## 1.环境规划\n\n| 主机名 | 内网 IP         | 操作系统 | 角色                | 配置                         |\n| ------ | --------------- | -------- | ------------------- | ---------------------------- |\n| ceph1  | 192.168.200.128 | Debian11 | cephadm,mon,mgr,osd | 2C,2G,20G 系统盘，20G 数据盘 |\n| ceph2  | 192.168.200.131 | Debian11 | cephadm,mon         | 2C,2G,20G 系统盘，20G 数据盘 |\n| ceph3  | 192.168.200.132 | Debian11 | cephadm,mon         | 2C,2G,20G 系统盘，20G 数据盘 |\n\n> 典型的 Ceph 集群有三个或五个监视器守护程序，分布在不同的主机上。如果群集中有五个或更多节点，我们建议部署五个监视器。\n\n当 Ceph 知道 mon 应该使用什么 IP 子网时，它可以随着群集的增长（或收缩）自动部署和缩放 mon。默认情况下，Ceph 假定其他 mon 使用与第一个 mon 的 IP 相同的子网。\n\n在单个子网的情况下，如果向集群中添加主机，默认最多只会添加 5 个 mon 如果有特定的 IP 子网给 mon 使用，可以使用 CIDR 格式配置该子网。\n\n## 2.前置(所有节点)\n\n> [https://docs.ceph.com/en/pacific/cephadm/install/](https://docs.ceph.com/en/pacific/cephadm/install/)\n\n各节点配置 hosts\n\n```conf\n10.200.10.31 ceph-pro-1-10-200-10-31\n10.200.10.32 ceph-pro-2-10-200-10-32\n10.200.10.33 ceph-pro-3-10-200-10-33\n10.200.10.34 ceph-pro-4-10-200-10-34\n10.200.10.35 ceph-pro-5-10-200-10-35\n```\n\n## 3.安装 CEPHADM(所有节点)\n\n```bash\n#下载cephadm\ncurl --remote-name --location https://hub.shutcm.cf/ceph/ceph/raw/pacific/src/cephadm/cephadm\nchmod +x cephadm\n#设置源\n./cephadm add-repo --release pacific\nsed -i 's#https://download.ceph.com#https://mirrors.aliyun.com/ceph#g' /etc/apt/sources.list.d/ceph.list\napt-get update\n#安装cephadm命令\n./cephadm install\n#确认在PATH中\nwhich cephadm\nrm -fr cephadm\n#安装ceph命令\ncephadm install ceph-common\n```\n\n## 4.引导新群集(第一台)\n\n> 创建新的 Ceph 集群的第一步是在 Ceph 集群的第一台主机上运行 cephadm bootstrap 命令，运行此命令的操作将创建 Ceph 集群的第一个“监视程序守护程序”。\n\n而该监视程序守护程序需要一个 IP 地址，必须将 Ceph 集群的第一个主机的 IP 地址传递给 ceph bootstrap 命令。\n\n```bash\ncephadm bootstrap --mon-ip 10.200.10.31\n#设置addr\n#ceph orch host set-addr ceph1 192.168.200.128\n#检查\nceph orch host ls\nceph -s\n```\n\n此命令将会：\n\n```\n1) 在本地主机上为新集群创建监视和管理器守护程序\n2) 为Ceph集群生成一个新的SSH密钥，并将其添加到root用户的/root/.ssh/authorized_keys文件中\n3) 将最小配置文件写入/etc/ceph/ceph.conf\n4) 将client.admin管理特权密钥写入/etc/ceph/ceph.client.admin.keyring\n5) 将公钥写入/etc/ceph/ceph.pub\n```\n\n## 5.向群集添加主机\n\n> 在解析主机名等方面，cephadm 的要求非常低, 通过以下命令可以明确 IP 与主机名之间的解析：ceph orch host add\n\n**注意**：添加主机时会自动创建 mon 服务，先按照 禁用监视器自动部署( 5.4 (1) ) 或 调整默认值监视器数量 (5.2 节)，再添加主机。\n\n在新主机 root 用户的 authorized_keys 文件中安装集群的公共 SSH 密钥\n\n```bash\n#ssh-copy-id -f -i /etc/ceph/ceph.pub root@*<new-host>*\nssh-copy-id -f -i /etc/ceph/ceph.pub root@ceph-pro-1-10-200-10-31\nssh-copy-id -f -i /etc/ceph/ceph.pub root@ceph-pro-2-10-200-10-32\nssh-copy-id -f -i /etc/ceph/ceph.pub root@ceph-pro-3-10-200-10-33\nssh-copy-id -f -i /etc/ceph/ceph.pub root@ceph-pro-4-10-200-10-34\nssh-copy-id -f -i /etc/ceph/ceph.pub root@ceph-pro-5-10-200-10-35\n```\n\n添加方式两种：\n\n- 命令方式添加\n\n```bash\n#ceph orch host add *<newhost>* [*<ip>*] [*<label1> ...*]\nceph orch host add ceph-pro-2-10-200-10-32 10.200.10.32 --labels _admin\n```\n\n- yaml 方式添加\n\n`host.yml`\n\n```yaml\n---\nservice_type: host\naddr: 192.168.200.131\nhostname: ceph2\nlabels:\n  - mon\n---\nservice_type: host\naddr: 192.168.200.132\nhostname: ceph3\nlabels:\n  - mon\n```\n\n## 3.检查状态\n\n```bash\nceph orch host ls\nceph -s\n```\n\n## 6.部署 OSD\n\n**[https://docs.ceph.com/en/pacific/cephadm/services/osd/#](https://docs.ceph.com/en/pacific/cephadm/services/osd/#)**\n\n> 当有新的 osd 加入集群或者移除了 osd，就会把状态上报给 Monitor，Monitor 知道了 osd map 发生了变化就会触发 rebalancing，确保 pg 能够平滑的移动到各个 osd 上，以 pg 为整体进行数据重平衡，重平衡的过程中可能会影响性能，一次性加入的 osd 越多，数据 rebalancing 就越频繁。\n\n> 当在做 rebalance 的时候，每个 osd 都会按照 osd_max_backfills 指定数量的线程来同步，如果该数值比较大，同步会比较快，但是会影响部分性能；为了避免 rebalance 带来的性能影响，可以对 rebalance 进行关闭；添加完 osd 后再打开。\n\n### 1).rebalance 关闭\n\n```bash\n# 设置标志位\nceph osd set norebalance\n\n# 关闭数据填充\nceph osd set nobackfill\n\n# 查看集群状态\nceph -s\n  cluster:\n    id:     87cdd3b2-987b-11eb-989e-000c29b12ae1\n    health: HEALTH_WARN\n            nobackfill,norebalance flag(s) set  # 有此信息\n```\n\n### 2).rebalance 开启\n\n```bash\n#开启数据填充\nceph osd unset nobackfill\n#开启rebalance\nceph osd unset norebalance\n# 查看集群状态\nceph -s\n  cluster:\n    id:     87cdd3b2-987b-11eb-989e-000c29b12ae1\n    health: HEALTH_OK\n```\n\n### 3).列出节点可用设备\n\n```bash\n#ceph orch device ls [--wide]\nceph orch device ls --wide\n```\n\n如果满足以下所有条件，则认为存储设备可用\n\n```\n1) 设备必须没有分区\n2) 设备不得具有任何LVM状态\n3) 设备不得挂载\n4) 设备不得包含文件系统\n5) 设备不得包含Ceph BlueStore OSD\n6) 设备必须大于5 GB\n```\n\n### 4).创建 osd\n\n```bash\n#需要至少 3 个 Ceph OSD 以实现冗余和高可用性\nceph orch daemon add osd ceph-pro-1-10-200-10-31:/dev/sdb\nceph orch daemon add osd ceph-pro-2-10-200-10-32:/dev/sdb\nceph orch daemon add osd ceph-pro-3-10-200-10-33:/dev/sdb\n```\n\n## 7.集群高可用\n\n```bash\n#需要至少三个监视器才能实现冗余和高可用性\nceph orch apply mon 3\n# 部署mon到指定节点\nceph orch host label add *<host>* mon\n#至少需要两个管理器才能实现高可用性\nceph orch apply mgr 3\n#\n```\n\n## 8.CephFS 部署\n\n## 9.部署 RGW\n\n[https://docs.ceph.com/en/pacific/cephadm/services/rgw/](https://docs.ceph.com/en/pacific/cephadm/services/rgw/)\n\n# 三、运维\n\n[https://www.cnblogs.com/royaljames/p/9807532.html](https://www.cnblogs.com/royaljames/p/9807532.html)\n\n## 1.向群集添加主机\n\n```bash\n#1.在新主机的根用户文件中安装群集的公共 SSH 密钥\nssh-copy-id -f -i /etc/ceph/ceph.pub root@host2\n#2.告诉 Ceph 新节点是群集的一部分：\nceph orch host add host2\n```\n\n## 2.部署其他监视器(monitor)\n\n> 典型的 Ceph 群集具有分布在不同主机的三个或五个监视器守护程序。如果群集中有五个或更多节点，我们建议部署五个监视器。\n\n当 Ceph 知道监视器应该使用什么 IP 子网时，它可以随着群集的增长（或收缩）自动部署和缩放监视器。默认情况下，Ceph 假定其他监视器应使用与第一个监视器的 IP 相同的子网。\n\n如果您的 Ceph 监视器（或整个群集）住在单个子网中，则在向群集添加新主机时，默认情况下，cephadm 会自动添加多达 5 个监视器。无需进一步步骤。\n\n```bash\n#如果有特定的 IP 子网应该由监视器使用，您可以用CIDR格式（例如 ） 配置该子网，Cephadm 仅在配置的子网中配置了 IP 的主机上部署新的监视器守护程序。\nceph config set mon public_network 10.1.2.0/24\n#如果要调整 5 个监视器的默认值：\nceph orch apply mon *<number-of-monitors>*\n#若要在一组特定的主机上部署监视器，请确保在此列表中包括第一个（引导）主机。\nceph orch apply mon *<host1,host2,host3,...>*\n#您可以通过使用主机标签来控制监视器运行的主机。要将标签设置为相应的主机，请：mon\nceph orch host label add *<hostname>* mon\n#要查看当前主机和标签：\nceph orch host ls\n#例如：\n# ceph orch host label add host1 mon\n# ceph orch host label add host2 mon\n# ceph orch host label add host3 mon\n# ceph orch host ls\nHOST   ADDR   LABELS  STATUS\nhost1         mon\nhost2         mon\nhost3         mon\nhost4\nhost5\n#告诉 cephadm 根据标签部署监视器：\nceph orch apply mon label:mon\n#您可以显式指定每个监视器的 IP 地址或 CIDR 网络，并控制其放置位置。要禁用自动监视器部署：\nceph orch apply mon --unmanaged\n#要部署每个附加监视器：\nceph orch daemon add mon *<host1:ip-or-network1> [<host1:ip-or-network-2>...]*\n#例如，要在使用 IP 地址上部署第二个监视器，在网络上部署第三个监视器\n# ceph orch apply mon --unmanaged\n# ceph orch daemon add mon newhost1:10.1.2.123\n# ceph orch daemon add mon newhost2:10.1.2.0/24\n\n#若要确保监视器应用于这三台主机中的每一个主机，请运行以下命令：\nceph orch apply mon \"host1,host2,host3\"\n```\n\n# 使用 YAML 规范\n\n```bash\nceph orch apply -i file.yaml\n```\n\n```yaml\nservice_type: mon\nplacement:\n  hosts:\n    - host1\n    - host2\n    - host3\n```\n\n## 3.部署 OSD\n\n### 1.所有群集主机上的存储设备清单可以显示\n\n```bash\nceph orch device ls\n```\n\n- 设备必须没有分区。\n- 设备不得具有任何 LVM 状态。\n- 不得安装设备。\n- 设备不能包含文件系统。\n- 设备不得包含 Ceph BlueStore OSD。\n- 设备必须大于 5 GB。\n\n### 2.创建新 OSD 的方法\n\n```bash\n# 1.告诉 Ceph 使用任何可用和未使用的存储设备：\nceph orch apply osd --all-available-devices\n# 2.从特定主机上的特定设备创建 OSD：ceph orch daemon add osd *<host>*:*<device-path>*\nceph orch daemon add osd host1:/dev/sdb\n# 3.使用OSD 服务规范描述设备，根据设备属性、此类设备类型（SSD 或 HDD）、设备型号名称、大小或设备存在的主机使用：\nceph orch apply osd -i spec.yml\n```\n\n## 4.部署 MDS\n\n使用 CephFS 文件系统需要一个或多个 MDS 守护程序。如果使用较新的接口创建新文件系统，则会自动创建这些接口。有关详细信息，请参阅 FS 卷和子卷。\n\n```bash\nceph orch apply mds *<fs-name>* --placement=\"*<num-daemons>* [*<host1>* ...]\"\n```\n\n## 5.部署 RGW\n\n## 6.管理 Monitor map\n\n### 1).多 Monitor 同步机制\n\n> 在生产环境建议最少三节点 monitor，以确保 cluster map 的高可用性和冗余性,monitor 节点不应该过多甚至操作 9 节点的行为,会导致数据读写时间下降，影响系统集群的性能。\n\n- monitor 使用 paxos 算法作为集群状态上达成一致的机制。paxos 是一种分布式一致性算法。每当 monitor 修改 map 时，它会通过 paxos 发送更新到其他 monitor。Ceph 只有在大多数 monitor 就更新达成一致时提交 map 的新版本。\n- cluster map 的更新操作需要 Paxos 确认，但是读操作不经由 Paxos，而是直接访问本地的 kv 存储。\n\n### 2).Monitor 选举机制\n\n- 多个 monitor 之间需要建立仲裁并选择出一个 leader，其他节点则作为工作节点（peon）。\n- 在选举完成并确定 leader 之后，leader 将从所有其他 monitor 请求最新的 map epoc，以确保 leader 具有集群的最新视图。\n- 要维护 monitor 集群的正常工作，必须有超过半数的节点正常。\n\n### 3).Monitor 租约\n\n- 在 Monitor 建立仲裁后，leader 开始分发短期的租约到所有的 monitors。让它们能够分发 cluster map 到 OSD 和 client。\n- Monitor 租约默认每 3s 续期一次。\n- 当 peon monitor 没有确认它收到租约时，leader 假定该 monitor 异常，它会召集新的选举以建立仲裁。\n- 如果 peon monitor 的租约到期后没有收到 leader 的续期，它会假定 leader 异常，并会召集新的选举。\n- 所以如果生产环境中存在多个 monitor 时候某个节点的超时会猝发节点的重新选举导致 client 无法第一时间拿到最新的 crushmap 图像也就无法去对应的 osd 上的 pv 写入数据了。\n\n### 4).常用的 monitor 管理\n\n```bash\n#打印monitor map信息\nceph mon dump\n\n#将monitor map导出为一个二进制文件\nceph mon getmap -o ./monmap\n\n#打印导出的二进制文件的内容\nmonmaptool --print ./monmap\n\n#修改二进制文件，从monmap删除某个monitor\nmonmaptool ./monmap --rm <id>\n\n#修改二进制文件，往monmap中添加一个monitor\nmonmaptool ./monmap --add <id> <ip:port>\n\n#导入一个二进制文件，在导入之前，需要先停止monitor\nceph-mon -i <id> --inject-monmap ./monmap\n```\n\n## 7.管理 OSD Map\n\n- 每当 OSD 加入或离开集群时，Ceph 都会更新 OSD map。\n- OSD 不使用 leader 来管理 OSD map，它们会在自身之间传播同步 map。OSD 会利用 OSD map epoch 标记它们交换的每一条信息，当 OSD 检测到自己已落后时，它会使用其对等 OSD 执行 map 更新。\n- 在大型集群中 OSD map 更新会非常频繁，节点会执行递增 map 更新。\n- Ceph 也会利用 epoch 来标记 OSD 和 client 之间的消息。当 client 连接到 OSD 时 OSD 会检查 epoch。如果发现 epoch 不匹配，则 OSD 会以正确的 epoch 响应，以便客户端可以更新其 OSD map。\n- OSD 定期向 monitor 报告自己的状态，OSD 之间会交换心跳，以便检测对等点的故障，并报告给 monitor。\n- leader monitor 发现 OSD 故障时，它会更新 map，递增 epoch，并使用 Paxos 更新协议来通知其他 monitor，同时撤销租约，并发布新的租约，以使 monitor 以分发最新的 OSD map。\n\n### 1).OSD 状态解读\n\n- 1.正常状态的 OSD 为 up 且 in\n- 2.当 OSD 故障时，守护进程 offline，在 5 分钟内，集群仍会将其标记为 up 和 in，这是为了防止网络抖动\n- 3.如果 5 分钟内仍未恢复，则会标记为 down 和 out。此时该 OSD 上的 PG 开始迁移。这个 5 分钟的时间间隔可以通过 mon_osd_down_out_interval 配置项修改\n- 4.当故障的 OSD 重新上线以后，会触发新的数据再平衡\n- 5.当集群有 noout 标志位时，则 osd 下线不会导致数据恢复\n- 6.OSD 每隔 6s 会互相验证状态。并每隔 120s 向 mon 报告一次状态。\n\n### 2).OSD map 命令\n\n```bash\nceph osd dump\nceph osd getmap -o binfile\nosdmaptool --print binfile\nosdmaptool --export-crush crushbinfile binfile\nosdmaptool --import-crush crushbinfile binfile\nosdmaptool --test-map-pg pgid binfile\n```\n\n### 3.)OSD 的状态\n\n- OSD 运行状态\n\n  - up\n  - down\n  - out\n  - in\n\n- OSD 容量状态\n\n  - nearfull\n  - full\n\n常用指令\n\n```bash\n#显示OSD状态\nceph osd stat\n\n#报告osd使用量\nceph osd df\n\n#查找指定osd位置\nceph osd find\n```\n\n### 4.)OSD 容量\n\n- 当集群容量达到 mon_osd_nearfull_ratio 的值时，集群会进入 HEALTH_WARN 状态。这是为了在达到 full_ratio 之前，提醒添加 OSD。默认设置为 0.85，即 85%\n- 当集群容量达到 mon_osd_full_ratio 的值时，集群将停止写入，但允许读取。集群会进入到 HEALTH_ERR 状态。默认为 0.95，即 95%。这是为了防止当一个或多个 OSD 故障时仍留有余地能重平衡数据\n\n设置方法：\n\n```bash\nceph osd set-full-ratio 0.95\nceph osd set-nearfull-ratio 0.85\nceph osd dump\n```\n\n### 5).OSD 状态参数\n\n```bash\n# osd之间传递心跳的间隔时间\nosd_heartbeat_interval\n\n# 一个osd多久没心跳，就会被集群认为它down了\nosd_heartbeat_grace\n\n# 确定一个osd状态为down的最少报告来源osd数\nmon_osd_min_down_reporters\n\n# 一个OSD必须重复报告一个osd状态为down的次数\nmon_osd_min_down_reports\n\n# 当osd停止响应多长时间，将其标记为down和out\nmon_osd_down_out_interval\n\n# monitor宣布失败osd为down前的等待时间\nmon_osd_report_timeout\n\n# 一个新的osd加入集群时，等待多长时间，开始向monitor报告\nosd_mon_report_interval_min\n\n# monitor允许osd报告的最大间隔，超时就认为它down了\nosd_mon_report_interval_max\n\n# osd向monitor报告心跳的时间\nosd_mon_heartbeat_interval\n```\n\n## 8.管理 PG\n\n### 1).管理文件到 PG 映射\n\ntest 对象所在 pg id 为 10.35，存储在三个 osd 上，分别为 osd.2、osd.1 和 osd.8，其中 osd.2 为 primary osd\n\n```bash\nrados -p test put test /etc/ceph/ceph.conf\nceph osd map test test\n    osdmap e201 pool 'test' (10) object 'test' -> pg 10.40e8aab5 (10.35) -> up ([2,1,8], p2) acting ([2,1,8], p2)\n\n#处于up状态的osd会一直留在PG的up set和acting set中，一旦主osd down，它首先会从up set中移除\n#然后从acting set中移除，之后从OSD将被升级为主。Ceph会将故障OSD上的PG恢复到一个新OSD上\n#然后再将这个新OSD加入到up和acting set中来维持集群的高可用性\n```\n\n### 2).管理 struck 状态的 PG\n\n- 如果 PG 长时间（mon_pg_stuck_threshold，默认为 300s）出现如下状态时，MON 会将该 PG 标记为 stuck：\n\n  - inactive：pg 有 peering 问题\n  - unclean：pg 在故障恢复时遇到问题\n  - stale：pg 没有任何 OSD 报告，可能其所有的 OSD 都是 down 和 out\n  - undersized：pg 没有充足的 osd 来存储它应具有的副本数\n\n- 默认情况下，Ceph 会自动执行恢复，但如果未能自动恢复，则集群状态会一直处于 HEALTH_WARN 或者 HEALTH_ERR\n\n- 如果特定 PG 的所有 osd 都是 down 和 out 状态，则 PG 会被标记为 stale。要解决这一情况，其中一个 OSD 必须要重生，且具有可用的 PG 副本，否则 PG 不可用\n\n- Ceph 可以声明 osd 或 PG 已丢失，这也就意味着数据丢失。需要说明的是，osd 的运行离不开 journal，如果 journal 丢失，则 osd 停止\n\n### 3).struck 状态操作\n\n```bash\n# 检查处于stuck状态的pg\nceph pg dump_stuck\n# 检查导致pg一致阻塞在peering状态的osd\nceph osd blocked-by\n# 检查某个pg的状态\nceph pg dump all|grep pgid\n# 声明pg丢失\nceph pg pgid mark_unfound_lost revert|delete\n# 声明osd丢失（需要osd状态为down且out）\nceph osd lost osdid --yes-i-really-mean-it\n```\n\n### 4).手动控制 PG 的 Primary OSD\n\n可以通过手动修改 osd 的权重以提升 特定 OSD 被选为 PG Primary OSD 的概率，避免将速度慢的磁盘用作 primary osd。\n\n需要先在配置文件中配置如下参数：\n\n```bash\nmon_osd_allow_primary_affinity = true\n```\n\n### 5).调整权重示例\n\n```bash\n1. 查看现在有多少PG的主OSD是osd.0\nceph pg dump |grep active+clean |egrep \"\\[0,\" |wc -l\n\n2. 修改osd.0的权重\nceph osd primary-affinity osd.0 0  # 权重范围从0.0到1.0\n\n3. 再次查看现在有多少PG的主OSD是osd.0\nceph pg dump |grep active+clean |egrep \"\\[0,\" |wc -l\n```\n\n## 9.Pool(存储池)管理\n\n[https://blog.csdn.net/weixin_42440345/article/details/81118964](https://blog.csdn.net/weixin_42440345/article/details/81118964)\n\n### PG 和 PGP 的区别\n\n[https://www.cnblogs.com/zphj1987/p/13575377.html](https://www.cnblogs.com/zphj1987/p/13575377.html)\n\nPG 是指定存储池存储对象的目录有多少个，PGP 是存储池 PG 的 OSD 分布组合个数\n\nPG 的增加会引起 PG 内的数据进行分裂，分裂到相同的 OSD 上新生成的 PG 当中\n\nPGP 的增加会引起部分 PG 的分布进行变化，但是不会引起 PG 内对象的变动\n\n### 4.)限制 pool 配置更改\n\n```bash\n#禁止池被删除\nosd_pool_default_flag_nodelete\n\n#禁止池的pg_num和pgp_num被修改\nosd_pool_default_flag_nopgchange\n\n#禁止修改池的size和min_size\nosd_pool_default_flag_nosizechange\n```\n\n### 1.查看 pool\n\n```bash\n#查看所有pool\nceph osd lspools\n#获取集群内所有POOL的概况信息,集群内POOL的个数、对应的POOL id、POOL名称、副本数、最小副本数，ruleset及POOL snap等信息\nceph osd pool ls detail\n#查看POOL的统计信息\n```\n\n### 2.创建 pool\n\n```bash\n#创建一个副本类型的POOL\nceph osd pool create {pool-name} {pg-num} [{pgp-num}] [{pgp-num}] [replicated] [ruleset]\n#举例：\nceph osd pool create rbd  32 32\n#创建一个纠删码类型的POOL\nceph osd pool create {pool-name} {pg-num} {pgp-num} erasure [erasure-code-profile] [ruleset]\n```\n\n在`{}`内的参数为必选项,`[]`内的参数均设有默认值,如果没有更改设计,可以不添加。\n\n参数的含义如下:\n\n- **pool-name**: POOL 的名字；必须添加。\n- **pg-num**: POOL 拥有的 PG 总数；必须添加。\n- **pgp-num**: POOL 拥有的 PGP 总数；非必须添加。默认与 pg-num 相同。\n- **replicated|erasure**: POOL 类型；非必须添加。如不指定为 erasure,则默认为 replicated 类型。\n- **ruleset**: POOL 所用的 CRUSH 规则 ID。非必须添加。默认为 0,若需指定其他 ruleset,需确保 ruleset 必须存在。\n- **erasure-code-profile**: 仅用于纠删码类型的 POOL。指定纠删码配置框架,此配置必须已由 osd erasure-code-profile set 定义\n\n这里强制选择 pg_num 和 pgp_num，因为 ceph 集群不能自动计算 pg 数量。下面有一些官方建议的 pg 使用数量：\n\n- 小于 5 个 osd 设置 pg_num 为 128\n- 5 到 10 个 osd 设置 pg_num 为 512\n- 10 到 50 个 osd 设置 pg_num 为 1024\n- 如果超过 50 个 osd 你需要自己明白权衡点，并且能自行计算 pg_num 的数量\n\npg_num 通用计算方法:\n\n(OSDs \\* 100)\n\nTotal PGs =  ------------\n\npool size\n\n### 3.修改 pool\n\n```bash\nceph osd pool set {pool-name} {key} {value}\nsize：设置存储池中的对象副本数，详情参见设置对象副本数。仅适用于副本存储池。\nmin_size：设置 I/O 需要的最小副本数，详情参见设置对象副本数。仅适用于副本存储池。\npg_num：计算数据分布时的有效 PG 数。只能大于当前 PG 数。\npgp_num：计算数据分布时使用的有效 PGP 数量。小于等于存储池的 PG 数。\nhashpspool：给指定存储池设置/取消 HASHPSPOOL 标志。\ntarget_max_bytes：达到 max_bytes 阀值时会触发 Ceph 冲洗或驱逐对象。\ntarget_max_objects：达到 max_objects 阀值时会触发 Ceph 冲洗或驱逐对象。\nscrub_min_interval：在负载低时，洗刷存储池的最小间隔秒数。如果是 0 ，就按照配置文件里的 osd_scrub_min_interval 。\nscrub_max_interval：不管集群负载如何，都要洗刷存储池的最大间隔秒数。如果是 0 ，就按照配置文件里的 osd_scrub_max_interval 。\ndeep_scrub_interval：“深度”洗刷存储池的间隔秒数。如果是 0 ，就按照配置文件里的 osd_deep_scrub_interval 。\n```\n\n### 4.删除存储池\n\n```bash\nceph osd pool delete {pool-name} [{pool-name} --yes-i-really-really-mean-it]\n```\n\n### 5.重命名存储池\n\n```bash\nceph osd pool rename {current-pool-name} {new-pool-name}\n```\n\n### 6.查看存储池统计信息\n\n```bash\nrados df\n```\n\n### 7.给存储池做快照\n\n```bash\nceph osd pool mksnap {pool-name} {snap-name}\n```\n\n### 8.删除存储池的快照\n\n```bash\nceph osd pool rmsnap {pool-name} {snap-name}\n```\n\n### 9.获取存储池选项值\n\n```bash\nceph osd pool get {pool-name} {key}\n```\n\n### 10.获取对象副本数\n\n```bash\nceph osd dump | grep 'replicated size'\n```\n\n### 11.设置存储池配额\n\n```bash\n命令格式：\n# ceph osd pool set-quota {pool-name} [max_objects {obj-count}] [max_bytes {bytes}]\n命令举例：\n# ceph osd pool set-quota rbd max_objects 10000\n```\n\n## 10.自定义 Crush Map\n\n> crush map 决定了客户端数据最终写入的 osd 的位置，在某些情况下存在 hdd 和 ssd 两种盘想让某些数据写入到指定的 osd 中这个时候就是需要去人为的手动编译 crush-map，编辑要修改的部分，再导入集群中达到我们特定的目的\n\n### 1).Crush 的放置策略\n\n- Ceph 使用 CRUSH 算法（Controlled Replication Under Scalable Hashing 可扩展哈希下的受控复制）来计算哪些 OSD 存放哪些对象\n- 对象分配到 PG 中，CRUSH 决定这些 PG 使用哪些 OSD 来存储对象。理想情况下，CRUSH 会将数据均匀的分布到存储中\n- 当添加新 OSD 或者现有的 OSD 出现故障时，Ceph 使用 CRUSH 在活跃的 OSD 上重平衡数据 CRUSH map 是 CRUSH 算法的中央配置机制，可通过调整 CRUSHmap 来优化数据存放位置默认情况下，CRUSH 将一个对象的多个副本放置到不同主机上的 0SD 中。可以配置 CRUSH map 和 CRUSH rules，使一个对象的多个副本放置到不同房间或者不同机柜的主机上的 0SD 中。\n- 也可以将 SSD 磁盘分配给需要高速存储的池\n\n### 2).编译与翻译和更新\n\n```bash\n#导出CRUSH map\nceph osd getcrushmap -o ./crushmap.bin\n#解译CRUSH map\ncrushtool -d ./crushmap.bin ./crushmap.txt\n#修改后的CRUSH map重新编译\ncrushtool -c ./crushmap.txt-o ./crushmap-new.bin\n#更新CRUSH map\nceph osd setcrushmap-i./crushmap-new.bin\n#查询crush map的内容（返回json）\nceph osd crush dump\n```\n\n例子\n\n```bash\nroot default {\n    id-1           # do not change unnecessarily\n    id-2 class hdd #do not change unnecessarily\n    #weiqht 0.166\n    alg straw2\n    hash 0#rjenkins1\n    item rackl weight 0.055\n    item rack2 weiqht 0.055\n    item rack3 weight 0.055\n}\n\n#rules\nrule replicated rule{\n    id 0\n    type replicated\n    min size 1\n    max size 10\n    step take default  #只要是应用这个rule的都把数据写入到defaults下\n    step chooseleaf firstn 0 type host  #定义故障的故障域为物理集机器级别（rack为机柜级别）\n    step emit #结尾符号\n}\n```\n\n## 11.admin sockets 管理守护进程\n\n- 通过 admin sockets，管理员可以直接与守护进程交互。如查看和修改守护进程的配置参数。\n- 守护进程的 socket 文件一般是/var/run/ceph/cluster-cluster−type.$id.asok\n- 基于 admin sockets 的操作：\n\n```bash\nceph daemon $type.$id command\n#或者\nceph --admin-daemon /var/run/ceph/$cluster-$type.$id.asok command\n#常用command如下：\nhelp\nconfig get parameter\nconfig set parameter\nconfig show\nperf dump\n```\n\n## 12.用户管理\n\n> Ceph 把数据以对象的形式存于各存储池中。Ceph 用户必须具有访问存储池的权限才能够读写数据。另外，Ceph 用户必须具有执行权限才能够使用 Ceph 的管理命令。\n\n### 1、查看用户信息\n\n```bash\n查看所有用户信息\n# ceph auth list\n获取所有用户的key与权限相关信息\n# ceph auth get client.admin\n如果只需要某个用户的key信息，可以使用pring-key子命令\n# ceph auth print-key client.admin\n```\n\n### 2、添加用户\n\n```bash\n# ceph auth add client.john mon 'allow r' osd 'allow rw pool=liverpool'\n# ceph auth get-or-create client.paul mon 'allow r' osd 'allow rw pool=liverpool'\n# ceph auth get-or-create client.george mon 'allow r' osd 'allow rw pool=liverpool' -o george.keyring\n# ceph auth get-or-create-key client.ringo mon 'allow r' osd 'allow rw pool=liverpool' -o ringo.key\n```\n\n### 3、修改用户权限\n\n```bash\n# ceph auth caps client.john mon 'allow r' osd 'allow rw pool=liverpool'\n# ceph auth caps client.paul mon 'allow rw' osd 'allow rwx pool=liverpool'\n# ceph auth caps client.brian-manager mon 'allow *' osd 'allow *'\n# ceph auth caps client.ringo mon ' ' osd ' '\n```\n\n### 4、删除用户\n\n```bash\n# ceph auth del {TYPE}.{ID}\n其中， {TYPE} 是 client，osd，mon 或 mds 的其中一种。{ID} 是用户的名字或守护进程的 ID 。\n```\n\n## 13.增加和删除 Monitor\n\n> 一个集群可以只有一个 monitor，推荐生产环境至少部署 3 个。 Ceph 使用 Paxos 算法的一个变种对各种 map 、以及其它对集群来说至关重要的信息达成共识。建议（但不是强制）部署奇数个 monitor 。Ceph 需要 mon 中的大多数在运行并能够互相通信，比如单个 mon，或 2 个中的 2 个，3 个中的 2 个，4 个中的 3 个等。初始部署时，建议部署 3 个 monitor。后续如果要增加，请一次增加 2 个.\n\n### 1、新增一个 monitor\n\n```bash\n# ceph-deploy mon create $hostname\n注意：执行ceph-deploy之前要进入之前安装时候配置的目录。/my-cluster\n```\n\n### 2、删除 Monitor\n\n```bash\n# ceph-deploy mon destroy $hostname\n注意： 确保你删除某个 Mon 后，其余 Mon 仍能达成一致。如果不可能，删除它之前可能需要先增加一个。\n```\n\n# 四、集群监控管理\n\n## 1.集群整体运行状态\n\n```bash\n[root@cephnode01 ~]# ceph -s\ncluster:\n    id:     8230a918-a0de-4784-9ab8-cd2a2b8671d0\n    health: HEALTH_WARN\n            application not enabled on 1 pool(s)\n\n  services:\n    mon: 3 daemons, quorum cephnode01,cephnode02,cephnode03 (age 27h)\n    mgr: cephnode01(active, since 53m), standbys: cephnode03, cephnode02\n    osd: 4 osds: 4 up (since 27h), 4 in (since 19h)\n    rgw: 1 daemon active (cephnode01)\n\n  data:\n    pools:   6 pools, 96 pgs\n    objects: 235 objects, 3.6 KiB\n    usage:   4.0 GiB used, 56 GiB / 60 GiB avail\n    pgs:     96 active+clean\n\n    id：集群ID\n    health：集群运行状态，这里有一个警告，说明是有问题，意思是pg数大于pgp数，通常此数值相等。\n    mon：Monitors运行状态。\n    osd：OSDs运行状态。\n    mgr：Managers运行状态。\n    mds：Metadatas运行状态。\n    pools：存储池与PGs的数量。\n    objects：存储对象的数量。\n    usage：存储的理论用量。\n    pgs：PGs的运行状态\n\n~]$ ceph -w\n~]$ ceph health detail\n```\n\n## 2.PG 状态\n\n> 查看 pg 状态查看通常使用下面两个命令即可，dump 可以查看更详细信息\n\n```bash\n~]$ ceph pg dump\n~]$ ceph pg stat\n```\n\n## 3.Pool 状态\n\n```bash\n~]$ ceph osd pool stats\n~]$ ceph osd pool stats\n```\n\n## 4.OSD 状态\n\n```bash\n~]$ ceph osd stat\n~]$ ceph osd dump\n~]$ ceph osd tree\n~]$ ceph osd df\n```\n\n## 5.Monitor 状态和查看仲裁状态\n\n```bash\n~]$ ceph mon stat\n~]$ ceph mon dump\n~]$ ceph quorum_status\n```\n\n## 6.集群空间用量\n\n```bash\n~]$ ceph df\n~]$ ceph df detail\n```\n\n# 五、集群配置管理(临时和全局，服务平滑重启)\n\n> 有时候需要更改服务的配置，但不想重启服务，或者是临时修改。这时候就可以使用 tell 和 daemon 子命令来完成此需求。\n\n## 1.查看运行配置\n\n```bash\n命令格式：\n# ceph daemon {daemon-type}.{id} config show\n\n命令举例：\n# ceph daemon osd.0 config show\n```\n\n## 2.tell 子命令格式\n\n> 使用 tell 的方式适合对整个集群进行设置，使用 \\* 号进行匹配，就可以对整个集群的角色进行设置。而出现节点异常无法设置时候，只会在命令行当中进行报错，不太便于查找。\n\n```bash\n命令格式：\n# ceph tell {daemon-type}.{daemon id or *} injectargs --{name}={value} [--{name}={value}]\n命令举例：\n# ceph tell osd.0 injectargs --debug-osd 20 --debug-ms 1\n```\n\n- daemon-type：为要操作的对象类型如 osd、mon、mds 等。\n- daemon id：该对象的名称，osd 通常为 0、1 等，mon 为 ceph -s 显示的名称，这里可以输入\\*表示全部。\n- injectargs：表示参数注入，后面必须跟一个参数，也可以跟多个\n\n## 3.daemon 子命令\n\n- 使用 daemon 进行设置的方式就是一个个的去设置，这样可以比较好的反馈，此方法是需要在设置的角色所在的主机上进行设置。\n\n```bash\n命令格式：\n# ceph daemon {daemon-type}.{id} config set {name}={value}\n命令举例：\n# ceph daemon mon.ceph-monitor-1 config set mon_allow_pool_delete false\n```\n\n## 4.集群操作\n\n- 命令包含 start、restart、status\n\n```bash\n#1.启动所有守护进程\nsystemctl start ceph.target\n\n#2.按类型启动守护进程\nsystemctl start ceph-mgr.target\nsystemctl start ceph-osd@id\nsystemctl start ceph-mon.target\nsystemctl start ceph-mds.target\nsystemctl start ceph-radosgw.target\n```\n\n## 5.添加和删除 OSD\n\n### 1).添加 OSD\n\n- 纵向扩容(会导致数据的重分布)\n- 生产环境下最好的做法就是不要一次性添加大量的 osd，最好逐步添加等待数据同步后再进行添加操作\n\n  - 当影响生产数据时候临时可以停止同步：ceph osd set [nobackfill|norebalance],unset 取消对应的参数\n\n```bash\n#1.格式化磁盘\nceph-volume lvm zap /dev/sd<id>\n\n#2.进入到ceph-deploy执行目录/my-cluster，添加OSD\nceph-deploy osd create --data /dev/sd<id> $hostname\n```\n\n### 2).删除 OSD\n\n- 如果机器有盘坏了可以使用 dmdsg 查看坏盘\n- 存在一种情况就是某 osd 的写入延迟大盘有坏道很大可能会拖垮 ceph 集群：\n\n  - ceph osd tree: 查看当前集群的 osd 状态\n  - ceph osd perf: 查看当前的 OSD 的延迟\n\n- 当某一快 osd 踢出集群时候立即做数据重分布(默认 10 分钟)\n\n```bash\n1、调整osd的crush weight为 0\nceph osd crush reweight osd.<ID> 0.0\n\n2、将osd进程stop\nsystemctl stop ceph-osd@<ID>\n\n3、将osd设置out(将会出发数据重分布)\nceph osd out <ID>\n\n4、从crushmap中踢出osd\n# 查看运行视图的osd状态\nceph osd crush dump|less\nceph osd crush rm <osd>.id\n\n5、从tree树中删除osd\nceph osd rm <osd>.id\n\n6、(选用)立即执行删除OSD中数据\nceph osd purge osd.<ID> --yes-i-really-mean-it\n\n7、卸载磁盘\numount /var/lib/ceph/osd/ceph-？\n\n8.从认证中删除磁盘对应的key\n# 查看认证的列表\nceph auth list\nceph auth rm <osd>.id\n```\n\n## 6.扩容 PG\n\n- 扩容大小取跟它接近的 2 的 N 次方\n- 在更改 pool 的 PG 数量时，需同时更改 PGP 的数量。PGP 是为了管理 placement 而存在的专门的 PG，它和 PG 的数量应该保持一致。如果你增加 pool 的 pg_num，就需要同时增加 pgp_num，保持它们大小一致，这样集群才能正常 rebalancing。\n\n```bash\nceph osd pool set {pool-name} pg_num 128\nceph osd pool set {pool-name} pgp_num 128\n```\n\n# 六、调优\n\n## 1.系统层面调优\n\n- 选择正确的 CPU 和内存。OSD、MON 和 MDS 节点具有不同的 CPU 和内存需求\n\n  - mon 的需求和 osd 的总个数有关需要的是计算力\n  - mds 对 CPU 和内存要求很高，会将大量的元数据缓存到自己的内存中，存储元数据的尽量的使用 ssd\n  - osd 最低要求 1H2G 的配置例如：24 块硬盘最少是 24H36G,磁盘方面必须高 I/O 有多好上多好\n\n- 尽可能关闭 NUMA\n- 规划好存储节点的数据以及各节点的磁盘要求（不考虑钱忽略）\n- 磁盘的选择尽可能在成本、吞吐量和延迟之间找到良好的平衡\n- journal 日志应该使用 SSD\n- 如果交换机支持（MTU 9000），则启用巨型帧(减少数据的分片)，前提是 ceph 在一个单独的网络环境中切有独立交换机。\n- 启用 ntp。Ceph 对时间敏感,集群网络至少 10GB 带宽\n\n### 1).系统调优工具\n\n- 使用 tuned-admin 工具，它可帮助系统管理员针对不同的工作负载进行系统调优\n- tuned-admin 使用的 profile 默认存放在/usr/lib/tuned/目录中，可以参考其模板来自定义 profile\n- 对于 ceph 而言，network-latency 可以改进全局系统延迟，network-throughput 可以改进全局系统吞吐量,如果两个都开启可以使用 Custom 自定义模式\n\n```bash\n# 列出现有可用的profile\ntuned-adm list\n\n# 查看当前生效的profile\ntuned-adm active\n\n# 使用指定的profile\ntuned-admin profile profile-name\n\n# 禁用所有的profile\ntuned-admin off\n```\n\n### 2).I/O 调度算法\n\n- noop：电梯算法，实现了一个简单的 FIFO 队列。基于 SSD 的磁盘，推荐使用这种调度方式\n- Deadline：截止时间调度算法，尽力为请求提供有保障的延迟。对于 Ceph，基于 sata 或者 sas 的驱动器，应该首选这种调度方式\n- cfq：完全公平队列，适合有许多进程同时读取和写入大小不等的请求的磁盘，也是默认的通用调度算法\n\n```bash\n#查看当前系统支持的调度算法：\n    dmesg|grep -I scheduler\n\n#查看指定磁盘使用的调度算法：\n    cat /sys/block/磁盘设备号/queue/scheduler\n\n#修改调度算法\n    echo \"deadline\" > /sys/block/vdb/queue/scheduler\n    vim /etc/default/grub\n        GRUB_CMDLINE_LINUX=\"elevator=deadline numa=off\"\n```\n\n### 3).网络 IO 子系统调优\n\n- 用于集群的网络建议尽可能使用 10Gb 网络\n\n以下参数用于缓冲区内存管理\n\n```bash\n#设置OS接收缓冲区的内存大小，第一个值告知内核一个TCP socket的最小缓冲区空间，第二值为默认缓冲区空间，第三个值是最大缓冲区空间\nnet.ipv4.tcp_wmem\n\n#设置Os发送缓冲区的内存大小\nnet.ipv4.tcp_rmem\n\n#定义TCP stack如何反应内存使用情况\nnet.ipv4.tcp_mem\n```\n\n- 交换机启用大型帧\n\n> 默认情况下，以太网最大传输数据包大小为 1500 字节。为提高吞吐量并减少处理开销，一种策略是将以太网网络配置为允许设备发送和接收更大的巨型帧。\n\n- 在使用巨型帧的要谨慎，因为需要硬件支持，且全部以太网口配置为相同的巨型帧 MTU 大小。\n\n### 4).虚拟内存调优\n\n设置较低的比率会导致高频但用时短的写操作，这适合 Ceph 等 I/O 密集型应用。设置较高的比率会导致低频但用时长的写操作，这会产生较小的系统开销，但可能会造成应用响应时间变长\n\n```bash\n#脏内存占总系统总内存的百分比，达到此比率时内核会开始在后台写出数据\nvm.dirty_background_ratio\n\n#脏内存占总系统总内存的百分比，达到此比率时写入进程停滞，而系统会将内存页清空到后端存储\nvm.dirty_ratio\n\n#控制交换分区的使用,生产中建议完全关闭，会拖慢系统运行速度\nvm.swappiness\n\n#系统尽力保持可用状态的RAM大小。在一个RAM大于48G的系统上，建议设置为4G\nvm.min_free_kbytes\n```\n\n## 2.Ceph 本身调优\n\n### 1).最佳实践\n\n- MON 的性能对集群总体性能至关重要，应用部署于专用节点，为确保正确仲裁，数量应为奇数个\n- 在 OSD 节点上，操作系统、OSD 数据、OSD 日志应当位于独立的磁盘上，以确保满意的吞吐量\n- 在集群安装后，需要监控集群、排除故障并维护，尽管 Ceph 具有自愈功能。如果发生性能问题，首先在磁盘、网络和硬件层面上调查。然后逐步转向 RADOS 块设备和 Ceph 对象网关\n\n### 2).影响 I/O 的 6 大操作\n\n- 业务数据写入\n- 数据恢复\n- 数据回填\n- 数据重平衡\n- 数据一致性校验\n- 快照清理\n\n### 3).OSD 生产建议\n\n- 更快的日志性能可以改进响应时间，建议将单独的低延迟 SSD 或者 NVMe 设备用于 OSD 日志。\n- 多个日志可以共享同一 SSD，以降低存储基础架构的成本。但是不能将过多 OSD 日志放在同一设备上。\n- 建议每个 SATA OSD 设备不超过 6 个 OSD 日志，每个 NVMe 设备不超过 12 个 OSD 日志。\n- 需要说明的是，当用于托管日志的 SSD 或者 NVMe 设备故障时，使用它托管其日志的所有 OSD 也都变得不可用\n\n### 4).硬件建议\n\n- 将一个 raid1 磁盘用于 ceph 操作系统\n- 每个 OSD 一块硬盘，尽量将 SSD 或者 NVMe 用于日志\n- 使用多个 10Gb 网卡，每个网络一个双链路绑定（建议生产环境 2 个网卡 4 个光模块，2 个万兆口做为数据的交换，2 个万兆口做业务流量）\n- 每个 OSD 预留 1 个 CPU,每个逻辑核心 1GHz，分配 16GB 内存，外加每个 OSD 2G 内存\n\n### 5).RBD 生产建议\n\n- 块设备上的工作负载通常是 I/O 密集型负载，例如在 OpenStack 中虚拟机上运行数据库。\n- 对于 RBD,OSD 日志应当位于 SSD 或者 NVMe 设备上\n- 对后端存储，可以使用不同的存储设备以提供不同级别的服务\n\n### 6).对象网关生产建议\n\n- Ceph 对象网关工作负载通常是吞吐密集型负载。但是其 bucket 索引池为 I/O 密集型工作负载模式。应当将这个池存储在 SSD 设备上\n- Ceph 对象网关为每个存储桶维护一个索引。Ceph 将这一索引存储在 RADOS 对象中。当存储桶存储数量巨大的对象时（超过 100000 个），索引性能会降低，因为只有一个 RADOS 对象参与所有索引操作。\n- Ceph 可以在多个 RADOS 对象或分片中保存大型索引。可以在 ceph.conf 中设置 rgw_override_bucket_index_max_shards 配置参数来启用该功能。此参数的建议值是存储桶中预计对象数量除以 10000\n- 当索引变大，Ceph 通常需要重新划分存储桶。rgw_dynamic_resharding 配置控制该功能，默认为 true\n\n### 7).CephFS 生产建议\n\n- 存放目录结构和其他索引的元数据池可能会成为 CephFS 的瓶颈。因此，应该将 SSD 设备用于这个池\n- 每个 MDS 维护一个内存中缓存 ，用于索引节点等不同类型的项目。Ceph 使用 mds_cache_memory_limit 配置参数限制这一缓存的大小。其默认值为 1GB，可以在需要时调整，得不得超过系统总内存数\n\n### 8).Monitor 生产建议\n\n- 最好为每个 MON 一个独立的服务器/虚拟机\n- 小型和中型集群，使用 10000RPM 的磁盘，大型集群使用 SSD\n- CPU 使用方面：使用一个多核 CPU，最少 16G 内存，最好不要和 osd 存放在同一个服务器上\n\n### 9).将 OSD 日志迁移到 SSD\n\n强烈建议生产中千万不要这么干，一定在集群初始化的时候就定制好\n\n```bash\n#集群中设置标志位停止指定的osd使用\nceph osd set noout\n\n#停止osd的进程\nsystemctl stop ceph-osd@3\n\n#将所有的日志做刷盘处理，刷盘到osd中\nceph-osd -i 3 --flush-journal\n\n#删除该osd现有的日志\nrm -f /var/lib/ceph/osd/ceph-3/journal\n\n#/dev/sdc1为SSD盘创建一个软连接\nln -s /dev/sdc1 /var/lib/ceph/osd/ceph-3/journal\n\n#刷出日志\nceph-osd -i 3 --mkjournal\n\n#启动osd\nsystemctl start ceph-osd@3\n\n#移除标志位\nceph osd unset noout\n```\n\n### 10).存储池中 PG 的计算方法\n\n- 通常，计算一个池中应该有多少个归置组的计算方法 = 100 \\* OSDs(个数) / size(副本数)\n\n- 一种比较通用的取值规则：\n\n  - 少于 5 个 OSD 时可把 pg_num 设置为 128\n  - OSD 数量在 5 到 10 个时，可把 pg_num 设置为 512\n  - OSD 数量在 10 到 50 个时，可把 pg_num 设置为 4096\n  - OSD 数量大于 50 时，建议自行计算\n\n- 自行计算 pg_num 聚会时的工具\n\n  - pgcalc：[https://ceph.com/pgcalc/](https://ceph.com/pgcalc/)\n  - cephpgc：[https://access.redhat.com/labs/cephpgc/](https://access.redhat.com/labs/cephpgc/)\n\n- 注意：在实际的生产环境中我们很难去预估需要多少个 pool，每个 pool 所占用的数据大小的百分百。所以正常情况下需要在特定的情况选择动态扩缩容 pg 的大小\n\n### 11).PG 与 PGP\n\n> 通常而言，PG 与 PGP 是相同的当我们为一个池增加 PG 时，PG 会开始分裂，这个时候，OSD 上的数据开始移动到新的 PG，但总体而言，此时，数据还是在一个 OSD 的不同 PG 中迁移而我们一旦同时增加了 PGP，则 PG 开始在多个 OSD 上重平衡，这时会出现跨 OSD 的数据迁移\n\n- ceph osd pool create poolName PgNum PgpNum\n- 当变动 pg 数量只是针对当前的特定池中的 osd 发生变动影响范围只是一个池的 pg 平衡\n- 正常情况下一个 osd 最多承载 100 个 pg\n- 当 pgp 发生大变动的时候会导致原本这个池中的 pg 变动导致池中 osd，过载或者有很大剩余性能，ceph 集群会将过大的性能均衡到各个性能使用小的 osd 上，这个时候就会发生数据的大规模迁移，大量的 i/O 写入会占有网络带宽会严重影响使用中的 pg 性能导致阻塞发生。\n- 建议的做法是将 pg_num 直接设置为希望作为最终值的 PG 数量，而 PGP 的数量应当慢慢增加，以确保集群不会因为一段时间内的大量数据重平衡而导致的性能下降\n\n### 12).Ceph 生产网络建议\n\n- 尽可能使用 10Gb 网络带宽以上的万兆带宽(内网)\n- 尽可能使用不同的 cluster 网络和 public 网络\n- 做好必要的网络设备监控防止网络过载\n\n### 13).OSD 和数据一致性校验\n\n> 清理会影响 ceph 集群性能，但建议不要禁用此功能，因为它能提供完数据的完整性\n\n- 清理：检查对象的存在性、校验和以及大小\n- 深度清理：检查对象的存在性和大小，重新计算并验证对象的校验和。(最好不开严重影响性能)\n\n```bash\n#清理调优参数\nosd_scrub_begin_hour =                    #取值范围0-24\nosd_scrub_end_hour = end_hbegin_hour our  #取值范围0-24\nosd_scrub_load_threshold                  #当系统负载低于多少的时候可以清理，默认为0.5\nosd_scrub_min_interval                    #多久清理一次，默认是一天一次（前提是系统负载低于上一个参数的设定）\nosd_scrub_interval_randomize_ratio        #在清理的时候，随机延迟的值，默认是0.5\nosd_scrub_max_interval                    #清理的最大间隔时间，默认是一周（如果一周内没清理过，这次就必须清理，不管负载是多少）\nosd_scrub_priority                        #清理的优先级，默认是5\nosd_deep_scrub_interal                    #深度清理的时间间隔，默认是一周\nosd_scrub_sleep                           #当有磁盘读取时，则暂停清理，增加此值可减缓清理的速度以降低对客户端的影响，默认为0,范围0-1\n```\n\n```bash\n#显示最近发生的清理和深度清理\nceph pg dump all  # 查看LAST_SCRUB和LAST_DEEP_SCRUB\n#-将清理调度到特定的pg\nceph pg scrub pg-id\n#将深度清理调度到特定的pg\nceph pg deep-scrub pg-id\n#为设定的池设定清理参数\nceph osd pool set <pool-name> <parameter> <value>\n    noscrub # 不清理，默认为false\n    nodeep-scrub # 不深度清理，默认为false\n    scrub_min_interval # 如果设置为0，则应用全局配置osd_scrub_min_interval\n    scrub_max_interval # 如果设置为0，则应用全局配置osd_scrub_max_interval\n    deep_scrub_interval # 如果设置为0，则应用全局配置osd_scrub_interval\n```\n\n### 14).快照的生产建议\n\n- 快照在池级别和 RBD 级别上提供。当快照被移除时，ceph 会以异步操作的形式删除快照数据，称为快照修剪进程\n- 为减轻快照修剪进程会影响集群总体性能。可以通过配置`osd_snap_trim_sleep`来在有客户端读写操作的时候暂停修剪，参数的值范围是`0`到`1`\n- 快照修剪的优先级通过使用`osd_snap_trim_priority`参数控制，默认为`5`\n\n### 15).保护数据和 osd\n\n- 需要控制回填和恢复操作，以限制这些操作的影响\n- 回填发生于新的 osd 加入集群时，或者 osd 死机并且 ceph 将其 pg 分配到其他 osd 时。在这种场景中，ceph 必须要在可用的 osd 之间复制对象副本\n- 恢复发生于新的 osd 已有数据时，如出现短暂停机。在这种情形下，ceph 会简单的重放 pg 日志\n\n  - 管理回填和恢复操作的配置项\n\n```bash\n#用于限制每个osd上用于回填的并发操作数，默认为1\nosd_max_backfills\n\n#用于限制每个osd上用于恢复的并发操作数，默认为3\nosd_recovery_max_active\n\n#恢复操作的优先级，默认为3\nosd_recovery_op_priority\n```\n\n### 16).OSD 数据存储后端\n\n> BlueStore 管理一个，两个或（在某些情况下）三个存储设备。在最简单的情况下，BlueStore 使用单个（主）存储设备。存储设备通常作为一个整体使用，BlueStore 直接占用完整设备。该主设备通常由数据目录中的块符号链接标识。数据目录挂载成一个 tmpfs，它将填充（在启动时或 ceph-volume 激活它时）所有常用的 OSD 文件，其中包含有关 OSD 的信息，例如：其标识符，它所属的集群，以及它的私钥。还可以使用两个额外的设备部署 BlueStore\n\n- WAL 设备（在数据目录中标识为 block.wal）可用于 BlueStore 的内部日志或预写日志。只有设备比主设备快（例如，当它在 SSD 上并且主设备是 HDD 时），使用 WAL 设备是有用的。\n- 数据库设备（在数据目录中标识为 block.db）可用于存储 BlueStore 的内部元数据。 BlueStore（或者更确切地说，嵌入式 RocksDB）将在数据库设备上放置尽可能多的元数据以提高性能。如果数据库设备填满，元数据将写到主设备。同样，数据库设备要比主设备更快，则提供数据库设备是有帮助的。\n- 如果只有少量快速存储可用（例如，小于 1GB），我们建议将其用作 WAL 设备。如果还有更多，配置数据库设备会更有意义。 BlueStore 日志将始终放在可用的最快设备上，因此使用数据库设备将提供与 WAL 设备相同的优势，同时还允许在其中存储其他元数据。\n- 正常 L 版本推荐使用 filestore，M 版本可以考虑使用 bluestore\n- 推荐优化文章：[https://www.cnblogs.com/luxiaodai/p/10006036.html#\\_lab2_1_9](https://www.cnblogs.com/luxiaodai/p/10006036.html#_lab2_1_9)\n\n### 17).关于性能测试\n\n- 推荐使用 fio 参考阿里云文档：[https://help.aliyun.com/document_detail/95501.html?spm=a2c4g.11174283.6.659.38b44da2KZr2Sn](https://help.aliyun.com/document_detail/95501.html?spm=a2c4g.11174283.6.659.38b44da2KZr2Sn)\n- dd\n\n```bash\necho 3 > /proc/sys/vm/drop_caches\ndd if=/dev/zero of=/var/lib/ceph/osd/ceph-0/test.img bs=4M count=1024 oflag=direct\ndd if=/var/lib/ceph/osd/ceph-0/test.img of=/dev/null bs=4M count=1024 oflag=direct\n```\n\n- rados bench 性能测试\n\n```bash\nrados bench -p <pool_name> <seconds> <write|seq|rand> -b <block size> -t --no-cleanup\n    pool_name 测试所针对的池\n    seconds 测试所持续的时间，以秒为单位\n    <write|seq|rand> 操作模式，分别是写、顺序读、随机读\n    -b <block_size> 块大小，默认是4M\n    -t 读/写的并行数，默认为16\n    --no-cleanup 表示测试完成后不删除测试用的数据。在做读测试之前，需要使用该参数来运行一遍写测试来产生测试数据，在全部测试完成以后，可以行rados -p <pool_name> cleanup来清理所有测试数据\n\n#示例：\nrados bench -p rbd 10 write --no-cleanup\nrados bench -p rbd 10 seq\n```\n\n- rbd bench 性能测试\n\n```bash\nrbd bench -p <pool_name> <image_name> --io-type <write|read> --io-size <size> --io-threads <num> --io-total <size> --io-pattern <seq|rand>\n    --io-type 测试类型，读/写\n    --io-size 字节数，默认4096\n    --io-threads 线程数，默认16\n    --io-total  读/写的总大小，默认1GB\n    --io-pattern  读/写的方式，顺序还是随机\n\n#示例：\nhttps://edenmal.moe/post/2017/Ceph-rbd-bench-Commands/\n```\n\n## 3.设置集群的标志\n\n**flag 操作**\n\n- 只能对整个集群操作，不能针对单个 osd\n\n  - ceph osd set\n  - ceph osd unset\n\n```bash\n#示例：\nceph osd set nodown\nceph osd unset nodown\nceph -s\n```\n\n| 标志名称     | 含义用法详解                                                                                                                                                     |\n| :----------- | :--------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| noup         | OSD 启动时，会将自己在 MON 上标识为 UP 状态，设置该标志位，则 OSD 不会被自动标识为 up 状态                                                                       |\n| nodown       | OSD 停止时，MON 会将 OSD 标识为 down 状态，设置该标志位，则 MON 不会将停止的 OSD 标识为 down 状态，设置 noup 和 nodown 可以防止网络抖动                          |\n| noout        | 设置该标志位，则 mon 不会从 crush 映射中删除任何 OSD。对 OSD 作维护时，可设置该标志位，以防止 CRUSH 在 OSD 停止时自动重平衡数据。OSD 重新启动时，需要清除该 flag |\n| noin         | 设置该标志位，可以防止数据被自动分配到 OSD 上                                                                                                                    |\n| norecover    | 设置该 flag，禁止任何集群恢复操作。在执行维护和停机时，可设置该 flag                                                                                             |\n| nobackfill   | 禁止数据回填                                                                                                                                                     |\n| noscrub      | 禁止清理操作。清理 PG 会在短期内影响 OSD 的操作。在低带宽集群中，清理期间如果 OSD 的速度过慢，则会被标记为 down。可以该标记来防止这种情况发生                    |\n| nodeep-scrub | 禁止深度清理                                                                                                                                                     |\n| norebalance  | 禁止重平衡数据。在执行集群维护或者停机时，可以使用该 flag                                                                                                        |\n| pause        | 设置该标志位，则集群停止读写，但不影响 osd 自检                                                                                                                  |\n| full         | 标记集群已满，将拒绝任何数据写入，但可读                                                                                                                         |\n\n# 参考文档\n\n[https://poph163.com/category/分布式存储/](https://poph163.com/category/%e5%88%86%e5%b8%83%e5%bc%8f%e5%ad%98%e5%82%a8/)\n","source":"_posts/ceph/Ceph 集群部署.md","raw":"---\ntitle: \"Ceph集群部署\"\ntags: ceph\ncategories: Ceph 学习\ntoc: true\ncover:\ndate: 2021-10-01 16:00:00\n---\n\n# 一、Ceph 简介\n\n> 一个 Ceph 存储集群需要至少一个 Ceph 监视器、Ceph 管理器和 Ceph OSD(对象存储守护进程)。在运行 Ceph 文件系统客户端时，也需要 Ceph 元数据服务器。\n\n<!-- more -->\n\n- **Monitors**:\n\n  - Ceph 监视器(`ceph-mon`)维护着展示集群状态的各种图表，包括监视器图、管理器图、OSD 图、MDS 图和 CRUSH 图。这些图是 Ceph 守护进程相互协调所必需的关键集群状态。\n  - 监视器还负责管理守护进程和客户端之间的身份验证。为了实现冗余和高可用性，通常需要至少三个监视器。\n\n- **Managers**: [Ceph Manager](https://docs.ceph.com/en/latest/glossary/#term-Ceph-Manager)守护程序(`ceph-mgr`)\n\n  - 负责跟踪运行时指标和 Ceph 群集的当前状态，包括存储利用率、当前性能指标和系统负载。\n  - Ceph Manager 守护程序还托管基于 python 的模块来管理和公开 Ceph 群集信息，包括基于 Web 的[Ceph 仪表板和](https://docs.ceph.com/en/latest/mgr/dashboard/#mgr-dashboard) [REST API](https://docs.ceph.com/en/latest/mgr/restful)。高可用性通常需要至少两个管理器。\n\n- **OSDs**: [Ceph OSD](https://docs.ceph.com/en/latest/glossary/#term-Ceph-OSD) (object storage daemon, `ceph-osd`)存储数据，处理数据复制，恢复，重新平衡，并提供一些监视信息到 Ceph 监视器和管理器,通过检查其他 Ceph OSD 守护进程检测信号.冗余和高可用性通常需要至少 3 个 Ceph OSD。\n- **MDSs**: [Ceph 元数据服务器](https://docs.ceph.com/en/latest/glossary/#term-Ceph-Metadata-Server)（MDS, `ceph-mds`）代表[Ceph 文件系统](https://docs.ceph.com/en/latest/glossary/#term-Ceph-File-System)存储元数据（即 Ceph 块设备和 Ceph 对象存储不使用 MDS）。Ceph 元数据服务器允许 POSIX 文件系统用户执行基本命令 (如`ls`, `find`, `etc`等)，而不会给 Ceph 存储群集带来巨大负担。\n\n> Ceph 将数据存储为逻辑存储池中的对象。使用[CRUSH 算法](https://docs.ceph.com/en/latest/glossary/#term-CRUSH)，Ceph 计算哪个放置组应包含对象，并进一步计算哪个 Ceph OSD 守护程序应存储该放置组。CRUSH 算法使 Ceph 存储群集能够动态扩展、重新平衡和恢复。\n\n参考链接：\n\n- [https://mp.weixin.qq.com/s/TWXPPk7hE1D4AGsHg7CIMg](https://mp.weixin.qq.com/s/TWXPPk7hE1D4AGsHg7CIMg)\n- [https://www.jianshu.com/p/cc3ece850433](https://www.jianshu.com/p/cc3ece850433)\n- [https://mp.weixin.qq.com/s/QXRdyYKSKIa1aLNI8dOGcQ](https://mp.weixin.qq.com/s/QXRdyYKSKIa1aLNI8dOGcQ)\n- [https://blog.csdn.net/xiaoquqi/article/details/43055031](https://blog.csdn.net/xiaoquqi/article/details/43055031)\n\n# 二、Cephadm 部署集群\n\n简单，简述，详细参考：[https://docs.ceph.com/en/latest/cephadm/#cephadm](https://docs.ceph.com/en/latest/cephadm/#cephadm)\n\n## 1.环境规划\n\n| 主机名 | 内网 IP         | 操作系统 | 角色                | 配置                         |\n| ------ | --------------- | -------- | ------------------- | ---------------------------- |\n| ceph1  | 192.168.200.128 | Debian11 | cephadm,mon,mgr,osd | 2C,2G,20G 系统盘，20G 数据盘 |\n| ceph2  | 192.168.200.131 | Debian11 | cephadm,mon         | 2C,2G,20G 系统盘，20G 数据盘 |\n| ceph3  | 192.168.200.132 | Debian11 | cephadm,mon         | 2C,2G,20G 系统盘，20G 数据盘 |\n\n> 典型的 Ceph 集群有三个或五个监视器守护程序，分布在不同的主机上。如果群集中有五个或更多节点，我们建议部署五个监视器。\n\n当 Ceph 知道 mon 应该使用什么 IP 子网时，它可以随着群集的增长（或收缩）自动部署和缩放 mon。默认情况下，Ceph 假定其他 mon 使用与第一个 mon 的 IP 相同的子网。\n\n在单个子网的情况下，如果向集群中添加主机，默认最多只会添加 5 个 mon 如果有特定的 IP 子网给 mon 使用，可以使用 CIDR 格式配置该子网。\n\n## 2.前置(所有节点)\n\n> [https://docs.ceph.com/en/pacific/cephadm/install/](https://docs.ceph.com/en/pacific/cephadm/install/)\n\n各节点配置 hosts\n\n```conf\n10.200.10.31 ceph-pro-1-10-200-10-31\n10.200.10.32 ceph-pro-2-10-200-10-32\n10.200.10.33 ceph-pro-3-10-200-10-33\n10.200.10.34 ceph-pro-4-10-200-10-34\n10.200.10.35 ceph-pro-5-10-200-10-35\n```\n\n## 3.安装 CEPHADM(所有节点)\n\n```bash\n#下载cephadm\ncurl --remote-name --location https://hub.shutcm.cf/ceph/ceph/raw/pacific/src/cephadm/cephadm\nchmod +x cephadm\n#设置源\n./cephadm add-repo --release pacific\nsed -i 's#https://download.ceph.com#https://mirrors.aliyun.com/ceph#g' /etc/apt/sources.list.d/ceph.list\napt-get update\n#安装cephadm命令\n./cephadm install\n#确认在PATH中\nwhich cephadm\nrm -fr cephadm\n#安装ceph命令\ncephadm install ceph-common\n```\n\n## 4.引导新群集(第一台)\n\n> 创建新的 Ceph 集群的第一步是在 Ceph 集群的第一台主机上运行 cephadm bootstrap 命令，运行此命令的操作将创建 Ceph 集群的第一个“监视程序守护程序”。\n\n而该监视程序守护程序需要一个 IP 地址，必须将 Ceph 集群的第一个主机的 IP 地址传递给 ceph bootstrap 命令。\n\n```bash\ncephadm bootstrap --mon-ip 10.200.10.31\n#设置addr\n#ceph orch host set-addr ceph1 192.168.200.128\n#检查\nceph orch host ls\nceph -s\n```\n\n此命令将会：\n\n```\n1) 在本地主机上为新集群创建监视和管理器守护程序\n2) 为Ceph集群生成一个新的SSH密钥，并将其添加到root用户的/root/.ssh/authorized_keys文件中\n3) 将最小配置文件写入/etc/ceph/ceph.conf\n4) 将client.admin管理特权密钥写入/etc/ceph/ceph.client.admin.keyring\n5) 将公钥写入/etc/ceph/ceph.pub\n```\n\n## 5.向群集添加主机\n\n> 在解析主机名等方面，cephadm 的要求非常低, 通过以下命令可以明确 IP 与主机名之间的解析：ceph orch host add\n\n**注意**：添加主机时会自动创建 mon 服务，先按照 禁用监视器自动部署( 5.4 (1) ) 或 调整默认值监视器数量 (5.2 节)，再添加主机。\n\n在新主机 root 用户的 authorized_keys 文件中安装集群的公共 SSH 密钥\n\n```bash\n#ssh-copy-id -f -i /etc/ceph/ceph.pub root@*<new-host>*\nssh-copy-id -f -i /etc/ceph/ceph.pub root@ceph-pro-1-10-200-10-31\nssh-copy-id -f -i /etc/ceph/ceph.pub root@ceph-pro-2-10-200-10-32\nssh-copy-id -f -i /etc/ceph/ceph.pub root@ceph-pro-3-10-200-10-33\nssh-copy-id -f -i /etc/ceph/ceph.pub root@ceph-pro-4-10-200-10-34\nssh-copy-id -f -i /etc/ceph/ceph.pub root@ceph-pro-5-10-200-10-35\n```\n\n添加方式两种：\n\n- 命令方式添加\n\n```bash\n#ceph orch host add *<newhost>* [*<ip>*] [*<label1> ...*]\nceph orch host add ceph-pro-2-10-200-10-32 10.200.10.32 --labels _admin\n```\n\n- yaml 方式添加\n\n`host.yml`\n\n```yaml\n---\nservice_type: host\naddr: 192.168.200.131\nhostname: ceph2\nlabels:\n  - mon\n---\nservice_type: host\naddr: 192.168.200.132\nhostname: ceph3\nlabels:\n  - mon\n```\n\n## 3.检查状态\n\n```bash\nceph orch host ls\nceph -s\n```\n\n## 6.部署 OSD\n\n**[https://docs.ceph.com/en/pacific/cephadm/services/osd/#](https://docs.ceph.com/en/pacific/cephadm/services/osd/#)**\n\n> 当有新的 osd 加入集群或者移除了 osd，就会把状态上报给 Monitor，Monitor 知道了 osd map 发生了变化就会触发 rebalancing，确保 pg 能够平滑的移动到各个 osd 上，以 pg 为整体进行数据重平衡，重平衡的过程中可能会影响性能，一次性加入的 osd 越多，数据 rebalancing 就越频繁。\n\n> 当在做 rebalance 的时候，每个 osd 都会按照 osd_max_backfills 指定数量的线程来同步，如果该数值比较大，同步会比较快，但是会影响部分性能；为了避免 rebalance 带来的性能影响，可以对 rebalance 进行关闭；添加完 osd 后再打开。\n\n### 1).rebalance 关闭\n\n```bash\n# 设置标志位\nceph osd set norebalance\n\n# 关闭数据填充\nceph osd set nobackfill\n\n# 查看集群状态\nceph -s\n  cluster:\n    id:     87cdd3b2-987b-11eb-989e-000c29b12ae1\n    health: HEALTH_WARN\n            nobackfill,norebalance flag(s) set  # 有此信息\n```\n\n### 2).rebalance 开启\n\n```bash\n#开启数据填充\nceph osd unset nobackfill\n#开启rebalance\nceph osd unset norebalance\n# 查看集群状态\nceph -s\n  cluster:\n    id:     87cdd3b2-987b-11eb-989e-000c29b12ae1\n    health: HEALTH_OK\n```\n\n### 3).列出节点可用设备\n\n```bash\n#ceph orch device ls [--wide]\nceph orch device ls --wide\n```\n\n如果满足以下所有条件，则认为存储设备可用\n\n```\n1) 设备必须没有分区\n2) 设备不得具有任何LVM状态\n3) 设备不得挂载\n4) 设备不得包含文件系统\n5) 设备不得包含Ceph BlueStore OSD\n6) 设备必须大于5 GB\n```\n\n### 4).创建 osd\n\n```bash\n#需要至少 3 个 Ceph OSD 以实现冗余和高可用性\nceph orch daemon add osd ceph-pro-1-10-200-10-31:/dev/sdb\nceph orch daemon add osd ceph-pro-2-10-200-10-32:/dev/sdb\nceph orch daemon add osd ceph-pro-3-10-200-10-33:/dev/sdb\n```\n\n## 7.集群高可用\n\n```bash\n#需要至少三个监视器才能实现冗余和高可用性\nceph orch apply mon 3\n# 部署mon到指定节点\nceph orch host label add *<host>* mon\n#至少需要两个管理器才能实现高可用性\nceph orch apply mgr 3\n#\n```\n\n## 8.CephFS 部署\n\n## 9.部署 RGW\n\n[https://docs.ceph.com/en/pacific/cephadm/services/rgw/](https://docs.ceph.com/en/pacific/cephadm/services/rgw/)\n\n# 三、运维\n\n[https://www.cnblogs.com/royaljames/p/9807532.html](https://www.cnblogs.com/royaljames/p/9807532.html)\n\n## 1.向群集添加主机\n\n```bash\n#1.在新主机的根用户文件中安装群集的公共 SSH 密钥\nssh-copy-id -f -i /etc/ceph/ceph.pub root@host2\n#2.告诉 Ceph 新节点是群集的一部分：\nceph orch host add host2\n```\n\n## 2.部署其他监视器(monitor)\n\n> 典型的 Ceph 群集具有分布在不同主机的三个或五个监视器守护程序。如果群集中有五个或更多节点，我们建议部署五个监视器。\n\n当 Ceph 知道监视器应该使用什么 IP 子网时，它可以随着群集的增长（或收缩）自动部署和缩放监视器。默认情况下，Ceph 假定其他监视器应使用与第一个监视器的 IP 相同的子网。\n\n如果您的 Ceph 监视器（或整个群集）住在单个子网中，则在向群集添加新主机时，默认情况下，cephadm 会自动添加多达 5 个监视器。无需进一步步骤。\n\n```bash\n#如果有特定的 IP 子网应该由监视器使用，您可以用CIDR格式（例如 ） 配置该子网，Cephadm 仅在配置的子网中配置了 IP 的主机上部署新的监视器守护程序。\nceph config set mon public_network 10.1.2.0/24\n#如果要调整 5 个监视器的默认值：\nceph orch apply mon *<number-of-monitors>*\n#若要在一组特定的主机上部署监视器，请确保在此列表中包括第一个（引导）主机。\nceph orch apply mon *<host1,host2,host3,...>*\n#您可以通过使用主机标签来控制监视器运行的主机。要将标签设置为相应的主机，请：mon\nceph orch host label add *<hostname>* mon\n#要查看当前主机和标签：\nceph orch host ls\n#例如：\n# ceph orch host label add host1 mon\n# ceph orch host label add host2 mon\n# ceph orch host label add host3 mon\n# ceph orch host ls\nHOST   ADDR   LABELS  STATUS\nhost1         mon\nhost2         mon\nhost3         mon\nhost4\nhost5\n#告诉 cephadm 根据标签部署监视器：\nceph orch apply mon label:mon\n#您可以显式指定每个监视器的 IP 地址或 CIDR 网络，并控制其放置位置。要禁用自动监视器部署：\nceph orch apply mon --unmanaged\n#要部署每个附加监视器：\nceph orch daemon add mon *<host1:ip-or-network1> [<host1:ip-or-network-2>...]*\n#例如，要在使用 IP 地址上部署第二个监视器，在网络上部署第三个监视器\n# ceph orch apply mon --unmanaged\n# ceph orch daemon add mon newhost1:10.1.2.123\n# ceph orch daemon add mon newhost2:10.1.2.0/24\n\n#若要确保监视器应用于这三台主机中的每一个主机，请运行以下命令：\nceph orch apply mon \"host1,host2,host3\"\n```\n\n# 使用 YAML 规范\n\n```bash\nceph orch apply -i file.yaml\n```\n\n```yaml\nservice_type: mon\nplacement:\n  hosts:\n    - host1\n    - host2\n    - host3\n```\n\n## 3.部署 OSD\n\n### 1.所有群集主机上的存储设备清单可以显示\n\n```bash\nceph orch device ls\n```\n\n- 设备必须没有分区。\n- 设备不得具有任何 LVM 状态。\n- 不得安装设备。\n- 设备不能包含文件系统。\n- 设备不得包含 Ceph BlueStore OSD。\n- 设备必须大于 5 GB。\n\n### 2.创建新 OSD 的方法\n\n```bash\n# 1.告诉 Ceph 使用任何可用和未使用的存储设备：\nceph orch apply osd --all-available-devices\n# 2.从特定主机上的特定设备创建 OSD：ceph orch daemon add osd *<host>*:*<device-path>*\nceph orch daemon add osd host1:/dev/sdb\n# 3.使用OSD 服务规范描述设备，根据设备属性、此类设备类型（SSD 或 HDD）、设备型号名称、大小或设备存在的主机使用：\nceph orch apply osd -i spec.yml\n```\n\n## 4.部署 MDS\n\n使用 CephFS 文件系统需要一个或多个 MDS 守护程序。如果使用较新的接口创建新文件系统，则会自动创建这些接口。有关详细信息，请参阅 FS 卷和子卷。\n\n```bash\nceph orch apply mds *<fs-name>* --placement=\"*<num-daemons>* [*<host1>* ...]\"\n```\n\n## 5.部署 RGW\n\n## 6.管理 Monitor map\n\n### 1).多 Monitor 同步机制\n\n> 在生产环境建议最少三节点 monitor，以确保 cluster map 的高可用性和冗余性,monitor 节点不应该过多甚至操作 9 节点的行为,会导致数据读写时间下降，影响系统集群的性能。\n\n- monitor 使用 paxos 算法作为集群状态上达成一致的机制。paxos 是一种分布式一致性算法。每当 monitor 修改 map 时，它会通过 paxos 发送更新到其他 monitor。Ceph 只有在大多数 monitor 就更新达成一致时提交 map 的新版本。\n- cluster map 的更新操作需要 Paxos 确认，但是读操作不经由 Paxos，而是直接访问本地的 kv 存储。\n\n### 2).Monitor 选举机制\n\n- 多个 monitor 之间需要建立仲裁并选择出一个 leader，其他节点则作为工作节点（peon）。\n- 在选举完成并确定 leader 之后，leader 将从所有其他 monitor 请求最新的 map epoc，以确保 leader 具有集群的最新视图。\n- 要维护 monitor 集群的正常工作，必须有超过半数的节点正常。\n\n### 3).Monitor 租约\n\n- 在 Monitor 建立仲裁后，leader 开始分发短期的租约到所有的 monitors。让它们能够分发 cluster map 到 OSD 和 client。\n- Monitor 租约默认每 3s 续期一次。\n- 当 peon monitor 没有确认它收到租约时，leader 假定该 monitor 异常，它会召集新的选举以建立仲裁。\n- 如果 peon monitor 的租约到期后没有收到 leader 的续期，它会假定 leader 异常，并会召集新的选举。\n- 所以如果生产环境中存在多个 monitor 时候某个节点的超时会猝发节点的重新选举导致 client 无法第一时间拿到最新的 crushmap 图像也就无法去对应的 osd 上的 pv 写入数据了。\n\n### 4).常用的 monitor 管理\n\n```bash\n#打印monitor map信息\nceph mon dump\n\n#将monitor map导出为一个二进制文件\nceph mon getmap -o ./monmap\n\n#打印导出的二进制文件的内容\nmonmaptool --print ./monmap\n\n#修改二进制文件，从monmap删除某个monitor\nmonmaptool ./monmap --rm <id>\n\n#修改二进制文件，往monmap中添加一个monitor\nmonmaptool ./monmap --add <id> <ip:port>\n\n#导入一个二进制文件，在导入之前，需要先停止monitor\nceph-mon -i <id> --inject-monmap ./monmap\n```\n\n## 7.管理 OSD Map\n\n- 每当 OSD 加入或离开集群时，Ceph 都会更新 OSD map。\n- OSD 不使用 leader 来管理 OSD map，它们会在自身之间传播同步 map。OSD 会利用 OSD map epoch 标记它们交换的每一条信息，当 OSD 检测到自己已落后时，它会使用其对等 OSD 执行 map 更新。\n- 在大型集群中 OSD map 更新会非常频繁，节点会执行递增 map 更新。\n- Ceph 也会利用 epoch 来标记 OSD 和 client 之间的消息。当 client 连接到 OSD 时 OSD 会检查 epoch。如果发现 epoch 不匹配，则 OSD 会以正确的 epoch 响应，以便客户端可以更新其 OSD map。\n- OSD 定期向 monitor 报告自己的状态，OSD 之间会交换心跳，以便检测对等点的故障，并报告给 monitor。\n- leader monitor 发现 OSD 故障时，它会更新 map，递增 epoch，并使用 Paxos 更新协议来通知其他 monitor，同时撤销租约，并发布新的租约，以使 monitor 以分发最新的 OSD map。\n\n### 1).OSD 状态解读\n\n- 1.正常状态的 OSD 为 up 且 in\n- 2.当 OSD 故障时，守护进程 offline，在 5 分钟内，集群仍会将其标记为 up 和 in，这是为了防止网络抖动\n- 3.如果 5 分钟内仍未恢复，则会标记为 down 和 out。此时该 OSD 上的 PG 开始迁移。这个 5 分钟的时间间隔可以通过 mon_osd_down_out_interval 配置项修改\n- 4.当故障的 OSD 重新上线以后，会触发新的数据再平衡\n- 5.当集群有 noout 标志位时，则 osd 下线不会导致数据恢复\n- 6.OSD 每隔 6s 会互相验证状态。并每隔 120s 向 mon 报告一次状态。\n\n### 2).OSD map 命令\n\n```bash\nceph osd dump\nceph osd getmap -o binfile\nosdmaptool --print binfile\nosdmaptool --export-crush crushbinfile binfile\nosdmaptool --import-crush crushbinfile binfile\nosdmaptool --test-map-pg pgid binfile\n```\n\n### 3.)OSD 的状态\n\n- OSD 运行状态\n\n  - up\n  - down\n  - out\n  - in\n\n- OSD 容量状态\n\n  - nearfull\n  - full\n\n常用指令\n\n```bash\n#显示OSD状态\nceph osd stat\n\n#报告osd使用量\nceph osd df\n\n#查找指定osd位置\nceph osd find\n```\n\n### 4.)OSD 容量\n\n- 当集群容量达到 mon_osd_nearfull_ratio 的值时，集群会进入 HEALTH_WARN 状态。这是为了在达到 full_ratio 之前，提醒添加 OSD。默认设置为 0.85，即 85%\n- 当集群容量达到 mon_osd_full_ratio 的值时，集群将停止写入，但允许读取。集群会进入到 HEALTH_ERR 状态。默认为 0.95，即 95%。这是为了防止当一个或多个 OSD 故障时仍留有余地能重平衡数据\n\n设置方法：\n\n```bash\nceph osd set-full-ratio 0.95\nceph osd set-nearfull-ratio 0.85\nceph osd dump\n```\n\n### 5).OSD 状态参数\n\n```bash\n# osd之间传递心跳的间隔时间\nosd_heartbeat_interval\n\n# 一个osd多久没心跳，就会被集群认为它down了\nosd_heartbeat_grace\n\n# 确定一个osd状态为down的最少报告来源osd数\nmon_osd_min_down_reporters\n\n# 一个OSD必须重复报告一个osd状态为down的次数\nmon_osd_min_down_reports\n\n# 当osd停止响应多长时间，将其标记为down和out\nmon_osd_down_out_interval\n\n# monitor宣布失败osd为down前的等待时间\nmon_osd_report_timeout\n\n# 一个新的osd加入集群时，等待多长时间，开始向monitor报告\nosd_mon_report_interval_min\n\n# monitor允许osd报告的最大间隔，超时就认为它down了\nosd_mon_report_interval_max\n\n# osd向monitor报告心跳的时间\nosd_mon_heartbeat_interval\n```\n\n## 8.管理 PG\n\n### 1).管理文件到 PG 映射\n\ntest 对象所在 pg id 为 10.35，存储在三个 osd 上，分别为 osd.2、osd.1 和 osd.8，其中 osd.2 为 primary osd\n\n```bash\nrados -p test put test /etc/ceph/ceph.conf\nceph osd map test test\n    osdmap e201 pool 'test' (10) object 'test' -> pg 10.40e8aab5 (10.35) -> up ([2,1,8], p2) acting ([2,1,8], p2)\n\n#处于up状态的osd会一直留在PG的up set和acting set中，一旦主osd down，它首先会从up set中移除\n#然后从acting set中移除，之后从OSD将被升级为主。Ceph会将故障OSD上的PG恢复到一个新OSD上\n#然后再将这个新OSD加入到up和acting set中来维持集群的高可用性\n```\n\n### 2).管理 struck 状态的 PG\n\n- 如果 PG 长时间（mon_pg_stuck_threshold，默认为 300s）出现如下状态时，MON 会将该 PG 标记为 stuck：\n\n  - inactive：pg 有 peering 问题\n  - unclean：pg 在故障恢复时遇到问题\n  - stale：pg 没有任何 OSD 报告，可能其所有的 OSD 都是 down 和 out\n  - undersized：pg 没有充足的 osd 来存储它应具有的副本数\n\n- 默认情况下，Ceph 会自动执行恢复，但如果未能自动恢复，则集群状态会一直处于 HEALTH_WARN 或者 HEALTH_ERR\n\n- 如果特定 PG 的所有 osd 都是 down 和 out 状态，则 PG 会被标记为 stale。要解决这一情况，其中一个 OSD 必须要重生，且具有可用的 PG 副本，否则 PG 不可用\n\n- Ceph 可以声明 osd 或 PG 已丢失，这也就意味着数据丢失。需要说明的是，osd 的运行离不开 journal，如果 journal 丢失，则 osd 停止\n\n### 3).struck 状态操作\n\n```bash\n# 检查处于stuck状态的pg\nceph pg dump_stuck\n# 检查导致pg一致阻塞在peering状态的osd\nceph osd blocked-by\n# 检查某个pg的状态\nceph pg dump all|grep pgid\n# 声明pg丢失\nceph pg pgid mark_unfound_lost revert|delete\n# 声明osd丢失（需要osd状态为down且out）\nceph osd lost osdid --yes-i-really-mean-it\n```\n\n### 4).手动控制 PG 的 Primary OSD\n\n可以通过手动修改 osd 的权重以提升 特定 OSD 被选为 PG Primary OSD 的概率，避免将速度慢的磁盘用作 primary osd。\n\n需要先在配置文件中配置如下参数：\n\n```bash\nmon_osd_allow_primary_affinity = true\n```\n\n### 5).调整权重示例\n\n```bash\n1. 查看现在有多少PG的主OSD是osd.0\nceph pg dump |grep active+clean |egrep \"\\[0,\" |wc -l\n\n2. 修改osd.0的权重\nceph osd primary-affinity osd.0 0  # 权重范围从0.0到1.0\n\n3. 再次查看现在有多少PG的主OSD是osd.0\nceph pg dump |grep active+clean |egrep \"\\[0,\" |wc -l\n```\n\n## 9.Pool(存储池)管理\n\n[https://blog.csdn.net/weixin_42440345/article/details/81118964](https://blog.csdn.net/weixin_42440345/article/details/81118964)\n\n### PG 和 PGP 的区别\n\n[https://www.cnblogs.com/zphj1987/p/13575377.html](https://www.cnblogs.com/zphj1987/p/13575377.html)\n\nPG 是指定存储池存储对象的目录有多少个，PGP 是存储池 PG 的 OSD 分布组合个数\n\nPG 的增加会引起 PG 内的数据进行分裂，分裂到相同的 OSD 上新生成的 PG 当中\n\nPGP 的增加会引起部分 PG 的分布进行变化，但是不会引起 PG 内对象的变动\n\n### 4.)限制 pool 配置更改\n\n```bash\n#禁止池被删除\nosd_pool_default_flag_nodelete\n\n#禁止池的pg_num和pgp_num被修改\nosd_pool_default_flag_nopgchange\n\n#禁止修改池的size和min_size\nosd_pool_default_flag_nosizechange\n```\n\n### 1.查看 pool\n\n```bash\n#查看所有pool\nceph osd lspools\n#获取集群内所有POOL的概况信息,集群内POOL的个数、对应的POOL id、POOL名称、副本数、最小副本数，ruleset及POOL snap等信息\nceph osd pool ls detail\n#查看POOL的统计信息\n```\n\n### 2.创建 pool\n\n```bash\n#创建一个副本类型的POOL\nceph osd pool create {pool-name} {pg-num} [{pgp-num}] [{pgp-num}] [replicated] [ruleset]\n#举例：\nceph osd pool create rbd  32 32\n#创建一个纠删码类型的POOL\nceph osd pool create {pool-name} {pg-num} {pgp-num} erasure [erasure-code-profile] [ruleset]\n```\n\n在`{}`内的参数为必选项,`[]`内的参数均设有默认值,如果没有更改设计,可以不添加。\n\n参数的含义如下:\n\n- **pool-name**: POOL 的名字；必须添加。\n- **pg-num**: POOL 拥有的 PG 总数；必须添加。\n- **pgp-num**: POOL 拥有的 PGP 总数；非必须添加。默认与 pg-num 相同。\n- **replicated|erasure**: POOL 类型；非必须添加。如不指定为 erasure,则默认为 replicated 类型。\n- **ruleset**: POOL 所用的 CRUSH 规则 ID。非必须添加。默认为 0,若需指定其他 ruleset,需确保 ruleset 必须存在。\n- **erasure-code-profile**: 仅用于纠删码类型的 POOL。指定纠删码配置框架,此配置必须已由 osd erasure-code-profile set 定义\n\n这里强制选择 pg_num 和 pgp_num，因为 ceph 集群不能自动计算 pg 数量。下面有一些官方建议的 pg 使用数量：\n\n- 小于 5 个 osd 设置 pg_num 为 128\n- 5 到 10 个 osd 设置 pg_num 为 512\n- 10 到 50 个 osd 设置 pg_num 为 1024\n- 如果超过 50 个 osd 你需要自己明白权衡点，并且能自行计算 pg_num 的数量\n\npg_num 通用计算方法:\n\n(OSDs \\* 100)\n\nTotal PGs =  ------------\n\npool size\n\n### 3.修改 pool\n\n```bash\nceph osd pool set {pool-name} {key} {value}\nsize：设置存储池中的对象副本数，详情参见设置对象副本数。仅适用于副本存储池。\nmin_size：设置 I/O 需要的最小副本数，详情参见设置对象副本数。仅适用于副本存储池。\npg_num：计算数据分布时的有效 PG 数。只能大于当前 PG 数。\npgp_num：计算数据分布时使用的有效 PGP 数量。小于等于存储池的 PG 数。\nhashpspool：给指定存储池设置/取消 HASHPSPOOL 标志。\ntarget_max_bytes：达到 max_bytes 阀值时会触发 Ceph 冲洗或驱逐对象。\ntarget_max_objects：达到 max_objects 阀值时会触发 Ceph 冲洗或驱逐对象。\nscrub_min_interval：在负载低时，洗刷存储池的最小间隔秒数。如果是 0 ，就按照配置文件里的 osd_scrub_min_interval 。\nscrub_max_interval：不管集群负载如何，都要洗刷存储池的最大间隔秒数。如果是 0 ，就按照配置文件里的 osd_scrub_max_interval 。\ndeep_scrub_interval：“深度”洗刷存储池的间隔秒数。如果是 0 ，就按照配置文件里的 osd_deep_scrub_interval 。\n```\n\n### 4.删除存储池\n\n```bash\nceph osd pool delete {pool-name} [{pool-name} --yes-i-really-really-mean-it]\n```\n\n### 5.重命名存储池\n\n```bash\nceph osd pool rename {current-pool-name} {new-pool-name}\n```\n\n### 6.查看存储池统计信息\n\n```bash\nrados df\n```\n\n### 7.给存储池做快照\n\n```bash\nceph osd pool mksnap {pool-name} {snap-name}\n```\n\n### 8.删除存储池的快照\n\n```bash\nceph osd pool rmsnap {pool-name} {snap-name}\n```\n\n### 9.获取存储池选项值\n\n```bash\nceph osd pool get {pool-name} {key}\n```\n\n### 10.获取对象副本数\n\n```bash\nceph osd dump | grep 'replicated size'\n```\n\n### 11.设置存储池配额\n\n```bash\n命令格式：\n# ceph osd pool set-quota {pool-name} [max_objects {obj-count}] [max_bytes {bytes}]\n命令举例：\n# ceph osd pool set-quota rbd max_objects 10000\n```\n\n## 10.自定义 Crush Map\n\n> crush map 决定了客户端数据最终写入的 osd 的位置，在某些情况下存在 hdd 和 ssd 两种盘想让某些数据写入到指定的 osd 中这个时候就是需要去人为的手动编译 crush-map，编辑要修改的部分，再导入集群中达到我们特定的目的\n\n### 1).Crush 的放置策略\n\n- Ceph 使用 CRUSH 算法（Controlled Replication Under Scalable Hashing 可扩展哈希下的受控复制）来计算哪些 OSD 存放哪些对象\n- 对象分配到 PG 中，CRUSH 决定这些 PG 使用哪些 OSD 来存储对象。理想情况下，CRUSH 会将数据均匀的分布到存储中\n- 当添加新 OSD 或者现有的 OSD 出现故障时，Ceph 使用 CRUSH 在活跃的 OSD 上重平衡数据 CRUSH map 是 CRUSH 算法的中央配置机制，可通过调整 CRUSHmap 来优化数据存放位置默认情况下，CRUSH 将一个对象的多个副本放置到不同主机上的 0SD 中。可以配置 CRUSH map 和 CRUSH rules，使一个对象的多个副本放置到不同房间或者不同机柜的主机上的 0SD 中。\n- 也可以将 SSD 磁盘分配给需要高速存储的池\n\n### 2).编译与翻译和更新\n\n```bash\n#导出CRUSH map\nceph osd getcrushmap -o ./crushmap.bin\n#解译CRUSH map\ncrushtool -d ./crushmap.bin ./crushmap.txt\n#修改后的CRUSH map重新编译\ncrushtool -c ./crushmap.txt-o ./crushmap-new.bin\n#更新CRUSH map\nceph osd setcrushmap-i./crushmap-new.bin\n#查询crush map的内容（返回json）\nceph osd crush dump\n```\n\n例子\n\n```bash\nroot default {\n    id-1           # do not change unnecessarily\n    id-2 class hdd #do not change unnecessarily\n    #weiqht 0.166\n    alg straw2\n    hash 0#rjenkins1\n    item rackl weight 0.055\n    item rack2 weiqht 0.055\n    item rack3 weight 0.055\n}\n\n#rules\nrule replicated rule{\n    id 0\n    type replicated\n    min size 1\n    max size 10\n    step take default  #只要是应用这个rule的都把数据写入到defaults下\n    step chooseleaf firstn 0 type host  #定义故障的故障域为物理集机器级别（rack为机柜级别）\n    step emit #结尾符号\n}\n```\n\n## 11.admin sockets 管理守护进程\n\n- 通过 admin sockets，管理员可以直接与守护进程交互。如查看和修改守护进程的配置参数。\n- 守护进程的 socket 文件一般是/var/run/ceph/cluster-cluster−type.$id.asok\n- 基于 admin sockets 的操作：\n\n```bash\nceph daemon $type.$id command\n#或者\nceph --admin-daemon /var/run/ceph/$cluster-$type.$id.asok command\n#常用command如下：\nhelp\nconfig get parameter\nconfig set parameter\nconfig show\nperf dump\n```\n\n## 12.用户管理\n\n> Ceph 把数据以对象的形式存于各存储池中。Ceph 用户必须具有访问存储池的权限才能够读写数据。另外，Ceph 用户必须具有执行权限才能够使用 Ceph 的管理命令。\n\n### 1、查看用户信息\n\n```bash\n查看所有用户信息\n# ceph auth list\n获取所有用户的key与权限相关信息\n# ceph auth get client.admin\n如果只需要某个用户的key信息，可以使用pring-key子命令\n# ceph auth print-key client.admin\n```\n\n### 2、添加用户\n\n```bash\n# ceph auth add client.john mon 'allow r' osd 'allow rw pool=liverpool'\n# ceph auth get-or-create client.paul mon 'allow r' osd 'allow rw pool=liverpool'\n# ceph auth get-or-create client.george mon 'allow r' osd 'allow rw pool=liverpool' -o george.keyring\n# ceph auth get-or-create-key client.ringo mon 'allow r' osd 'allow rw pool=liverpool' -o ringo.key\n```\n\n### 3、修改用户权限\n\n```bash\n# ceph auth caps client.john mon 'allow r' osd 'allow rw pool=liverpool'\n# ceph auth caps client.paul mon 'allow rw' osd 'allow rwx pool=liverpool'\n# ceph auth caps client.brian-manager mon 'allow *' osd 'allow *'\n# ceph auth caps client.ringo mon ' ' osd ' '\n```\n\n### 4、删除用户\n\n```bash\n# ceph auth del {TYPE}.{ID}\n其中， {TYPE} 是 client，osd，mon 或 mds 的其中一种。{ID} 是用户的名字或守护进程的 ID 。\n```\n\n## 13.增加和删除 Monitor\n\n> 一个集群可以只有一个 monitor，推荐生产环境至少部署 3 个。 Ceph 使用 Paxos 算法的一个变种对各种 map 、以及其它对集群来说至关重要的信息达成共识。建议（但不是强制）部署奇数个 monitor 。Ceph 需要 mon 中的大多数在运行并能够互相通信，比如单个 mon，或 2 个中的 2 个，3 个中的 2 个，4 个中的 3 个等。初始部署时，建议部署 3 个 monitor。后续如果要增加，请一次增加 2 个.\n\n### 1、新增一个 monitor\n\n```bash\n# ceph-deploy mon create $hostname\n注意：执行ceph-deploy之前要进入之前安装时候配置的目录。/my-cluster\n```\n\n### 2、删除 Monitor\n\n```bash\n# ceph-deploy mon destroy $hostname\n注意： 确保你删除某个 Mon 后，其余 Mon 仍能达成一致。如果不可能，删除它之前可能需要先增加一个。\n```\n\n# 四、集群监控管理\n\n## 1.集群整体运行状态\n\n```bash\n[root@cephnode01 ~]# ceph -s\ncluster:\n    id:     8230a918-a0de-4784-9ab8-cd2a2b8671d0\n    health: HEALTH_WARN\n            application not enabled on 1 pool(s)\n\n  services:\n    mon: 3 daemons, quorum cephnode01,cephnode02,cephnode03 (age 27h)\n    mgr: cephnode01(active, since 53m), standbys: cephnode03, cephnode02\n    osd: 4 osds: 4 up (since 27h), 4 in (since 19h)\n    rgw: 1 daemon active (cephnode01)\n\n  data:\n    pools:   6 pools, 96 pgs\n    objects: 235 objects, 3.6 KiB\n    usage:   4.0 GiB used, 56 GiB / 60 GiB avail\n    pgs:     96 active+clean\n\n    id：集群ID\n    health：集群运行状态，这里有一个警告，说明是有问题，意思是pg数大于pgp数，通常此数值相等。\n    mon：Monitors运行状态。\n    osd：OSDs运行状态。\n    mgr：Managers运行状态。\n    mds：Metadatas运行状态。\n    pools：存储池与PGs的数量。\n    objects：存储对象的数量。\n    usage：存储的理论用量。\n    pgs：PGs的运行状态\n\n~]$ ceph -w\n~]$ ceph health detail\n```\n\n## 2.PG 状态\n\n> 查看 pg 状态查看通常使用下面两个命令即可，dump 可以查看更详细信息\n\n```bash\n~]$ ceph pg dump\n~]$ ceph pg stat\n```\n\n## 3.Pool 状态\n\n```bash\n~]$ ceph osd pool stats\n~]$ ceph osd pool stats\n```\n\n## 4.OSD 状态\n\n```bash\n~]$ ceph osd stat\n~]$ ceph osd dump\n~]$ ceph osd tree\n~]$ ceph osd df\n```\n\n## 5.Monitor 状态和查看仲裁状态\n\n```bash\n~]$ ceph mon stat\n~]$ ceph mon dump\n~]$ ceph quorum_status\n```\n\n## 6.集群空间用量\n\n```bash\n~]$ ceph df\n~]$ ceph df detail\n```\n\n# 五、集群配置管理(临时和全局，服务平滑重启)\n\n> 有时候需要更改服务的配置，但不想重启服务，或者是临时修改。这时候就可以使用 tell 和 daemon 子命令来完成此需求。\n\n## 1.查看运行配置\n\n```bash\n命令格式：\n# ceph daemon {daemon-type}.{id} config show\n\n命令举例：\n# ceph daemon osd.0 config show\n```\n\n## 2.tell 子命令格式\n\n> 使用 tell 的方式适合对整个集群进行设置，使用 \\* 号进行匹配，就可以对整个集群的角色进行设置。而出现节点异常无法设置时候，只会在命令行当中进行报错，不太便于查找。\n\n```bash\n命令格式：\n# ceph tell {daemon-type}.{daemon id or *} injectargs --{name}={value} [--{name}={value}]\n命令举例：\n# ceph tell osd.0 injectargs --debug-osd 20 --debug-ms 1\n```\n\n- daemon-type：为要操作的对象类型如 osd、mon、mds 等。\n- daemon id：该对象的名称，osd 通常为 0、1 等，mon 为 ceph -s 显示的名称，这里可以输入\\*表示全部。\n- injectargs：表示参数注入，后面必须跟一个参数，也可以跟多个\n\n## 3.daemon 子命令\n\n- 使用 daemon 进行设置的方式就是一个个的去设置，这样可以比较好的反馈，此方法是需要在设置的角色所在的主机上进行设置。\n\n```bash\n命令格式：\n# ceph daemon {daemon-type}.{id} config set {name}={value}\n命令举例：\n# ceph daemon mon.ceph-monitor-1 config set mon_allow_pool_delete false\n```\n\n## 4.集群操作\n\n- 命令包含 start、restart、status\n\n```bash\n#1.启动所有守护进程\nsystemctl start ceph.target\n\n#2.按类型启动守护进程\nsystemctl start ceph-mgr.target\nsystemctl start ceph-osd@id\nsystemctl start ceph-mon.target\nsystemctl start ceph-mds.target\nsystemctl start ceph-radosgw.target\n```\n\n## 5.添加和删除 OSD\n\n### 1).添加 OSD\n\n- 纵向扩容(会导致数据的重分布)\n- 生产环境下最好的做法就是不要一次性添加大量的 osd，最好逐步添加等待数据同步后再进行添加操作\n\n  - 当影响生产数据时候临时可以停止同步：ceph osd set [nobackfill|norebalance],unset 取消对应的参数\n\n```bash\n#1.格式化磁盘\nceph-volume lvm zap /dev/sd<id>\n\n#2.进入到ceph-deploy执行目录/my-cluster，添加OSD\nceph-deploy osd create --data /dev/sd<id> $hostname\n```\n\n### 2).删除 OSD\n\n- 如果机器有盘坏了可以使用 dmdsg 查看坏盘\n- 存在一种情况就是某 osd 的写入延迟大盘有坏道很大可能会拖垮 ceph 集群：\n\n  - ceph osd tree: 查看当前集群的 osd 状态\n  - ceph osd perf: 查看当前的 OSD 的延迟\n\n- 当某一快 osd 踢出集群时候立即做数据重分布(默认 10 分钟)\n\n```bash\n1、调整osd的crush weight为 0\nceph osd crush reweight osd.<ID> 0.0\n\n2、将osd进程stop\nsystemctl stop ceph-osd@<ID>\n\n3、将osd设置out(将会出发数据重分布)\nceph osd out <ID>\n\n4、从crushmap中踢出osd\n# 查看运行视图的osd状态\nceph osd crush dump|less\nceph osd crush rm <osd>.id\n\n5、从tree树中删除osd\nceph osd rm <osd>.id\n\n6、(选用)立即执行删除OSD中数据\nceph osd purge osd.<ID> --yes-i-really-mean-it\n\n7、卸载磁盘\numount /var/lib/ceph/osd/ceph-？\n\n8.从认证中删除磁盘对应的key\n# 查看认证的列表\nceph auth list\nceph auth rm <osd>.id\n```\n\n## 6.扩容 PG\n\n- 扩容大小取跟它接近的 2 的 N 次方\n- 在更改 pool 的 PG 数量时，需同时更改 PGP 的数量。PGP 是为了管理 placement 而存在的专门的 PG，它和 PG 的数量应该保持一致。如果你增加 pool 的 pg_num，就需要同时增加 pgp_num，保持它们大小一致，这样集群才能正常 rebalancing。\n\n```bash\nceph osd pool set {pool-name} pg_num 128\nceph osd pool set {pool-name} pgp_num 128\n```\n\n# 六、调优\n\n## 1.系统层面调优\n\n- 选择正确的 CPU 和内存。OSD、MON 和 MDS 节点具有不同的 CPU 和内存需求\n\n  - mon 的需求和 osd 的总个数有关需要的是计算力\n  - mds 对 CPU 和内存要求很高，会将大量的元数据缓存到自己的内存中，存储元数据的尽量的使用 ssd\n  - osd 最低要求 1H2G 的配置例如：24 块硬盘最少是 24H36G,磁盘方面必须高 I/O 有多好上多好\n\n- 尽可能关闭 NUMA\n- 规划好存储节点的数据以及各节点的磁盘要求（不考虑钱忽略）\n- 磁盘的选择尽可能在成本、吞吐量和延迟之间找到良好的平衡\n- journal 日志应该使用 SSD\n- 如果交换机支持（MTU 9000），则启用巨型帧(减少数据的分片)，前提是 ceph 在一个单独的网络环境中切有独立交换机。\n- 启用 ntp。Ceph 对时间敏感,集群网络至少 10GB 带宽\n\n### 1).系统调优工具\n\n- 使用 tuned-admin 工具，它可帮助系统管理员针对不同的工作负载进行系统调优\n- tuned-admin 使用的 profile 默认存放在/usr/lib/tuned/目录中，可以参考其模板来自定义 profile\n- 对于 ceph 而言，network-latency 可以改进全局系统延迟，network-throughput 可以改进全局系统吞吐量,如果两个都开启可以使用 Custom 自定义模式\n\n```bash\n# 列出现有可用的profile\ntuned-adm list\n\n# 查看当前生效的profile\ntuned-adm active\n\n# 使用指定的profile\ntuned-admin profile profile-name\n\n# 禁用所有的profile\ntuned-admin off\n```\n\n### 2).I/O 调度算法\n\n- noop：电梯算法，实现了一个简单的 FIFO 队列。基于 SSD 的磁盘，推荐使用这种调度方式\n- Deadline：截止时间调度算法，尽力为请求提供有保障的延迟。对于 Ceph，基于 sata 或者 sas 的驱动器，应该首选这种调度方式\n- cfq：完全公平队列，适合有许多进程同时读取和写入大小不等的请求的磁盘，也是默认的通用调度算法\n\n```bash\n#查看当前系统支持的调度算法：\n    dmesg|grep -I scheduler\n\n#查看指定磁盘使用的调度算法：\n    cat /sys/block/磁盘设备号/queue/scheduler\n\n#修改调度算法\n    echo \"deadline\" > /sys/block/vdb/queue/scheduler\n    vim /etc/default/grub\n        GRUB_CMDLINE_LINUX=\"elevator=deadline numa=off\"\n```\n\n### 3).网络 IO 子系统调优\n\n- 用于集群的网络建议尽可能使用 10Gb 网络\n\n以下参数用于缓冲区内存管理\n\n```bash\n#设置OS接收缓冲区的内存大小，第一个值告知内核一个TCP socket的最小缓冲区空间，第二值为默认缓冲区空间，第三个值是最大缓冲区空间\nnet.ipv4.tcp_wmem\n\n#设置Os发送缓冲区的内存大小\nnet.ipv4.tcp_rmem\n\n#定义TCP stack如何反应内存使用情况\nnet.ipv4.tcp_mem\n```\n\n- 交换机启用大型帧\n\n> 默认情况下，以太网最大传输数据包大小为 1500 字节。为提高吞吐量并减少处理开销，一种策略是将以太网网络配置为允许设备发送和接收更大的巨型帧。\n\n- 在使用巨型帧的要谨慎，因为需要硬件支持，且全部以太网口配置为相同的巨型帧 MTU 大小。\n\n### 4).虚拟内存调优\n\n设置较低的比率会导致高频但用时短的写操作，这适合 Ceph 等 I/O 密集型应用。设置较高的比率会导致低频但用时长的写操作，这会产生较小的系统开销，但可能会造成应用响应时间变长\n\n```bash\n#脏内存占总系统总内存的百分比，达到此比率时内核会开始在后台写出数据\nvm.dirty_background_ratio\n\n#脏内存占总系统总内存的百分比，达到此比率时写入进程停滞，而系统会将内存页清空到后端存储\nvm.dirty_ratio\n\n#控制交换分区的使用,生产中建议完全关闭，会拖慢系统运行速度\nvm.swappiness\n\n#系统尽力保持可用状态的RAM大小。在一个RAM大于48G的系统上，建议设置为4G\nvm.min_free_kbytes\n```\n\n## 2.Ceph 本身调优\n\n### 1).最佳实践\n\n- MON 的性能对集群总体性能至关重要，应用部署于专用节点，为确保正确仲裁，数量应为奇数个\n- 在 OSD 节点上，操作系统、OSD 数据、OSD 日志应当位于独立的磁盘上，以确保满意的吞吐量\n- 在集群安装后，需要监控集群、排除故障并维护，尽管 Ceph 具有自愈功能。如果发生性能问题，首先在磁盘、网络和硬件层面上调查。然后逐步转向 RADOS 块设备和 Ceph 对象网关\n\n### 2).影响 I/O 的 6 大操作\n\n- 业务数据写入\n- 数据恢复\n- 数据回填\n- 数据重平衡\n- 数据一致性校验\n- 快照清理\n\n### 3).OSD 生产建议\n\n- 更快的日志性能可以改进响应时间，建议将单独的低延迟 SSD 或者 NVMe 设备用于 OSD 日志。\n- 多个日志可以共享同一 SSD，以降低存储基础架构的成本。但是不能将过多 OSD 日志放在同一设备上。\n- 建议每个 SATA OSD 设备不超过 6 个 OSD 日志，每个 NVMe 设备不超过 12 个 OSD 日志。\n- 需要说明的是，当用于托管日志的 SSD 或者 NVMe 设备故障时，使用它托管其日志的所有 OSD 也都变得不可用\n\n### 4).硬件建议\n\n- 将一个 raid1 磁盘用于 ceph 操作系统\n- 每个 OSD 一块硬盘，尽量将 SSD 或者 NVMe 用于日志\n- 使用多个 10Gb 网卡，每个网络一个双链路绑定（建议生产环境 2 个网卡 4 个光模块，2 个万兆口做为数据的交换，2 个万兆口做业务流量）\n- 每个 OSD 预留 1 个 CPU,每个逻辑核心 1GHz，分配 16GB 内存，外加每个 OSD 2G 内存\n\n### 5).RBD 生产建议\n\n- 块设备上的工作负载通常是 I/O 密集型负载，例如在 OpenStack 中虚拟机上运行数据库。\n- 对于 RBD,OSD 日志应当位于 SSD 或者 NVMe 设备上\n- 对后端存储，可以使用不同的存储设备以提供不同级别的服务\n\n### 6).对象网关生产建议\n\n- Ceph 对象网关工作负载通常是吞吐密集型负载。但是其 bucket 索引池为 I/O 密集型工作负载模式。应当将这个池存储在 SSD 设备上\n- Ceph 对象网关为每个存储桶维护一个索引。Ceph 将这一索引存储在 RADOS 对象中。当存储桶存储数量巨大的对象时（超过 100000 个），索引性能会降低，因为只有一个 RADOS 对象参与所有索引操作。\n- Ceph 可以在多个 RADOS 对象或分片中保存大型索引。可以在 ceph.conf 中设置 rgw_override_bucket_index_max_shards 配置参数来启用该功能。此参数的建议值是存储桶中预计对象数量除以 10000\n- 当索引变大，Ceph 通常需要重新划分存储桶。rgw_dynamic_resharding 配置控制该功能，默认为 true\n\n### 7).CephFS 生产建议\n\n- 存放目录结构和其他索引的元数据池可能会成为 CephFS 的瓶颈。因此，应该将 SSD 设备用于这个池\n- 每个 MDS 维护一个内存中缓存 ，用于索引节点等不同类型的项目。Ceph 使用 mds_cache_memory_limit 配置参数限制这一缓存的大小。其默认值为 1GB，可以在需要时调整，得不得超过系统总内存数\n\n### 8).Monitor 生产建议\n\n- 最好为每个 MON 一个独立的服务器/虚拟机\n- 小型和中型集群，使用 10000RPM 的磁盘，大型集群使用 SSD\n- CPU 使用方面：使用一个多核 CPU，最少 16G 内存，最好不要和 osd 存放在同一个服务器上\n\n### 9).将 OSD 日志迁移到 SSD\n\n强烈建议生产中千万不要这么干，一定在集群初始化的时候就定制好\n\n```bash\n#集群中设置标志位停止指定的osd使用\nceph osd set noout\n\n#停止osd的进程\nsystemctl stop ceph-osd@3\n\n#将所有的日志做刷盘处理，刷盘到osd中\nceph-osd -i 3 --flush-journal\n\n#删除该osd现有的日志\nrm -f /var/lib/ceph/osd/ceph-3/journal\n\n#/dev/sdc1为SSD盘创建一个软连接\nln -s /dev/sdc1 /var/lib/ceph/osd/ceph-3/journal\n\n#刷出日志\nceph-osd -i 3 --mkjournal\n\n#启动osd\nsystemctl start ceph-osd@3\n\n#移除标志位\nceph osd unset noout\n```\n\n### 10).存储池中 PG 的计算方法\n\n- 通常，计算一个池中应该有多少个归置组的计算方法 = 100 \\* OSDs(个数) / size(副本数)\n\n- 一种比较通用的取值规则：\n\n  - 少于 5 个 OSD 时可把 pg_num 设置为 128\n  - OSD 数量在 5 到 10 个时，可把 pg_num 设置为 512\n  - OSD 数量在 10 到 50 个时，可把 pg_num 设置为 4096\n  - OSD 数量大于 50 时，建议自行计算\n\n- 自行计算 pg_num 聚会时的工具\n\n  - pgcalc：[https://ceph.com/pgcalc/](https://ceph.com/pgcalc/)\n  - cephpgc：[https://access.redhat.com/labs/cephpgc/](https://access.redhat.com/labs/cephpgc/)\n\n- 注意：在实际的生产环境中我们很难去预估需要多少个 pool，每个 pool 所占用的数据大小的百分百。所以正常情况下需要在特定的情况选择动态扩缩容 pg 的大小\n\n### 11).PG 与 PGP\n\n> 通常而言，PG 与 PGP 是相同的当我们为一个池增加 PG 时，PG 会开始分裂，这个时候，OSD 上的数据开始移动到新的 PG，但总体而言，此时，数据还是在一个 OSD 的不同 PG 中迁移而我们一旦同时增加了 PGP，则 PG 开始在多个 OSD 上重平衡，这时会出现跨 OSD 的数据迁移\n\n- ceph osd pool create poolName PgNum PgpNum\n- 当变动 pg 数量只是针对当前的特定池中的 osd 发生变动影响范围只是一个池的 pg 平衡\n- 正常情况下一个 osd 最多承载 100 个 pg\n- 当 pgp 发生大变动的时候会导致原本这个池中的 pg 变动导致池中 osd，过载或者有很大剩余性能，ceph 集群会将过大的性能均衡到各个性能使用小的 osd 上，这个时候就会发生数据的大规模迁移，大量的 i/O 写入会占有网络带宽会严重影响使用中的 pg 性能导致阻塞发生。\n- 建议的做法是将 pg_num 直接设置为希望作为最终值的 PG 数量，而 PGP 的数量应当慢慢增加，以确保集群不会因为一段时间内的大量数据重平衡而导致的性能下降\n\n### 12).Ceph 生产网络建议\n\n- 尽可能使用 10Gb 网络带宽以上的万兆带宽(内网)\n- 尽可能使用不同的 cluster 网络和 public 网络\n- 做好必要的网络设备监控防止网络过载\n\n### 13).OSD 和数据一致性校验\n\n> 清理会影响 ceph 集群性能，但建议不要禁用此功能，因为它能提供完数据的完整性\n\n- 清理：检查对象的存在性、校验和以及大小\n- 深度清理：检查对象的存在性和大小，重新计算并验证对象的校验和。(最好不开严重影响性能)\n\n```bash\n#清理调优参数\nosd_scrub_begin_hour =                    #取值范围0-24\nosd_scrub_end_hour = end_hbegin_hour our  #取值范围0-24\nosd_scrub_load_threshold                  #当系统负载低于多少的时候可以清理，默认为0.5\nosd_scrub_min_interval                    #多久清理一次，默认是一天一次（前提是系统负载低于上一个参数的设定）\nosd_scrub_interval_randomize_ratio        #在清理的时候，随机延迟的值，默认是0.5\nosd_scrub_max_interval                    #清理的最大间隔时间，默认是一周（如果一周内没清理过，这次就必须清理，不管负载是多少）\nosd_scrub_priority                        #清理的优先级，默认是5\nosd_deep_scrub_interal                    #深度清理的时间间隔，默认是一周\nosd_scrub_sleep                           #当有磁盘读取时，则暂停清理，增加此值可减缓清理的速度以降低对客户端的影响，默认为0,范围0-1\n```\n\n```bash\n#显示最近发生的清理和深度清理\nceph pg dump all  # 查看LAST_SCRUB和LAST_DEEP_SCRUB\n#-将清理调度到特定的pg\nceph pg scrub pg-id\n#将深度清理调度到特定的pg\nceph pg deep-scrub pg-id\n#为设定的池设定清理参数\nceph osd pool set <pool-name> <parameter> <value>\n    noscrub # 不清理，默认为false\n    nodeep-scrub # 不深度清理，默认为false\n    scrub_min_interval # 如果设置为0，则应用全局配置osd_scrub_min_interval\n    scrub_max_interval # 如果设置为0，则应用全局配置osd_scrub_max_interval\n    deep_scrub_interval # 如果设置为0，则应用全局配置osd_scrub_interval\n```\n\n### 14).快照的生产建议\n\n- 快照在池级别和 RBD 级别上提供。当快照被移除时，ceph 会以异步操作的形式删除快照数据，称为快照修剪进程\n- 为减轻快照修剪进程会影响集群总体性能。可以通过配置`osd_snap_trim_sleep`来在有客户端读写操作的时候暂停修剪，参数的值范围是`0`到`1`\n- 快照修剪的优先级通过使用`osd_snap_trim_priority`参数控制，默认为`5`\n\n### 15).保护数据和 osd\n\n- 需要控制回填和恢复操作，以限制这些操作的影响\n- 回填发生于新的 osd 加入集群时，或者 osd 死机并且 ceph 将其 pg 分配到其他 osd 时。在这种场景中，ceph 必须要在可用的 osd 之间复制对象副本\n- 恢复发生于新的 osd 已有数据时，如出现短暂停机。在这种情形下，ceph 会简单的重放 pg 日志\n\n  - 管理回填和恢复操作的配置项\n\n```bash\n#用于限制每个osd上用于回填的并发操作数，默认为1\nosd_max_backfills\n\n#用于限制每个osd上用于恢复的并发操作数，默认为3\nosd_recovery_max_active\n\n#恢复操作的优先级，默认为3\nosd_recovery_op_priority\n```\n\n### 16).OSD 数据存储后端\n\n> BlueStore 管理一个，两个或（在某些情况下）三个存储设备。在最简单的情况下，BlueStore 使用单个（主）存储设备。存储设备通常作为一个整体使用，BlueStore 直接占用完整设备。该主设备通常由数据目录中的块符号链接标识。数据目录挂载成一个 tmpfs，它将填充（在启动时或 ceph-volume 激活它时）所有常用的 OSD 文件，其中包含有关 OSD 的信息，例如：其标识符，它所属的集群，以及它的私钥。还可以使用两个额外的设备部署 BlueStore\n\n- WAL 设备（在数据目录中标识为 block.wal）可用于 BlueStore 的内部日志或预写日志。只有设备比主设备快（例如，当它在 SSD 上并且主设备是 HDD 时），使用 WAL 设备是有用的。\n- 数据库设备（在数据目录中标识为 block.db）可用于存储 BlueStore 的内部元数据。 BlueStore（或者更确切地说，嵌入式 RocksDB）将在数据库设备上放置尽可能多的元数据以提高性能。如果数据库设备填满，元数据将写到主设备。同样，数据库设备要比主设备更快，则提供数据库设备是有帮助的。\n- 如果只有少量快速存储可用（例如，小于 1GB），我们建议将其用作 WAL 设备。如果还有更多，配置数据库设备会更有意义。 BlueStore 日志将始终放在可用的最快设备上，因此使用数据库设备将提供与 WAL 设备相同的优势，同时还允许在其中存储其他元数据。\n- 正常 L 版本推荐使用 filestore，M 版本可以考虑使用 bluestore\n- 推荐优化文章：[https://www.cnblogs.com/luxiaodai/p/10006036.html#\\_lab2_1_9](https://www.cnblogs.com/luxiaodai/p/10006036.html#_lab2_1_9)\n\n### 17).关于性能测试\n\n- 推荐使用 fio 参考阿里云文档：[https://help.aliyun.com/document_detail/95501.html?spm=a2c4g.11174283.6.659.38b44da2KZr2Sn](https://help.aliyun.com/document_detail/95501.html?spm=a2c4g.11174283.6.659.38b44da2KZr2Sn)\n- dd\n\n```bash\necho 3 > /proc/sys/vm/drop_caches\ndd if=/dev/zero of=/var/lib/ceph/osd/ceph-0/test.img bs=4M count=1024 oflag=direct\ndd if=/var/lib/ceph/osd/ceph-0/test.img of=/dev/null bs=4M count=1024 oflag=direct\n```\n\n- rados bench 性能测试\n\n```bash\nrados bench -p <pool_name> <seconds> <write|seq|rand> -b <block size> -t --no-cleanup\n    pool_name 测试所针对的池\n    seconds 测试所持续的时间，以秒为单位\n    <write|seq|rand> 操作模式，分别是写、顺序读、随机读\n    -b <block_size> 块大小，默认是4M\n    -t 读/写的并行数，默认为16\n    --no-cleanup 表示测试完成后不删除测试用的数据。在做读测试之前，需要使用该参数来运行一遍写测试来产生测试数据，在全部测试完成以后，可以行rados -p <pool_name> cleanup来清理所有测试数据\n\n#示例：\nrados bench -p rbd 10 write --no-cleanup\nrados bench -p rbd 10 seq\n```\n\n- rbd bench 性能测试\n\n```bash\nrbd bench -p <pool_name> <image_name> --io-type <write|read> --io-size <size> --io-threads <num> --io-total <size> --io-pattern <seq|rand>\n    --io-type 测试类型，读/写\n    --io-size 字节数，默认4096\n    --io-threads 线程数，默认16\n    --io-total  读/写的总大小，默认1GB\n    --io-pattern  读/写的方式，顺序还是随机\n\n#示例：\nhttps://edenmal.moe/post/2017/Ceph-rbd-bench-Commands/\n```\n\n## 3.设置集群的标志\n\n**flag 操作**\n\n- 只能对整个集群操作，不能针对单个 osd\n\n  - ceph osd set\n  - ceph osd unset\n\n```bash\n#示例：\nceph osd set nodown\nceph osd unset nodown\nceph -s\n```\n\n| 标志名称     | 含义用法详解                                                                                                                                                     |\n| :----------- | :--------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| noup         | OSD 启动时，会将自己在 MON 上标识为 UP 状态，设置该标志位，则 OSD 不会被自动标识为 up 状态                                                                       |\n| nodown       | OSD 停止时，MON 会将 OSD 标识为 down 状态，设置该标志位，则 MON 不会将停止的 OSD 标识为 down 状态，设置 noup 和 nodown 可以防止网络抖动                          |\n| noout        | 设置该标志位，则 mon 不会从 crush 映射中删除任何 OSD。对 OSD 作维护时，可设置该标志位，以防止 CRUSH 在 OSD 停止时自动重平衡数据。OSD 重新启动时，需要清除该 flag |\n| noin         | 设置该标志位，可以防止数据被自动分配到 OSD 上                                                                                                                    |\n| norecover    | 设置该 flag，禁止任何集群恢复操作。在执行维护和停机时，可设置该 flag                                                                                             |\n| nobackfill   | 禁止数据回填                                                                                                                                                     |\n| noscrub      | 禁止清理操作。清理 PG 会在短期内影响 OSD 的操作。在低带宽集群中，清理期间如果 OSD 的速度过慢，则会被标记为 down。可以该标记来防止这种情况发生                    |\n| nodeep-scrub | 禁止深度清理                                                                                                                                                     |\n| norebalance  | 禁止重平衡数据。在执行集群维护或者停机时，可以使用该 flag                                                                                                        |\n| pause        | 设置该标志位，则集群停止读写，但不影响 osd 自检                                                                                                                  |\n| full         | 标记集群已满，将拒绝任何数据写入，但可读                                                                                                                         |\n\n# 参考文档\n\n[https://poph163.com/category/分布式存储/](https://poph163.com/category/%e5%88%86%e5%b8%83%e5%bc%8f%e5%ad%98%e5%82%a8/)\n","slug":"ceph/Ceph 集群部署","published":1,"updated":"2025-09-24T06:00:08.730Z","_id":"clny08vfb000g5ovfd4xn3fuy","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"一、Ceph-简介\"><a href=\"#一、Ceph-简介\" class=\"headerlink\" title=\"一、Ceph 简介\"></a>一、Ceph 简介</h1><blockquote>\n<p>一个 Ceph 存储集群需要至少一个 Ceph 监视器、Ceph 管理器和 Ceph OSD(对象存储守护进程)。在运行 Ceph 文件系统客户端时，也需要 Ceph 元数据服务器。</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<ul>\n<li><p><strong>Monitors</strong>:</p>\n<ul>\n<li>Ceph 监视器(<code>ceph-mon</code>)维护着展示集群状态的各种图表，包括监视器图、管理器图、OSD 图、MDS 图和 CRUSH 图。这些图是 Ceph 守护进程相互协调所必需的关键集群状态。</li>\n<li>监视器还负责管理守护进程和客户端之间的身份验证。为了实现冗余和高可用性，通常需要至少三个监视器。</li>\n</ul>\n</li>\n<li><p><strong>Managers</strong>: <a href=\"https://docs.ceph.com/en/latest/glossary/#term-Ceph-Manager\">Ceph Manager</a>守护程序(<code>ceph-mgr</code>)</p>\n<ul>\n<li>负责跟踪运行时指标和 Ceph 群集的当前状态，包括存储利用率、当前性能指标和系统负载。</li>\n<li>Ceph Manager 守护程序还托管基于 python 的模块来管理和公开 Ceph 群集信息，包括基于 Web 的<a href=\"https://docs.ceph.com/en/latest/mgr/dashboard/#mgr-dashboard\">Ceph 仪表板和</a> <a href=\"https://docs.ceph.com/en/latest/mgr/restful\">REST API</a>。高可用性通常需要至少两个管理器。</li>\n</ul>\n</li>\n<li><p><strong>OSDs</strong>: <a href=\"https://docs.ceph.com/en/latest/glossary/#term-Ceph-OSD\">Ceph OSD</a> (object storage daemon, <code>ceph-osd</code>)存储数据，处理数据复制，恢复，重新平衡，并提供一些监视信息到 Ceph 监视器和管理器,通过检查其他 Ceph OSD 守护进程检测信号.冗余和高可用性通常需要至少 3 个 Ceph OSD。</p>\n</li>\n<li><p><strong>MDSs</strong>: <a href=\"https://docs.ceph.com/en/latest/glossary/#term-Ceph-Metadata-Server\">Ceph 元数据服务器</a>（MDS, <code>ceph-mds</code>）代表<a href=\"https://docs.ceph.com/en/latest/glossary/#term-Ceph-File-System\">Ceph 文件系统</a>存储元数据（即 Ceph 块设备和 Ceph 对象存储不使用 MDS）。Ceph 元数据服务器允许 POSIX 文件系统用户执行基本命令 (如<code>ls</code>, <code>find</code>, <code>etc</code>等)，而不会给 Ceph 存储群集带来巨大负担。</p>\n</li>\n</ul>\n<blockquote>\n<p>Ceph 将数据存储为逻辑存储池中的对象。使用<a href=\"https://docs.ceph.com/en/latest/glossary/#term-CRUSH\">CRUSH 算法</a>，Ceph 计算哪个放置组应包含对象，并进一步计算哪个 Ceph OSD 守护程序应存储该放置组。CRUSH 算法使 Ceph 存储群集能够动态扩展、重新平衡和恢复。</p>\n</blockquote>\n<p>参考链接：</p>\n<ul>\n<li><a href=\"https://mp.weixin.qq.com/s/TWXPPk7hE1D4AGsHg7CIMg\">https://mp.weixin.qq.com/s/TWXPPk7hE1D4AGsHg7CIMg</a></li>\n<li><a href=\"https://www.jianshu.com/p/cc3ece850433\">https://www.jianshu.com/p/cc3ece850433</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s/QXRdyYKSKIa1aLNI8dOGcQ\">https://mp.weixin.qq.com/s/QXRdyYKSKIa1aLNI8dOGcQ</a></li>\n<li><a href=\"https://blog.csdn.net/xiaoquqi/article/details/43055031\">https://blog.csdn.net/xiaoquqi/article/details/43055031</a></li>\n</ul>\n<h1 id=\"二、Cephadm-部署集群\"><a href=\"#二、Cephadm-部署集群\" class=\"headerlink\" title=\"二、Cephadm 部署集群\"></a>二、Cephadm 部署集群</h1><p>简单，简述，详细参考：<a href=\"https://docs.ceph.com/en/latest/cephadm/#cephadm\">https://docs.ceph.com/en/latest/cephadm/#cephadm</a></p>\n<h2 id=\"1-环境规划\"><a href=\"#1-环境规划\" class=\"headerlink\" title=\"1.环境规划\"></a>1.环境规划</h2><table>\n<thead>\n<tr>\n<th>主机名</th>\n<th>内网 IP</th>\n<th>操作系统</th>\n<th>角色</th>\n<th>配置</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ceph1</td>\n<td>192.168.200.128</td>\n<td>Debian11</td>\n<td>cephadm,mon,mgr,osd</td>\n<td>2C,2G,20G 系统盘，20G 数据盘</td>\n</tr>\n<tr>\n<td>ceph2</td>\n<td>192.168.200.131</td>\n<td>Debian11</td>\n<td>cephadm,mon</td>\n<td>2C,2G,20G 系统盘，20G 数据盘</td>\n</tr>\n<tr>\n<td>ceph3</td>\n<td>192.168.200.132</td>\n<td>Debian11</td>\n<td>cephadm,mon</td>\n<td>2C,2G,20G 系统盘，20G 数据盘</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>典型的 Ceph 集群有三个或五个监视器守护程序，分布在不同的主机上。如果群集中有五个或更多节点，我们建议部署五个监视器。</p>\n</blockquote>\n<p>当 Ceph 知道 mon 应该使用什么 IP 子网时，它可以随着群集的增长（或收缩）自动部署和缩放 mon。默认情况下，Ceph 假定其他 mon 使用与第一个 mon 的 IP 相同的子网。</p>\n<p>在单个子网的情况下，如果向集群中添加主机，默认最多只会添加 5 个 mon 如果有特定的 IP 子网给 mon 使用，可以使用 CIDR 格式配置该子网。</p>\n<h2 id=\"2-前置-所有节点\"><a href=\"#2-前置-所有节点\" class=\"headerlink\" title=\"2.前置(所有节点)\"></a>2.前置(所有节点)</h2><blockquote>\n<p><a href=\"https://docs.ceph.com/en/pacific/cephadm/install/\">https://docs.ceph.com/en/pacific/cephadm/install/</a></p>\n</blockquote>\n<p>各节点配置 hosts</p>\n<pre class=\"line-numbers language-conf\" data-language=\"conf\"><code class=\"language-conf\">10.200.10.31 ceph-pro-1-10-200-10-31\n10.200.10.32 ceph-pro-2-10-200-10-32\n10.200.10.33 ceph-pro-3-10-200-10-33\n10.200.10.34 ceph-pro-4-10-200-10-34\n10.200.10.35 ceph-pro-5-10-200-10-35<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"3-安装-CEPHADM-所有节点\"><a href=\"#3-安装-CEPHADM-所有节点\" class=\"headerlink\" title=\"3.安装 CEPHADM(所有节点)\"></a>3.安装 CEPHADM(所有节点)</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#下载cephadm</span>\n<span class=\"token function\">curl</span> --remote-name <span class=\"token parameter variable\">--location</span> https://hub.shutcm.cf/ceph/ceph/raw/pacific/src/cephadm/cephadm\n<span class=\"token function\">chmod</span> +x cephadm\n<span class=\"token comment\">#设置源</span>\n./cephadm add-repo <span class=\"token parameter variable\">--release</span> pacific\n<span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s#https://download.ceph.com#https://mirrors.aliyun.com/ceph#g'</span> /etc/apt/sources.list.d/ceph.list\n<span class=\"token function\">apt-get</span> update\n<span class=\"token comment\">#安装cephadm命令</span>\n./cephadm <span class=\"token function\">install</span>\n<span class=\"token comment\">#确认在PATH中</span>\n<span class=\"token function\">which</span> cephadm\n<span class=\"token function\">rm</span> <span class=\"token parameter variable\">-fr</span> cephadm\n<span class=\"token comment\">#安装ceph命令</span>\ncephadm <span class=\"token function\">install</span> ceph-common<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"4-引导新群集-第一台\"><a href=\"#4-引导新群集-第一台\" class=\"headerlink\" title=\"4.引导新群集(第一台)\"></a>4.引导新群集(第一台)</h2><blockquote>\n<p>创建新的 Ceph 集群的第一步是在 Ceph 集群的第一台主机上运行 cephadm bootstrap 命令，运行此命令的操作将创建 Ceph 集群的第一个“监视程序守护程序”。</p>\n</blockquote>\n<p>而该监视程序守护程序需要一个 IP 地址，必须将 Ceph 集群的第一个主机的 IP 地址传递给 ceph bootstrap 命令。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cephadm bootstrap --mon-ip <span class=\"token number\">10.200</span>.10.31\n<span class=\"token comment\">#设置addr</span>\n<span class=\"token comment\">#ceph orch host set-addr ceph1 192.168.200.128</span>\n<span class=\"token comment\">#检查</span>\nceph orch <span class=\"token function\">host</span> <span class=\"token function\">ls</span>\nceph <span class=\"token parameter variable\">-s</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>此命令将会：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">1) 在本地主机上为新集群创建监视和管理器守护程序\n2) 为Ceph集群生成一个新的SSH密钥，并将其添加到root用户的&#x2F;root&#x2F;.ssh&#x2F;authorized_keys文件中\n3) 将最小配置文件写入&#x2F;etc&#x2F;ceph&#x2F;ceph.conf\n4) 将client.admin管理特权密钥写入&#x2F;etc&#x2F;ceph&#x2F;ceph.client.admin.keyring\n5) 将公钥写入&#x2F;etc&#x2F;ceph&#x2F;ceph.pub<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"5-向群集添加主机\"><a href=\"#5-向群集添加主机\" class=\"headerlink\" title=\"5.向群集添加主机\"></a>5.向群集添加主机</h2><blockquote>\n<p>在解析主机名等方面，cephadm 的要求非常低, 通过以下命令可以明确 IP 与主机名之间的解析：ceph orch host add</p>\n</blockquote>\n<p><strong>注意</strong>：添加主机时会自动创建 mon 服务，先按照 禁用监视器自动部署( 5.4 (1) ) 或 调整默认值监视器数量 (5.2 节)，再添加主机。</p>\n<p>在新主机 root 用户的 authorized_keys 文件中安装集群的公共 SSH 密钥</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#ssh-copy-id -f -i /etc/ceph/ceph.pub root@*&lt;new-host>*</span>\nssh-copy-id <span class=\"token parameter variable\">-f</span> <span class=\"token parameter variable\">-i</span> /etc/ceph/ceph.pub root@ceph-pro-1-10-200-10-31\nssh-copy-id <span class=\"token parameter variable\">-f</span> <span class=\"token parameter variable\">-i</span> /etc/ceph/ceph.pub root@ceph-pro-2-10-200-10-32\nssh-copy-id <span class=\"token parameter variable\">-f</span> <span class=\"token parameter variable\">-i</span> /etc/ceph/ceph.pub root@ceph-pro-3-10-200-10-33\nssh-copy-id <span class=\"token parameter variable\">-f</span> <span class=\"token parameter variable\">-i</span> /etc/ceph/ceph.pub root@ceph-pro-4-10-200-10-34\nssh-copy-id <span class=\"token parameter variable\">-f</span> <span class=\"token parameter variable\">-i</span> /etc/ceph/ceph.pub root@ceph-pro-5-10-200-10-35<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>添加方式两种：</p>\n<ul>\n<li>命令方式添加</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#ceph orch host add *&lt;newhost>* [*&lt;ip>*] [*&lt;label1> ...*]</span>\nceph orch <span class=\"token function\">host</span> <span class=\"token function\">add</span> ceph-pro-2-10-200-10-32 <span class=\"token number\">10.200</span>.10.32 <span class=\"token parameter variable\">--labels</span> _admin<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>yaml 方式添加</li>\n</ul>\n<p><code>host.yml</code></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">service_type</span><span class=\"token punctuation\">:</span> host\n<span class=\"token key atrule\">addr</span><span class=\"token punctuation\">:</span> 192.168.200.131\n<span class=\"token key atrule\">hostname</span><span class=\"token punctuation\">:</span> ceph2\n<span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> mon\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">service_type</span><span class=\"token punctuation\">:</span> host\n<span class=\"token key atrule\">addr</span><span class=\"token punctuation\">:</span> 192.168.200.132\n<span class=\"token key atrule\">hostname</span><span class=\"token punctuation\">:</span> ceph3\n<span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> mon<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"3-检查状态\"><a href=\"#3-检查状态\" class=\"headerlink\" title=\"3.检查状态\"></a>3.检查状态</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph orch <span class=\"token function\">host</span> <span class=\"token function\">ls</span>\nceph <span class=\"token parameter variable\">-s</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"6-部署-OSD\"><a href=\"#6-部署-OSD\" class=\"headerlink\" title=\"6.部署 OSD\"></a>6.部署 OSD</h2><p><strong><a href=\"https://docs.ceph.com/en/pacific/cephadm/services/osd/#\">https://docs.ceph.com/en/pacific/cephadm/services/osd/#</a></strong></p>\n<blockquote>\n<p>当有新的 osd 加入集群或者移除了 osd，就会把状态上报给 Monitor，Monitor 知道了 osd map 发生了变化就会触发 rebalancing，确保 pg 能够平滑的移动到各个 osd 上，以 pg 为整体进行数据重平衡，重平衡的过程中可能会影响性能，一次性加入的 osd 越多，数据 rebalancing 就越频繁。</p>\n</blockquote>\n<blockquote>\n<p>当在做 rebalance 的时候，每个 osd 都会按照 osd_max_backfills 指定数量的线程来同步，如果该数值比较大，同步会比较快，但是会影响部分性能；为了避免 rebalance 带来的性能影响，可以对 rebalance 进行关闭；添加完 osd 后再打开。</p>\n</blockquote>\n<h3 id=\"1-rebalance-关闭\"><a href=\"#1-rebalance-关闭\" class=\"headerlink\" title=\"1).rebalance 关闭\"></a>1).rebalance 关闭</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 设置标志位</span>\nceph osd <span class=\"token builtin class-name\">set</span> norebalance\n\n<span class=\"token comment\"># 关闭数据填充</span>\nceph osd <span class=\"token builtin class-name\">set</span> nobackfill\n\n<span class=\"token comment\"># 查看集群状态</span>\nceph <span class=\"token parameter variable\">-s</span>\n  cluster:\n    id:     87cdd3b2-987b-11eb-989e-000c29b12ae1\n    health: HEALTH_WARN\n            nobackfill,norebalance flag<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token builtin class-name\">set</span>  <span class=\"token comment\"># 有此信息</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-rebalance-开启\"><a href=\"#2-rebalance-开启\" class=\"headerlink\" title=\"2).rebalance 开启\"></a>2).rebalance 开启</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#开启数据填充</span>\nceph osd <span class=\"token builtin class-name\">unset</span> nobackfill\n<span class=\"token comment\">#开启rebalance</span>\nceph osd <span class=\"token builtin class-name\">unset</span> norebalance\n<span class=\"token comment\"># 查看集群状态</span>\nceph <span class=\"token parameter variable\">-s</span>\n  cluster:\n    id:     87cdd3b2-987b-11eb-989e-000c29b12ae1\n    health: HEALTH_OK<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-列出节点可用设备\"><a href=\"#3-列出节点可用设备\" class=\"headerlink\" title=\"3).列出节点可用设备\"></a>3).列出节点可用设备</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#ceph orch device ls [--wide]</span>\nceph orch device <span class=\"token function\">ls</span> <span class=\"token parameter variable\">--wide</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>如果满足以下所有条件，则认为存储设备可用</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">1) 设备必须没有分区\n2) 设备不得具有任何LVM状态\n3) 设备不得挂载\n4) 设备不得包含文件系统\n5) 设备不得包含Ceph BlueStore OSD\n6) 设备必须大于5 GB<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-创建-osd\"><a href=\"#4-创建-osd\" class=\"headerlink\" title=\"4).创建 osd\"></a>4).创建 osd</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#需要至少 3 个 Ceph OSD 以实现冗余和高可用性</span>\nceph orch daemon <span class=\"token function\">add</span> osd ceph-pro-1-10-200-10-31:/dev/sdb\nceph orch daemon <span class=\"token function\">add</span> osd ceph-pro-2-10-200-10-32:/dev/sdb\nceph orch daemon <span class=\"token function\">add</span> osd ceph-pro-3-10-200-10-33:/dev/sdb<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"7-集群高可用\"><a href=\"#7-集群高可用\" class=\"headerlink\" title=\"7.集群高可用\"></a>7.集群高可用</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#需要至少三个监视器才能实现冗余和高可用性</span>\nceph orch apply mon <span class=\"token number\">3</span>\n<span class=\"token comment\"># 部署mon到指定节点</span>\nceph orch <span class=\"token function\">host</span> label <span class=\"token function\">add</span> *<span class=\"token operator\">&lt;</span>host<span class=\"token operator\">></span>* mon\n<span class=\"token comment\">#至少需要两个管理器才能实现高可用性</span>\nceph orch apply mgr <span class=\"token number\">3</span>\n<span class=\"token comment\">#</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"8-CephFS-部署\"><a href=\"#8-CephFS-部署\" class=\"headerlink\" title=\"8.CephFS 部署\"></a>8.CephFS 部署</h2><h2 id=\"9-部署-RGW\"><a href=\"#9-部署-RGW\" class=\"headerlink\" title=\"9.部署 RGW\"></a>9.部署 RGW</h2><p><a href=\"https://docs.ceph.com/en/pacific/cephadm/services/rgw/\">https://docs.ceph.com/en/pacific/cephadm/services/rgw/</a></p>\n<h1 id=\"三、运维\"><a href=\"#三、运维\" class=\"headerlink\" title=\"三、运维\"></a>三、运维</h1><p><a href=\"https://www.cnblogs.com/royaljames/p/9807532.html\">https://www.cnblogs.com/royaljames/p/9807532.html</a></p>\n<h2 id=\"1-向群集添加主机\"><a href=\"#1-向群集添加主机\" class=\"headerlink\" title=\"1.向群集添加主机\"></a>1.向群集添加主机</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#1.在新主机的根用户文件中安装群集的公共 SSH 密钥</span>\nssh-copy-id <span class=\"token parameter variable\">-f</span> <span class=\"token parameter variable\">-i</span> /etc/ceph/ceph.pub root@host2\n<span class=\"token comment\">#2.告诉 Ceph 新节点是群集的一部分：</span>\nceph orch <span class=\"token function\">host</span> <span class=\"token function\">add</span> host2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"2-部署其他监视器-monitor\"><a href=\"#2-部署其他监视器-monitor\" class=\"headerlink\" title=\"2.部署其他监视器(monitor)\"></a>2.部署其他监视器(monitor)</h2><blockquote>\n<p>典型的 Ceph 群集具有分布在不同主机的三个或五个监视器守护程序。如果群集中有五个或更多节点，我们建议部署五个监视器。</p>\n</blockquote>\n<p>当 Ceph 知道监视器应该使用什么 IP 子网时，它可以随着群集的增长（或收缩）自动部署和缩放监视器。默认情况下，Ceph 假定其他监视器应使用与第一个监视器的 IP 相同的子网。</p>\n<p>如果您的 Ceph 监视器（或整个群集）住在单个子网中，则在向群集添加新主机时，默认情况下，cephadm 会自动添加多达 5 个监视器。无需进一步步骤。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#如果有特定的 IP 子网应该由监视器使用，您可以用CIDR格式（例如 ） 配置该子网，Cephadm 仅在配置的子网中配置了 IP 的主机上部署新的监视器守护程序。</span>\nceph config <span class=\"token builtin class-name\">set</span> mon public_network <span class=\"token number\">10.1</span>.2.0/24\n<span class=\"token comment\">#如果要调整 5 个监视器的默认值：</span>\nceph orch apply mon *<span class=\"token operator\">&lt;</span>number-of-monitors<span class=\"token operator\">></span>*\n<span class=\"token comment\">#若要在一组特定的主机上部署监视器，请确保在此列表中包括第一个（引导）主机。</span>\nceph orch apply mon *<span class=\"token operator\">&lt;</span>host1,host2,host3,<span class=\"token punctuation\">..</span>.<span class=\"token operator\">></span>*\n<span class=\"token comment\">#您可以通过使用主机标签来控制监视器运行的主机。要将标签设置为相应的主机，请：mon</span>\nceph orch <span class=\"token function\">host</span> label <span class=\"token function\">add</span> *<span class=\"token operator\">&lt;</span>hostname<span class=\"token operator\">></span>* mon\n<span class=\"token comment\">#要查看当前主机和标签：</span>\nceph orch <span class=\"token function\">host</span> <span class=\"token function\">ls</span>\n<span class=\"token comment\">#例如：</span>\n<span class=\"token comment\"># ceph orch host label add host1 mon</span>\n<span class=\"token comment\"># ceph orch host label add host2 mon</span>\n<span class=\"token comment\"># ceph orch host label add host3 mon</span>\n<span class=\"token comment\"># ceph orch host ls</span>\nHOST   ADDR   LABELS  STATUS\nhost1         mon\nhost2         mon\nhost3         mon\nhost4\nhost5\n<span class=\"token comment\">#告诉 cephadm 根据标签部署监视器：</span>\nceph orch apply mon label:mon\n<span class=\"token comment\">#您可以显式指定每个监视器的 IP 地址或 CIDR 网络，并控制其放置位置。要禁用自动监视器部署：</span>\nceph orch apply mon <span class=\"token parameter variable\">--unmanaged</span>\n<span class=\"token comment\">#要部署每个附加监视器：</span>\nceph orch daemon <span class=\"token function\">add</span> mon *<span class=\"token operator\">&lt;</span>host1:ip-or-network<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>host1:ip-or-network-<span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span>*\n<span class=\"token comment\">#例如，要在使用 IP 地址上部署第二个监视器，在网络上部署第三个监视器</span>\n<span class=\"token comment\"># ceph orch apply mon --unmanaged</span>\n<span class=\"token comment\"># ceph orch daemon add mon newhost1:10.1.2.123</span>\n<span class=\"token comment\"># ceph orch daemon add mon newhost2:10.1.2.0/24</span>\n\n<span class=\"token comment\">#若要确保监视器应用于这三台主机中的每一个主机，请运行以下命令：</span>\nceph orch apply mon <span class=\"token string\">\"host1,host2,host3\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"使用-YAML-规范\"><a href=\"#使用-YAML-规范\" class=\"headerlink\" title=\"使用 YAML 规范\"></a>使用 YAML 规范</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph orch apply <span class=\"token parameter variable\">-i</span> file.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">service_type</span><span class=\"token punctuation\">:</span> mon\n<span class=\"token key atrule\">placement</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> host1\n    <span class=\"token punctuation\">-</span> host2\n    <span class=\"token punctuation\">-</span> host3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"3-部署-OSD\"><a href=\"#3-部署-OSD\" class=\"headerlink\" title=\"3.部署 OSD\"></a>3.部署 OSD</h2><h3 id=\"1-所有群集主机上的存储设备清单可以显示\"><a href=\"#1-所有群集主机上的存储设备清单可以显示\" class=\"headerlink\" title=\"1.所有群集主机上的存储设备清单可以显示\"></a>1.所有群集主机上的存储设备清单可以显示</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph orch device <span class=\"token function\">ls</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>设备必须没有分区。</li>\n<li>设备不得具有任何 LVM 状态。</li>\n<li>不得安装设备。</li>\n<li>设备不能包含文件系统。</li>\n<li>设备不得包含 Ceph BlueStore OSD。</li>\n<li>设备必须大于 5 GB。</li>\n</ul>\n<h3 id=\"2-创建新-OSD-的方法\"><a href=\"#2-创建新-OSD-的方法\" class=\"headerlink\" title=\"2.创建新 OSD 的方法\"></a>2.创建新 OSD 的方法</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 1.告诉 Ceph 使用任何可用和未使用的存储设备：</span>\nceph orch apply osd --all-available-devices\n<span class=\"token comment\"># 2.从特定主机上的特定设备创建 OSD：ceph orch daemon add osd *&lt;host>*:*&lt;device-path>*</span>\nceph orch daemon <span class=\"token function\">add</span> osd host1:/dev/sdb\n<span class=\"token comment\"># 3.使用OSD 服务规范描述设备，根据设备属性、此类设备类型（SSD 或 HDD）、设备型号名称、大小或设备存在的主机使用：</span>\nceph orch apply osd <span class=\"token parameter variable\">-i</span> spec.yml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"4-部署-MDS\"><a href=\"#4-部署-MDS\" class=\"headerlink\" title=\"4.部署 MDS\"></a>4.部署 MDS</h2><p>使用 CephFS 文件系统需要一个或多个 MDS 守护程序。如果使用较新的接口创建新文件系统，则会自动创建这些接口。有关详细信息，请参阅 FS 卷和子卷。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph orch apply mds *<span class=\"token operator\">&lt;</span>fs-name<span class=\"token operator\">></span>* <span class=\"token parameter variable\">--placement</span><span class=\"token operator\">=</span><span class=\"token string\">\"*&lt;num-daemons>* [*&lt;host1>* ...]\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"5-部署-RGW\"><a href=\"#5-部署-RGW\" class=\"headerlink\" title=\"5.部署 RGW\"></a>5.部署 RGW</h2><h2 id=\"6-管理-Monitor-map\"><a href=\"#6-管理-Monitor-map\" class=\"headerlink\" title=\"6.管理 Monitor map\"></a>6.管理 Monitor map</h2><h3 id=\"1-多-Monitor-同步机制\"><a href=\"#1-多-Monitor-同步机制\" class=\"headerlink\" title=\"1).多 Monitor 同步机制\"></a>1).多 Monitor 同步机制</h3><blockquote>\n<p>在生产环境建议最少三节点 monitor，以确保 cluster map 的高可用性和冗余性,monitor 节点不应该过多甚至操作 9 节点的行为,会导致数据读写时间下降，影响系统集群的性能。</p>\n</blockquote>\n<ul>\n<li>monitor 使用 paxos 算法作为集群状态上达成一致的机制。paxos 是一种分布式一致性算法。每当 monitor 修改 map 时，它会通过 paxos 发送更新到其他 monitor。Ceph 只有在大多数 monitor 就更新达成一致时提交 map 的新版本。</li>\n<li>cluster map 的更新操作需要 Paxos 确认，但是读操作不经由 Paxos，而是直接访问本地的 kv 存储。</li>\n</ul>\n<h3 id=\"2-Monitor-选举机制\"><a href=\"#2-Monitor-选举机制\" class=\"headerlink\" title=\"2).Monitor 选举机制\"></a>2).Monitor 选举机制</h3><ul>\n<li>多个 monitor 之间需要建立仲裁并选择出一个 leader，其他节点则作为工作节点（peon）。</li>\n<li>在选举完成并确定 leader 之后，leader 将从所有其他 monitor 请求最新的 map epoc，以确保 leader 具有集群的最新视图。</li>\n<li>要维护 monitor 集群的正常工作，必须有超过半数的节点正常。</li>\n</ul>\n<h3 id=\"3-Monitor-租约\"><a href=\"#3-Monitor-租约\" class=\"headerlink\" title=\"3).Monitor 租约\"></a>3).Monitor 租约</h3><ul>\n<li>在 Monitor 建立仲裁后，leader 开始分发短期的租约到所有的 monitors。让它们能够分发 cluster map 到 OSD 和 client。</li>\n<li>Monitor 租约默认每 3s 续期一次。</li>\n<li>当 peon monitor 没有确认它收到租约时，leader 假定该 monitor 异常，它会召集新的选举以建立仲裁。</li>\n<li>如果 peon monitor 的租约到期后没有收到 leader 的续期，它会假定 leader 异常，并会召集新的选举。</li>\n<li>所以如果生产环境中存在多个 monitor 时候某个节点的超时会猝发节点的重新选举导致 client 无法第一时间拿到最新的 crushmap 图像也就无法去对应的 osd 上的 pv 写入数据了。</li>\n</ul>\n<h3 id=\"4-常用的-monitor-管理\"><a href=\"#4-常用的-monitor-管理\" class=\"headerlink\" title=\"4).常用的 monitor 管理\"></a>4).常用的 monitor 管理</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#打印monitor map信息</span>\nceph mon dump\n\n<span class=\"token comment\">#将monitor map导出为一个二进制文件</span>\nceph mon getmap <span class=\"token parameter variable\">-o</span> ./monmap\n\n<span class=\"token comment\">#打印导出的二进制文件的内容</span>\nmonmaptool <span class=\"token parameter variable\">--print</span> ./monmap\n\n<span class=\"token comment\">#修改二进制文件，从monmap删除某个monitor</span>\nmonmaptool ./monmap <span class=\"token parameter variable\">--rm</span> <span class=\"token operator\">&lt;</span>id<span class=\"token operator\">></span>\n\n<span class=\"token comment\">#修改二进制文件，往monmap中添加一个monitor</span>\nmonmaptool ./monmap <span class=\"token parameter variable\">--add</span> <span class=\"token operator\">&lt;</span>id<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>ip:port<span class=\"token operator\">></span>\n\n<span class=\"token comment\">#导入一个二进制文件，在导入之前，需要先停止monitor</span>\nceph-mon <span class=\"token parameter variable\">-i</span> <span class=\"token operator\">&lt;</span>id<span class=\"token operator\">></span> --inject-monmap ./monmap<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"7-管理-OSD-Map\"><a href=\"#7-管理-OSD-Map\" class=\"headerlink\" title=\"7.管理 OSD Map\"></a>7.管理 OSD Map</h2><ul>\n<li>每当 OSD 加入或离开集群时，Ceph 都会更新 OSD map。</li>\n<li>OSD 不使用 leader 来管理 OSD map，它们会在自身之间传播同步 map。OSD 会利用 OSD map epoch 标记它们交换的每一条信息，当 OSD 检测到自己已落后时，它会使用其对等 OSD 执行 map 更新。</li>\n<li>在大型集群中 OSD map 更新会非常频繁，节点会执行递增 map 更新。</li>\n<li>Ceph 也会利用 epoch 来标记 OSD 和 client 之间的消息。当 client 连接到 OSD 时 OSD 会检查 epoch。如果发现 epoch 不匹配，则 OSD 会以正确的 epoch 响应，以便客户端可以更新其 OSD map。</li>\n<li>OSD 定期向 monitor 报告自己的状态，OSD 之间会交换心跳，以便检测对等点的故障，并报告给 monitor。</li>\n<li>leader monitor 发现 OSD 故障时，它会更新 map，递增 epoch，并使用 Paxos 更新协议来通知其他 monitor，同时撤销租约，并发布新的租约，以使 monitor 以分发最新的 OSD map。</li>\n</ul>\n<h3 id=\"1-OSD-状态解读\"><a href=\"#1-OSD-状态解读\" class=\"headerlink\" title=\"1).OSD 状态解读\"></a>1).OSD 状态解读</h3><ul>\n<li>1.正常状态的 OSD 为 up 且 in</li>\n<li>2.当 OSD 故障时，守护进程 offline，在 5 分钟内，集群仍会将其标记为 up 和 in，这是为了防止网络抖动</li>\n<li>3.如果 5 分钟内仍未恢复，则会标记为 down 和 out。此时该 OSD 上的 PG 开始迁移。这个 5 分钟的时间间隔可以通过 mon_osd_down_out_interval 配置项修改</li>\n<li>4.当故障的 OSD 重新上线以后，会触发新的数据再平衡</li>\n<li>5.当集群有 noout 标志位时，则 osd 下线不会导致数据恢复</li>\n<li>6.OSD 每隔 6s 会互相验证状态。并每隔 120s 向 mon 报告一次状态。</li>\n</ul>\n<h3 id=\"2-OSD-map-命令\"><a href=\"#2-OSD-map-命令\" class=\"headerlink\" title=\"2).OSD map 命令\"></a>2).OSD map 命令</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph osd dump\nceph osd getmap <span class=\"token parameter variable\">-o</span> binfile\nosdmaptool <span class=\"token parameter variable\">--print</span> binfile\nosdmaptool --export-crush crushbinfile binfile\nosdmaptool --import-crush crushbinfile binfile\nosdmaptool --test-map-pg pgid binfile<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-OSD-的状态\"><a href=\"#3-OSD-的状态\" class=\"headerlink\" title=\"3.)OSD 的状态\"></a>3.)OSD 的状态</h3><ul>\n<li><p>OSD 运行状态</p>\n<ul>\n<li>up</li>\n<li>down</li>\n<li>out</li>\n<li>in</li>\n</ul>\n</li>\n<li><p>OSD 容量状态</p>\n<ul>\n<li>nearfull</li>\n<li>full</li>\n</ul>\n</li>\n</ul>\n<p>常用指令</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#显示OSD状态</span>\nceph osd <span class=\"token function\">stat</span>\n\n<span class=\"token comment\">#报告osd使用量</span>\nceph osd <span class=\"token function\">df</span>\n\n<span class=\"token comment\">#查找指定osd位置</span>\nceph osd <span class=\"token function\">find</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-OSD-容量\"><a href=\"#4-OSD-容量\" class=\"headerlink\" title=\"4.)OSD 容量\"></a>4.)OSD 容量</h3><ul>\n<li>当集群容量达到 mon_osd_nearfull_ratio 的值时，集群会进入 HEALTH_WARN 状态。这是为了在达到 full_ratio 之前，提醒添加 OSD。默认设置为 0.85，即 85%</li>\n<li>当集群容量达到 mon_osd_full_ratio 的值时，集群将停止写入，但允许读取。集群会进入到 HEALTH_ERR 状态。默认为 0.95，即 95%。这是为了防止当一个或多个 OSD 故障时仍留有余地能重平衡数据</li>\n</ul>\n<p>设置方法：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph osd set-full-ratio <span class=\"token number\">0.95</span>\nceph osd set-nearfull-ratio <span class=\"token number\">0.85</span>\nceph osd dump<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"5-OSD-状态参数\"><a href=\"#5-OSD-状态参数\" class=\"headerlink\" title=\"5).OSD 状态参数\"></a>5).OSD 状态参数</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># osd之间传递心跳的间隔时间</span>\nosd_heartbeat_interval\n\n<span class=\"token comment\"># 一个osd多久没心跳，就会被集群认为它down了</span>\nosd_heartbeat_grace\n\n<span class=\"token comment\"># 确定一个osd状态为down的最少报告来源osd数</span>\nmon_osd_min_down_reporters\n\n<span class=\"token comment\"># 一个OSD必须重复报告一个osd状态为down的次数</span>\nmon_osd_min_down_reports\n\n<span class=\"token comment\"># 当osd停止响应多长时间，将其标记为down和out</span>\nmon_osd_down_out_interval\n\n<span class=\"token comment\"># monitor宣布失败osd为down前的等待时间</span>\nmon_osd_report_timeout\n\n<span class=\"token comment\"># 一个新的osd加入集群时，等待多长时间，开始向monitor报告</span>\nosd_mon_report_interval_min\n\n<span class=\"token comment\"># monitor允许osd报告的最大间隔，超时就认为它down了</span>\nosd_mon_report_interval_max\n\n<span class=\"token comment\"># osd向monitor报告心跳的时间</span>\nosd_mon_heartbeat_interval<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"8-管理-PG\"><a href=\"#8-管理-PG\" class=\"headerlink\" title=\"8.管理 PG\"></a>8.管理 PG</h2><h3 id=\"1-管理文件到-PG-映射\"><a href=\"#1-管理文件到-PG-映射\" class=\"headerlink\" title=\"1).管理文件到 PG 映射\"></a>1).管理文件到 PG 映射</h3><p>test 对象所在 pg id 为 10.35，存储在三个 osd 上，分别为 osd.2、osd.1 和 osd.8，其中 osd.2 为 primary osd</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">rados <span class=\"token parameter variable\">-p</span> <span class=\"token builtin class-name\">test</span> put <span class=\"token builtin class-name\">test</span> /etc/ceph/ceph.conf\nceph osd map <span class=\"token builtin class-name\">test</span> <span class=\"token builtin class-name\">test</span>\n    osdmap e201 pool <span class=\"token string\">'test'</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> object <span class=\"token string\">'test'</span> -<span class=\"token operator\">></span> pg <span class=\"token number\">10</span>.40e8aab5 <span class=\"token punctuation\">(</span><span class=\"token number\">10.35</span><span class=\"token punctuation\">)</span> -<span class=\"token operator\">></span> up <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2,1</span>,8<span class=\"token punctuation\">]</span>, p2<span class=\"token punctuation\">)</span> acting <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2,1</span>,8<span class=\"token punctuation\">]</span>, p2<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#处于up状态的osd会一直留在PG的up set和acting set中，一旦主osd down，它首先会从up set中移除</span>\n<span class=\"token comment\">#然后从acting set中移除，之后从OSD将被升级为主。Ceph会将故障OSD上的PG恢复到一个新OSD上</span>\n<span class=\"token comment\">#然后再将这个新OSD加入到up和acting set中来维持集群的高可用性</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-管理-struck-状态的-PG\"><a href=\"#2-管理-struck-状态的-PG\" class=\"headerlink\" title=\"2).管理 struck 状态的 PG\"></a>2).管理 struck 状态的 PG</h3><ul>\n<li><p>如果 PG 长时间（mon_pg_stuck_threshold，默认为 300s）出现如下状态时，MON 会将该 PG 标记为 stuck：</p>\n<ul>\n<li>inactive：pg 有 peering 问题</li>\n<li>unclean：pg 在故障恢复时遇到问题</li>\n<li>stale：pg 没有任何 OSD 报告，可能其所有的 OSD 都是 down 和 out</li>\n<li>undersized：pg 没有充足的 osd 来存储它应具有的副本数</li>\n</ul>\n</li>\n<li><p>默认情况下，Ceph 会自动执行恢复，但如果未能自动恢复，则集群状态会一直处于 HEALTH_WARN 或者 HEALTH_ERR</p>\n</li>\n<li><p>如果特定 PG 的所有 osd 都是 down 和 out 状态，则 PG 会被标记为 stale。要解决这一情况，其中一个 OSD 必须要重生，且具有可用的 PG 副本，否则 PG 不可用</p>\n</li>\n<li><p>Ceph 可以声明 osd 或 PG 已丢失，这也就意味着数据丢失。需要说明的是，osd 的运行离不开 journal，如果 journal 丢失，则 osd 停止</p>\n</li>\n</ul>\n<h3 id=\"3-struck-状态操作\"><a href=\"#3-struck-状态操作\" class=\"headerlink\" title=\"3).struck 状态操作\"></a>3).struck 状态操作</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 检查处于stuck状态的pg</span>\nceph pg dump_stuck\n<span class=\"token comment\"># 检查导致pg一致阻塞在peering状态的osd</span>\nceph osd blocked-by\n<span class=\"token comment\"># 检查某个pg的状态</span>\nceph pg dump all<span class=\"token operator\">|</span><span class=\"token function\">grep</span> pgid\n<span class=\"token comment\"># 声明pg丢失</span>\nceph pg pgid mark_unfound_lost revert<span class=\"token operator\">|</span>delete\n<span class=\"token comment\"># 声明osd丢失（需要osd状态为down且out）</span>\nceph osd lost osdid --yes-i-really-mean-it<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-手动控制-PG-的-Primary-OSD\"><a href=\"#4-手动控制-PG-的-Primary-OSD\" class=\"headerlink\" title=\"4).手动控制 PG 的 Primary OSD\"></a>4).手动控制 PG 的 Primary OSD</h3><p>可以通过手动修改 osd 的权重以提升 特定 OSD 被选为 PG Primary OSD 的概率，避免将速度慢的磁盘用作 primary osd。</p>\n<p>需要先在配置文件中配置如下参数：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mon_osd_allow_primary_affinity <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"5-调整权重示例\"><a href=\"#5-调整权重示例\" class=\"headerlink\" title=\"5).调整权重示例\"></a>5).调整权重示例</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token number\">1</span>. 查看现在有多少PG的主OSD是osd.0\nceph pg dump <span class=\"token operator\">|</span><span class=\"token function\">grep</span> active+clean <span class=\"token operator\">|</span><span class=\"token function\">egrep</span> <span class=\"token string\">\"\\[0,\"</span> <span class=\"token operator\">|</span><span class=\"token function\">wc</span> <span class=\"token parameter variable\">-l</span>\n\n<span class=\"token number\">2</span>. 修改osd.0的权重\nceph osd primary-affinity osd.0 <span class=\"token number\">0</span>  <span class=\"token comment\"># 权重范围从0.0到1.0</span>\n\n<span class=\"token number\">3</span>. 再次查看现在有多少PG的主OSD是osd.0\nceph pg dump <span class=\"token operator\">|</span><span class=\"token function\">grep</span> active+clean <span class=\"token operator\">|</span><span class=\"token function\">egrep</span> <span class=\"token string\">\"\\[0,\"</span> <span class=\"token operator\">|</span><span class=\"token function\">wc</span> <span class=\"token parameter variable\">-l</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"9-Pool-存储池-管理\"><a href=\"#9-Pool-存储池-管理\" class=\"headerlink\" title=\"9.Pool(存储池)管理\"></a>9.Pool(存储池)管理</h2><p><a href=\"https://blog.csdn.net/weixin_42440345/article/details/81118964\">https://blog.csdn.net/weixin_42440345&#x2F;article&#x2F;details&#x2F;81118964</a></p>\n<h3 id=\"PG-和-PGP-的区别\"><a href=\"#PG-和-PGP-的区别\" class=\"headerlink\" title=\"PG 和 PGP 的区别\"></a>PG 和 PGP 的区别</h3><p><a href=\"https://www.cnblogs.com/zphj1987/p/13575377.html\">https://www.cnblogs.com/zphj1987/p/13575377.html</a></p>\n<p>PG 是指定存储池存储对象的目录有多少个，PGP 是存储池 PG 的 OSD 分布组合个数</p>\n<p>PG 的增加会引起 PG 内的数据进行分裂，分裂到相同的 OSD 上新生成的 PG 当中</p>\n<p>PGP 的增加会引起部分 PG 的分布进行变化，但是不会引起 PG 内对象的变动</p>\n<h3 id=\"4-限制-pool-配置更改\"><a href=\"#4-限制-pool-配置更改\" class=\"headerlink\" title=\"4.)限制 pool 配置更改\"></a>4.)限制 pool 配置更改</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#禁止池被删除</span>\nosd_pool_default_flag_nodelete\n\n<span class=\"token comment\">#禁止池的pg_num和pgp_num被修改</span>\nosd_pool_default_flag_nopgchange\n\n<span class=\"token comment\">#禁止修改池的size和min_size</span>\nosd_pool_default_flag_nosizechange<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"1-查看-pool\"><a href=\"#1-查看-pool\" class=\"headerlink\" title=\"1.查看 pool\"></a>1.查看 pool</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#查看所有pool</span>\nceph osd lspools\n<span class=\"token comment\">#获取集群内所有POOL的概况信息,集群内POOL的个数、对应的POOL id、POOL名称、副本数、最小副本数，ruleset及POOL snap等信息</span>\nceph osd pool <span class=\"token function\">ls</span> detail\n<span class=\"token comment\">#查看POOL的统计信息</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-创建-pool\"><a href=\"#2-创建-pool\" class=\"headerlink\" title=\"2.创建 pool\"></a>2.创建 pool</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#创建一个副本类型的POOL</span>\nceph osd pool create <span class=\"token punctuation\">&#123;</span>pool-name<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span>pg-num<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>pgp-num<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>pgp-num<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>replicated<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>ruleset<span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#举例：</span>\nceph osd pool create rbd  <span class=\"token number\">32</span> <span class=\"token number\">32</span>\n<span class=\"token comment\">#创建一个纠删码类型的POOL</span>\nceph osd pool create <span class=\"token punctuation\">&#123;</span>pool-name<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span>pg-num<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span>pgp-num<span class=\"token punctuation\">&#125;</span> erasure <span class=\"token punctuation\">[</span>erasure-code-profile<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>ruleset<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在<code>&#123;&#125;</code>内的参数为必选项,<code>[]</code>内的参数均设有默认值,如果没有更改设计,可以不添加。</p>\n<p>参数的含义如下:</p>\n<ul>\n<li><strong>pool-name</strong>: POOL 的名字；必须添加。</li>\n<li><strong>pg-num</strong>: POOL 拥有的 PG 总数；必须添加。</li>\n<li><strong>pgp-num</strong>: POOL 拥有的 PGP 总数；非必须添加。默认与 pg-num 相同。</li>\n<li><strong>replicated|erasure</strong>: POOL 类型；非必须添加。如不指定为 erasure,则默认为 replicated 类型。</li>\n<li><strong>ruleset</strong>: POOL 所用的 CRUSH 规则 ID。非必须添加。默认为 0,若需指定其他 ruleset,需确保 ruleset 必须存在。</li>\n<li><strong>erasure-code-profile</strong>: 仅用于纠删码类型的 POOL。指定纠删码配置框架,此配置必须已由 osd erasure-code-profile set 定义</li>\n</ul>\n<p>这里强制选择 pg_num 和 pgp_num，因为 ceph 集群不能自动计算 pg 数量。下面有一些官方建议的 pg 使用数量：</p>\n<ul>\n<li>小于 5 个 osd 设置 pg_num 为 128</li>\n<li>5 到 10 个 osd 设置 pg_num 为 512</li>\n<li>10 到 50 个 osd 设置 pg_num 为 1024</li>\n<li>如果超过 50 个 osd 你需要自己明白权衡点，并且能自行计算 pg_num 的数量</li>\n</ul>\n<p>pg_num 通用计算方法:</p>\n<p>(OSDs * 100)</p>\n<p>Total PGs &#x3D;  ————</p>\n<p>pool size</p>\n<h3 id=\"3-修改-pool\"><a href=\"#3-修改-pool\" class=\"headerlink\" title=\"3.修改 pool\"></a>3.修改 pool</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph osd pool <span class=\"token builtin class-name\">set</span> <span class=\"token punctuation\">&#123;</span>pool-name<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span>key<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">&#125;</span>\nsize：设置存储池中的对象副本数，详情参见设置对象副本数。仅适用于副本存储池。\nmin_size：设置 I/O 需要的最小副本数，详情参见设置对象副本数。仅适用于副本存储池。\npg_num：计算数据分布时的有效 PG 数。只能大于当前 PG 数。\npgp_num：计算数据分布时使用的有效 PGP 数量。小于等于存储池的 PG 数。\nhashpspool：给指定存储池设置/取消 HASHPSPOOL 标志。\ntarget_max_bytes：达到 max_bytes 阀值时会触发 Ceph 冲洗或驱逐对象。\ntarget_max_objects：达到 max_objects 阀值时会触发 Ceph 冲洗或驱逐对象。\nscrub_min_interval：在负载低时，洗刷存储池的最小间隔秒数。如果是 <span class=\"token number\">0</span> ，就按照配置文件里的 osd_scrub_min_interval 。\nscrub_max_interval：不管集群负载如何，都要洗刷存储池的最大间隔秒数。如果是 <span class=\"token number\">0</span> ，就按照配置文件里的 osd_scrub_max_interval 。\ndeep_scrub_interval：“深度”洗刷存储池的间隔秒数。如果是 <span class=\"token number\">0</span> ，就按照配置文件里的 osd_deep_scrub_interval 。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-删除存储池\"><a href=\"#4-删除存储池\" class=\"headerlink\" title=\"4.删除存储池\"></a>4.删除存储池</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph osd pool delete <span class=\"token punctuation\">&#123;</span>pool-name<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>pool-name<span class=\"token punctuation\">&#125;</span> --yes-i-really-really-mean-it<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"5-重命名存储池\"><a href=\"#5-重命名存储池\" class=\"headerlink\" title=\"5.重命名存储池\"></a>5.重命名存储池</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph osd pool <span class=\"token function\">rename</span> <span class=\"token punctuation\">&#123;</span>current-pool-name<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span>new-pool-name<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"6-查看存储池统计信息\"><a href=\"#6-查看存储池统计信息\" class=\"headerlink\" title=\"6.查看存储池统计信息\"></a>6.查看存储池统计信息</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">rados <span class=\"token function\">df</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"7-给存储池做快照\"><a href=\"#7-给存储池做快照\" class=\"headerlink\" title=\"7.给存储池做快照\"></a>7.给存储池做快照</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph osd pool mksnap <span class=\"token punctuation\">&#123;</span>pool-name<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span>snap-name<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"8-删除存储池的快照\"><a href=\"#8-删除存储池的快照\" class=\"headerlink\" title=\"8.删除存储池的快照\"></a>8.删除存储池的快照</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph osd pool rmsnap <span class=\"token punctuation\">&#123;</span>pool-name<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span>snap-name<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"9-获取存储池选项值\"><a href=\"#9-获取存储池选项值\" class=\"headerlink\" title=\"9.获取存储池选项值\"></a>9.获取存储池选项值</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph osd pool get <span class=\"token punctuation\">&#123;</span>pool-name<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span>key<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"10-获取对象副本数\"><a href=\"#10-获取对象副本数\" class=\"headerlink\" title=\"10.获取对象副本数\"></a>10.获取对象副本数</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph osd dump <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">'replicated size'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"11-设置存储池配额\"><a href=\"#11-设置存储池配额\" class=\"headerlink\" title=\"11.设置存储池配额\"></a>11.设置存储池配额</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">命令格式：\n<span class=\"token comment\"># ceph osd pool set-quota &#123;pool-name&#125; [max_objects &#123;obj-count&#125;] [max_bytes &#123;bytes&#125;]</span>\n命令举例：\n<span class=\"token comment\"># ceph osd pool set-quota rbd max_objects 10000</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"10-自定义-Crush-Map\"><a href=\"#10-自定义-Crush-Map\" class=\"headerlink\" title=\"10.自定义 Crush Map\"></a>10.自定义 Crush Map</h2><blockquote>\n<p>crush map 决定了客户端数据最终写入的 osd 的位置，在某些情况下存在 hdd 和 ssd 两种盘想让某些数据写入到指定的 osd 中这个时候就是需要去人为的手动编译 crush-map，编辑要修改的部分，再导入集群中达到我们特定的目的</p>\n</blockquote>\n<h3 id=\"1-Crush-的放置策略\"><a href=\"#1-Crush-的放置策略\" class=\"headerlink\" title=\"1).Crush 的放置策略\"></a>1).Crush 的放置策略</h3><ul>\n<li>Ceph 使用 CRUSH 算法（Controlled Replication Under Scalable Hashing 可扩展哈希下的受控复制）来计算哪些 OSD 存放哪些对象</li>\n<li>对象分配到 PG 中，CRUSH 决定这些 PG 使用哪些 OSD 来存储对象。理想情况下，CRUSH 会将数据均匀的分布到存储中</li>\n<li>当添加新 OSD 或者现有的 OSD 出现故障时，Ceph 使用 CRUSH 在活跃的 OSD 上重平衡数据 CRUSH map 是 CRUSH 算法的中央配置机制，可通过调整 CRUSHmap 来优化数据存放位置默认情况下，CRUSH 将一个对象的多个副本放置到不同主机上的 0SD 中。可以配置 CRUSH map 和 CRUSH rules，使一个对象的多个副本放置到不同房间或者不同机柜的主机上的 0SD 中。</li>\n<li>也可以将 SSD 磁盘分配给需要高速存储的池</li>\n</ul>\n<h3 id=\"2-编译与翻译和更新\"><a href=\"#2-编译与翻译和更新\" class=\"headerlink\" title=\"2).编译与翻译和更新\"></a>2).编译与翻译和更新</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#导出CRUSH map</span>\nceph osd getcrushmap <span class=\"token parameter variable\">-o</span> ./crushmap.bin\n<span class=\"token comment\">#解译CRUSH map</span>\ncrushtool <span class=\"token parameter variable\">-d</span> ./crushmap.bin ./crushmap.txt\n<span class=\"token comment\">#修改后的CRUSH map重新编译</span>\ncrushtool <span class=\"token parameter variable\">-c</span> ./crushmap.txt-o ./crushmap-new.bin\n<span class=\"token comment\">#更新CRUSH map</span>\nceph osd setcrushmap-i./crushmap-new.bin\n<span class=\"token comment\">#查询crush map的内容（返回json）</span>\nceph osd crush dump<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>例子</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root default <span class=\"token punctuation\">&#123;</span>\n    id-1           <span class=\"token comment\"># do not change unnecessarily</span>\n    id-2 class hdd <span class=\"token comment\">#do not change unnecessarily</span>\n    <span class=\"token comment\">#weiqht 0.166</span>\n    alg straw2\n    <span class=\"token builtin class-name\">hash</span> <span class=\"token number\">0</span><span class=\"token comment\">#rjenkins1</span>\n    item rackl weight <span class=\"token number\">0.055</span>\n    item rack2 weiqht <span class=\"token number\">0.055</span>\n    item rack3 weight <span class=\"token number\">0.055</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">#rules</span>\nrule replicated rule<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">id</span> <span class=\"token number\">0</span>\n    <span class=\"token builtin class-name\">type</span> replicated\n    min size <span class=\"token number\">1</span>\n    max size <span class=\"token number\">10</span>\n    step take default  <span class=\"token comment\">#只要是应用这个rule的都把数据写入到defaults下</span>\n    step chooseleaf firstn <span class=\"token number\">0</span> <span class=\"token builtin class-name\">type</span> <span class=\"token function\">host</span>  <span class=\"token comment\">#定义故障的故障域为物理集机器级别（rack为机柜级别）</span>\n    step emit <span class=\"token comment\">#结尾符号</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"11-admin-sockets-管理守护进程\"><a href=\"#11-admin-sockets-管理守护进程\" class=\"headerlink\" title=\"11.admin sockets 管理守护进程\"></a>11.admin sockets 管理守护进程</h2><ul>\n<li>通过 admin sockets，管理员可以直接与守护进程交互。如查看和修改守护进程的配置参数。</li>\n<li>守护进程的 socket 文件一般是&#x2F;var&#x2F;run&#x2F;ceph&#x2F;cluster-cluster−type.$id.asok</li>\n<li>基于 admin sockets 的操作：</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph daemon <span class=\"token variable\">$type</span><span class=\"token builtin class-name\">.</span><span class=\"token variable\">$id</span> <span class=\"token builtin class-name\">command</span>\n<span class=\"token comment\">#或者</span>\nceph --admin-daemon /var/run/ceph/<span class=\"token variable\">$cluster</span>-<span class=\"token variable\">$type</span><span class=\"token builtin class-name\">.</span><span class=\"token variable\">$id</span>.asok <span class=\"token builtin class-name\">command</span>\n<span class=\"token comment\">#常用command如下：</span>\n<span class=\"token builtin class-name\">help</span>\nconfig get parameter\nconfig <span class=\"token builtin class-name\">set</span> parameter\nconfig show\nperf dump<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"12-用户管理\"><a href=\"#12-用户管理\" class=\"headerlink\" title=\"12.用户管理\"></a>12.用户管理</h2><blockquote>\n<p>Ceph 把数据以对象的形式存于各存储池中。Ceph 用户必须具有访问存储池的权限才能够读写数据。另外，Ceph 用户必须具有执行权限才能够使用 Ceph 的管理命令。</p>\n</blockquote>\n<h3 id=\"1、查看用户信息\"><a href=\"#1、查看用户信息\" class=\"headerlink\" title=\"1、查看用户信息\"></a>1、查看用户信息</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">查看所有用户信息\n<span class=\"token comment\"># ceph auth list</span>\n获取所有用户的key与权限相关信息\n<span class=\"token comment\"># ceph auth get client.admin</span>\n如果只需要某个用户的key信息，可以使用pring-key子命令\n<span class=\"token comment\"># ceph auth print-key client.admin</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2、添加用户\"><a href=\"#2、添加用户\" class=\"headerlink\" title=\"2、添加用户\"></a>2、添加用户</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># ceph auth add client.john mon 'allow r' osd 'allow rw pool=liverpool'</span>\n<span class=\"token comment\"># ceph auth get-or-create client.paul mon 'allow r' osd 'allow rw pool=liverpool'</span>\n<span class=\"token comment\"># ceph auth get-or-create client.george mon 'allow r' osd 'allow rw pool=liverpool' -o george.keyring</span>\n<span class=\"token comment\"># ceph auth get-or-create-key client.ringo mon 'allow r' osd 'allow rw pool=liverpool' -o ringo.key</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3、修改用户权限\"><a href=\"#3、修改用户权限\" class=\"headerlink\" title=\"3、修改用户权限\"></a>3、修改用户权限</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># ceph auth caps client.john mon 'allow r' osd 'allow rw pool=liverpool'</span>\n<span class=\"token comment\"># ceph auth caps client.paul mon 'allow rw' osd 'allow rwx pool=liverpool'</span>\n<span class=\"token comment\"># ceph auth caps client.brian-manager mon 'allow *' osd 'allow *'</span>\n<span class=\"token comment\"># ceph auth caps client.ringo mon ' ' osd ' '</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4、删除用户\"><a href=\"#4、删除用户\" class=\"headerlink\" title=\"4、删除用户\"></a>4、删除用户</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># ceph auth del &#123;TYPE&#125;.&#123;ID&#125;</span>\n其中， <span class=\"token punctuation\">&#123;</span>TYPE<span class=\"token punctuation\">&#125;</span> 是 client，osd，mon 或 mds 的其中一种。<span class=\"token punctuation\">&#123;</span>ID<span class=\"token punctuation\">&#125;</span> 是用户的名字或守护进程的 ID 。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"13-增加和删除-Monitor\"><a href=\"#13-增加和删除-Monitor\" class=\"headerlink\" title=\"13.增加和删除 Monitor\"></a>13.增加和删除 Monitor</h2><blockquote>\n<p>一个集群可以只有一个 monitor，推荐生产环境至少部署 3 个。 Ceph 使用 Paxos 算法的一个变种对各种 map 、以及其它对集群来说至关重要的信息达成共识。建议（但不是强制）部署奇数个 monitor 。Ceph 需要 mon 中的大多数在运行并能够互相通信，比如单个 mon，或 2 个中的 2 个，3 个中的 2 个，4 个中的 3 个等。初始部署时，建议部署 3 个 monitor。后续如果要增加，请一次增加 2 个.</p>\n</blockquote>\n<h3 id=\"1、新增一个-monitor\"><a href=\"#1、新增一个-monitor\" class=\"headerlink\" title=\"1、新增一个 monitor\"></a>1、新增一个 monitor</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># ceph-deploy mon create $hostname</span>\n注意：执行ceph-deploy之前要进入之前安装时候配置的目录。/my-cluster<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"2、删除-Monitor\"><a href=\"#2、删除-Monitor\" class=\"headerlink\" title=\"2、删除 Monitor\"></a>2、删除 Monitor</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># ceph-deploy mon destroy $hostname</span>\n注意： 确保你删除某个 Mon 后，其余 Mon 仍能达成一致。如果不可能，删除它之前可能需要先增加一个。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h1 id=\"四、集群监控管理\"><a href=\"#四、集群监控管理\" class=\"headerlink\" title=\"四、集群监控管理\"></a>四、集群监控管理</h1><h2 id=\"1-集群整体运行状态\"><a href=\"#1-集群整体运行状态\" class=\"headerlink\" title=\"1.集群整体运行状态\"></a>1.集群整体运行状态</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@cephnode01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ceph -s</span>\ncluster:\n    id:     8230a918-a0de-4784-9ab8-cd2a2b8671d0\n    health: HEALTH_WARN\n            application not enabled on <span class=\"token number\">1</span> pool<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n\n  services:\n    mon: <span class=\"token number\">3</span> daemons, quorum cephnode01,cephnode02,cephnode03 <span class=\"token punctuation\">(</span>age 27h<span class=\"token punctuation\">)</span>\n    mgr: cephnode01<span class=\"token punctuation\">(</span>active, since 53m<span class=\"token punctuation\">)</span>, standbys: cephnode03, cephnode02\n    osd: <span class=\"token number\">4</span> osds: <span class=\"token number\">4</span> up <span class=\"token punctuation\">(</span>since 27h<span class=\"token punctuation\">)</span>, <span class=\"token number\">4</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span>since 19h<span class=\"token punctuation\">)</span>\n    rgw: <span class=\"token number\">1</span> daemon active <span class=\"token punctuation\">(</span>cephnode01<span class=\"token punctuation\">)</span>\n\n  data:\n    pools:   <span class=\"token number\">6</span> pools, <span class=\"token number\">96</span> pgs\n    objects: <span class=\"token number\">235</span> objects, <span class=\"token number\">3.6</span> KiB\n    usage:   <span class=\"token number\">4.0</span> GiB used, <span class=\"token number\">56</span> GiB / <span class=\"token number\">60</span> GiB avail\n    pgs:     <span class=\"token number\">96</span> active+clean\n\n    id：集群ID\n    health：集群运行状态，这里有一个警告，说明是有问题，意思是pg数大于pgp数，通常此数值相等。\n    mon：Monitors运行状态。\n    osd：OSDs运行状态。\n    mgr：Managers运行状态。\n    mds：Metadatas运行状态。\n    pools：存储池与PGs的数量。\n    objects：存储对象的数量。\n    usage：存储的理论用量。\n    pgs：PGs的运行状态\n\n~<span class=\"token punctuation\">]</span>$ ceph <span class=\"token parameter variable\">-w</span>\n~<span class=\"token punctuation\">]</span>$ ceph health detail<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"2-PG-状态\"><a href=\"#2-PG-状态\" class=\"headerlink\" title=\"2.PG 状态\"></a>2.PG 状态</h2><blockquote>\n<p>查看 pg 状态查看通常使用下面两个命令即可，dump 可以查看更详细信息</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">~<span class=\"token punctuation\">]</span>$ ceph pg dump\n~<span class=\"token punctuation\">]</span>$ ceph pg <span class=\"token function\">stat</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"3-Pool-状态\"><a href=\"#3-Pool-状态\" class=\"headerlink\" title=\"3.Pool 状态\"></a>3.Pool 状态</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">~<span class=\"token punctuation\">]</span>$ ceph osd pool stats\n~<span class=\"token punctuation\">]</span>$ ceph osd pool stats<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"4-OSD-状态\"><a href=\"#4-OSD-状态\" class=\"headerlink\" title=\"4.OSD 状态\"></a>4.OSD 状态</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">~<span class=\"token punctuation\">]</span>$ ceph osd <span class=\"token function\">stat</span>\n~<span class=\"token punctuation\">]</span>$ ceph osd dump\n~<span class=\"token punctuation\">]</span>$ ceph osd tree\n~<span class=\"token punctuation\">]</span>$ ceph osd <span class=\"token function\">df</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"5-Monitor-状态和查看仲裁状态\"><a href=\"#5-Monitor-状态和查看仲裁状态\" class=\"headerlink\" title=\"5.Monitor 状态和查看仲裁状态\"></a>5.Monitor 状态和查看仲裁状态</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">~<span class=\"token punctuation\">]</span>$ ceph mon <span class=\"token function\">stat</span>\n~<span class=\"token punctuation\">]</span>$ ceph mon dump\n~<span class=\"token punctuation\">]</span>$ ceph quorum_status<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"6-集群空间用量\"><a href=\"#6-集群空间用量\" class=\"headerlink\" title=\"6.集群空间用量\"></a>6.集群空间用量</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">~<span class=\"token punctuation\">]</span>$ ceph <span class=\"token function\">df</span>\n~<span class=\"token punctuation\">]</span>$ ceph <span class=\"token function\">df</span> detail<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h1 id=\"五、集群配置管理-临时和全局，服务平滑重启\"><a href=\"#五、集群配置管理-临时和全局，服务平滑重启\" class=\"headerlink\" title=\"五、集群配置管理(临时和全局，服务平滑重启)\"></a>五、集群配置管理(临时和全局，服务平滑重启)</h1><blockquote>\n<p>有时候需要更改服务的配置，但不想重启服务，或者是临时修改。这时候就可以使用 tell 和 daemon 子命令来完成此需求。</p>\n</blockquote>\n<h2 id=\"1-查看运行配置\"><a href=\"#1-查看运行配置\" class=\"headerlink\" title=\"1.查看运行配置\"></a>1.查看运行配置</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">命令格式：\n<span class=\"token comment\"># ceph daemon &#123;daemon-type&#125;.&#123;id&#125; config show</span>\n\n命令举例：\n<span class=\"token comment\"># ceph daemon osd.0 config show</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"2-tell-子命令格式\"><a href=\"#2-tell-子命令格式\" class=\"headerlink\" title=\"2.tell 子命令格式\"></a>2.tell 子命令格式</h2><blockquote>\n<p>使用 tell 的方式适合对整个集群进行设置，使用 * 号进行匹配，就可以对整个集群的角色进行设置。而出现节点异常无法设置时候，只会在命令行当中进行报错，不太便于查找。</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">命令格式：\n<span class=\"token comment\"># ceph tell &#123;daemon-type&#125;.&#123;daemon id or *&#125; injectargs --&#123;name&#125;=&#123;value&#125; [--&#123;name&#125;=&#123;value&#125;]</span>\n命令举例：\n<span class=\"token comment\"># ceph tell osd.0 injectargs --debug-osd 20 --debug-ms 1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>daemon-type：为要操作的对象类型如 osd、mon、mds 等。</li>\n<li>daemon id：该对象的名称，osd 通常为 0、1 等，mon 为 ceph -s 显示的名称，这里可以输入*表示全部。</li>\n<li>injectargs：表示参数注入，后面必须跟一个参数，也可以跟多个</li>\n</ul>\n<h2 id=\"3-daemon-子命令\"><a href=\"#3-daemon-子命令\" class=\"headerlink\" title=\"3.daemon 子命令\"></a>3.daemon 子命令</h2><ul>\n<li>使用 daemon 进行设置的方式就是一个个的去设置，这样可以比较好的反馈，此方法是需要在设置的角色所在的主机上进行设置。</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">命令格式：\n<span class=\"token comment\"># ceph daemon &#123;daemon-type&#125;.&#123;id&#125; config set &#123;name&#125;=&#123;value&#125;</span>\n命令举例：\n<span class=\"token comment\"># ceph daemon mon.ceph-monitor-1 config set mon_allow_pool_delete false</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"4-集群操作\"><a href=\"#4-集群操作\" class=\"headerlink\" title=\"4.集群操作\"></a>4.集群操作</h2><ul>\n<li>命令包含 start、restart、status</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#1.启动所有守护进程</span>\nsystemctl start ceph.target\n\n<span class=\"token comment\">#2.按类型启动守护进程</span>\nsystemctl start ceph-mgr.target\nsystemctl start ceph-osd@id\nsystemctl start ceph-mon.target\nsystemctl start ceph-mds.target\nsystemctl start ceph-radosgw.target<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"5-添加和删除-OSD\"><a href=\"#5-添加和删除-OSD\" class=\"headerlink\" title=\"5.添加和删除 OSD\"></a>5.添加和删除 OSD</h2><h3 id=\"1-添加-OSD\"><a href=\"#1-添加-OSD\" class=\"headerlink\" title=\"1).添加 OSD\"></a>1).添加 OSD</h3><ul>\n<li><p>纵向扩容(会导致数据的重分布)</p>\n</li>\n<li><p>生产环境下最好的做法就是不要一次性添加大量的 osd，最好逐步添加等待数据同步后再进行添加操作</p>\n<ul>\n<li>当影响生产数据时候临时可以停止同步：ceph osd set [nobackfill|norebalance],unset 取消对应的参数</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#1.格式化磁盘</span>\nceph-volume lvm zap /dev/sd<span class=\"token operator\">&lt;</span>id<span class=\"token operator\">></span>\n\n<span class=\"token comment\">#2.进入到ceph-deploy执行目录/my-cluster，添加OSD</span>\nceph-deploy osd create <span class=\"token parameter variable\">--data</span> /dev/sd<span class=\"token operator\">&lt;</span>id<span class=\"token operator\">></span> <span class=\"token variable\">$hostname</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-删除-OSD\"><a href=\"#2-删除-OSD\" class=\"headerlink\" title=\"2).删除 OSD\"></a>2).删除 OSD</h3><ul>\n<li><p>如果机器有盘坏了可以使用 dmdsg 查看坏盘</p>\n</li>\n<li><p>存在一种情况就是某 osd 的写入延迟大盘有坏道很大可能会拖垮 ceph 集群：</p>\n<ul>\n<li>ceph osd tree: 查看当前集群的 osd 状态</li>\n<li>ceph osd perf: 查看当前的 OSD 的延迟</li>\n</ul>\n</li>\n<li><p>当某一快 osd 踢出集群时候立即做数据重分布(默认 10 分钟)</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token number\">1</span>、调整osd的crush weight为 <span class=\"token number\">0</span>\nceph osd crush reweight osd.<span class=\"token operator\">&lt;</span>ID<span class=\"token operator\">></span> <span class=\"token number\">0.0</span>\n\n<span class=\"token number\">2</span>、将osd进程stop\nsystemctl stop ceph-osd@<span class=\"token operator\">&lt;</span>ID<span class=\"token operator\">></span>\n\n<span class=\"token number\">3</span>、将osd设置out<span class=\"token punctuation\">(</span>将会出发数据重分布<span class=\"token punctuation\">)</span>\nceph osd out <span class=\"token operator\">&lt;</span>ID<span class=\"token operator\">></span>\n\n<span class=\"token number\">4</span>、从crushmap中踢出osd\n<span class=\"token comment\"># 查看运行视图的osd状态</span>\nceph osd crush dump<span class=\"token operator\">|</span><span class=\"token function\">less</span>\nceph osd crush <span class=\"token function\">rm</span> <span class=\"token operator\">&lt;</span>osd<span class=\"token operator\">></span>.id\n\n<span class=\"token number\">5</span>、从tree树中删除osd\nceph osd <span class=\"token function\">rm</span> <span class=\"token operator\">&lt;</span>osd<span class=\"token operator\">></span>.id\n\n<span class=\"token number\">6</span>、<span class=\"token punctuation\">(</span>选用<span class=\"token punctuation\">)</span>立即执行删除OSD中数据\nceph osd purge osd.<span class=\"token operator\">&lt;</span>ID<span class=\"token operator\">></span> --yes-i-really-mean-it\n\n<span class=\"token number\">7</span>、卸载磁盘\n<span class=\"token function\">umount</span> /var/lib/ceph/osd/ceph-？\n\n<span class=\"token number\">8</span>.从认证中删除磁盘对应的key\n<span class=\"token comment\"># 查看认证的列表</span>\nceph auth list\nceph auth <span class=\"token function\">rm</span> <span class=\"token operator\">&lt;</span>osd<span class=\"token operator\">></span>.id<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"6-扩容-PG\"><a href=\"#6-扩容-PG\" class=\"headerlink\" title=\"6.扩容 PG\"></a>6.扩容 PG</h2><ul>\n<li>扩容大小取跟它接近的 2 的 N 次方</li>\n<li>在更改 pool 的 PG 数量时，需同时更改 PGP 的数量。PGP 是为了管理 placement 而存在的专门的 PG，它和 PG 的数量应该保持一致。如果你增加 pool 的 pg_num，就需要同时增加 pgp_num，保持它们大小一致，这样集群才能正常 rebalancing。</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph osd pool <span class=\"token builtin class-name\">set</span> <span class=\"token punctuation\">&#123;</span>pool-name<span class=\"token punctuation\">&#125;</span> pg_num <span class=\"token number\">128</span>\nceph osd pool <span class=\"token builtin class-name\">set</span> <span class=\"token punctuation\">&#123;</span>pool-name<span class=\"token punctuation\">&#125;</span> pgp_num <span class=\"token number\">128</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h1 id=\"六、调优\"><a href=\"#六、调优\" class=\"headerlink\" title=\"六、调优\"></a>六、调优</h1><h2 id=\"1-系统层面调优\"><a href=\"#1-系统层面调优\" class=\"headerlink\" title=\"1.系统层面调优\"></a>1.系统层面调优</h2><ul>\n<li><p>选择正确的 CPU 和内存。OSD、MON 和 MDS 节点具有不同的 CPU 和内存需求</p>\n<ul>\n<li>mon 的需求和 osd 的总个数有关需要的是计算力</li>\n<li>mds 对 CPU 和内存要求很高，会将大量的元数据缓存到自己的内存中，存储元数据的尽量的使用 ssd</li>\n<li>osd 最低要求 1H2G 的配置例如：24 块硬盘最少是 24H36G,磁盘方面必须高 I&#x2F;O 有多好上多好</li>\n</ul>\n</li>\n<li><p>尽可能关闭 NUMA</p>\n</li>\n<li><p>规划好存储节点的数据以及各节点的磁盘要求（不考虑钱忽略）</p>\n</li>\n<li><p>磁盘的选择尽可能在成本、吞吐量和延迟之间找到良好的平衡</p>\n</li>\n<li><p>journal 日志应该使用 SSD</p>\n</li>\n<li><p>如果交换机支持（MTU 9000），则启用巨型帧(减少数据的分片)，前提是 ceph 在一个单独的网络环境中切有独立交换机。</p>\n</li>\n<li><p>启用 ntp。Ceph 对时间敏感,集群网络至少 10GB 带宽</p>\n</li>\n</ul>\n<h3 id=\"1-系统调优工具\"><a href=\"#1-系统调优工具\" class=\"headerlink\" title=\"1).系统调优工具\"></a>1).系统调优工具</h3><ul>\n<li>使用 tuned-admin 工具，它可帮助系统管理员针对不同的工作负载进行系统调优</li>\n<li>tuned-admin 使用的 profile 默认存放在&#x2F;usr&#x2F;lib&#x2F;tuned&#x2F;目录中，可以参考其模板来自定义 profile</li>\n<li>对于 ceph 而言，network-latency 可以改进全局系统延迟，network-throughput 可以改进全局系统吞吐量,如果两个都开启可以使用 Custom 自定义模式</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 列出现有可用的profile</span>\ntuned-adm list\n\n<span class=\"token comment\"># 查看当前生效的profile</span>\ntuned-adm active\n\n<span class=\"token comment\"># 使用指定的profile</span>\ntuned-admin profile profile-name\n\n<span class=\"token comment\"># 禁用所有的profile</span>\ntuned-admin off<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-I-x2F-O-调度算法\"><a href=\"#2-I-x2F-O-调度算法\" class=\"headerlink\" title=\"2).I&#x2F;O 调度算法\"></a>2).I&#x2F;O 调度算法</h3><ul>\n<li>noop：电梯算法，实现了一个简单的 FIFO 队列。基于 SSD 的磁盘，推荐使用这种调度方式</li>\n<li>Deadline：截止时间调度算法，尽力为请求提供有保障的延迟。对于 Ceph，基于 sata 或者 sas 的驱动器，应该首选这种调度方式</li>\n<li>cfq：完全公平队列，适合有许多进程同时读取和写入大小不等的请求的磁盘，也是默认的通用调度算法</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#查看当前系统支持的调度算法：</span>\n    <span class=\"token function\">dmesg</span><span class=\"token operator\">|</span><span class=\"token function\">grep</span> <span class=\"token parameter variable\">-I</span> scheduler\n\n<span class=\"token comment\">#查看指定磁盘使用的调度算法：</span>\n    <span class=\"token function\">cat</span> /sys/block/磁盘设备号/queue/scheduler\n\n<span class=\"token comment\">#修改调度算法</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"deadline\"</span> <span class=\"token operator\">></span> /sys/block/vdb/queue/scheduler\n    <span class=\"token function\">vim</span> /etc/default/grub\n        <span class=\"token assign-left variable\">GRUB_CMDLINE_LINUX</span><span class=\"token operator\">=</span><span class=\"token string\">\"elevator=deadline numa=off\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-网络-IO-子系统调优\"><a href=\"#3-网络-IO-子系统调优\" class=\"headerlink\" title=\"3).网络 IO 子系统调优\"></a>3).网络 IO 子系统调优</h3><ul>\n<li>用于集群的网络建议尽可能使用 10Gb 网络</li>\n</ul>\n<p>以下参数用于缓冲区内存管理</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#设置OS接收缓冲区的内存大小，第一个值告知内核一个TCP socket的最小缓冲区空间，第二值为默认缓冲区空间，第三个值是最大缓冲区空间</span>\nnet.ipv4.tcp_wmem\n\n<span class=\"token comment\">#设置Os发送缓冲区的内存大小</span>\nnet.ipv4.tcp_rmem\n\n<span class=\"token comment\">#定义TCP stack如何反应内存使用情况</span>\nnet.ipv4.tcp_mem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>交换机启用大型帧</li>\n</ul>\n<blockquote>\n<p>默认情况下，以太网最大传输数据包大小为 1500 字节。为提高吞吐量并减少处理开销，一种策略是将以太网网络配置为允许设备发送和接收更大的巨型帧。</p>\n</blockquote>\n<ul>\n<li>在使用巨型帧的要谨慎，因为需要硬件支持，且全部以太网口配置为相同的巨型帧 MTU 大小。</li>\n</ul>\n<h3 id=\"4-虚拟内存调优\"><a href=\"#4-虚拟内存调优\" class=\"headerlink\" title=\"4).虚拟内存调优\"></a>4).虚拟内存调优</h3><p>设置较低的比率会导致高频但用时短的写操作，这适合 Ceph 等 I&#x2F;O 密集型应用。设置较高的比率会导致低频但用时长的写操作，这会产生较小的系统开销，但可能会造成应用响应时间变长</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#脏内存占总系统总内存的百分比，达到此比率时内核会开始在后台写出数据</span>\nvm.dirty_background_ratio\n\n<span class=\"token comment\">#脏内存占总系统总内存的百分比，达到此比率时写入进程停滞，而系统会将内存页清空到后端存储</span>\nvm.dirty_ratio\n\n<span class=\"token comment\">#控制交换分区的使用,生产中建议完全关闭，会拖慢系统运行速度</span>\nvm.swappiness\n\n<span class=\"token comment\">#系统尽力保持可用状态的RAM大小。在一个RAM大于48G的系统上，建议设置为4G</span>\nvm.min_free_kbytes<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"2-Ceph-本身调优\"><a href=\"#2-Ceph-本身调优\" class=\"headerlink\" title=\"2.Ceph 本身调优\"></a>2.Ceph 本身调优</h2><h3 id=\"1-最佳实践\"><a href=\"#1-最佳实践\" class=\"headerlink\" title=\"1).最佳实践\"></a>1).最佳实践</h3><ul>\n<li>MON 的性能对集群总体性能至关重要，应用部署于专用节点，为确保正确仲裁，数量应为奇数个</li>\n<li>在 OSD 节点上，操作系统、OSD 数据、OSD 日志应当位于独立的磁盘上，以确保满意的吞吐量</li>\n<li>在集群安装后，需要监控集群、排除故障并维护，尽管 Ceph 具有自愈功能。如果发生性能问题，首先在磁盘、网络和硬件层面上调查。然后逐步转向 RADOS 块设备和 Ceph 对象网关</li>\n</ul>\n<h3 id=\"2-影响-I-x2F-O-的-6-大操作\"><a href=\"#2-影响-I-x2F-O-的-6-大操作\" class=\"headerlink\" title=\"2).影响 I&#x2F;O 的 6 大操作\"></a>2).影响 I&#x2F;O 的 6 大操作</h3><ul>\n<li>业务数据写入</li>\n<li>数据恢复</li>\n<li>数据回填</li>\n<li>数据重平衡</li>\n<li>数据一致性校验</li>\n<li>快照清理</li>\n</ul>\n<h3 id=\"3-OSD-生产建议\"><a href=\"#3-OSD-生产建议\" class=\"headerlink\" title=\"3).OSD 生产建议\"></a>3).OSD 生产建议</h3><ul>\n<li>更快的日志性能可以改进响应时间，建议将单独的低延迟 SSD 或者 NVMe 设备用于 OSD 日志。</li>\n<li>多个日志可以共享同一 SSD，以降低存储基础架构的成本。但是不能将过多 OSD 日志放在同一设备上。</li>\n<li>建议每个 SATA OSD 设备不超过 6 个 OSD 日志，每个 NVMe 设备不超过 12 个 OSD 日志。</li>\n<li>需要说明的是，当用于托管日志的 SSD 或者 NVMe 设备故障时，使用它托管其日志的所有 OSD 也都变得不可用</li>\n</ul>\n<h3 id=\"4-硬件建议\"><a href=\"#4-硬件建议\" class=\"headerlink\" title=\"4).硬件建议\"></a>4).硬件建议</h3><ul>\n<li>将一个 raid1 磁盘用于 ceph 操作系统</li>\n<li>每个 OSD 一块硬盘，尽量将 SSD 或者 NVMe 用于日志</li>\n<li>使用多个 10Gb 网卡，每个网络一个双链路绑定（建议生产环境 2 个网卡 4 个光模块，2 个万兆口做为数据的交换，2 个万兆口做业务流量）</li>\n<li>每个 OSD 预留 1 个 CPU,每个逻辑核心 1GHz，分配 16GB 内存，外加每个 OSD 2G 内存</li>\n</ul>\n<h3 id=\"5-RBD-生产建议\"><a href=\"#5-RBD-生产建议\" class=\"headerlink\" title=\"5).RBD 生产建议\"></a>5).RBD 生产建议</h3><ul>\n<li>块设备上的工作负载通常是 I&#x2F;O 密集型负载，例如在 OpenStack 中虚拟机上运行数据库。</li>\n<li>对于 RBD,OSD 日志应当位于 SSD 或者 NVMe 设备上</li>\n<li>对后端存储，可以使用不同的存储设备以提供不同级别的服务</li>\n</ul>\n<h3 id=\"6-对象网关生产建议\"><a href=\"#6-对象网关生产建议\" class=\"headerlink\" title=\"6).对象网关生产建议\"></a>6).对象网关生产建议</h3><ul>\n<li>Ceph 对象网关工作负载通常是吞吐密集型负载。但是其 bucket 索引池为 I&#x2F;O 密集型工作负载模式。应当将这个池存储在 SSD 设备上</li>\n<li>Ceph 对象网关为每个存储桶维护一个索引。Ceph 将这一索引存储在 RADOS 对象中。当存储桶存储数量巨大的对象时（超过 100000 个），索引性能会降低，因为只有一个 RADOS 对象参与所有索引操作。</li>\n<li>Ceph 可以在多个 RADOS 对象或分片中保存大型索引。可以在 ceph.conf 中设置 rgw_override_bucket_index_max_shards 配置参数来启用该功能。此参数的建议值是存储桶中预计对象数量除以 10000</li>\n<li>当索引变大，Ceph 通常需要重新划分存储桶。rgw_dynamic_resharding 配置控制该功能，默认为 true</li>\n</ul>\n<h3 id=\"7-CephFS-生产建议\"><a href=\"#7-CephFS-生产建议\" class=\"headerlink\" title=\"7).CephFS 生产建议\"></a>7).CephFS 生产建议</h3><ul>\n<li>存放目录结构和其他索引的元数据池可能会成为 CephFS 的瓶颈。因此，应该将 SSD 设备用于这个池</li>\n<li>每个 MDS 维护一个内存中缓存 ，用于索引节点等不同类型的项目。Ceph 使用 mds_cache_memory_limit 配置参数限制这一缓存的大小。其默认值为 1GB，可以在需要时调整，得不得超过系统总内存数</li>\n</ul>\n<h3 id=\"8-Monitor-生产建议\"><a href=\"#8-Monitor-生产建议\" class=\"headerlink\" title=\"8).Monitor 生产建议\"></a>8).Monitor 生产建议</h3><ul>\n<li>最好为每个 MON 一个独立的服务器&#x2F;虚拟机</li>\n<li>小型和中型集群，使用 10000RPM 的磁盘，大型集群使用 SSD</li>\n<li>CPU 使用方面：使用一个多核 CPU，最少 16G 内存，最好不要和 osd 存放在同一个服务器上</li>\n</ul>\n<h3 id=\"9-将-OSD-日志迁移到-SSD\"><a href=\"#9-将-OSD-日志迁移到-SSD\" class=\"headerlink\" title=\"9).将 OSD 日志迁移到 SSD\"></a>9).将 OSD 日志迁移到 SSD</h3><p>强烈建议生产中千万不要这么干，一定在集群初始化的时候就定制好</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#集群中设置标志位停止指定的osd使用</span>\nceph osd <span class=\"token builtin class-name\">set</span> noout\n\n<span class=\"token comment\">#停止osd的进程</span>\nsystemctl stop ceph-osd@3\n\n<span class=\"token comment\">#将所有的日志做刷盘处理，刷盘到osd中</span>\nceph-osd <span class=\"token parameter variable\">-i</span> <span class=\"token number\">3</span> --flush-journal\n\n<span class=\"token comment\">#删除该osd现有的日志</span>\n<span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> /var/lib/ceph/osd/ceph-3/journal\n\n<span class=\"token comment\">#/dev/sdc1为SSD盘创建一个软连接</span>\n<span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> /dev/sdc1 /var/lib/ceph/osd/ceph-3/journal\n\n<span class=\"token comment\">#刷出日志</span>\nceph-osd <span class=\"token parameter variable\">-i</span> <span class=\"token number\">3</span> <span class=\"token parameter variable\">--mkjournal</span>\n\n<span class=\"token comment\">#启动osd</span>\nsystemctl start ceph-osd@3\n\n<span class=\"token comment\">#移除标志位</span>\nceph osd <span class=\"token builtin class-name\">unset</span> noout<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"10-存储池中-PG-的计算方法\"><a href=\"#10-存储池中-PG-的计算方法\" class=\"headerlink\" title=\"10).存储池中 PG 的计算方法\"></a>10).存储池中 PG 的计算方法</h3><ul>\n<li><p>通常，计算一个池中应该有多少个归置组的计算方法 &#x3D; 100 * OSDs(个数) &#x2F; size(副本数)</p>\n</li>\n<li><p>一种比较通用的取值规则：</p>\n<ul>\n<li>少于 5 个 OSD 时可把 pg_num 设置为 128</li>\n<li>OSD 数量在 5 到 10 个时，可把 pg_num 设置为 512</li>\n<li>OSD 数量在 10 到 50 个时，可把 pg_num 设置为 4096</li>\n<li>OSD 数量大于 50 时，建议自行计算</li>\n</ul>\n</li>\n<li><p>自行计算 pg_num 聚会时的工具</p>\n<ul>\n<li>pgcalc：<a href=\"https://ceph.com/pgcalc/\">https://ceph.com/pgcalc/</a></li>\n<li>cephpgc：<a href=\"https://access.redhat.com/labs/cephpgc/\">https://access.redhat.com/labs/cephpgc/</a></li>\n</ul>\n</li>\n<li><p>注意：在实际的生产环境中我们很难去预估需要多少个 pool，每个 pool 所占用的数据大小的百分百。所以正常情况下需要在特定的情况选择动态扩缩容 pg 的大小</p>\n</li>\n</ul>\n<h3 id=\"11-PG-与-PGP\"><a href=\"#11-PG-与-PGP\" class=\"headerlink\" title=\"11).PG 与 PGP\"></a>11).PG 与 PGP</h3><blockquote>\n<p>通常而言，PG 与 PGP 是相同的当我们为一个池增加 PG 时，PG 会开始分裂，这个时候，OSD 上的数据开始移动到新的 PG，但总体而言，此时，数据还是在一个 OSD 的不同 PG 中迁移而我们一旦同时增加了 PGP，则 PG 开始在多个 OSD 上重平衡，这时会出现跨 OSD 的数据迁移</p>\n</blockquote>\n<ul>\n<li>ceph osd pool create poolName PgNum PgpNum</li>\n<li>当变动 pg 数量只是针对当前的特定池中的 osd 发生变动影响范围只是一个池的 pg 平衡</li>\n<li>正常情况下一个 osd 最多承载 100 个 pg</li>\n<li>当 pgp 发生大变动的时候会导致原本这个池中的 pg 变动导致池中 osd，过载或者有很大剩余性能，ceph 集群会将过大的性能均衡到各个性能使用小的 osd 上，这个时候就会发生数据的大规模迁移，大量的 i&#x2F;O 写入会占有网络带宽会严重影响使用中的 pg 性能导致阻塞发生。</li>\n<li>建议的做法是将 pg_num 直接设置为希望作为最终值的 PG 数量，而 PGP 的数量应当慢慢增加，以确保集群不会因为一段时间内的大量数据重平衡而导致的性能下降</li>\n</ul>\n<h3 id=\"12-Ceph-生产网络建议\"><a href=\"#12-Ceph-生产网络建议\" class=\"headerlink\" title=\"12).Ceph 生产网络建议\"></a>12).Ceph 生产网络建议</h3><ul>\n<li>尽可能使用 10Gb 网络带宽以上的万兆带宽(内网)</li>\n<li>尽可能使用不同的 cluster 网络和 public 网络</li>\n<li>做好必要的网络设备监控防止网络过载</li>\n</ul>\n<h3 id=\"13-OSD-和数据一致性校验\"><a href=\"#13-OSD-和数据一致性校验\" class=\"headerlink\" title=\"13).OSD 和数据一致性校验\"></a>13).OSD 和数据一致性校验</h3><blockquote>\n<p>清理会影响 ceph 集群性能，但建议不要禁用此功能，因为它能提供完数据的完整性</p>\n</blockquote>\n<ul>\n<li>清理：检查对象的存在性、校验和以及大小</li>\n<li>深度清理：检查对象的存在性和大小，重新计算并验证对象的校验和。(最好不开严重影响性能)</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#清理调优参数</span>\nosd_scrub_begin_hour <span class=\"token operator\">=</span>                    <span class=\"token comment\">#取值范围0-24</span>\nosd_scrub_end_hour <span class=\"token operator\">=</span> end_hbegin_hour our  <span class=\"token comment\">#取值范围0-24</span>\nosd_scrub_load_threshold                  <span class=\"token comment\">#当系统负载低于多少的时候可以清理，默认为0.5</span>\nosd_scrub_min_interval                    <span class=\"token comment\">#多久清理一次，默认是一天一次（前提是系统负载低于上一个参数的设定）</span>\nosd_scrub_interval_randomize_ratio        <span class=\"token comment\">#在清理的时候，随机延迟的值，默认是0.5</span>\nosd_scrub_max_interval                    <span class=\"token comment\">#清理的最大间隔时间，默认是一周（如果一周内没清理过，这次就必须清理，不管负载是多少）</span>\nosd_scrub_priority                        <span class=\"token comment\">#清理的优先级，默认是5</span>\nosd_deep_scrub_interal                    <span class=\"token comment\">#深度清理的时间间隔，默认是一周</span>\nosd_scrub_sleep                           <span class=\"token comment\">#当有磁盘读取时，则暂停清理，增加此值可减缓清理的速度以降低对客户端的影响，默认为0,范围0-1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#显示最近发生的清理和深度清理</span>\nceph pg dump all  <span class=\"token comment\"># 查看LAST_SCRUB和LAST_DEEP_SCRUB</span>\n<span class=\"token comment\">#-将清理调度到特定的pg</span>\nceph pg scrub pg-id\n<span class=\"token comment\">#将深度清理调度到特定的pg</span>\nceph pg deep-scrub pg-id\n<span class=\"token comment\">#为设定的池设定清理参数</span>\nceph osd pool <span class=\"token builtin class-name\">set</span> <span class=\"token operator\">&lt;</span>pool-name<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>parameter<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>value<span class=\"token operator\">></span>\n    noscrub <span class=\"token comment\"># 不清理，默认为false</span>\n    nodeep-scrub <span class=\"token comment\"># 不深度清理，默认为false</span>\n    scrub_min_interval <span class=\"token comment\"># 如果设置为0，则应用全局配置osd_scrub_min_interval</span>\n    scrub_max_interval <span class=\"token comment\"># 如果设置为0，则应用全局配置osd_scrub_max_interval</span>\n    deep_scrub_interval <span class=\"token comment\"># 如果设置为0，则应用全局配置osd_scrub_interval</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"14-快照的生产建议\"><a href=\"#14-快照的生产建议\" class=\"headerlink\" title=\"14).快照的生产建议\"></a>14).快照的生产建议</h3><ul>\n<li>快照在池级别和 RBD 级别上提供。当快照被移除时，ceph 会以异步操作的形式删除快照数据，称为快照修剪进程</li>\n<li>为减轻快照修剪进程会影响集群总体性能。可以通过配置<code>osd_snap_trim_sleep</code>来在有客户端读写操作的时候暂停修剪，参数的值范围是<code>0</code>到<code>1</code></li>\n<li>快照修剪的优先级通过使用<code>osd_snap_trim_priority</code>参数控制，默认为<code>5</code></li>\n</ul>\n<h3 id=\"15-保护数据和-osd\"><a href=\"#15-保护数据和-osd\" class=\"headerlink\" title=\"15).保护数据和 osd\"></a>15).保护数据和 osd</h3><ul>\n<li><p>需要控制回填和恢复操作，以限制这些操作的影响</p>\n</li>\n<li><p>回填发生于新的 osd 加入集群时，或者 osd 死机并且 ceph 将其 pg 分配到其他 osd 时。在这种场景中，ceph 必须要在可用的 osd 之间复制对象副本</p>\n</li>\n<li><p>恢复发生于新的 osd 已有数据时，如出现短暂停机。在这种情形下，ceph 会简单的重放 pg 日志</p>\n<ul>\n<li>管理回填和恢复操作的配置项</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#用于限制每个osd上用于回填的并发操作数，默认为1</span>\nosd_max_backfills\n\n<span class=\"token comment\">#用于限制每个osd上用于恢复的并发操作数，默认为3</span>\nosd_recovery_max_active\n\n<span class=\"token comment\">#恢复操作的优先级，默认为3</span>\nosd_recovery_op_priority<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"16-OSD-数据存储后端\"><a href=\"#16-OSD-数据存储后端\" class=\"headerlink\" title=\"16).OSD 数据存储后端\"></a>16).OSD 数据存储后端</h3><blockquote>\n<p>BlueStore 管理一个，两个或（在某些情况下）三个存储设备。在最简单的情况下，BlueStore 使用单个（主）存储设备。存储设备通常作为一个整体使用，BlueStore 直接占用完整设备。该主设备通常由数据目录中的块符号链接标识。数据目录挂载成一个 tmpfs，它将填充（在启动时或 ceph-volume 激活它时）所有常用的 OSD 文件，其中包含有关 OSD 的信息，例如：其标识符，它所属的集群，以及它的私钥。还可以使用两个额外的设备部署 BlueStore</p>\n</blockquote>\n<ul>\n<li>WAL 设备（在数据目录中标识为 block.wal）可用于 BlueStore 的内部日志或预写日志。只有设备比主设备快（例如，当它在 SSD 上并且主设备是 HDD 时），使用 WAL 设备是有用的。</li>\n<li>数据库设备（在数据目录中标识为 block.db）可用于存储 BlueStore 的内部元数据。 BlueStore（或者更确切地说，嵌入式 RocksDB）将在数据库设备上放置尽可能多的元数据以提高性能。如果数据库设备填满，元数据将写到主设备。同样，数据库设备要比主设备更快，则提供数据库设备是有帮助的。</li>\n<li>如果只有少量快速存储可用（例如，小于 1GB），我们建议将其用作 WAL 设备。如果还有更多，配置数据库设备会更有意义。 BlueStore 日志将始终放在可用的最快设备上，因此使用数据库设备将提供与 WAL 设备相同的优势，同时还允许在其中存储其他元数据。</li>\n<li>正常 L 版本推荐使用 filestore，M 版本可以考虑使用 bluestore</li>\n<li>推荐优化文章：<a href=\"https://www.cnblogs.com/luxiaodai/p/10006036.html#_lab2_1_9\">https://www.cnblogs.com/luxiaodai/p/10006036.html#_lab2_1_9</a></li>\n</ul>\n<h3 id=\"17-关于性能测试\"><a href=\"#17-关于性能测试\" class=\"headerlink\" title=\"17).关于性能测试\"></a>17).关于性能测试</h3><ul>\n<li>推荐使用 fio 参考阿里云文档：<a href=\"https://help.aliyun.com/document_detail/95501.html?spm=a2c4g.11174283.6.659.38b44da2KZr2Sn\">https://help.aliyun.com/document_detail&#x2F;95501.html?spm&#x3D;a2c4g.11174283.6.659.38b44da2KZr2Sn</a></li>\n<li>dd</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token number\">3</span> <span class=\"token operator\">></span> /proc/sys/vm/drop_caches\n<span class=\"token function\">dd</span> <span class=\"token assign-left variable\">if</span><span class=\"token operator\">=</span>/dev/zero <span class=\"token assign-left variable\">of</span><span class=\"token operator\">=</span>/var/lib/ceph/osd/ceph-0/test.img <span class=\"token assign-left variable\">bs</span><span class=\"token operator\">=</span>4M <span class=\"token assign-left variable\">count</span><span class=\"token operator\">=</span><span class=\"token number\">1024</span> <span class=\"token assign-left variable\">oflag</span><span class=\"token operator\">=</span>direct\n<span class=\"token function\">dd</span> <span class=\"token assign-left variable\">if</span><span class=\"token operator\">=</span>/var/lib/ceph/osd/ceph-0/test.img <span class=\"token assign-left variable\">of</span><span class=\"token operator\">=</span>/dev/null <span class=\"token assign-left variable\">bs</span><span class=\"token operator\">=</span>4M <span class=\"token assign-left variable\">count</span><span class=\"token operator\">=</span><span class=\"token number\">1024</span> <span class=\"token assign-left variable\">oflag</span><span class=\"token operator\">=</span>direct<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>rados bench 性能测试</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">rados bench <span class=\"token parameter variable\">-p</span> <span class=\"token operator\">&lt;</span>pool_name<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>seconds<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>write<span class=\"token operator\">|</span><span class=\"token function\">seq</span><span class=\"token operator\">|</span>rand<span class=\"token operator\">></span> <span class=\"token parameter variable\">-b</span> <span class=\"token operator\">&lt;</span>block size<span class=\"token operator\">></span> <span class=\"token parameter variable\">-t</span> --no-cleanup\n    pool_name 测试所针对的池\n    seconds 测试所持续的时间，以秒为单位\n    <span class=\"token operator\">&lt;</span>write<span class=\"token operator\">|</span><span class=\"token function\">seq</span><span class=\"token operator\">|</span>rand<span class=\"token operator\">></span> 操作模式，分别是写、顺序读、随机读\n    <span class=\"token parameter variable\">-b</span> <span class=\"token operator\">&lt;</span>block_size<span class=\"token operator\">></span> 块大小，默认是4M\n    <span class=\"token parameter variable\">-t</span> 读/写的并行数，默认为16\n    --no-cleanup 表示测试完成后不删除测试用的数据。在做读测试之前，需要使用该参数来运行一遍写测试来产生测试数据，在全部测试完成以后，可以行rados <span class=\"token parameter variable\">-p</span> <span class=\"token operator\">&lt;</span>pool_name<span class=\"token operator\">></span> cleanup来清理所有测试数据\n\n<span class=\"token comment\">#示例：</span>\nrados bench <span class=\"token parameter variable\">-p</span> rbd <span class=\"token number\">10</span> <span class=\"token function\">write</span> --no-cleanup\nrados bench <span class=\"token parameter variable\">-p</span> rbd <span class=\"token number\">10</span> <span class=\"token function\">seq</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>rbd bench 性能测试</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">rbd bench <span class=\"token parameter variable\">-p</span> <span class=\"token operator\">&lt;</span>pool_name<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>image_name<span class=\"token operator\">></span> --io-type <span class=\"token operator\">&lt;</span>write<span class=\"token operator\">|</span>read<span class=\"token operator\">></span> --io-size <span class=\"token operator\">&lt;</span>size<span class=\"token operator\">></span> --io-threads <span class=\"token operator\">&lt;</span>num<span class=\"token operator\">></span> --io-total <span class=\"token operator\">&lt;</span>size<span class=\"token operator\">></span> --io-pattern <span class=\"token operator\">&lt;</span>seq<span class=\"token operator\">|</span>rand<span class=\"token operator\">></span>\n    --io-type 测试类型，读/写\n    --io-size 字节数，默认4096\n    --io-threads 线程数，默认16\n    --io-total  读/写的总大小，默认1GB\n    --io-pattern  读/写的方式，顺序还是随机\n\n<span class=\"token comment\">#示例：</span>\nhttps://edenmal.moe/post/2017/Ceph-rbd-bench-Commands/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"3-设置集群的标志\"><a href=\"#3-设置集群的标志\" class=\"headerlink\" title=\"3.设置集群的标志\"></a>3.设置集群的标志</h2><p><strong>flag 操作</strong></p>\n<ul>\n<li><p>只能对整个集群操作，不能针对单个 osd</p>\n<ul>\n<li>ceph osd set</li>\n<li>ceph osd unset</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#示例：</span>\nceph osd <span class=\"token builtin class-name\">set</span> nodown\nceph osd <span class=\"token builtin class-name\">unset</span> nodown\nceph <span class=\"token parameter variable\">-s</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\">标志名称</th>\n<th align=\"left\">含义用法详解</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">noup</td>\n<td align=\"left\">OSD 启动时，会将自己在 MON 上标识为 UP 状态，设置该标志位，则 OSD 不会被自动标识为 up 状态</td>\n</tr>\n<tr>\n<td align=\"left\">nodown</td>\n<td align=\"left\">OSD 停止时，MON 会将 OSD 标识为 down 状态，设置该标志位，则 MON 不会将停止的 OSD 标识为 down 状态，设置 noup 和 nodown 可以防止网络抖动</td>\n</tr>\n<tr>\n<td align=\"left\">noout</td>\n<td align=\"left\">设置该标志位，则 mon 不会从 crush 映射中删除任何 OSD。对 OSD 作维护时，可设置该标志位，以防止 CRUSH 在 OSD 停止时自动重平衡数据。OSD 重新启动时，需要清除该 flag</td>\n</tr>\n<tr>\n<td align=\"left\">noin</td>\n<td align=\"left\">设置该标志位，可以防止数据被自动分配到 OSD 上</td>\n</tr>\n<tr>\n<td align=\"left\">norecover</td>\n<td align=\"left\">设置该 flag，禁止任何集群恢复操作。在执行维护和停机时，可设置该 flag</td>\n</tr>\n<tr>\n<td align=\"left\">nobackfill</td>\n<td align=\"left\">禁止数据回填</td>\n</tr>\n<tr>\n<td align=\"left\">noscrub</td>\n<td align=\"left\">禁止清理操作。清理 PG 会在短期内影响 OSD 的操作。在低带宽集群中，清理期间如果 OSD 的速度过慢，则会被标记为 down。可以该标记来防止这种情况发生</td>\n</tr>\n<tr>\n<td align=\"left\">nodeep-scrub</td>\n<td align=\"left\">禁止深度清理</td>\n</tr>\n<tr>\n<td align=\"left\">norebalance</td>\n<td align=\"left\">禁止重平衡数据。在执行集群维护或者停机时，可以使用该 flag</td>\n</tr>\n<tr>\n<td align=\"left\">pause</td>\n<td align=\"left\">设置该标志位，则集群停止读写，但不影响 osd 自检</td>\n</tr>\n<tr>\n<td align=\"left\">full</td>\n<td align=\"left\">标记集群已满，将拒绝任何数据写入，但可读</td>\n</tr>\n</tbody></table>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><p><a href=\"https://poph163.com/category/%e5%88%86%e5%b8%83%e5%bc%8f%e5%ad%98%e5%82%a8/\">https://poph163.com/category/分布式存储/</a></p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}},"cover_type":"img","excerpt":"<h1 id=\"一、Ceph-简介\"><a href=\"#一、Ceph-简介\" class=\"headerlink\" title=\"一、Ceph 简介\"></a>一、Ceph 简介</h1><blockquote>\n<p>一个 Ceph 存储集群需要至少一个 Ceph 监视器、Ceph 管理器和 Ceph OSD(对象存储守护进程)。在运行 Ceph 文件系统客户端时，也需要 Ceph 元数据服务器。</p>\n</blockquote>","more":"<ul>\n<li><p><strong>Monitors</strong>:</p>\n<ul>\n<li>Ceph 监视器(<code>ceph-mon</code>)维护着展示集群状态的各种图表，包括监视器图、管理器图、OSD 图、MDS 图和 CRUSH 图。这些图是 Ceph 守护进程相互协调所必需的关键集群状态。</li>\n<li>监视器还负责管理守护进程和客户端之间的身份验证。为了实现冗余和高可用性，通常需要至少三个监视器。</li>\n</ul>\n</li>\n<li><p><strong>Managers</strong>: <a href=\"https://docs.ceph.com/en/latest/glossary/#term-Ceph-Manager\">Ceph Manager</a>守护程序(<code>ceph-mgr</code>)</p>\n<ul>\n<li>负责跟踪运行时指标和 Ceph 群集的当前状态，包括存储利用率、当前性能指标和系统负载。</li>\n<li>Ceph Manager 守护程序还托管基于 python 的模块来管理和公开 Ceph 群集信息，包括基于 Web 的<a href=\"https://docs.ceph.com/en/latest/mgr/dashboard/#mgr-dashboard\">Ceph 仪表板和</a> <a href=\"https://docs.ceph.com/en/latest/mgr/restful\">REST API</a>。高可用性通常需要至少两个管理器。</li>\n</ul>\n</li>\n<li><p><strong>OSDs</strong>: <a href=\"https://docs.ceph.com/en/latest/glossary/#term-Ceph-OSD\">Ceph OSD</a> (object storage daemon, <code>ceph-osd</code>)存储数据，处理数据复制，恢复，重新平衡，并提供一些监视信息到 Ceph 监视器和管理器,通过检查其他 Ceph OSD 守护进程检测信号.冗余和高可用性通常需要至少 3 个 Ceph OSD。</p>\n</li>\n<li><p><strong>MDSs</strong>: <a href=\"https://docs.ceph.com/en/latest/glossary/#term-Ceph-Metadata-Server\">Ceph 元数据服务器</a>（MDS, <code>ceph-mds</code>）代表<a href=\"https://docs.ceph.com/en/latest/glossary/#term-Ceph-File-System\">Ceph 文件系统</a>存储元数据（即 Ceph 块设备和 Ceph 对象存储不使用 MDS）。Ceph 元数据服务器允许 POSIX 文件系统用户执行基本命令 (如<code>ls</code>, <code>find</code>, <code>etc</code>等)，而不会给 Ceph 存储群集带来巨大负担。</p>\n</li>\n</ul>\n<blockquote>\n<p>Ceph 将数据存储为逻辑存储池中的对象。使用<a href=\"https://docs.ceph.com/en/latest/glossary/#term-CRUSH\">CRUSH 算法</a>，Ceph 计算哪个放置组应包含对象，并进一步计算哪个 Ceph OSD 守护程序应存储该放置组。CRUSH 算法使 Ceph 存储群集能够动态扩展、重新平衡和恢复。</p>\n</blockquote>\n<p>参考链接：</p>\n<ul>\n<li><a href=\"https://mp.weixin.qq.com/s/TWXPPk7hE1D4AGsHg7CIMg\">https://mp.weixin.qq.com/s/TWXPPk7hE1D4AGsHg7CIMg</a></li>\n<li><a href=\"https://www.jianshu.com/p/cc3ece850433\">https://www.jianshu.com/p/cc3ece850433</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s/QXRdyYKSKIa1aLNI8dOGcQ\">https://mp.weixin.qq.com/s/QXRdyYKSKIa1aLNI8dOGcQ</a></li>\n<li><a href=\"https://blog.csdn.net/xiaoquqi/article/details/43055031\">https://blog.csdn.net/xiaoquqi/article/details/43055031</a></li>\n</ul>\n<h1 id=\"二、Cephadm-部署集群\"><a href=\"#二、Cephadm-部署集群\" class=\"headerlink\" title=\"二、Cephadm 部署集群\"></a>二、Cephadm 部署集群</h1><p>简单，简述，详细参考：<a href=\"https://docs.ceph.com/en/latest/cephadm/#cephadm\">https://docs.ceph.com/en/latest/cephadm/#cephadm</a></p>\n<h2 id=\"1-环境规划\"><a href=\"#1-环境规划\" class=\"headerlink\" title=\"1.环境规划\"></a>1.环境规划</h2><table>\n<thead>\n<tr>\n<th>主机名</th>\n<th>内网 IP</th>\n<th>操作系统</th>\n<th>角色</th>\n<th>配置</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ceph1</td>\n<td>192.168.200.128</td>\n<td>Debian11</td>\n<td>cephadm,mon,mgr,osd</td>\n<td>2C,2G,20G 系统盘，20G 数据盘</td>\n</tr>\n<tr>\n<td>ceph2</td>\n<td>192.168.200.131</td>\n<td>Debian11</td>\n<td>cephadm,mon</td>\n<td>2C,2G,20G 系统盘，20G 数据盘</td>\n</tr>\n<tr>\n<td>ceph3</td>\n<td>192.168.200.132</td>\n<td>Debian11</td>\n<td>cephadm,mon</td>\n<td>2C,2G,20G 系统盘，20G 数据盘</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>典型的 Ceph 集群有三个或五个监视器守护程序，分布在不同的主机上。如果群集中有五个或更多节点，我们建议部署五个监视器。</p>\n</blockquote>\n<p>当 Ceph 知道 mon 应该使用什么 IP 子网时，它可以随着群集的增长（或收缩）自动部署和缩放 mon。默认情况下，Ceph 假定其他 mon 使用与第一个 mon 的 IP 相同的子网。</p>\n<p>在单个子网的情况下，如果向集群中添加主机，默认最多只会添加 5 个 mon 如果有特定的 IP 子网给 mon 使用，可以使用 CIDR 格式配置该子网。</p>\n<h2 id=\"2-前置-所有节点\"><a href=\"#2-前置-所有节点\" class=\"headerlink\" title=\"2.前置(所有节点)\"></a>2.前置(所有节点)</h2><blockquote>\n<p><a href=\"https://docs.ceph.com/en/pacific/cephadm/install/\">https://docs.ceph.com/en/pacific/cephadm/install/</a></p>\n</blockquote>\n<p>各节点配置 hosts</p>\n<pre class=\"line-numbers language-conf\" data-language=\"conf\"><code class=\"language-conf\">10.200.10.31 ceph-pro-1-10-200-10-31\n10.200.10.32 ceph-pro-2-10-200-10-32\n10.200.10.33 ceph-pro-3-10-200-10-33\n10.200.10.34 ceph-pro-4-10-200-10-34\n10.200.10.35 ceph-pro-5-10-200-10-35<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"3-安装-CEPHADM-所有节点\"><a href=\"#3-安装-CEPHADM-所有节点\" class=\"headerlink\" title=\"3.安装 CEPHADM(所有节点)\"></a>3.安装 CEPHADM(所有节点)</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#下载cephadm</span>\n<span class=\"token function\">curl</span> --remote-name <span class=\"token parameter variable\">--location</span> https://hub.shutcm.cf/ceph/ceph/raw/pacific/src/cephadm/cephadm\n<span class=\"token function\">chmod</span> +x cephadm\n<span class=\"token comment\">#设置源</span>\n./cephadm add-repo <span class=\"token parameter variable\">--release</span> pacific\n<span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s#https://download.ceph.com#https://mirrors.aliyun.com/ceph#g'</span> /etc/apt/sources.list.d/ceph.list\n<span class=\"token function\">apt-get</span> update\n<span class=\"token comment\">#安装cephadm命令</span>\n./cephadm <span class=\"token function\">install</span>\n<span class=\"token comment\">#确认在PATH中</span>\n<span class=\"token function\">which</span> cephadm\n<span class=\"token function\">rm</span> <span class=\"token parameter variable\">-fr</span> cephadm\n<span class=\"token comment\">#安装ceph命令</span>\ncephadm <span class=\"token function\">install</span> ceph-common<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"4-引导新群集-第一台\"><a href=\"#4-引导新群集-第一台\" class=\"headerlink\" title=\"4.引导新群集(第一台)\"></a>4.引导新群集(第一台)</h2><blockquote>\n<p>创建新的 Ceph 集群的第一步是在 Ceph 集群的第一台主机上运行 cephadm bootstrap 命令，运行此命令的操作将创建 Ceph 集群的第一个“监视程序守护程序”。</p>\n</blockquote>\n<p>而该监视程序守护程序需要一个 IP 地址，必须将 Ceph 集群的第一个主机的 IP 地址传递给 ceph bootstrap 命令。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cephadm bootstrap --mon-ip <span class=\"token number\">10.200</span>.10.31\n<span class=\"token comment\">#设置addr</span>\n<span class=\"token comment\">#ceph orch host set-addr ceph1 192.168.200.128</span>\n<span class=\"token comment\">#检查</span>\nceph orch <span class=\"token function\">host</span> <span class=\"token function\">ls</span>\nceph <span class=\"token parameter variable\">-s</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>此命令将会：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">1) 在本地主机上为新集群创建监视和管理器守护程序\n2) 为Ceph集群生成一个新的SSH密钥，并将其添加到root用户的&#x2F;root&#x2F;.ssh&#x2F;authorized_keys文件中\n3) 将最小配置文件写入&#x2F;etc&#x2F;ceph&#x2F;ceph.conf\n4) 将client.admin管理特权密钥写入&#x2F;etc&#x2F;ceph&#x2F;ceph.client.admin.keyring\n5) 将公钥写入&#x2F;etc&#x2F;ceph&#x2F;ceph.pub<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"5-向群集添加主机\"><a href=\"#5-向群集添加主机\" class=\"headerlink\" title=\"5.向群集添加主机\"></a>5.向群集添加主机</h2><blockquote>\n<p>在解析主机名等方面，cephadm 的要求非常低, 通过以下命令可以明确 IP 与主机名之间的解析：ceph orch host add</p>\n</blockquote>\n<p><strong>注意</strong>：添加主机时会自动创建 mon 服务，先按照 禁用监视器自动部署( 5.4 (1) ) 或 调整默认值监视器数量 (5.2 节)，再添加主机。</p>\n<p>在新主机 root 用户的 authorized_keys 文件中安装集群的公共 SSH 密钥</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#ssh-copy-id -f -i /etc/ceph/ceph.pub root@*&lt;new-host>*</span>\nssh-copy-id <span class=\"token parameter variable\">-f</span> <span class=\"token parameter variable\">-i</span> /etc/ceph/ceph.pub root@ceph-pro-1-10-200-10-31\nssh-copy-id <span class=\"token parameter variable\">-f</span> <span class=\"token parameter variable\">-i</span> /etc/ceph/ceph.pub root@ceph-pro-2-10-200-10-32\nssh-copy-id <span class=\"token parameter variable\">-f</span> <span class=\"token parameter variable\">-i</span> /etc/ceph/ceph.pub root@ceph-pro-3-10-200-10-33\nssh-copy-id <span class=\"token parameter variable\">-f</span> <span class=\"token parameter variable\">-i</span> /etc/ceph/ceph.pub root@ceph-pro-4-10-200-10-34\nssh-copy-id <span class=\"token parameter variable\">-f</span> <span class=\"token parameter variable\">-i</span> /etc/ceph/ceph.pub root@ceph-pro-5-10-200-10-35<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>添加方式两种：</p>\n<ul>\n<li>命令方式添加</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#ceph orch host add *&lt;newhost>* [*&lt;ip>*] [*&lt;label1> ...*]</span>\nceph orch <span class=\"token function\">host</span> <span class=\"token function\">add</span> ceph-pro-2-10-200-10-32 <span class=\"token number\">10.200</span>.10.32 <span class=\"token parameter variable\">--labels</span> _admin<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>yaml 方式添加</li>\n</ul>\n<p><code>host.yml</code></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">service_type</span><span class=\"token punctuation\">:</span> host\n<span class=\"token key atrule\">addr</span><span class=\"token punctuation\">:</span> 192.168.200.131\n<span class=\"token key atrule\">hostname</span><span class=\"token punctuation\">:</span> ceph2\n<span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> mon\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">service_type</span><span class=\"token punctuation\">:</span> host\n<span class=\"token key atrule\">addr</span><span class=\"token punctuation\">:</span> 192.168.200.132\n<span class=\"token key atrule\">hostname</span><span class=\"token punctuation\">:</span> ceph3\n<span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> mon<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"3-检查状态\"><a href=\"#3-检查状态\" class=\"headerlink\" title=\"3.检查状态\"></a>3.检查状态</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph orch <span class=\"token function\">host</span> <span class=\"token function\">ls</span>\nceph <span class=\"token parameter variable\">-s</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"6-部署-OSD\"><a href=\"#6-部署-OSD\" class=\"headerlink\" title=\"6.部署 OSD\"></a>6.部署 OSD</h2><p><strong><a href=\"https://docs.ceph.com/en/pacific/cephadm/services/osd/#\">https://docs.ceph.com/en/pacific/cephadm/services/osd/#</a></strong></p>\n<blockquote>\n<p>当有新的 osd 加入集群或者移除了 osd，就会把状态上报给 Monitor，Monitor 知道了 osd map 发生了变化就会触发 rebalancing，确保 pg 能够平滑的移动到各个 osd 上，以 pg 为整体进行数据重平衡，重平衡的过程中可能会影响性能，一次性加入的 osd 越多，数据 rebalancing 就越频繁。</p>\n</blockquote>\n<blockquote>\n<p>当在做 rebalance 的时候，每个 osd 都会按照 osd_max_backfills 指定数量的线程来同步，如果该数值比较大，同步会比较快，但是会影响部分性能；为了避免 rebalance 带来的性能影响，可以对 rebalance 进行关闭；添加完 osd 后再打开。</p>\n</blockquote>\n<h3 id=\"1-rebalance-关闭\"><a href=\"#1-rebalance-关闭\" class=\"headerlink\" title=\"1).rebalance 关闭\"></a>1).rebalance 关闭</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 设置标志位</span>\nceph osd <span class=\"token builtin class-name\">set</span> norebalance\n\n<span class=\"token comment\"># 关闭数据填充</span>\nceph osd <span class=\"token builtin class-name\">set</span> nobackfill\n\n<span class=\"token comment\"># 查看集群状态</span>\nceph <span class=\"token parameter variable\">-s</span>\n  cluster:\n    id:     87cdd3b2-987b-11eb-989e-000c29b12ae1\n    health: HEALTH_WARN\n            nobackfill,norebalance flag<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token builtin class-name\">set</span>  <span class=\"token comment\"># 有此信息</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-rebalance-开启\"><a href=\"#2-rebalance-开启\" class=\"headerlink\" title=\"2).rebalance 开启\"></a>2).rebalance 开启</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#开启数据填充</span>\nceph osd <span class=\"token builtin class-name\">unset</span> nobackfill\n<span class=\"token comment\">#开启rebalance</span>\nceph osd <span class=\"token builtin class-name\">unset</span> norebalance\n<span class=\"token comment\"># 查看集群状态</span>\nceph <span class=\"token parameter variable\">-s</span>\n  cluster:\n    id:     87cdd3b2-987b-11eb-989e-000c29b12ae1\n    health: HEALTH_OK<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-列出节点可用设备\"><a href=\"#3-列出节点可用设备\" class=\"headerlink\" title=\"3).列出节点可用设备\"></a>3).列出节点可用设备</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#ceph orch device ls [--wide]</span>\nceph orch device <span class=\"token function\">ls</span> <span class=\"token parameter variable\">--wide</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>如果满足以下所有条件，则认为存储设备可用</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">1) 设备必须没有分区\n2) 设备不得具有任何LVM状态\n3) 设备不得挂载\n4) 设备不得包含文件系统\n5) 设备不得包含Ceph BlueStore OSD\n6) 设备必须大于5 GB<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-创建-osd\"><a href=\"#4-创建-osd\" class=\"headerlink\" title=\"4).创建 osd\"></a>4).创建 osd</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#需要至少 3 个 Ceph OSD 以实现冗余和高可用性</span>\nceph orch daemon <span class=\"token function\">add</span> osd ceph-pro-1-10-200-10-31:/dev/sdb\nceph orch daemon <span class=\"token function\">add</span> osd ceph-pro-2-10-200-10-32:/dev/sdb\nceph orch daemon <span class=\"token function\">add</span> osd ceph-pro-3-10-200-10-33:/dev/sdb<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"7-集群高可用\"><a href=\"#7-集群高可用\" class=\"headerlink\" title=\"7.集群高可用\"></a>7.集群高可用</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#需要至少三个监视器才能实现冗余和高可用性</span>\nceph orch apply mon <span class=\"token number\">3</span>\n<span class=\"token comment\"># 部署mon到指定节点</span>\nceph orch <span class=\"token function\">host</span> label <span class=\"token function\">add</span> *<span class=\"token operator\">&lt;</span>host<span class=\"token operator\">></span>* mon\n<span class=\"token comment\">#至少需要两个管理器才能实现高可用性</span>\nceph orch apply mgr <span class=\"token number\">3</span>\n<span class=\"token comment\">#</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"8-CephFS-部署\"><a href=\"#8-CephFS-部署\" class=\"headerlink\" title=\"8.CephFS 部署\"></a>8.CephFS 部署</h2><h2 id=\"9-部署-RGW\"><a href=\"#9-部署-RGW\" class=\"headerlink\" title=\"9.部署 RGW\"></a>9.部署 RGW</h2><p><a href=\"https://docs.ceph.com/en/pacific/cephadm/services/rgw/\">https://docs.ceph.com/en/pacific/cephadm/services/rgw/</a></p>\n<h1 id=\"三、运维\"><a href=\"#三、运维\" class=\"headerlink\" title=\"三、运维\"></a>三、运维</h1><p><a href=\"https://www.cnblogs.com/royaljames/p/9807532.html\">https://www.cnblogs.com/royaljames/p/9807532.html</a></p>\n<h2 id=\"1-向群集添加主机\"><a href=\"#1-向群集添加主机\" class=\"headerlink\" title=\"1.向群集添加主机\"></a>1.向群集添加主机</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#1.在新主机的根用户文件中安装群集的公共 SSH 密钥</span>\nssh-copy-id <span class=\"token parameter variable\">-f</span> <span class=\"token parameter variable\">-i</span> /etc/ceph/ceph.pub root@host2\n<span class=\"token comment\">#2.告诉 Ceph 新节点是群集的一部分：</span>\nceph orch <span class=\"token function\">host</span> <span class=\"token function\">add</span> host2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"2-部署其他监视器-monitor\"><a href=\"#2-部署其他监视器-monitor\" class=\"headerlink\" title=\"2.部署其他监视器(monitor)\"></a>2.部署其他监视器(monitor)</h2><blockquote>\n<p>典型的 Ceph 群集具有分布在不同主机的三个或五个监视器守护程序。如果群集中有五个或更多节点，我们建议部署五个监视器。</p>\n</blockquote>\n<p>当 Ceph 知道监视器应该使用什么 IP 子网时，它可以随着群集的增长（或收缩）自动部署和缩放监视器。默认情况下，Ceph 假定其他监视器应使用与第一个监视器的 IP 相同的子网。</p>\n<p>如果您的 Ceph 监视器（或整个群集）住在单个子网中，则在向群集添加新主机时，默认情况下，cephadm 会自动添加多达 5 个监视器。无需进一步步骤。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#如果有特定的 IP 子网应该由监视器使用，您可以用CIDR格式（例如 ） 配置该子网，Cephadm 仅在配置的子网中配置了 IP 的主机上部署新的监视器守护程序。</span>\nceph config <span class=\"token builtin class-name\">set</span> mon public_network <span class=\"token number\">10.1</span>.2.0/24\n<span class=\"token comment\">#如果要调整 5 个监视器的默认值：</span>\nceph orch apply mon *<span class=\"token operator\">&lt;</span>number-of-monitors<span class=\"token operator\">></span>*\n<span class=\"token comment\">#若要在一组特定的主机上部署监视器，请确保在此列表中包括第一个（引导）主机。</span>\nceph orch apply mon *<span class=\"token operator\">&lt;</span>host1,host2,host3,<span class=\"token punctuation\">..</span>.<span class=\"token operator\">></span>*\n<span class=\"token comment\">#您可以通过使用主机标签来控制监视器运行的主机。要将标签设置为相应的主机，请：mon</span>\nceph orch <span class=\"token function\">host</span> label <span class=\"token function\">add</span> *<span class=\"token operator\">&lt;</span>hostname<span class=\"token operator\">></span>* mon\n<span class=\"token comment\">#要查看当前主机和标签：</span>\nceph orch <span class=\"token function\">host</span> <span class=\"token function\">ls</span>\n<span class=\"token comment\">#例如：</span>\n<span class=\"token comment\"># ceph orch host label add host1 mon</span>\n<span class=\"token comment\"># ceph orch host label add host2 mon</span>\n<span class=\"token comment\"># ceph orch host label add host3 mon</span>\n<span class=\"token comment\"># ceph orch host ls</span>\nHOST   ADDR   LABELS  STATUS\nhost1         mon\nhost2         mon\nhost3         mon\nhost4\nhost5\n<span class=\"token comment\">#告诉 cephadm 根据标签部署监视器：</span>\nceph orch apply mon label:mon\n<span class=\"token comment\">#您可以显式指定每个监视器的 IP 地址或 CIDR 网络，并控制其放置位置。要禁用自动监视器部署：</span>\nceph orch apply mon <span class=\"token parameter variable\">--unmanaged</span>\n<span class=\"token comment\">#要部署每个附加监视器：</span>\nceph orch daemon <span class=\"token function\">add</span> mon *<span class=\"token operator\">&lt;</span>host1:ip-or-network<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>host1:ip-or-network-<span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span>*\n<span class=\"token comment\">#例如，要在使用 IP 地址上部署第二个监视器，在网络上部署第三个监视器</span>\n<span class=\"token comment\"># ceph orch apply mon --unmanaged</span>\n<span class=\"token comment\"># ceph orch daemon add mon newhost1:10.1.2.123</span>\n<span class=\"token comment\"># ceph orch daemon add mon newhost2:10.1.2.0/24</span>\n\n<span class=\"token comment\">#若要确保监视器应用于这三台主机中的每一个主机，请运行以下命令：</span>\nceph orch apply mon <span class=\"token string\">\"host1,host2,host3\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"使用-YAML-规范\"><a href=\"#使用-YAML-规范\" class=\"headerlink\" title=\"使用 YAML 规范\"></a>使用 YAML 规范</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph orch apply <span class=\"token parameter variable\">-i</span> file.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">service_type</span><span class=\"token punctuation\">:</span> mon\n<span class=\"token key atrule\">placement</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> host1\n    <span class=\"token punctuation\">-</span> host2\n    <span class=\"token punctuation\">-</span> host3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"3-部署-OSD\"><a href=\"#3-部署-OSD\" class=\"headerlink\" title=\"3.部署 OSD\"></a>3.部署 OSD</h2><h3 id=\"1-所有群集主机上的存储设备清单可以显示\"><a href=\"#1-所有群集主机上的存储设备清单可以显示\" class=\"headerlink\" title=\"1.所有群集主机上的存储设备清单可以显示\"></a>1.所有群集主机上的存储设备清单可以显示</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph orch device <span class=\"token function\">ls</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>设备必须没有分区。</li>\n<li>设备不得具有任何 LVM 状态。</li>\n<li>不得安装设备。</li>\n<li>设备不能包含文件系统。</li>\n<li>设备不得包含 Ceph BlueStore OSD。</li>\n<li>设备必须大于 5 GB。</li>\n</ul>\n<h3 id=\"2-创建新-OSD-的方法\"><a href=\"#2-创建新-OSD-的方法\" class=\"headerlink\" title=\"2.创建新 OSD 的方法\"></a>2.创建新 OSD 的方法</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 1.告诉 Ceph 使用任何可用和未使用的存储设备：</span>\nceph orch apply osd --all-available-devices\n<span class=\"token comment\"># 2.从特定主机上的特定设备创建 OSD：ceph orch daemon add osd *&lt;host>*:*&lt;device-path>*</span>\nceph orch daemon <span class=\"token function\">add</span> osd host1:/dev/sdb\n<span class=\"token comment\"># 3.使用OSD 服务规范描述设备，根据设备属性、此类设备类型（SSD 或 HDD）、设备型号名称、大小或设备存在的主机使用：</span>\nceph orch apply osd <span class=\"token parameter variable\">-i</span> spec.yml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"4-部署-MDS\"><a href=\"#4-部署-MDS\" class=\"headerlink\" title=\"4.部署 MDS\"></a>4.部署 MDS</h2><p>使用 CephFS 文件系统需要一个或多个 MDS 守护程序。如果使用较新的接口创建新文件系统，则会自动创建这些接口。有关详细信息，请参阅 FS 卷和子卷。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph orch apply mds *<span class=\"token operator\">&lt;</span>fs-name<span class=\"token operator\">></span>* <span class=\"token parameter variable\">--placement</span><span class=\"token operator\">=</span><span class=\"token string\">\"*&lt;num-daemons>* [*&lt;host1>* ...]\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"5-部署-RGW\"><a href=\"#5-部署-RGW\" class=\"headerlink\" title=\"5.部署 RGW\"></a>5.部署 RGW</h2><h2 id=\"6-管理-Monitor-map\"><a href=\"#6-管理-Monitor-map\" class=\"headerlink\" title=\"6.管理 Monitor map\"></a>6.管理 Monitor map</h2><h3 id=\"1-多-Monitor-同步机制\"><a href=\"#1-多-Monitor-同步机制\" class=\"headerlink\" title=\"1).多 Monitor 同步机制\"></a>1).多 Monitor 同步机制</h3><blockquote>\n<p>在生产环境建议最少三节点 monitor，以确保 cluster map 的高可用性和冗余性,monitor 节点不应该过多甚至操作 9 节点的行为,会导致数据读写时间下降，影响系统集群的性能。</p>\n</blockquote>\n<ul>\n<li>monitor 使用 paxos 算法作为集群状态上达成一致的机制。paxos 是一种分布式一致性算法。每当 monitor 修改 map 时，它会通过 paxos 发送更新到其他 monitor。Ceph 只有在大多数 monitor 就更新达成一致时提交 map 的新版本。</li>\n<li>cluster map 的更新操作需要 Paxos 确认，但是读操作不经由 Paxos，而是直接访问本地的 kv 存储。</li>\n</ul>\n<h3 id=\"2-Monitor-选举机制\"><a href=\"#2-Monitor-选举机制\" class=\"headerlink\" title=\"2).Monitor 选举机制\"></a>2).Monitor 选举机制</h3><ul>\n<li>多个 monitor 之间需要建立仲裁并选择出一个 leader，其他节点则作为工作节点（peon）。</li>\n<li>在选举完成并确定 leader 之后，leader 将从所有其他 monitor 请求最新的 map epoc，以确保 leader 具有集群的最新视图。</li>\n<li>要维护 monitor 集群的正常工作，必须有超过半数的节点正常。</li>\n</ul>\n<h3 id=\"3-Monitor-租约\"><a href=\"#3-Monitor-租约\" class=\"headerlink\" title=\"3).Monitor 租约\"></a>3).Monitor 租约</h3><ul>\n<li>在 Monitor 建立仲裁后，leader 开始分发短期的租约到所有的 monitors。让它们能够分发 cluster map 到 OSD 和 client。</li>\n<li>Monitor 租约默认每 3s 续期一次。</li>\n<li>当 peon monitor 没有确认它收到租约时，leader 假定该 monitor 异常，它会召集新的选举以建立仲裁。</li>\n<li>如果 peon monitor 的租约到期后没有收到 leader 的续期，它会假定 leader 异常，并会召集新的选举。</li>\n<li>所以如果生产环境中存在多个 monitor 时候某个节点的超时会猝发节点的重新选举导致 client 无法第一时间拿到最新的 crushmap 图像也就无法去对应的 osd 上的 pv 写入数据了。</li>\n</ul>\n<h3 id=\"4-常用的-monitor-管理\"><a href=\"#4-常用的-monitor-管理\" class=\"headerlink\" title=\"4).常用的 monitor 管理\"></a>4).常用的 monitor 管理</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#打印monitor map信息</span>\nceph mon dump\n\n<span class=\"token comment\">#将monitor map导出为一个二进制文件</span>\nceph mon getmap <span class=\"token parameter variable\">-o</span> ./monmap\n\n<span class=\"token comment\">#打印导出的二进制文件的内容</span>\nmonmaptool <span class=\"token parameter variable\">--print</span> ./monmap\n\n<span class=\"token comment\">#修改二进制文件，从monmap删除某个monitor</span>\nmonmaptool ./monmap <span class=\"token parameter variable\">--rm</span> <span class=\"token operator\">&lt;</span>id<span class=\"token operator\">></span>\n\n<span class=\"token comment\">#修改二进制文件，往monmap中添加一个monitor</span>\nmonmaptool ./monmap <span class=\"token parameter variable\">--add</span> <span class=\"token operator\">&lt;</span>id<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>ip:port<span class=\"token operator\">></span>\n\n<span class=\"token comment\">#导入一个二进制文件，在导入之前，需要先停止monitor</span>\nceph-mon <span class=\"token parameter variable\">-i</span> <span class=\"token operator\">&lt;</span>id<span class=\"token operator\">></span> --inject-monmap ./monmap<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"7-管理-OSD-Map\"><a href=\"#7-管理-OSD-Map\" class=\"headerlink\" title=\"7.管理 OSD Map\"></a>7.管理 OSD Map</h2><ul>\n<li>每当 OSD 加入或离开集群时，Ceph 都会更新 OSD map。</li>\n<li>OSD 不使用 leader 来管理 OSD map，它们会在自身之间传播同步 map。OSD 会利用 OSD map epoch 标记它们交换的每一条信息，当 OSD 检测到自己已落后时，它会使用其对等 OSD 执行 map 更新。</li>\n<li>在大型集群中 OSD map 更新会非常频繁，节点会执行递增 map 更新。</li>\n<li>Ceph 也会利用 epoch 来标记 OSD 和 client 之间的消息。当 client 连接到 OSD 时 OSD 会检查 epoch。如果发现 epoch 不匹配，则 OSD 会以正确的 epoch 响应，以便客户端可以更新其 OSD map。</li>\n<li>OSD 定期向 monitor 报告自己的状态，OSD 之间会交换心跳，以便检测对等点的故障，并报告给 monitor。</li>\n<li>leader monitor 发现 OSD 故障时，它会更新 map，递增 epoch，并使用 Paxos 更新协议来通知其他 monitor，同时撤销租约，并发布新的租约，以使 monitor 以分发最新的 OSD map。</li>\n</ul>\n<h3 id=\"1-OSD-状态解读\"><a href=\"#1-OSD-状态解读\" class=\"headerlink\" title=\"1).OSD 状态解读\"></a>1).OSD 状态解读</h3><ul>\n<li>1.正常状态的 OSD 为 up 且 in</li>\n<li>2.当 OSD 故障时，守护进程 offline，在 5 分钟内，集群仍会将其标记为 up 和 in，这是为了防止网络抖动</li>\n<li>3.如果 5 分钟内仍未恢复，则会标记为 down 和 out。此时该 OSD 上的 PG 开始迁移。这个 5 分钟的时间间隔可以通过 mon_osd_down_out_interval 配置项修改</li>\n<li>4.当故障的 OSD 重新上线以后，会触发新的数据再平衡</li>\n<li>5.当集群有 noout 标志位时，则 osd 下线不会导致数据恢复</li>\n<li>6.OSD 每隔 6s 会互相验证状态。并每隔 120s 向 mon 报告一次状态。</li>\n</ul>\n<h3 id=\"2-OSD-map-命令\"><a href=\"#2-OSD-map-命令\" class=\"headerlink\" title=\"2).OSD map 命令\"></a>2).OSD map 命令</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph osd dump\nceph osd getmap <span class=\"token parameter variable\">-o</span> binfile\nosdmaptool <span class=\"token parameter variable\">--print</span> binfile\nosdmaptool --export-crush crushbinfile binfile\nosdmaptool --import-crush crushbinfile binfile\nosdmaptool --test-map-pg pgid binfile<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-OSD-的状态\"><a href=\"#3-OSD-的状态\" class=\"headerlink\" title=\"3.)OSD 的状态\"></a>3.)OSD 的状态</h3><ul>\n<li><p>OSD 运行状态</p>\n<ul>\n<li>up</li>\n<li>down</li>\n<li>out</li>\n<li>in</li>\n</ul>\n</li>\n<li><p>OSD 容量状态</p>\n<ul>\n<li>nearfull</li>\n<li>full</li>\n</ul>\n</li>\n</ul>\n<p>常用指令</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#显示OSD状态</span>\nceph osd <span class=\"token function\">stat</span>\n\n<span class=\"token comment\">#报告osd使用量</span>\nceph osd <span class=\"token function\">df</span>\n\n<span class=\"token comment\">#查找指定osd位置</span>\nceph osd <span class=\"token function\">find</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-OSD-容量\"><a href=\"#4-OSD-容量\" class=\"headerlink\" title=\"4.)OSD 容量\"></a>4.)OSD 容量</h3><ul>\n<li>当集群容量达到 mon_osd_nearfull_ratio 的值时，集群会进入 HEALTH_WARN 状态。这是为了在达到 full_ratio 之前，提醒添加 OSD。默认设置为 0.85，即 85%</li>\n<li>当集群容量达到 mon_osd_full_ratio 的值时，集群将停止写入，但允许读取。集群会进入到 HEALTH_ERR 状态。默认为 0.95，即 95%。这是为了防止当一个或多个 OSD 故障时仍留有余地能重平衡数据</li>\n</ul>\n<p>设置方法：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph osd set-full-ratio <span class=\"token number\">0.95</span>\nceph osd set-nearfull-ratio <span class=\"token number\">0.85</span>\nceph osd dump<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"5-OSD-状态参数\"><a href=\"#5-OSD-状态参数\" class=\"headerlink\" title=\"5).OSD 状态参数\"></a>5).OSD 状态参数</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># osd之间传递心跳的间隔时间</span>\nosd_heartbeat_interval\n\n<span class=\"token comment\"># 一个osd多久没心跳，就会被集群认为它down了</span>\nosd_heartbeat_grace\n\n<span class=\"token comment\"># 确定一个osd状态为down的最少报告来源osd数</span>\nmon_osd_min_down_reporters\n\n<span class=\"token comment\"># 一个OSD必须重复报告一个osd状态为down的次数</span>\nmon_osd_min_down_reports\n\n<span class=\"token comment\"># 当osd停止响应多长时间，将其标记为down和out</span>\nmon_osd_down_out_interval\n\n<span class=\"token comment\"># monitor宣布失败osd为down前的等待时间</span>\nmon_osd_report_timeout\n\n<span class=\"token comment\"># 一个新的osd加入集群时，等待多长时间，开始向monitor报告</span>\nosd_mon_report_interval_min\n\n<span class=\"token comment\"># monitor允许osd报告的最大间隔，超时就认为它down了</span>\nosd_mon_report_interval_max\n\n<span class=\"token comment\"># osd向monitor报告心跳的时间</span>\nosd_mon_heartbeat_interval<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"8-管理-PG\"><a href=\"#8-管理-PG\" class=\"headerlink\" title=\"8.管理 PG\"></a>8.管理 PG</h2><h3 id=\"1-管理文件到-PG-映射\"><a href=\"#1-管理文件到-PG-映射\" class=\"headerlink\" title=\"1).管理文件到 PG 映射\"></a>1).管理文件到 PG 映射</h3><p>test 对象所在 pg id 为 10.35，存储在三个 osd 上，分别为 osd.2、osd.1 和 osd.8，其中 osd.2 为 primary osd</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">rados <span class=\"token parameter variable\">-p</span> <span class=\"token builtin class-name\">test</span> put <span class=\"token builtin class-name\">test</span> /etc/ceph/ceph.conf\nceph osd map <span class=\"token builtin class-name\">test</span> <span class=\"token builtin class-name\">test</span>\n    osdmap e201 pool <span class=\"token string\">'test'</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> object <span class=\"token string\">'test'</span> -<span class=\"token operator\">></span> pg <span class=\"token number\">10</span>.40e8aab5 <span class=\"token punctuation\">(</span><span class=\"token number\">10.35</span><span class=\"token punctuation\">)</span> -<span class=\"token operator\">></span> up <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2,1</span>,8<span class=\"token punctuation\">]</span>, p2<span class=\"token punctuation\">)</span> acting <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2,1</span>,8<span class=\"token punctuation\">]</span>, p2<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#处于up状态的osd会一直留在PG的up set和acting set中，一旦主osd down，它首先会从up set中移除</span>\n<span class=\"token comment\">#然后从acting set中移除，之后从OSD将被升级为主。Ceph会将故障OSD上的PG恢复到一个新OSD上</span>\n<span class=\"token comment\">#然后再将这个新OSD加入到up和acting set中来维持集群的高可用性</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-管理-struck-状态的-PG\"><a href=\"#2-管理-struck-状态的-PG\" class=\"headerlink\" title=\"2).管理 struck 状态的 PG\"></a>2).管理 struck 状态的 PG</h3><ul>\n<li><p>如果 PG 长时间（mon_pg_stuck_threshold，默认为 300s）出现如下状态时，MON 会将该 PG 标记为 stuck：</p>\n<ul>\n<li>inactive：pg 有 peering 问题</li>\n<li>unclean：pg 在故障恢复时遇到问题</li>\n<li>stale：pg 没有任何 OSD 报告，可能其所有的 OSD 都是 down 和 out</li>\n<li>undersized：pg 没有充足的 osd 来存储它应具有的副本数</li>\n</ul>\n</li>\n<li><p>默认情况下，Ceph 会自动执行恢复，但如果未能自动恢复，则集群状态会一直处于 HEALTH_WARN 或者 HEALTH_ERR</p>\n</li>\n<li><p>如果特定 PG 的所有 osd 都是 down 和 out 状态，则 PG 会被标记为 stale。要解决这一情况，其中一个 OSD 必须要重生，且具有可用的 PG 副本，否则 PG 不可用</p>\n</li>\n<li><p>Ceph 可以声明 osd 或 PG 已丢失，这也就意味着数据丢失。需要说明的是，osd 的运行离不开 journal，如果 journal 丢失，则 osd 停止</p>\n</li>\n</ul>\n<h3 id=\"3-struck-状态操作\"><a href=\"#3-struck-状态操作\" class=\"headerlink\" title=\"3).struck 状态操作\"></a>3).struck 状态操作</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 检查处于stuck状态的pg</span>\nceph pg dump_stuck\n<span class=\"token comment\"># 检查导致pg一致阻塞在peering状态的osd</span>\nceph osd blocked-by\n<span class=\"token comment\"># 检查某个pg的状态</span>\nceph pg dump all<span class=\"token operator\">|</span><span class=\"token function\">grep</span> pgid\n<span class=\"token comment\"># 声明pg丢失</span>\nceph pg pgid mark_unfound_lost revert<span class=\"token operator\">|</span>delete\n<span class=\"token comment\"># 声明osd丢失（需要osd状态为down且out）</span>\nceph osd lost osdid --yes-i-really-mean-it<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-手动控制-PG-的-Primary-OSD\"><a href=\"#4-手动控制-PG-的-Primary-OSD\" class=\"headerlink\" title=\"4).手动控制 PG 的 Primary OSD\"></a>4).手动控制 PG 的 Primary OSD</h3><p>可以通过手动修改 osd 的权重以提升 特定 OSD 被选为 PG Primary OSD 的概率，避免将速度慢的磁盘用作 primary osd。</p>\n<p>需要先在配置文件中配置如下参数：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mon_osd_allow_primary_affinity <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"5-调整权重示例\"><a href=\"#5-调整权重示例\" class=\"headerlink\" title=\"5).调整权重示例\"></a>5).调整权重示例</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token number\">1</span>. 查看现在有多少PG的主OSD是osd.0\nceph pg dump <span class=\"token operator\">|</span><span class=\"token function\">grep</span> active+clean <span class=\"token operator\">|</span><span class=\"token function\">egrep</span> <span class=\"token string\">\"\\[0,\"</span> <span class=\"token operator\">|</span><span class=\"token function\">wc</span> <span class=\"token parameter variable\">-l</span>\n\n<span class=\"token number\">2</span>. 修改osd.0的权重\nceph osd primary-affinity osd.0 <span class=\"token number\">0</span>  <span class=\"token comment\"># 权重范围从0.0到1.0</span>\n\n<span class=\"token number\">3</span>. 再次查看现在有多少PG的主OSD是osd.0\nceph pg dump <span class=\"token operator\">|</span><span class=\"token function\">grep</span> active+clean <span class=\"token operator\">|</span><span class=\"token function\">egrep</span> <span class=\"token string\">\"\\[0,\"</span> <span class=\"token operator\">|</span><span class=\"token function\">wc</span> <span class=\"token parameter variable\">-l</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"9-Pool-存储池-管理\"><a href=\"#9-Pool-存储池-管理\" class=\"headerlink\" title=\"9.Pool(存储池)管理\"></a>9.Pool(存储池)管理</h2><p><a href=\"https://blog.csdn.net/weixin_42440345/article/details/81118964\">https://blog.csdn.net/weixin_42440345&#x2F;article&#x2F;details&#x2F;81118964</a></p>\n<h3 id=\"PG-和-PGP-的区别\"><a href=\"#PG-和-PGP-的区别\" class=\"headerlink\" title=\"PG 和 PGP 的区别\"></a>PG 和 PGP 的区别</h3><p><a href=\"https://www.cnblogs.com/zphj1987/p/13575377.html\">https://www.cnblogs.com/zphj1987/p/13575377.html</a></p>\n<p>PG 是指定存储池存储对象的目录有多少个，PGP 是存储池 PG 的 OSD 分布组合个数</p>\n<p>PG 的增加会引起 PG 内的数据进行分裂，分裂到相同的 OSD 上新生成的 PG 当中</p>\n<p>PGP 的增加会引起部分 PG 的分布进行变化，但是不会引起 PG 内对象的变动</p>\n<h3 id=\"4-限制-pool-配置更改\"><a href=\"#4-限制-pool-配置更改\" class=\"headerlink\" title=\"4.)限制 pool 配置更改\"></a>4.)限制 pool 配置更改</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#禁止池被删除</span>\nosd_pool_default_flag_nodelete\n\n<span class=\"token comment\">#禁止池的pg_num和pgp_num被修改</span>\nosd_pool_default_flag_nopgchange\n\n<span class=\"token comment\">#禁止修改池的size和min_size</span>\nosd_pool_default_flag_nosizechange<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"1-查看-pool\"><a href=\"#1-查看-pool\" class=\"headerlink\" title=\"1.查看 pool\"></a>1.查看 pool</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#查看所有pool</span>\nceph osd lspools\n<span class=\"token comment\">#获取集群内所有POOL的概况信息,集群内POOL的个数、对应的POOL id、POOL名称、副本数、最小副本数，ruleset及POOL snap等信息</span>\nceph osd pool <span class=\"token function\">ls</span> detail\n<span class=\"token comment\">#查看POOL的统计信息</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-创建-pool\"><a href=\"#2-创建-pool\" class=\"headerlink\" title=\"2.创建 pool\"></a>2.创建 pool</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#创建一个副本类型的POOL</span>\nceph osd pool create <span class=\"token punctuation\">&#123;</span>pool-name<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span>pg-num<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>pgp-num<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>pgp-num<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>replicated<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>ruleset<span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#举例：</span>\nceph osd pool create rbd  <span class=\"token number\">32</span> <span class=\"token number\">32</span>\n<span class=\"token comment\">#创建一个纠删码类型的POOL</span>\nceph osd pool create <span class=\"token punctuation\">&#123;</span>pool-name<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span>pg-num<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span>pgp-num<span class=\"token punctuation\">&#125;</span> erasure <span class=\"token punctuation\">[</span>erasure-code-profile<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>ruleset<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在<code>&#123;&#125;</code>内的参数为必选项,<code>[]</code>内的参数均设有默认值,如果没有更改设计,可以不添加。</p>\n<p>参数的含义如下:</p>\n<ul>\n<li><strong>pool-name</strong>: POOL 的名字；必须添加。</li>\n<li><strong>pg-num</strong>: POOL 拥有的 PG 总数；必须添加。</li>\n<li><strong>pgp-num</strong>: POOL 拥有的 PGP 总数；非必须添加。默认与 pg-num 相同。</li>\n<li><strong>replicated|erasure</strong>: POOL 类型；非必须添加。如不指定为 erasure,则默认为 replicated 类型。</li>\n<li><strong>ruleset</strong>: POOL 所用的 CRUSH 规则 ID。非必须添加。默认为 0,若需指定其他 ruleset,需确保 ruleset 必须存在。</li>\n<li><strong>erasure-code-profile</strong>: 仅用于纠删码类型的 POOL。指定纠删码配置框架,此配置必须已由 osd erasure-code-profile set 定义</li>\n</ul>\n<p>这里强制选择 pg_num 和 pgp_num，因为 ceph 集群不能自动计算 pg 数量。下面有一些官方建议的 pg 使用数量：</p>\n<ul>\n<li>小于 5 个 osd 设置 pg_num 为 128</li>\n<li>5 到 10 个 osd 设置 pg_num 为 512</li>\n<li>10 到 50 个 osd 设置 pg_num 为 1024</li>\n<li>如果超过 50 个 osd 你需要自己明白权衡点，并且能自行计算 pg_num 的数量</li>\n</ul>\n<p>pg_num 通用计算方法:</p>\n<p>(OSDs * 100)</p>\n<p>Total PGs &#x3D;  ————</p>\n<p>pool size</p>\n<h3 id=\"3-修改-pool\"><a href=\"#3-修改-pool\" class=\"headerlink\" title=\"3.修改 pool\"></a>3.修改 pool</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph osd pool <span class=\"token builtin class-name\">set</span> <span class=\"token punctuation\">&#123;</span>pool-name<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span>key<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">&#125;</span>\nsize：设置存储池中的对象副本数，详情参见设置对象副本数。仅适用于副本存储池。\nmin_size：设置 I/O 需要的最小副本数，详情参见设置对象副本数。仅适用于副本存储池。\npg_num：计算数据分布时的有效 PG 数。只能大于当前 PG 数。\npgp_num：计算数据分布时使用的有效 PGP 数量。小于等于存储池的 PG 数。\nhashpspool：给指定存储池设置/取消 HASHPSPOOL 标志。\ntarget_max_bytes：达到 max_bytes 阀值时会触发 Ceph 冲洗或驱逐对象。\ntarget_max_objects：达到 max_objects 阀值时会触发 Ceph 冲洗或驱逐对象。\nscrub_min_interval：在负载低时，洗刷存储池的最小间隔秒数。如果是 <span class=\"token number\">0</span> ，就按照配置文件里的 osd_scrub_min_interval 。\nscrub_max_interval：不管集群负载如何，都要洗刷存储池的最大间隔秒数。如果是 <span class=\"token number\">0</span> ，就按照配置文件里的 osd_scrub_max_interval 。\ndeep_scrub_interval：“深度”洗刷存储池的间隔秒数。如果是 <span class=\"token number\">0</span> ，就按照配置文件里的 osd_deep_scrub_interval 。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-删除存储池\"><a href=\"#4-删除存储池\" class=\"headerlink\" title=\"4.删除存储池\"></a>4.删除存储池</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph osd pool delete <span class=\"token punctuation\">&#123;</span>pool-name<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>pool-name<span class=\"token punctuation\">&#125;</span> --yes-i-really-really-mean-it<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"5-重命名存储池\"><a href=\"#5-重命名存储池\" class=\"headerlink\" title=\"5.重命名存储池\"></a>5.重命名存储池</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph osd pool <span class=\"token function\">rename</span> <span class=\"token punctuation\">&#123;</span>current-pool-name<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span>new-pool-name<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"6-查看存储池统计信息\"><a href=\"#6-查看存储池统计信息\" class=\"headerlink\" title=\"6.查看存储池统计信息\"></a>6.查看存储池统计信息</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">rados <span class=\"token function\">df</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"7-给存储池做快照\"><a href=\"#7-给存储池做快照\" class=\"headerlink\" title=\"7.给存储池做快照\"></a>7.给存储池做快照</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph osd pool mksnap <span class=\"token punctuation\">&#123;</span>pool-name<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span>snap-name<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"8-删除存储池的快照\"><a href=\"#8-删除存储池的快照\" class=\"headerlink\" title=\"8.删除存储池的快照\"></a>8.删除存储池的快照</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph osd pool rmsnap <span class=\"token punctuation\">&#123;</span>pool-name<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span>snap-name<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"9-获取存储池选项值\"><a href=\"#9-获取存储池选项值\" class=\"headerlink\" title=\"9.获取存储池选项值\"></a>9.获取存储池选项值</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph osd pool get <span class=\"token punctuation\">&#123;</span>pool-name<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span>key<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"10-获取对象副本数\"><a href=\"#10-获取对象副本数\" class=\"headerlink\" title=\"10.获取对象副本数\"></a>10.获取对象副本数</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph osd dump <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">'replicated size'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"11-设置存储池配额\"><a href=\"#11-设置存储池配额\" class=\"headerlink\" title=\"11.设置存储池配额\"></a>11.设置存储池配额</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">命令格式：\n<span class=\"token comment\"># ceph osd pool set-quota &#123;pool-name&#125; [max_objects &#123;obj-count&#125;] [max_bytes &#123;bytes&#125;]</span>\n命令举例：\n<span class=\"token comment\"># ceph osd pool set-quota rbd max_objects 10000</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"10-自定义-Crush-Map\"><a href=\"#10-自定义-Crush-Map\" class=\"headerlink\" title=\"10.自定义 Crush Map\"></a>10.自定义 Crush Map</h2><blockquote>\n<p>crush map 决定了客户端数据最终写入的 osd 的位置，在某些情况下存在 hdd 和 ssd 两种盘想让某些数据写入到指定的 osd 中这个时候就是需要去人为的手动编译 crush-map，编辑要修改的部分，再导入集群中达到我们特定的目的</p>\n</blockquote>\n<h3 id=\"1-Crush-的放置策略\"><a href=\"#1-Crush-的放置策略\" class=\"headerlink\" title=\"1).Crush 的放置策略\"></a>1).Crush 的放置策略</h3><ul>\n<li>Ceph 使用 CRUSH 算法（Controlled Replication Under Scalable Hashing 可扩展哈希下的受控复制）来计算哪些 OSD 存放哪些对象</li>\n<li>对象分配到 PG 中，CRUSH 决定这些 PG 使用哪些 OSD 来存储对象。理想情况下，CRUSH 会将数据均匀的分布到存储中</li>\n<li>当添加新 OSD 或者现有的 OSD 出现故障时，Ceph 使用 CRUSH 在活跃的 OSD 上重平衡数据 CRUSH map 是 CRUSH 算法的中央配置机制，可通过调整 CRUSHmap 来优化数据存放位置默认情况下，CRUSH 将一个对象的多个副本放置到不同主机上的 0SD 中。可以配置 CRUSH map 和 CRUSH rules，使一个对象的多个副本放置到不同房间或者不同机柜的主机上的 0SD 中。</li>\n<li>也可以将 SSD 磁盘分配给需要高速存储的池</li>\n</ul>\n<h3 id=\"2-编译与翻译和更新\"><a href=\"#2-编译与翻译和更新\" class=\"headerlink\" title=\"2).编译与翻译和更新\"></a>2).编译与翻译和更新</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#导出CRUSH map</span>\nceph osd getcrushmap <span class=\"token parameter variable\">-o</span> ./crushmap.bin\n<span class=\"token comment\">#解译CRUSH map</span>\ncrushtool <span class=\"token parameter variable\">-d</span> ./crushmap.bin ./crushmap.txt\n<span class=\"token comment\">#修改后的CRUSH map重新编译</span>\ncrushtool <span class=\"token parameter variable\">-c</span> ./crushmap.txt-o ./crushmap-new.bin\n<span class=\"token comment\">#更新CRUSH map</span>\nceph osd setcrushmap-i./crushmap-new.bin\n<span class=\"token comment\">#查询crush map的内容（返回json）</span>\nceph osd crush dump<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>例子</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root default <span class=\"token punctuation\">&#123;</span>\n    id-1           <span class=\"token comment\"># do not change unnecessarily</span>\n    id-2 class hdd <span class=\"token comment\">#do not change unnecessarily</span>\n    <span class=\"token comment\">#weiqht 0.166</span>\n    alg straw2\n    <span class=\"token builtin class-name\">hash</span> <span class=\"token number\">0</span><span class=\"token comment\">#rjenkins1</span>\n    item rackl weight <span class=\"token number\">0.055</span>\n    item rack2 weiqht <span class=\"token number\">0.055</span>\n    item rack3 weight <span class=\"token number\">0.055</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">#rules</span>\nrule replicated rule<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">id</span> <span class=\"token number\">0</span>\n    <span class=\"token builtin class-name\">type</span> replicated\n    min size <span class=\"token number\">1</span>\n    max size <span class=\"token number\">10</span>\n    step take default  <span class=\"token comment\">#只要是应用这个rule的都把数据写入到defaults下</span>\n    step chooseleaf firstn <span class=\"token number\">0</span> <span class=\"token builtin class-name\">type</span> <span class=\"token function\">host</span>  <span class=\"token comment\">#定义故障的故障域为物理集机器级别（rack为机柜级别）</span>\n    step emit <span class=\"token comment\">#结尾符号</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"11-admin-sockets-管理守护进程\"><a href=\"#11-admin-sockets-管理守护进程\" class=\"headerlink\" title=\"11.admin sockets 管理守护进程\"></a>11.admin sockets 管理守护进程</h2><ul>\n<li>通过 admin sockets，管理员可以直接与守护进程交互。如查看和修改守护进程的配置参数。</li>\n<li>守护进程的 socket 文件一般是&#x2F;var&#x2F;run&#x2F;ceph&#x2F;cluster-cluster−type.$id.asok</li>\n<li>基于 admin sockets 的操作：</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph daemon <span class=\"token variable\">$type</span><span class=\"token builtin class-name\">.</span><span class=\"token variable\">$id</span> <span class=\"token builtin class-name\">command</span>\n<span class=\"token comment\">#或者</span>\nceph --admin-daemon /var/run/ceph/<span class=\"token variable\">$cluster</span>-<span class=\"token variable\">$type</span><span class=\"token builtin class-name\">.</span><span class=\"token variable\">$id</span>.asok <span class=\"token builtin class-name\">command</span>\n<span class=\"token comment\">#常用command如下：</span>\n<span class=\"token builtin class-name\">help</span>\nconfig get parameter\nconfig <span class=\"token builtin class-name\">set</span> parameter\nconfig show\nperf dump<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"12-用户管理\"><a href=\"#12-用户管理\" class=\"headerlink\" title=\"12.用户管理\"></a>12.用户管理</h2><blockquote>\n<p>Ceph 把数据以对象的形式存于各存储池中。Ceph 用户必须具有访问存储池的权限才能够读写数据。另外，Ceph 用户必须具有执行权限才能够使用 Ceph 的管理命令。</p>\n</blockquote>\n<h3 id=\"1、查看用户信息\"><a href=\"#1、查看用户信息\" class=\"headerlink\" title=\"1、查看用户信息\"></a>1、查看用户信息</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">查看所有用户信息\n<span class=\"token comment\"># ceph auth list</span>\n获取所有用户的key与权限相关信息\n<span class=\"token comment\"># ceph auth get client.admin</span>\n如果只需要某个用户的key信息，可以使用pring-key子命令\n<span class=\"token comment\"># ceph auth print-key client.admin</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2、添加用户\"><a href=\"#2、添加用户\" class=\"headerlink\" title=\"2、添加用户\"></a>2、添加用户</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># ceph auth add client.john mon 'allow r' osd 'allow rw pool=liverpool'</span>\n<span class=\"token comment\"># ceph auth get-or-create client.paul mon 'allow r' osd 'allow rw pool=liverpool'</span>\n<span class=\"token comment\"># ceph auth get-or-create client.george mon 'allow r' osd 'allow rw pool=liverpool' -o george.keyring</span>\n<span class=\"token comment\"># ceph auth get-or-create-key client.ringo mon 'allow r' osd 'allow rw pool=liverpool' -o ringo.key</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3、修改用户权限\"><a href=\"#3、修改用户权限\" class=\"headerlink\" title=\"3、修改用户权限\"></a>3、修改用户权限</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># ceph auth caps client.john mon 'allow r' osd 'allow rw pool=liverpool'</span>\n<span class=\"token comment\"># ceph auth caps client.paul mon 'allow rw' osd 'allow rwx pool=liverpool'</span>\n<span class=\"token comment\"># ceph auth caps client.brian-manager mon 'allow *' osd 'allow *'</span>\n<span class=\"token comment\"># ceph auth caps client.ringo mon ' ' osd ' '</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4、删除用户\"><a href=\"#4、删除用户\" class=\"headerlink\" title=\"4、删除用户\"></a>4、删除用户</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># ceph auth del &#123;TYPE&#125;.&#123;ID&#125;</span>\n其中， <span class=\"token punctuation\">&#123;</span>TYPE<span class=\"token punctuation\">&#125;</span> 是 client，osd，mon 或 mds 的其中一种。<span class=\"token punctuation\">&#123;</span>ID<span class=\"token punctuation\">&#125;</span> 是用户的名字或守护进程的 ID 。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"13-增加和删除-Monitor\"><a href=\"#13-增加和删除-Monitor\" class=\"headerlink\" title=\"13.增加和删除 Monitor\"></a>13.增加和删除 Monitor</h2><blockquote>\n<p>一个集群可以只有一个 monitor，推荐生产环境至少部署 3 个。 Ceph 使用 Paxos 算法的一个变种对各种 map 、以及其它对集群来说至关重要的信息达成共识。建议（但不是强制）部署奇数个 monitor 。Ceph 需要 mon 中的大多数在运行并能够互相通信，比如单个 mon，或 2 个中的 2 个，3 个中的 2 个，4 个中的 3 个等。初始部署时，建议部署 3 个 monitor。后续如果要增加，请一次增加 2 个.</p>\n</blockquote>\n<h3 id=\"1、新增一个-monitor\"><a href=\"#1、新增一个-monitor\" class=\"headerlink\" title=\"1、新增一个 monitor\"></a>1、新增一个 monitor</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># ceph-deploy mon create $hostname</span>\n注意：执行ceph-deploy之前要进入之前安装时候配置的目录。/my-cluster<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"2、删除-Monitor\"><a href=\"#2、删除-Monitor\" class=\"headerlink\" title=\"2、删除 Monitor\"></a>2、删除 Monitor</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># ceph-deploy mon destroy $hostname</span>\n注意： 确保你删除某个 Mon 后，其余 Mon 仍能达成一致。如果不可能，删除它之前可能需要先增加一个。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h1 id=\"四、集群监控管理\"><a href=\"#四、集群监控管理\" class=\"headerlink\" title=\"四、集群监控管理\"></a>四、集群监控管理</h1><h2 id=\"1-集群整体运行状态\"><a href=\"#1-集群整体运行状态\" class=\"headerlink\" title=\"1.集群整体运行状态\"></a>1.集群整体运行状态</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@cephnode01 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ceph -s</span>\ncluster:\n    id:     8230a918-a0de-4784-9ab8-cd2a2b8671d0\n    health: HEALTH_WARN\n            application not enabled on <span class=\"token number\">1</span> pool<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n\n  services:\n    mon: <span class=\"token number\">3</span> daemons, quorum cephnode01,cephnode02,cephnode03 <span class=\"token punctuation\">(</span>age 27h<span class=\"token punctuation\">)</span>\n    mgr: cephnode01<span class=\"token punctuation\">(</span>active, since 53m<span class=\"token punctuation\">)</span>, standbys: cephnode03, cephnode02\n    osd: <span class=\"token number\">4</span> osds: <span class=\"token number\">4</span> up <span class=\"token punctuation\">(</span>since 27h<span class=\"token punctuation\">)</span>, <span class=\"token number\">4</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span>since 19h<span class=\"token punctuation\">)</span>\n    rgw: <span class=\"token number\">1</span> daemon active <span class=\"token punctuation\">(</span>cephnode01<span class=\"token punctuation\">)</span>\n\n  data:\n    pools:   <span class=\"token number\">6</span> pools, <span class=\"token number\">96</span> pgs\n    objects: <span class=\"token number\">235</span> objects, <span class=\"token number\">3.6</span> KiB\n    usage:   <span class=\"token number\">4.0</span> GiB used, <span class=\"token number\">56</span> GiB / <span class=\"token number\">60</span> GiB avail\n    pgs:     <span class=\"token number\">96</span> active+clean\n\n    id：集群ID\n    health：集群运行状态，这里有一个警告，说明是有问题，意思是pg数大于pgp数，通常此数值相等。\n    mon：Monitors运行状态。\n    osd：OSDs运行状态。\n    mgr：Managers运行状态。\n    mds：Metadatas运行状态。\n    pools：存储池与PGs的数量。\n    objects：存储对象的数量。\n    usage：存储的理论用量。\n    pgs：PGs的运行状态\n\n~<span class=\"token punctuation\">]</span>$ ceph <span class=\"token parameter variable\">-w</span>\n~<span class=\"token punctuation\">]</span>$ ceph health detail<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"2-PG-状态\"><a href=\"#2-PG-状态\" class=\"headerlink\" title=\"2.PG 状态\"></a>2.PG 状态</h2><blockquote>\n<p>查看 pg 状态查看通常使用下面两个命令即可，dump 可以查看更详细信息</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">~<span class=\"token punctuation\">]</span>$ ceph pg dump\n~<span class=\"token punctuation\">]</span>$ ceph pg <span class=\"token function\">stat</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"3-Pool-状态\"><a href=\"#3-Pool-状态\" class=\"headerlink\" title=\"3.Pool 状态\"></a>3.Pool 状态</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">~<span class=\"token punctuation\">]</span>$ ceph osd pool stats\n~<span class=\"token punctuation\">]</span>$ ceph osd pool stats<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"4-OSD-状态\"><a href=\"#4-OSD-状态\" class=\"headerlink\" title=\"4.OSD 状态\"></a>4.OSD 状态</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">~<span class=\"token punctuation\">]</span>$ ceph osd <span class=\"token function\">stat</span>\n~<span class=\"token punctuation\">]</span>$ ceph osd dump\n~<span class=\"token punctuation\">]</span>$ ceph osd tree\n~<span class=\"token punctuation\">]</span>$ ceph osd <span class=\"token function\">df</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"5-Monitor-状态和查看仲裁状态\"><a href=\"#5-Monitor-状态和查看仲裁状态\" class=\"headerlink\" title=\"5.Monitor 状态和查看仲裁状态\"></a>5.Monitor 状态和查看仲裁状态</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">~<span class=\"token punctuation\">]</span>$ ceph mon <span class=\"token function\">stat</span>\n~<span class=\"token punctuation\">]</span>$ ceph mon dump\n~<span class=\"token punctuation\">]</span>$ ceph quorum_status<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"6-集群空间用量\"><a href=\"#6-集群空间用量\" class=\"headerlink\" title=\"6.集群空间用量\"></a>6.集群空间用量</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">~<span class=\"token punctuation\">]</span>$ ceph <span class=\"token function\">df</span>\n~<span class=\"token punctuation\">]</span>$ ceph <span class=\"token function\">df</span> detail<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h1 id=\"五、集群配置管理-临时和全局，服务平滑重启\"><a href=\"#五、集群配置管理-临时和全局，服务平滑重启\" class=\"headerlink\" title=\"五、集群配置管理(临时和全局，服务平滑重启)\"></a>五、集群配置管理(临时和全局，服务平滑重启)</h1><blockquote>\n<p>有时候需要更改服务的配置，但不想重启服务，或者是临时修改。这时候就可以使用 tell 和 daemon 子命令来完成此需求。</p>\n</blockquote>\n<h2 id=\"1-查看运行配置\"><a href=\"#1-查看运行配置\" class=\"headerlink\" title=\"1.查看运行配置\"></a>1.查看运行配置</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">命令格式：\n<span class=\"token comment\"># ceph daemon &#123;daemon-type&#125;.&#123;id&#125; config show</span>\n\n命令举例：\n<span class=\"token comment\"># ceph daemon osd.0 config show</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"2-tell-子命令格式\"><a href=\"#2-tell-子命令格式\" class=\"headerlink\" title=\"2.tell 子命令格式\"></a>2.tell 子命令格式</h2><blockquote>\n<p>使用 tell 的方式适合对整个集群进行设置，使用 * 号进行匹配，就可以对整个集群的角色进行设置。而出现节点异常无法设置时候，只会在命令行当中进行报错，不太便于查找。</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">命令格式：\n<span class=\"token comment\"># ceph tell &#123;daemon-type&#125;.&#123;daemon id or *&#125; injectargs --&#123;name&#125;=&#123;value&#125; [--&#123;name&#125;=&#123;value&#125;]</span>\n命令举例：\n<span class=\"token comment\"># ceph tell osd.0 injectargs --debug-osd 20 --debug-ms 1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>daemon-type：为要操作的对象类型如 osd、mon、mds 等。</li>\n<li>daemon id：该对象的名称，osd 通常为 0、1 等，mon 为 ceph -s 显示的名称，这里可以输入*表示全部。</li>\n<li>injectargs：表示参数注入，后面必须跟一个参数，也可以跟多个</li>\n</ul>\n<h2 id=\"3-daemon-子命令\"><a href=\"#3-daemon-子命令\" class=\"headerlink\" title=\"3.daemon 子命令\"></a>3.daemon 子命令</h2><ul>\n<li>使用 daemon 进行设置的方式就是一个个的去设置，这样可以比较好的反馈，此方法是需要在设置的角色所在的主机上进行设置。</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">命令格式：\n<span class=\"token comment\"># ceph daemon &#123;daemon-type&#125;.&#123;id&#125; config set &#123;name&#125;=&#123;value&#125;</span>\n命令举例：\n<span class=\"token comment\"># ceph daemon mon.ceph-monitor-1 config set mon_allow_pool_delete false</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"4-集群操作\"><a href=\"#4-集群操作\" class=\"headerlink\" title=\"4.集群操作\"></a>4.集群操作</h2><ul>\n<li>命令包含 start、restart、status</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#1.启动所有守护进程</span>\nsystemctl start ceph.target\n\n<span class=\"token comment\">#2.按类型启动守护进程</span>\nsystemctl start ceph-mgr.target\nsystemctl start ceph-osd@id\nsystemctl start ceph-mon.target\nsystemctl start ceph-mds.target\nsystemctl start ceph-radosgw.target<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"5-添加和删除-OSD\"><a href=\"#5-添加和删除-OSD\" class=\"headerlink\" title=\"5.添加和删除 OSD\"></a>5.添加和删除 OSD</h2><h3 id=\"1-添加-OSD\"><a href=\"#1-添加-OSD\" class=\"headerlink\" title=\"1).添加 OSD\"></a>1).添加 OSD</h3><ul>\n<li><p>纵向扩容(会导致数据的重分布)</p>\n</li>\n<li><p>生产环境下最好的做法就是不要一次性添加大量的 osd，最好逐步添加等待数据同步后再进行添加操作</p>\n<ul>\n<li>当影响生产数据时候临时可以停止同步：ceph osd set [nobackfill|norebalance],unset 取消对应的参数</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#1.格式化磁盘</span>\nceph-volume lvm zap /dev/sd<span class=\"token operator\">&lt;</span>id<span class=\"token operator\">></span>\n\n<span class=\"token comment\">#2.进入到ceph-deploy执行目录/my-cluster，添加OSD</span>\nceph-deploy osd create <span class=\"token parameter variable\">--data</span> /dev/sd<span class=\"token operator\">&lt;</span>id<span class=\"token operator\">></span> <span class=\"token variable\">$hostname</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-删除-OSD\"><a href=\"#2-删除-OSD\" class=\"headerlink\" title=\"2).删除 OSD\"></a>2).删除 OSD</h3><ul>\n<li><p>如果机器有盘坏了可以使用 dmdsg 查看坏盘</p>\n</li>\n<li><p>存在一种情况就是某 osd 的写入延迟大盘有坏道很大可能会拖垮 ceph 集群：</p>\n<ul>\n<li>ceph osd tree: 查看当前集群的 osd 状态</li>\n<li>ceph osd perf: 查看当前的 OSD 的延迟</li>\n</ul>\n</li>\n<li><p>当某一快 osd 踢出集群时候立即做数据重分布(默认 10 分钟)</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token number\">1</span>、调整osd的crush weight为 <span class=\"token number\">0</span>\nceph osd crush reweight osd.<span class=\"token operator\">&lt;</span>ID<span class=\"token operator\">></span> <span class=\"token number\">0.0</span>\n\n<span class=\"token number\">2</span>、将osd进程stop\nsystemctl stop ceph-osd@<span class=\"token operator\">&lt;</span>ID<span class=\"token operator\">></span>\n\n<span class=\"token number\">3</span>、将osd设置out<span class=\"token punctuation\">(</span>将会出发数据重分布<span class=\"token punctuation\">)</span>\nceph osd out <span class=\"token operator\">&lt;</span>ID<span class=\"token operator\">></span>\n\n<span class=\"token number\">4</span>、从crushmap中踢出osd\n<span class=\"token comment\"># 查看运行视图的osd状态</span>\nceph osd crush dump<span class=\"token operator\">|</span><span class=\"token function\">less</span>\nceph osd crush <span class=\"token function\">rm</span> <span class=\"token operator\">&lt;</span>osd<span class=\"token operator\">></span>.id\n\n<span class=\"token number\">5</span>、从tree树中删除osd\nceph osd <span class=\"token function\">rm</span> <span class=\"token operator\">&lt;</span>osd<span class=\"token operator\">></span>.id\n\n<span class=\"token number\">6</span>、<span class=\"token punctuation\">(</span>选用<span class=\"token punctuation\">)</span>立即执行删除OSD中数据\nceph osd purge osd.<span class=\"token operator\">&lt;</span>ID<span class=\"token operator\">></span> --yes-i-really-mean-it\n\n<span class=\"token number\">7</span>、卸载磁盘\n<span class=\"token function\">umount</span> /var/lib/ceph/osd/ceph-？\n\n<span class=\"token number\">8</span>.从认证中删除磁盘对应的key\n<span class=\"token comment\"># 查看认证的列表</span>\nceph auth list\nceph auth <span class=\"token function\">rm</span> <span class=\"token operator\">&lt;</span>osd<span class=\"token operator\">></span>.id<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"6-扩容-PG\"><a href=\"#6-扩容-PG\" class=\"headerlink\" title=\"6.扩容 PG\"></a>6.扩容 PG</h2><ul>\n<li>扩容大小取跟它接近的 2 的 N 次方</li>\n<li>在更改 pool 的 PG 数量时，需同时更改 PGP 的数量。PGP 是为了管理 placement 而存在的专门的 PG，它和 PG 的数量应该保持一致。如果你增加 pool 的 pg_num，就需要同时增加 pgp_num，保持它们大小一致，这样集群才能正常 rebalancing。</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ceph osd pool <span class=\"token builtin class-name\">set</span> <span class=\"token punctuation\">&#123;</span>pool-name<span class=\"token punctuation\">&#125;</span> pg_num <span class=\"token number\">128</span>\nceph osd pool <span class=\"token builtin class-name\">set</span> <span class=\"token punctuation\">&#123;</span>pool-name<span class=\"token punctuation\">&#125;</span> pgp_num <span class=\"token number\">128</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h1 id=\"六、调优\"><a href=\"#六、调优\" class=\"headerlink\" title=\"六、调优\"></a>六、调优</h1><h2 id=\"1-系统层面调优\"><a href=\"#1-系统层面调优\" class=\"headerlink\" title=\"1.系统层面调优\"></a>1.系统层面调优</h2><ul>\n<li><p>选择正确的 CPU 和内存。OSD、MON 和 MDS 节点具有不同的 CPU 和内存需求</p>\n<ul>\n<li>mon 的需求和 osd 的总个数有关需要的是计算力</li>\n<li>mds 对 CPU 和内存要求很高，会将大量的元数据缓存到自己的内存中，存储元数据的尽量的使用 ssd</li>\n<li>osd 最低要求 1H2G 的配置例如：24 块硬盘最少是 24H36G,磁盘方面必须高 I&#x2F;O 有多好上多好</li>\n</ul>\n</li>\n<li><p>尽可能关闭 NUMA</p>\n</li>\n<li><p>规划好存储节点的数据以及各节点的磁盘要求（不考虑钱忽略）</p>\n</li>\n<li><p>磁盘的选择尽可能在成本、吞吐量和延迟之间找到良好的平衡</p>\n</li>\n<li><p>journal 日志应该使用 SSD</p>\n</li>\n<li><p>如果交换机支持（MTU 9000），则启用巨型帧(减少数据的分片)，前提是 ceph 在一个单独的网络环境中切有独立交换机。</p>\n</li>\n<li><p>启用 ntp。Ceph 对时间敏感,集群网络至少 10GB 带宽</p>\n</li>\n</ul>\n<h3 id=\"1-系统调优工具\"><a href=\"#1-系统调优工具\" class=\"headerlink\" title=\"1).系统调优工具\"></a>1).系统调优工具</h3><ul>\n<li>使用 tuned-admin 工具，它可帮助系统管理员针对不同的工作负载进行系统调优</li>\n<li>tuned-admin 使用的 profile 默认存放在&#x2F;usr&#x2F;lib&#x2F;tuned&#x2F;目录中，可以参考其模板来自定义 profile</li>\n<li>对于 ceph 而言，network-latency 可以改进全局系统延迟，network-throughput 可以改进全局系统吞吐量,如果两个都开启可以使用 Custom 自定义模式</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 列出现有可用的profile</span>\ntuned-adm list\n\n<span class=\"token comment\"># 查看当前生效的profile</span>\ntuned-adm active\n\n<span class=\"token comment\"># 使用指定的profile</span>\ntuned-admin profile profile-name\n\n<span class=\"token comment\"># 禁用所有的profile</span>\ntuned-admin off<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-I-x2F-O-调度算法\"><a href=\"#2-I-x2F-O-调度算法\" class=\"headerlink\" title=\"2).I&#x2F;O 调度算法\"></a>2).I&#x2F;O 调度算法</h3><ul>\n<li>noop：电梯算法，实现了一个简单的 FIFO 队列。基于 SSD 的磁盘，推荐使用这种调度方式</li>\n<li>Deadline：截止时间调度算法，尽力为请求提供有保障的延迟。对于 Ceph，基于 sata 或者 sas 的驱动器，应该首选这种调度方式</li>\n<li>cfq：完全公平队列，适合有许多进程同时读取和写入大小不等的请求的磁盘，也是默认的通用调度算法</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#查看当前系统支持的调度算法：</span>\n    <span class=\"token function\">dmesg</span><span class=\"token operator\">|</span><span class=\"token function\">grep</span> <span class=\"token parameter variable\">-I</span> scheduler\n\n<span class=\"token comment\">#查看指定磁盘使用的调度算法：</span>\n    <span class=\"token function\">cat</span> /sys/block/磁盘设备号/queue/scheduler\n\n<span class=\"token comment\">#修改调度算法</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"deadline\"</span> <span class=\"token operator\">></span> /sys/block/vdb/queue/scheduler\n    <span class=\"token function\">vim</span> /etc/default/grub\n        <span class=\"token assign-left variable\">GRUB_CMDLINE_LINUX</span><span class=\"token operator\">=</span><span class=\"token string\">\"elevator=deadline numa=off\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-网络-IO-子系统调优\"><a href=\"#3-网络-IO-子系统调优\" class=\"headerlink\" title=\"3).网络 IO 子系统调优\"></a>3).网络 IO 子系统调优</h3><ul>\n<li>用于集群的网络建议尽可能使用 10Gb 网络</li>\n</ul>\n<p>以下参数用于缓冲区内存管理</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#设置OS接收缓冲区的内存大小，第一个值告知内核一个TCP socket的最小缓冲区空间，第二值为默认缓冲区空间，第三个值是最大缓冲区空间</span>\nnet.ipv4.tcp_wmem\n\n<span class=\"token comment\">#设置Os发送缓冲区的内存大小</span>\nnet.ipv4.tcp_rmem\n\n<span class=\"token comment\">#定义TCP stack如何反应内存使用情况</span>\nnet.ipv4.tcp_mem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>交换机启用大型帧</li>\n</ul>\n<blockquote>\n<p>默认情况下，以太网最大传输数据包大小为 1500 字节。为提高吞吐量并减少处理开销，一种策略是将以太网网络配置为允许设备发送和接收更大的巨型帧。</p>\n</blockquote>\n<ul>\n<li>在使用巨型帧的要谨慎，因为需要硬件支持，且全部以太网口配置为相同的巨型帧 MTU 大小。</li>\n</ul>\n<h3 id=\"4-虚拟内存调优\"><a href=\"#4-虚拟内存调优\" class=\"headerlink\" title=\"4).虚拟内存调优\"></a>4).虚拟内存调优</h3><p>设置较低的比率会导致高频但用时短的写操作，这适合 Ceph 等 I&#x2F;O 密集型应用。设置较高的比率会导致低频但用时长的写操作，这会产生较小的系统开销，但可能会造成应用响应时间变长</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#脏内存占总系统总内存的百分比，达到此比率时内核会开始在后台写出数据</span>\nvm.dirty_background_ratio\n\n<span class=\"token comment\">#脏内存占总系统总内存的百分比，达到此比率时写入进程停滞，而系统会将内存页清空到后端存储</span>\nvm.dirty_ratio\n\n<span class=\"token comment\">#控制交换分区的使用,生产中建议完全关闭，会拖慢系统运行速度</span>\nvm.swappiness\n\n<span class=\"token comment\">#系统尽力保持可用状态的RAM大小。在一个RAM大于48G的系统上，建议设置为4G</span>\nvm.min_free_kbytes<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"2-Ceph-本身调优\"><a href=\"#2-Ceph-本身调优\" class=\"headerlink\" title=\"2.Ceph 本身调优\"></a>2.Ceph 本身调优</h2><h3 id=\"1-最佳实践\"><a href=\"#1-最佳实践\" class=\"headerlink\" title=\"1).最佳实践\"></a>1).最佳实践</h3><ul>\n<li>MON 的性能对集群总体性能至关重要，应用部署于专用节点，为确保正确仲裁，数量应为奇数个</li>\n<li>在 OSD 节点上，操作系统、OSD 数据、OSD 日志应当位于独立的磁盘上，以确保满意的吞吐量</li>\n<li>在集群安装后，需要监控集群、排除故障并维护，尽管 Ceph 具有自愈功能。如果发生性能问题，首先在磁盘、网络和硬件层面上调查。然后逐步转向 RADOS 块设备和 Ceph 对象网关</li>\n</ul>\n<h3 id=\"2-影响-I-x2F-O-的-6-大操作\"><a href=\"#2-影响-I-x2F-O-的-6-大操作\" class=\"headerlink\" title=\"2).影响 I&#x2F;O 的 6 大操作\"></a>2).影响 I&#x2F;O 的 6 大操作</h3><ul>\n<li>业务数据写入</li>\n<li>数据恢复</li>\n<li>数据回填</li>\n<li>数据重平衡</li>\n<li>数据一致性校验</li>\n<li>快照清理</li>\n</ul>\n<h3 id=\"3-OSD-生产建议\"><a href=\"#3-OSD-生产建议\" class=\"headerlink\" title=\"3).OSD 生产建议\"></a>3).OSD 生产建议</h3><ul>\n<li>更快的日志性能可以改进响应时间，建议将单独的低延迟 SSD 或者 NVMe 设备用于 OSD 日志。</li>\n<li>多个日志可以共享同一 SSD，以降低存储基础架构的成本。但是不能将过多 OSD 日志放在同一设备上。</li>\n<li>建议每个 SATA OSD 设备不超过 6 个 OSD 日志，每个 NVMe 设备不超过 12 个 OSD 日志。</li>\n<li>需要说明的是，当用于托管日志的 SSD 或者 NVMe 设备故障时，使用它托管其日志的所有 OSD 也都变得不可用</li>\n</ul>\n<h3 id=\"4-硬件建议\"><a href=\"#4-硬件建议\" class=\"headerlink\" title=\"4).硬件建议\"></a>4).硬件建议</h3><ul>\n<li>将一个 raid1 磁盘用于 ceph 操作系统</li>\n<li>每个 OSD 一块硬盘，尽量将 SSD 或者 NVMe 用于日志</li>\n<li>使用多个 10Gb 网卡，每个网络一个双链路绑定（建议生产环境 2 个网卡 4 个光模块，2 个万兆口做为数据的交换，2 个万兆口做业务流量）</li>\n<li>每个 OSD 预留 1 个 CPU,每个逻辑核心 1GHz，分配 16GB 内存，外加每个 OSD 2G 内存</li>\n</ul>\n<h3 id=\"5-RBD-生产建议\"><a href=\"#5-RBD-生产建议\" class=\"headerlink\" title=\"5).RBD 生产建议\"></a>5).RBD 生产建议</h3><ul>\n<li>块设备上的工作负载通常是 I&#x2F;O 密集型负载，例如在 OpenStack 中虚拟机上运行数据库。</li>\n<li>对于 RBD,OSD 日志应当位于 SSD 或者 NVMe 设备上</li>\n<li>对后端存储，可以使用不同的存储设备以提供不同级别的服务</li>\n</ul>\n<h3 id=\"6-对象网关生产建议\"><a href=\"#6-对象网关生产建议\" class=\"headerlink\" title=\"6).对象网关生产建议\"></a>6).对象网关生产建议</h3><ul>\n<li>Ceph 对象网关工作负载通常是吞吐密集型负载。但是其 bucket 索引池为 I&#x2F;O 密集型工作负载模式。应当将这个池存储在 SSD 设备上</li>\n<li>Ceph 对象网关为每个存储桶维护一个索引。Ceph 将这一索引存储在 RADOS 对象中。当存储桶存储数量巨大的对象时（超过 100000 个），索引性能会降低，因为只有一个 RADOS 对象参与所有索引操作。</li>\n<li>Ceph 可以在多个 RADOS 对象或分片中保存大型索引。可以在 ceph.conf 中设置 rgw_override_bucket_index_max_shards 配置参数来启用该功能。此参数的建议值是存储桶中预计对象数量除以 10000</li>\n<li>当索引变大，Ceph 通常需要重新划分存储桶。rgw_dynamic_resharding 配置控制该功能，默认为 true</li>\n</ul>\n<h3 id=\"7-CephFS-生产建议\"><a href=\"#7-CephFS-生产建议\" class=\"headerlink\" title=\"7).CephFS 生产建议\"></a>7).CephFS 生产建议</h3><ul>\n<li>存放目录结构和其他索引的元数据池可能会成为 CephFS 的瓶颈。因此，应该将 SSD 设备用于这个池</li>\n<li>每个 MDS 维护一个内存中缓存 ，用于索引节点等不同类型的项目。Ceph 使用 mds_cache_memory_limit 配置参数限制这一缓存的大小。其默认值为 1GB，可以在需要时调整，得不得超过系统总内存数</li>\n</ul>\n<h3 id=\"8-Monitor-生产建议\"><a href=\"#8-Monitor-生产建议\" class=\"headerlink\" title=\"8).Monitor 生产建议\"></a>8).Monitor 生产建议</h3><ul>\n<li>最好为每个 MON 一个独立的服务器&#x2F;虚拟机</li>\n<li>小型和中型集群，使用 10000RPM 的磁盘，大型集群使用 SSD</li>\n<li>CPU 使用方面：使用一个多核 CPU，最少 16G 内存，最好不要和 osd 存放在同一个服务器上</li>\n</ul>\n<h3 id=\"9-将-OSD-日志迁移到-SSD\"><a href=\"#9-将-OSD-日志迁移到-SSD\" class=\"headerlink\" title=\"9).将 OSD 日志迁移到 SSD\"></a>9).将 OSD 日志迁移到 SSD</h3><p>强烈建议生产中千万不要这么干，一定在集群初始化的时候就定制好</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#集群中设置标志位停止指定的osd使用</span>\nceph osd <span class=\"token builtin class-name\">set</span> noout\n\n<span class=\"token comment\">#停止osd的进程</span>\nsystemctl stop ceph-osd@3\n\n<span class=\"token comment\">#将所有的日志做刷盘处理，刷盘到osd中</span>\nceph-osd <span class=\"token parameter variable\">-i</span> <span class=\"token number\">3</span> --flush-journal\n\n<span class=\"token comment\">#删除该osd现有的日志</span>\n<span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> /var/lib/ceph/osd/ceph-3/journal\n\n<span class=\"token comment\">#/dev/sdc1为SSD盘创建一个软连接</span>\n<span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> /dev/sdc1 /var/lib/ceph/osd/ceph-3/journal\n\n<span class=\"token comment\">#刷出日志</span>\nceph-osd <span class=\"token parameter variable\">-i</span> <span class=\"token number\">3</span> <span class=\"token parameter variable\">--mkjournal</span>\n\n<span class=\"token comment\">#启动osd</span>\nsystemctl start ceph-osd@3\n\n<span class=\"token comment\">#移除标志位</span>\nceph osd <span class=\"token builtin class-name\">unset</span> noout<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"10-存储池中-PG-的计算方法\"><a href=\"#10-存储池中-PG-的计算方法\" class=\"headerlink\" title=\"10).存储池中 PG 的计算方法\"></a>10).存储池中 PG 的计算方法</h3><ul>\n<li><p>通常，计算一个池中应该有多少个归置组的计算方法 &#x3D; 100 * OSDs(个数) &#x2F; size(副本数)</p>\n</li>\n<li><p>一种比较通用的取值规则：</p>\n<ul>\n<li>少于 5 个 OSD 时可把 pg_num 设置为 128</li>\n<li>OSD 数量在 5 到 10 个时，可把 pg_num 设置为 512</li>\n<li>OSD 数量在 10 到 50 个时，可把 pg_num 设置为 4096</li>\n<li>OSD 数量大于 50 时，建议自行计算</li>\n</ul>\n</li>\n<li><p>自行计算 pg_num 聚会时的工具</p>\n<ul>\n<li>pgcalc：<a href=\"https://ceph.com/pgcalc/\">https://ceph.com/pgcalc/</a></li>\n<li>cephpgc：<a href=\"https://access.redhat.com/labs/cephpgc/\">https://access.redhat.com/labs/cephpgc/</a></li>\n</ul>\n</li>\n<li><p>注意：在实际的生产环境中我们很难去预估需要多少个 pool，每个 pool 所占用的数据大小的百分百。所以正常情况下需要在特定的情况选择动态扩缩容 pg 的大小</p>\n</li>\n</ul>\n<h3 id=\"11-PG-与-PGP\"><a href=\"#11-PG-与-PGP\" class=\"headerlink\" title=\"11).PG 与 PGP\"></a>11).PG 与 PGP</h3><blockquote>\n<p>通常而言，PG 与 PGP 是相同的当我们为一个池增加 PG 时，PG 会开始分裂，这个时候，OSD 上的数据开始移动到新的 PG，但总体而言，此时，数据还是在一个 OSD 的不同 PG 中迁移而我们一旦同时增加了 PGP，则 PG 开始在多个 OSD 上重平衡，这时会出现跨 OSD 的数据迁移</p>\n</blockquote>\n<ul>\n<li>ceph osd pool create poolName PgNum PgpNum</li>\n<li>当变动 pg 数量只是针对当前的特定池中的 osd 发生变动影响范围只是一个池的 pg 平衡</li>\n<li>正常情况下一个 osd 最多承载 100 个 pg</li>\n<li>当 pgp 发生大变动的时候会导致原本这个池中的 pg 变动导致池中 osd，过载或者有很大剩余性能，ceph 集群会将过大的性能均衡到各个性能使用小的 osd 上，这个时候就会发生数据的大规模迁移，大量的 i&#x2F;O 写入会占有网络带宽会严重影响使用中的 pg 性能导致阻塞发生。</li>\n<li>建议的做法是将 pg_num 直接设置为希望作为最终值的 PG 数量，而 PGP 的数量应当慢慢增加，以确保集群不会因为一段时间内的大量数据重平衡而导致的性能下降</li>\n</ul>\n<h3 id=\"12-Ceph-生产网络建议\"><a href=\"#12-Ceph-生产网络建议\" class=\"headerlink\" title=\"12).Ceph 生产网络建议\"></a>12).Ceph 生产网络建议</h3><ul>\n<li>尽可能使用 10Gb 网络带宽以上的万兆带宽(内网)</li>\n<li>尽可能使用不同的 cluster 网络和 public 网络</li>\n<li>做好必要的网络设备监控防止网络过载</li>\n</ul>\n<h3 id=\"13-OSD-和数据一致性校验\"><a href=\"#13-OSD-和数据一致性校验\" class=\"headerlink\" title=\"13).OSD 和数据一致性校验\"></a>13).OSD 和数据一致性校验</h3><blockquote>\n<p>清理会影响 ceph 集群性能，但建议不要禁用此功能，因为它能提供完数据的完整性</p>\n</blockquote>\n<ul>\n<li>清理：检查对象的存在性、校验和以及大小</li>\n<li>深度清理：检查对象的存在性和大小，重新计算并验证对象的校验和。(最好不开严重影响性能)</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#清理调优参数</span>\nosd_scrub_begin_hour <span class=\"token operator\">=</span>                    <span class=\"token comment\">#取值范围0-24</span>\nosd_scrub_end_hour <span class=\"token operator\">=</span> end_hbegin_hour our  <span class=\"token comment\">#取值范围0-24</span>\nosd_scrub_load_threshold                  <span class=\"token comment\">#当系统负载低于多少的时候可以清理，默认为0.5</span>\nosd_scrub_min_interval                    <span class=\"token comment\">#多久清理一次，默认是一天一次（前提是系统负载低于上一个参数的设定）</span>\nosd_scrub_interval_randomize_ratio        <span class=\"token comment\">#在清理的时候，随机延迟的值，默认是0.5</span>\nosd_scrub_max_interval                    <span class=\"token comment\">#清理的最大间隔时间，默认是一周（如果一周内没清理过，这次就必须清理，不管负载是多少）</span>\nosd_scrub_priority                        <span class=\"token comment\">#清理的优先级，默认是5</span>\nosd_deep_scrub_interal                    <span class=\"token comment\">#深度清理的时间间隔，默认是一周</span>\nosd_scrub_sleep                           <span class=\"token comment\">#当有磁盘读取时，则暂停清理，增加此值可减缓清理的速度以降低对客户端的影响，默认为0,范围0-1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#显示最近发生的清理和深度清理</span>\nceph pg dump all  <span class=\"token comment\"># 查看LAST_SCRUB和LAST_DEEP_SCRUB</span>\n<span class=\"token comment\">#-将清理调度到特定的pg</span>\nceph pg scrub pg-id\n<span class=\"token comment\">#将深度清理调度到特定的pg</span>\nceph pg deep-scrub pg-id\n<span class=\"token comment\">#为设定的池设定清理参数</span>\nceph osd pool <span class=\"token builtin class-name\">set</span> <span class=\"token operator\">&lt;</span>pool-name<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>parameter<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>value<span class=\"token operator\">></span>\n    noscrub <span class=\"token comment\"># 不清理，默认为false</span>\n    nodeep-scrub <span class=\"token comment\"># 不深度清理，默认为false</span>\n    scrub_min_interval <span class=\"token comment\"># 如果设置为0，则应用全局配置osd_scrub_min_interval</span>\n    scrub_max_interval <span class=\"token comment\"># 如果设置为0，则应用全局配置osd_scrub_max_interval</span>\n    deep_scrub_interval <span class=\"token comment\"># 如果设置为0，则应用全局配置osd_scrub_interval</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"14-快照的生产建议\"><a href=\"#14-快照的生产建议\" class=\"headerlink\" title=\"14).快照的生产建议\"></a>14).快照的生产建议</h3><ul>\n<li>快照在池级别和 RBD 级别上提供。当快照被移除时，ceph 会以异步操作的形式删除快照数据，称为快照修剪进程</li>\n<li>为减轻快照修剪进程会影响集群总体性能。可以通过配置<code>osd_snap_trim_sleep</code>来在有客户端读写操作的时候暂停修剪，参数的值范围是<code>0</code>到<code>1</code></li>\n<li>快照修剪的优先级通过使用<code>osd_snap_trim_priority</code>参数控制，默认为<code>5</code></li>\n</ul>\n<h3 id=\"15-保护数据和-osd\"><a href=\"#15-保护数据和-osd\" class=\"headerlink\" title=\"15).保护数据和 osd\"></a>15).保护数据和 osd</h3><ul>\n<li><p>需要控制回填和恢复操作，以限制这些操作的影响</p>\n</li>\n<li><p>回填发生于新的 osd 加入集群时，或者 osd 死机并且 ceph 将其 pg 分配到其他 osd 时。在这种场景中，ceph 必须要在可用的 osd 之间复制对象副本</p>\n</li>\n<li><p>恢复发生于新的 osd 已有数据时，如出现短暂停机。在这种情形下，ceph 会简单的重放 pg 日志</p>\n<ul>\n<li>管理回填和恢复操作的配置项</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#用于限制每个osd上用于回填的并发操作数，默认为1</span>\nosd_max_backfills\n\n<span class=\"token comment\">#用于限制每个osd上用于恢复的并发操作数，默认为3</span>\nosd_recovery_max_active\n\n<span class=\"token comment\">#恢复操作的优先级，默认为3</span>\nosd_recovery_op_priority<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"16-OSD-数据存储后端\"><a href=\"#16-OSD-数据存储后端\" class=\"headerlink\" title=\"16).OSD 数据存储后端\"></a>16).OSD 数据存储后端</h3><blockquote>\n<p>BlueStore 管理一个，两个或（在某些情况下）三个存储设备。在最简单的情况下，BlueStore 使用单个（主）存储设备。存储设备通常作为一个整体使用，BlueStore 直接占用完整设备。该主设备通常由数据目录中的块符号链接标识。数据目录挂载成一个 tmpfs，它将填充（在启动时或 ceph-volume 激活它时）所有常用的 OSD 文件，其中包含有关 OSD 的信息，例如：其标识符，它所属的集群，以及它的私钥。还可以使用两个额外的设备部署 BlueStore</p>\n</blockquote>\n<ul>\n<li>WAL 设备（在数据目录中标识为 block.wal）可用于 BlueStore 的内部日志或预写日志。只有设备比主设备快（例如，当它在 SSD 上并且主设备是 HDD 时），使用 WAL 设备是有用的。</li>\n<li>数据库设备（在数据目录中标识为 block.db）可用于存储 BlueStore 的内部元数据。 BlueStore（或者更确切地说，嵌入式 RocksDB）将在数据库设备上放置尽可能多的元数据以提高性能。如果数据库设备填满，元数据将写到主设备。同样，数据库设备要比主设备更快，则提供数据库设备是有帮助的。</li>\n<li>如果只有少量快速存储可用（例如，小于 1GB），我们建议将其用作 WAL 设备。如果还有更多，配置数据库设备会更有意义。 BlueStore 日志将始终放在可用的最快设备上，因此使用数据库设备将提供与 WAL 设备相同的优势，同时还允许在其中存储其他元数据。</li>\n<li>正常 L 版本推荐使用 filestore，M 版本可以考虑使用 bluestore</li>\n<li>推荐优化文章：<a href=\"https://www.cnblogs.com/luxiaodai/p/10006036.html#_lab2_1_9\">https://www.cnblogs.com/luxiaodai/p/10006036.html#_lab2_1_9</a></li>\n</ul>\n<h3 id=\"17-关于性能测试\"><a href=\"#17-关于性能测试\" class=\"headerlink\" title=\"17).关于性能测试\"></a>17).关于性能测试</h3><ul>\n<li>推荐使用 fio 参考阿里云文档：<a href=\"https://help.aliyun.com/document_detail/95501.html?spm=a2c4g.11174283.6.659.38b44da2KZr2Sn\">https://help.aliyun.com/document_detail&#x2F;95501.html?spm&#x3D;a2c4g.11174283.6.659.38b44da2KZr2Sn</a></li>\n<li>dd</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token number\">3</span> <span class=\"token operator\">></span> /proc/sys/vm/drop_caches\n<span class=\"token function\">dd</span> <span class=\"token assign-left variable\">if</span><span class=\"token operator\">=</span>/dev/zero <span class=\"token assign-left variable\">of</span><span class=\"token operator\">=</span>/var/lib/ceph/osd/ceph-0/test.img <span class=\"token assign-left variable\">bs</span><span class=\"token operator\">=</span>4M <span class=\"token assign-left variable\">count</span><span class=\"token operator\">=</span><span class=\"token number\">1024</span> <span class=\"token assign-left variable\">oflag</span><span class=\"token operator\">=</span>direct\n<span class=\"token function\">dd</span> <span class=\"token assign-left variable\">if</span><span class=\"token operator\">=</span>/var/lib/ceph/osd/ceph-0/test.img <span class=\"token assign-left variable\">of</span><span class=\"token operator\">=</span>/dev/null <span class=\"token assign-left variable\">bs</span><span class=\"token operator\">=</span>4M <span class=\"token assign-left variable\">count</span><span class=\"token operator\">=</span><span class=\"token number\">1024</span> <span class=\"token assign-left variable\">oflag</span><span class=\"token operator\">=</span>direct<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>rados bench 性能测试</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">rados bench <span class=\"token parameter variable\">-p</span> <span class=\"token operator\">&lt;</span>pool_name<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>seconds<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>write<span class=\"token operator\">|</span><span class=\"token function\">seq</span><span class=\"token operator\">|</span>rand<span class=\"token operator\">></span> <span class=\"token parameter variable\">-b</span> <span class=\"token operator\">&lt;</span>block size<span class=\"token operator\">></span> <span class=\"token parameter variable\">-t</span> --no-cleanup\n    pool_name 测试所针对的池\n    seconds 测试所持续的时间，以秒为单位\n    <span class=\"token operator\">&lt;</span>write<span class=\"token operator\">|</span><span class=\"token function\">seq</span><span class=\"token operator\">|</span>rand<span class=\"token operator\">></span> 操作模式，分别是写、顺序读、随机读\n    <span class=\"token parameter variable\">-b</span> <span class=\"token operator\">&lt;</span>block_size<span class=\"token operator\">></span> 块大小，默认是4M\n    <span class=\"token parameter variable\">-t</span> 读/写的并行数，默认为16\n    --no-cleanup 表示测试完成后不删除测试用的数据。在做读测试之前，需要使用该参数来运行一遍写测试来产生测试数据，在全部测试完成以后，可以行rados <span class=\"token parameter variable\">-p</span> <span class=\"token operator\">&lt;</span>pool_name<span class=\"token operator\">></span> cleanup来清理所有测试数据\n\n<span class=\"token comment\">#示例：</span>\nrados bench <span class=\"token parameter variable\">-p</span> rbd <span class=\"token number\">10</span> <span class=\"token function\">write</span> --no-cleanup\nrados bench <span class=\"token parameter variable\">-p</span> rbd <span class=\"token number\">10</span> <span class=\"token function\">seq</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>rbd bench 性能测试</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">rbd bench <span class=\"token parameter variable\">-p</span> <span class=\"token operator\">&lt;</span>pool_name<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>image_name<span class=\"token operator\">></span> --io-type <span class=\"token operator\">&lt;</span>write<span class=\"token operator\">|</span>read<span class=\"token operator\">></span> --io-size <span class=\"token operator\">&lt;</span>size<span class=\"token operator\">></span> --io-threads <span class=\"token operator\">&lt;</span>num<span class=\"token operator\">></span> --io-total <span class=\"token operator\">&lt;</span>size<span class=\"token operator\">></span> --io-pattern <span class=\"token operator\">&lt;</span>seq<span class=\"token operator\">|</span>rand<span class=\"token operator\">></span>\n    --io-type 测试类型，读/写\n    --io-size 字节数，默认4096\n    --io-threads 线程数，默认16\n    --io-total  读/写的总大小，默认1GB\n    --io-pattern  读/写的方式，顺序还是随机\n\n<span class=\"token comment\">#示例：</span>\nhttps://edenmal.moe/post/2017/Ceph-rbd-bench-Commands/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"3-设置集群的标志\"><a href=\"#3-设置集群的标志\" class=\"headerlink\" title=\"3.设置集群的标志\"></a>3.设置集群的标志</h2><p><strong>flag 操作</strong></p>\n<ul>\n<li><p>只能对整个集群操作，不能针对单个 osd</p>\n<ul>\n<li>ceph osd set</li>\n<li>ceph osd unset</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#示例：</span>\nceph osd <span class=\"token builtin class-name\">set</span> nodown\nceph osd <span class=\"token builtin class-name\">unset</span> nodown\nceph <span class=\"token parameter variable\">-s</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\">标志名称</th>\n<th align=\"left\">含义用法详解</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">noup</td>\n<td align=\"left\">OSD 启动时，会将自己在 MON 上标识为 UP 状态，设置该标志位，则 OSD 不会被自动标识为 up 状态</td>\n</tr>\n<tr>\n<td align=\"left\">nodown</td>\n<td align=\"left\">OSD 停止时，MON 会将 OSD 标识为 down 状态，设置该标志位，则 MON 不会将停止的 OSD 标识为 down 状态，设置 noup 和 nodown 可以防止网络抖动</td>\n</tr>\n<tr>\n<td align=\"left\">noout</td>\n<td align=\"left\">设置该标志位，则 mon 不会从 crush 映射中删除任何 OSD。对 OSD 作维护时，可设置该标志位，以防止 CRUSH 在 OSD 停止时自动重平衡数据。OSD 重新启动时，需要清除该 flag</td>\n</tr>\n<tr>\n<td align=\"left\">noin</td>\n<td align=\"left\">设置该标志位，可以防止数据被自动分配到 OSD 上</td>\n</tr>\n<tr>\n<td align=\"left\">norecover</td>\n<td align=\"left\">设置该 flag，禁止任何集群恢复操作。在执行维护和停机时，可设置该 flag</td>\n</tr>\n<tr>\n<td align=\"left\">nobackfill</td>\n<td align=\"left\">禁止数据回填</td>\n</tr>\n<tr>\n<td align=\"left\">noscrub</td>\n<td align=\"left\">禁止清理操作。清理 PG 会在短期内影响 OSD 的操作。在低带宽集群中，清理期间如果 OSD 的速度过慢，则会被标记为 down。可以该标记来防止这种情况发生</td>\n</tr>\n<tr>\n<td align=\"left\">nodeep-scrub</td>\n<td align=\"left\">禁止深度清理</td>\n</tr>\n<tr>\n<td align=\"left\">norebalance</td>\n<td align=\"left\">禁止重平衡数据。在执行集群维护或者停机时，可以使用该 flag</td>\n</tr>\n<tr>\n<td align=\"left\">pause</td>\n<td align=\"left\">设置该标志位，则集群停止读写，但不影响 osd 自检</td>\n</tr>\n<tr>\n<td align=\"left\">full</td>\n<td align=\"left\">标记集群已满，将拒绝任何数据写入，但可读</td>\n</tr>\n</tbody></table>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><p><a href=\"https://poph163.com/category/%e5%88%86%e5%b8%83%e5%bc%8f%e5%ad%98%e5%82%a8/\">https://poph163.com/category/分布式存储/</a></p>"},{"title":"k8s 网络策略","date":"2023-06-11T16:00:00.000Z","updated":"2025-09-24T06:00:08.737Z","keywords":["k8s","NetworkPolicy"],"copyright":false,"_content":"\n如果你希望在 IP 地址或端口层面（OSI 第 3 层或第 4 层）控制网络流量， 则你可以考虑为集群中特定应用使用 Kubernetes 网络策略（NetworkPolicy）。 NetworkPolicy 是一种以应用为中心的结构，允许你设置如何允许 [Pod](https://kubernetes.io/zh-cn/docs/concepts/workloads/pods/) 与网络上的各类网络“实体” （我们这里使用实体以避免过度使用诸如“端点”和“服务”这类常用术语， 这些术语在 Kubernetes 中有特定含义）通信。 NetworkPolicy 适用于一端或两端与 Pod 的连接，与其他连接无关。\n\nPod 可以通信的 Pod 是通过如下三个标识符的组合来辩识的：\n\n1. 其他被允许的 Pods（例外：Pod 无法阻塞对自身的访问）\n2. 被允许的名字空间\n3. IP 组块（例外：与 Pod 运行所在的节点的通信总是被允许的， 无论 Pod 或节点的 IP 地址）\n\n在定义基于 Pod 或名字空间的 NetworkPolicy 时， 你会使用[选择算符](https://kubernetes.io/zh-cn/docs/concepts/overview/working-with-objects/labels/)来设定哪些流量可以进入或离开与该算符匹配的 Pod。 另外，当创建基于 IP 的 NetworkPolicy 时，我们基于 IP 组块（CIDR 范围）来定义策略。\n\n## 前置条件\n\n网络策略通过[网络插件](https://kubernetes.io/zh-cn/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/)来实现。 要使用网络策略，你必须使用支持 NetworkPolicy 的网络解决方案。 创建一个 NetworkPolicy 资源对象而没有控制器来使它生效的话，是没有任何作用的。\n\n## Pod 隔离的两种类型\n\nPod 有两种隔离: 出口的隔离和入口的隔离。它们涉及到可以建立哪些连接。 这里的“隔离”不是绝对的，而是意味着“有一些限制”。 另外的，“非隔离方向”意味着在所述方向上没有限制。这两种隔离（或不隔离）是独立声明的， 并且都与从一个 Pod 到另一个 Pod 的连接有关。\n\n默认情况下，一个 Pod 的出口是非隔离的，即所有外向连接都是被允许的。如果有任何的 NetworkPolicy 选择该 Pod 并在其 `policyTypes` 中包含 “Egress”，则该 Pod 是出口隔离的， 我们称这样的策略适用于该 Pod 的出口。当一个 Pod 的出口被隔离时， 唯一允许的来自 Pod 的连接是适用于出口的 Pod 的某个 NetworkPolicy 的 `egress` 列表所允许的连接。 这些 `egress` 列表的效果是相加的。\n\n默认情况下，一个 Pod 对入口是非隔离的，即所有入站连接都是被允许的。如果有任何的 NetworkPolicy 选择该 Pod 并在其 `policyTypes` 中包含 “Ingress”，则该 Pod 被隔离入口， 我们称这种策略适用于该 Pod 的入口。当一个 Pod 的入口被隔离时，唯一允许进入该 Pod 的连接是来自该 Pod 节点的连接和适用于入口的 Pod 的某个 NetworkPolicy 的 `ingress` 列表所允许的连接。这些 `ingress` 列表的效果是相加的。\n\n网络策略是相加的，所以不会产生冲突。如果策略适用于 Pod 某一特定方向的流量， Pod 在对应方向所允许的连接是适用的网络策略所允许的集合。 因此，评估的顺序不影响策略的结果。\n\n要允许从源 Pod 到目的 Pod 的连接，源 Pod 的出口策略和目的 Pod 的入口策略都需要允许连接。 如果任何一方不允许连接，建立连接将会失败。\n\n## NetworkPolicy 资源\n\n参阅 [NetworkPolicy](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#networkpolicy-v1-networking-k8s-io) 来了解资源的完整定义。\n\n下面是一个 NetworkPolicy 的示例:\n\n[`service/networking/networkpolicy.yaml`](https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/networkpolicy.yaml)\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: test-network-policy\n  namespace: default\nspec:\n  podSelector:\n    matchLabels:\n      role: db\n  policyTypes:\n    - Ingress\n    - Egress\n  ingress:\n    - from:\n        - ipBlock:\n            cidr: 172.17.0.0/16\n            except:\n              - 172.17.1.0/24\n        - namespaceSelector:\n            matchLabels:\n              project: myproject\n        - podSelector:\n            matchLabels:\n              role: frontend\n      ports:\n        - protocol: TCP\n          port: 6379\n  egress:\n    - to:\n        - ipBlock:\n            cidr: 10.0.0.0/24\n      ports:\n        - protocol: TCP\n          port: 5978\n```\n\n**说明：**\n\n除非选择支持网络策略的网络解决方案，否则将上述示例发送到API服务器没有任何效果。\n\n**必需字段**：与所有其他的 Kubernetes 配置一样，NetworkPolicy 需要 `apiVersion`、 `kind` 和 `metadata` 字段。关于配置文件操作的一般信息， 请参考[配置 Pod 以使用 ConfigMap](https://kubernetes.io/zh-cn/docs/tasks/configure-pod-container/configure-pod-configmap/) 和[对象管理](https://kubernetes.io/zh-cn/docs/concepts/overview/working-with-objects/object-management)。\n\n**spec**：NetworkPolicy [规约](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status) 中包含了在一个名字空间中定义特定网络策略所需的所有信息。\n\n**podSelector**：每个 NetworkPolicy 都包括一个 `podSelector`， 它对该策略所适用的一组 Pod 进行选择。示例中的策略选择带有 \"role=db\" 标签的 Pod。 空的 `podSelector` 选择名字空间下的所有 Pod。\n\n**policyTypes**：每个 NetworkPolicy 都包含一个 `policyTypes` 列表，其中包含 `Ingress` 或 `Egress` 或两者兼具。`policyTypes` 字段表示给定的策略是应用于进入所选 Pod 的入站流量还是来自所选 Pod 的出站流量，或两者兼有。 如果 NetworkPolicy 未指定 `policyTypes` 则默认情况下始终设置 `Ingress`； 如果 NetworkPolicy 有任何出口规则的话则设置 `Egress`。\n\n**ingress**：每个 NetworkPolicy 可包含一个 `ingress` 规则的白名单列表。 每个规则都允许同时匹配 `from` 和 `ports` 部分的流量。示例策略中包含一条简单的规则： 它匹配某个特定端口，来自三个来源中的一个，第一个通过 `ipBlock` 指定，第二个通过 `namespaceSelector` 指定，第三个通过 `podSelector` 指定。\n\n**egress**：每个 NetworkPolicy 可包含一个 `egress` 规则的白名单列表。 每个规则都允许匹配 `to` 和 `port` 部分的流量。该示例策略包含一条规则， 该规则将指定端口上的流量匹配到 `10.0.0.0/24` 中的任何目的地。\n\n所以，该网络策略示例:\n\n1. 隔离 `default` 名字空间下 `role=db` 的 Pod （如果它们不是已经被隔离的话）。\n2. （Ingress 规则）允许以下 Pod 连接到 `default` 名字空间下的带有 `role=db` 标签的所有 Pod 的 6379 TCP 端口：\n   - `default` 名字空间下带有 `role=frontend` 标签的所有 Pod\n   - 带有 `project=myproject` 标签的所有名字空间中的 Pod\n   - IP 地址范围为 172.17.0.0–172.17.0.255 和 172.17.2.0–172.17.255.255 （即，除了 172.17.1.0/24 之外的所有 172.17.0.0/16）\n3. （Egress 规则）允许 `default` 名字空间中任何带有标签 `role=db` 的 Pod 到 CIDR 10.0.0.0/24 下 5978 TCP 端口的连接。\n\n参阅[声明网络策略](https://kubernetes.io/zh-cn/docs/tasks/administer-cluster/declare-network-policy/)演练了解更多示例。\n\n## 选择器 `to` 和 `from` 的行为\n\n可以在 `ingress` 的 `from` 部分或 `egress` 的 `to` 部分中指定四种选择器：\n\n**podSelector**：此选择器将在与 NetworkPolicy 相同的名字空间中选择特定的 Pod，应将其允许作为入站流量来源或出站流量目的地。\n\n**namespaceSelector**：此选择器将选择特定的名字空间，应将所有 Pod 用作其入站流量来源或出站流量目的地。\n\n**namespaceSelector 和 podSelector**：一个指定 `namespaceSelector` 和 `podSelector` 的 `to`/`from` 条目选择特定名字空间中的特定 Pod。 注意使用正确的 YAML 语法；下面的策略：\n\n```yaml\n  ...\n  ingress:\n  - from:\n    - namespaceSelector:\n        matchLabels:\n          user: alice\n      podSelector:\n        matchLabels:\n          role: client\n  ...\n```\n\n此策略在 `from` 数组中仅包含一个元素，只允许来自标有 `role=client` 的 Pod 且该 Pod 所在的名字空间中标有 `user=alice` 的连接。但是**这项**策略：\n\n```yaml\n  ...\n  ingress:\n  - from:\n    - namespaceSelector:\n        matchLabels:\n          user: alice\n    - podSelector:\n        matchLabels:\n          role: client\n  ...\n```\n\n它在 `from` 数组中包含两个元素，允许来自本地名字空间中标有 `role=client` 的 Pod 的连接，**或**来自任何名字空间中标有 `user=alice` 的任何 Pod 的连接。\n\n如有疑问，请使用 `kubectl describe` 查看 Kubernetes 如何解释该策略。\n\n**ipBlock**：此选择器将选择特定的 IP CIDR 范围以用作入站流量来源或出站流量目的地。 这些应该是集群外部 IP，因为 Pod IP 存在时间短暂的且随机产生。\n\n集群的入站和出站机制通常需要重写数据包的源 IP 或目标 IP。 在发生这种情况时，不确定在 NetworkPolicy 处理之前还是之后发生， 并且对于网络插件、云提供商、`Service` 实现等的不同组合，其行为可能会有所不同。\n\n对入站流量而言，这意味着在某些情况下，你可以根据实际的原始源 IP 过滤传入的数据包， 而在其他情况下，NetworkPolicy 所作用的 `源IP` 则可能是 `LoadBalancer` 或 Pod 的节点等。\n\n对于出站流量而言，这意味着从 Pod 到被重写为集群外部 IP 的 `Service` IP 的连接可能会或可能不会受到基于 `ipBlock` 的策略的约束。\n\n## 默认策略\n\n默认情况下，如果名字空间中不存在任何策略，则所有进出该名字空间中 Pod 的流量都被允许。 以下示例使你可以更改该名字空间中的默认行为。\n\n### 默认拒绝所有入站流量\n\n你可以通过创建选择所有 Pod 但不允许任何进入这些 Pod 的入站流量的 NetworkPolicy 来为名字空间创建 “default” 隔离策略。\n\n[`service/networking/network-policy-default-deny-ingress.yaml`](https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/network-policy-default-deny-ingress.yaml) \n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: default-deny-ingress\nspec:\n  podSelector: {}\n  policyTypes:\n  - Ingress\n```\n\n这确保即使没有被任何其他 NetworkPolicy 选择的 Pod 仍将被隔离以进行入口。 此策略不影响任何 Pod 的出口隔离。\n\n### 允许所有入站流量\n\n如果你想允许一个名字空间中所有 Pod 的所有入站连接，你可以创建一个明确允许的策略。\n\n[`service/networking/network-policy-allow-all-ingress.yaml`](https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/network-policy-allow-all-ingress.yaml) \n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: allow-all-ingress\nspec:\n  podSelector: {}\n  ingress:\n  - {}\n  policyTypes:\n  - Ingress\n```\n\n有了这个策略，任何额外的策略都不会导致到这些 Pod 的任何入站连接被拒绝。 此策略对任何 Pod 的出口隔离没有影响。\n\n### 默认拒绝所有出站流量\n\n你可以通过创建选择所有容器但不允许来自这些容器的任何出站流量的 NetworkPolicy 来为名字空间创建 “default” 隔离策略。\n\n[`service/networking/network-policy-default-deny-egress.yaml`](https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/network-policy-default-deny-egress.yaml) \n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: default-deny-egress\nspec:\n  podSelector: {}\n  policyTypes:\n  - Egress\n```\n\n此策略可以确保即使没有被其他任何 NetworkPolicy 选择的 Pod 也不会被允许流出流量。 此策略不会更改任何 Pod 的入站流量隔离行为。\n\n### 允许所有出站流量\n\n如果要允许来自名字空间中所有 Pod 的所有连接， 则可以创建一个明确允许来自该名字空间中 Pod 的所有出站连接的策略。\n\n[`service/networking/network-policy-allow-all-egress.yaml`](https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/network-policy-allow-all-egress.yaml) \n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: allow-all-egress\nspec:\n  podSelector: {}\n  egress:\n  - {}\n  policyTypes:\n  - Egress\n```\n\n有了这个策略，任何额外的策略都不会导致来自这些 Pod 的任何出站连接被拒绝。 此策略对进入任何 Pod 的隔离没有影响。\n\n### 默认拒绝所有入站和所有出站流量\n\n你可以为名字空间创建“默认”策略，以通过在该名字空间中创建以下 NetworkPolicy 来阻止所有入站和出站流量。\n\n[`service/networking/network-policy-default-deny-all.yaml`](https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/network-policy-default-deny-all.yaml)\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: default-deny-all\nspec:\n  podSelector: {}\n  policyTypes:\n  - Ingress\n  - Egress\n```\n\n此策略可以确保即使没有被其他任何 NetworkPolicy 选择的 Pod 也不会被允许入站或出站流量。\n\n## SCTP 支持\n\n**特性状态：** `Kubernetes v1.20 [stable]`\n\n作为一个稳定特性，SCTP 支持默认是被启用的。 要在集群层面禁用 SCTP，你（或你的集群管理员）需要为 API 服务器指定 `--feature-gates=SCTPSupport=false,...` 来禁用 `SCTPSupport` [特性门控](https://kubernetes.io/zh-cn/docs/reference/command-line-tools-reference/feature-gates/)。 启用该特性门控后，用户可以将 NetworkPolicy 的 `protocol` 字段设置为 `SCTP`。\n\n**说明：**\n\n你必须使用支持 SCTP 协议 NetworkPolicy 的 [CNI](https://kubernetes.io/zh-cn/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/) 插件。\n\n## 针对某个端口范围\n\n**特性状态：** `Kubernetes v1.25 [stable]`\n\n在编写 NetworkPolicy 时，你可以针对一个端口范围而不是某个固定端口。\n\n这一目的可以通过使用 `endPort` 字段来实现，如下例所示：\n\n[`service/networking/networkpolicy-multiport-egress.yaml`](https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/networkpolicy-multiport-egress.yaml) \n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: multi-port-egress\n  namespace: default\nspec:\n  podSelector:\n    matchLabels:\n      role: db\n  policyTypes:\n    - Egress\n  egress:\n    - to:\n        - ipBlock:\n            cidr: 10.0.0.0/24\n      ports:\n        - protocol: TCP\n          port: 32000\n          endPort: 32768\n```\n\n上面的规则允许名字空间 `default` 中所有带有标签 `role=db` 的 Pod 使用 TCP 协议与 `10.0.0.0/24` 范围内的 IP 通信，只要目标端口介于 32000 和 32768 之间就可以。\n\n使用此字段时存在以下限制：\n\n- `endPort` 字段必须等于或者大于 `port` 字段的值。\n- 只有在定义了 `port` 时才能定义 `endPort`。\n- 两个字段的设置值都只能是数字。\n\n**说明：**\n\n你的集群所使用的 [CNI](https://kubernetes.io/zh-cn/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/) 插件必须支持在 NetworkPolicy 规约中使用 `endPort` 字段。 如果你的[网络插件](https://kubernetes.io/zh-cn/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/)不支持 `endPort` 字段，而你指定了一个包含 `endPort` 字段的 NetworkPolicy， 策略只对单个 `port` 字段生效。\n\n## 按标签选择多个命名空间\n\n在这种情况下，你的 `Egress` NetworkPolicy 使用名字空间的标签名称来将多个名字空间作为其目标。 为此，你需要为目标名字空间设置标签。例如：\n\n```shell\n kubectl label namespace frontend namespace=frontend\n kubectl label namespace backend namespace=backend\n```\n\n在 NetworkPolicy 文档中的 namespaceSelector 下添加标签。例如：\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: egress-namespaces\nspec:\n  podSelector:\n    matchLabels:\n      app: myapp\n  policyTypes:\n  - Egress\n  egress:\n   - to:\n     - namespaceSelector:\n       matchExpressions:\n       - key: namespace\n         operator: In\n         values: [\"frontend\", \"backend\"]\n```\n\n**说明：**\n\n你不可以在 NetworkPolicy 中直接指定命名空间的名称。 你必须使用带有 `matchLabels` 或 `matchExpressions` 的 `namespaceSelector` 来根据标签选择命名空间。\n\n## 基于名字指向某名字空间\n\n**特性状态：** `Kubernetes 1.22 [stable]`\n\n只要 `NamespaceDefaultLabelName` [特性门控](https://kubernetes.io/zh-cn/docs/reference/command-line-tools-reference/feature-gates/)被启用， Kubernetes 控制面会在所有名字空间上设置一个不可变更的标签 `kubernetes.io/metadata.name`。该标签的值是名字空间的名称。\n\n如果 NetworkPolicy 无法在某些对象字段中指向某名字空间， 你可以使用标准的标签方式来指向特定名字空间。\n\n## 通过网络策略（至少目前还）无法完成的工作\n\n到 Kubernetes 1.27 为止，NetworkPolicy API 还不支持以下功能， 不过你可能可以使用操作系统组件（如 SELinux、OpenVSwitch、IPTables 等等） 或者第七层技术（Ingress 控制器、服务网格实现）或准入控制器来实现一些替代方案。 如果你对 Kubernetes 中的网络安全性还不太了解，了解使用 NetworkPolicy API 还无法实现下面的用户场景是很值得的。\n\n- 强制集群内部流量经过某公用网关（这种场景最好通过服务网格或其他代理来实现）；\n- 与 TLS 相关的场景（考虑使用服务网格或者 Ingress 控制器）；\n- 特定于节点的策略（你可以使用 CIDR 来表达这一需求不过你无法使用节点在 Kubernetes 中的其他标识信息来辩识目标节点）；\n- 基于名字来选择服务（不过，你可以使用 [标签](https://kubernetes.io/zh-cn/docs/concepts/overview/working-with-objects/labels/) 来选择目标 Pod 或名字空间，这也通常是一种可靠的替代方案）；\n- 创建或管理由第三方来实际完成的“策略请求”；\n\n- 实现适用于所有名字空间或 Pods 的默认策略（某些第三方 Kubernetes 发行版本或项目可以做到这点）；\n- 高级的策略查询或者可达性相关工具；\n- 生成网络安全事件日志的能力（例如，被阻塞或接收的连接请求）；\n- 显式地拒绝策略的能力（目前，NetworkPolicy 的模型默认采用拒绝操作， 其唯一的能力是添加允许策略）；\n- 禁止本地回路或指向宿主的网络流量（Pod 目前无法阻塞 localhost 访问， 它们也无法禁止来自所在节点的访问请求）。","source":"_posts/k8s/study/k8s 网络策略.md","raw":"---\ntitle: k8s 网络策略\ndate: 2023-06-12\nupdated:\ntags:\n  - k8s\n  - 学习\ncategories:\n  - 虚拟化\nkeywords:\n  - k8s\n  - NetworkPolicy\ncopyright: false\n---\n\n如果你希望在 IP 地址或端口层面（OSI 第 3 层或第 4 层）控制网络流量， 则你可以考虑为集群中特定应用使用 Kubernetes 网络策略（NetworkPolicy）。 NetworkPolicy 是一种以应用为中心的结构，允许你设置如何允许 [Pod](https://kubernetes.io/zh-cn/docs/concepts/workloads/pods/) 与网络上的各类网络“实体” （我们这里使用实体以避免过度使用诸如“端点”和“服务”这类常用术语， 这些术语在 Kubernetes 中有特定含义）通信。 NetworkPolicy 适用于一端或两端与 Pod 的连接，与其他连接无关。\n\nPod 可以通信的 Pod 是通过如下三个标识符的组合来辩识的：\n\n1. 其他被允许的 Pods（例外：Pod 无法阻塞对自身的访问）\n2. 被允许的名字空间\n3. IP 组块（例外：与 Pod 运行所在的节点的通信总是被允许的， 无论 Pod 或节点的 IP 地址）\n\n在定义基于 Pod 或名字空间的 NetworkPolicy 时， 你会使用[选择算符](https://kubernetes.io/zh-cn/docs/concepts/overview/working-with-objects/labels/)来设定哪些流量可以进入或离开与该算符匹配的 Pod。 另外，当创建基于 IP 的 NetworkPolicy 时，我们基于 IP 组块（CIDR 范围）来定义策略。\n\n## 前置条件\n\n网络策略通过[网络插件](https://kubernetes.io/zh-cn/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/)来实现。 要使用网络策略，你必须使用支持 NetworkPolicy 的网络解决方案。 创建一个 NetworkPolicy 资源对象而没有控制器来使它生效的话，是没有任何作用的。\n\n## Pod 隔离的两种类型\n\nPod 有两种隔离: 出口的隔离和入口的隔离。它们涉及到可以建立哪些连接。 这里的“隔离”不是绝对的，而是意味着“有一些限制”。 另外的，“非隔离方向”意味着在所述方向上没有限制。这两种隔离（或不隔离）是独立声明的， 并且都与从一个 Pod 到另一个 Pod 的连接有关。\n\n默认情况下，一个 Pod 的出口是非隔离的，即所有外向连接都是被允许的。如果有任何的 NetworkPolicy 选择该 Pod 并在其 `policyTypes` 中包含 “Egress”，则该 Pod 是出口隔离的， 我们称这样的策略适用于该 Pod 的出口。当一个 Pod 的出口被隔离时， 唯一允许的来自 Pod 的连接是适用于出口的 Pod 的某个 NetworkPolicy 的 `egress` 列表所允许的连接。 这些 `egress` 列表的效果是相加的。\n\n默认情况下，一个 Pod 对入口是非隔离的，即所有入站连接都是被允许的。如果有任何的 NetworkPolicy 选择该 Pod 并在其 `policyTypes` 中包含 “Ingress”，则该 Pod 被隔离入口， 我们称这种策略适用于该 Pod 的入口。当一个 Pod 的入口被隔离时，唯一允许进入该 Pod 的连接是来自该 Pod 节点的连接和适用于入口的 Pod 的某个 NetworkPolicy 的 `ingress` 列表所允许的连接。这些 `ingress` 列表的效果是相加的。\n\n网络策略是相加的，所以不会产生冲突。如果策略适用于 Pod 某一特定方向的流量， Pod 在对应方向所允许的连接是适用的网络策略所允许的集合。 因此，评估的顺序不影响策略的结果。\n\n要允许从源 Pod 到目的 Pod 的连接，源 Pod 的出口策略和目的 Pod 的入口策略都需要允许连接。 如果任何一方不允许连接，建立连接将会失败。\n\n## NetworkPolicy 资源\n\n参阅 [NetworkPolicy](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#networkpolicy-v1-networking-k8s-io) 来了解资源的完整定义。\n\n下面是一个 NetworkPolicy 的示例:\n\n[`service/networking/networkpolicy.yaml`](https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/networkpolicy.yaml)\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: test-network-policy\n  namespace: default\nspec:\n  podSelector:\n    matchLabels:\n      role: db\n  policyTypes:\n    - Ingress\n    - Egress\n  ingress:\n    - from:\n        - ipBlock:\n            cidr: 172.17.0.0/16\n            except:\n              - 172.17.1.0/24\n        - namespaceSelector:\n            matchLabels:\n              project: myproject\n        - podSelector:\n            matchLabels:\n              role: frontend\n      ports:\n        - protocol: TCP\n          port: 6379\n  egress:\n    - to:\n        - ipBlock:\n            cidr: 10.0.0.0/24\n      ports:\n        - protocol: TCP\n          port: 5978\n```\n\n**说明：**\n\n除非选择支持网络策略的网络解决方案，否则将上述示例发送到API服务器没有任何效果。\n\n**必需字段**：与所有其他的 Kubernetes 配置一样，NetworkPolicy 需要 `apiVersion`、 `kind` 和 `metadata` 字段。关于配置文件操作的一般信息， 请参考[配置 Pod 以使用 ConfigMap](https://kubernetes.io/zh-cn/docs/tasks/configure-pod-container/configure-pod-configmap/) 和[对象管理](https://kubernetes.io/zh-cn/docs/concepts/overview/working-with-objects/object-management)。\n\n**spec**：NetworkPolicy [规约](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status) 中包含了在一个名字空间中定义特定网络策略所需的所有信息。\n\n**podSelector**：每个 NetworkPolicy 都包括一个 `podSelector`， 它对该策略所适用的一组 Pod 进行选择。示例中的策略选择带有 \"role=db\" 标签的 Pod。 空的 `podSelector` 选择名字空间下的所有 Pod。\n\n**policyTypes**：每个 NetworkPolicy 都包含一个 `policyTypes` 列表，其中包含 `Ingress` 或 `Egress` 或两者兼具。`policyTypes` 字段表示给定的策略是应用于进入所选 Pod 的入站流量还是来自所选 Pod 的出站流量，或两者兼有。 如果 NetworkPolicy 未指定 `policyTypes` 则默认情况下始终设置 `Ingress`； 如果 NetworkPolicy 有任何出口规则的话则设置 `Egress`。\n\n**ingress**：每个 NetworkPolicy 可包含一个 `ingress` 规则的白名单列表。 每个规则都允许同时匹配 `from` 和 `ports` 部分的流量。示例策略中包含一条简单的规则： 它匹配某个特定端口，来自三个来源中的一个，第一个通过 `ipBlock` 指定，第二个通过 `namespaceSelector` 指定，第三个通过 `podSelector` 指定。\n\n**egress**：每个 NetworkPolicy 可包含一个 `egress` 规则的白名单列表。 每个规则都允许匹配 `to` 和 `port` 部分的流量。该示例策略包含一条规则， 该规则将指定端口上的流量匹配到 `10.0.0.0/24` 中的任何目的地。\n\n所以，该网络策略示例:\n\n1. 隔离 `default` 名字空间下 `role=db` 的 Pod （如果它们不是已经被隔离的话）。\n2. （Ingress 规则）允许以下 Pod 连接到 `default` 名字空间下的带有 `role=db` 标签的所有 Pod 的 6379 TCP 端口：\n   - `default` 名字空间下带有 `role=frontend` 标签的所有 Pod\n   - 带有 `project=myproject` 标签的所有名字空间中的 Pod\n   - IP 地址范围为 172.17.0.0–172.17.0.255 和 172.17.2.0–172.17.255.255 （即，除了 172.17.1.0/24 之外的所有 172.17.0.0/16）\n3. （Egress 规则）允许 `default` 名字空间中任何带有标签 `role=db` 的 Pod 到 CIDR 10.0.0.0/24 下 5978 TCP 端口的连接。\n\n参阅[声明网络策略](https://kubernetes.io/zh-cn/docs/tasks/administer-cluster/declare-network-policy/)演练了解更多示例。\n\n## 选择器 `to` 和 `from` 的行为\n\n可以在 `ingress` 的 `from` 部分或 `egress` 的 `to` 部分中指定四种选择器：\n\n**podSelector**：此选择器将在与 NetworkPolicy 相同的名字空间中选择特定的 Pod，应将其允许作为入站流量来源或出站流量目的地。\n\n**namespaceSelector**：此选择器将选择特定的名字空间，应将所有 Pod 用作其入站流量来源或出站流量目的地。\n\n**namespaceSelector 和 podSelector**：一个指定 `namespaceSelector` 和 `podSelector` 的 `to`/`from` 条目选择特定名字空间中的特定 Pod。 注意使用正确的 YAML 语法；下面的策略：\n\n```yaml\n  ...\n  ingress:\n  - from:\n    - namespaceSelector:\n        matchLabels:\n          user: alice\n      podSelector:\n        matchLabels:\n          role: client\n  ...\n```\n\n此策略在 `from` 数组中仅包含一个元素，只允许来自标有 `role=client` 的 Pod 且该 Pod 所在的名字空间中标有 `user=alice` 的连接。但是**这项**策略：\n\n```yaml\n  ...\n  ingress:\n  - from:\n    - namespaceSelector:\n        matchLabels:\n          user: alice\n    - podSelector:\n        matchLabels:\n          role: client\n  ...\n```\n\n它在 `from` 数组中包含两个元素，允许来自本地名字空间中标有 `role=client` 的 Pod 的连接，**或**来自任何名字空间中标有 `user=alice` 的任何 Pod 的连接。\n\n如有疑问，请使用 `kubectl describe` 查看 Kubernetes 如何解释该策略。\n\n**ipBlock**：此选择器将选择特定的 IP CIDR 范围以用作入站流量来源或出站流量目的地。 这些应该是集群外部 IP，因为 Pod IP 存在时间短暂的且随机产生。\n\n集群的入站和出站机制通常需要重写数据包的源 IP 或目标 IP。 在发生这种情况时，不确定在 NetworkPolicy 处理之前还是之后发生， 并且对于网络插件、云提供商、`Service` 实现等的不同组合，其行为可能会有所不同。\n\n对入站流量而言，这意味着在某些情况下，你可以根据实际的原始源 IP 过滤传入的数据包， 而在其他情况下，NetworkPolicy 所作用的 `源IP` 则可能是 `LoadBalancer` 或 Pod 的节点等。\n\n对于出站流量而言，这意味着从 Pod 到被重写为集群外部 IP 的 `Service` IP 的连接可能会或可能不会受到基于 `ipBlock` 的策略的约束。\n\n## 默认策略\n\n默认情况下，如果名字空间中不存在任何策略，则所有进出该名字空间中 Pod 的流量都被允许。 以下示例使你可以更改该名字空间中的默认行为。\n\n### 默认拒绝所有入站流量\n\n你可以通过创建选择所有 Pod 但不允许任何进入这些 Pod 的入站流量的 NetworkPolicy 来为名字空间创建 “default” 隔离策略。\n\n[`service/networking/network-policy-default-deny-ingress.yaml`](https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/network-policy-default-deny-ingress.yaml) \n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: default-deny-ingress\nspec:\n  podSelector: {}\n  policyTypes:\n  - Ingress\n```\n\n这确保即使没有被任何其他 NetworkPolicy 选择的 Pod 仍将被隔离以进行入口。 此策略不影响任何 Pod 的出口隔离。\n\n### 允许所有入站流量\n\n如果你想允许一个名字空间中所有 Pod 的所有入站连接，你可以创建一个明确允许的策略。\n\n[`service/networking/network-policy-allow-all-ingress.yaml`](https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/network-policy-allow-all-ingress.yaml) \n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: allow-all-ingress\nspec:\n  podSelector: {}\n  ingress:\n  - {}\n  policyTypes:\n  - Ingress\n```\n\n有了这个策略，任何额外的策略都不会导致到这些 Pod 的任何入站连接被拒绝。 此策略对任何 Pod 的出口隔离没有影响。\n\n### 默认拒绝所有出站流量\n\n你可以通过创建选择所有容器但不允许来自这些容器的任何出站流量的 NetworkPolicy 来为名字空间创建 “default” 隔离策略。\n\n[`service/networking/network-policy-default-deny-egress.yaml`](https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/network-policy-default-deny-egress.yaml) \n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: default-deny-egress\nspec:\n  podSelector: {}\n  policyTypes:\n  - Egress\n```\n\n此策略可以确保即使没有被其他任何 NetworkPolicy 选择的 Pod 也不会被允许流出流量。 此策略不会更改任何 Pod 的入站流量隔离行为。\n\n### 允许所有出站流量\n\n如果要允许来自名字空间中所有 Pod 的所有连接， 则可以创建一个明确允许来自该名字空间中 Pod 的所有出站连接的策略。\n\n[`service/networking/network-policy-allow-all-egress.yaml`](https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/network-policy-allow-all-egress.yaml) \n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: allow-all-egress\nspec:\n  podSelector: {}\n  egress:\n  - {}\n  policyTypes:\n  - Egress\n```\n\n有了这个策略，任何额外的策略都不会导致来自这些 Pod 的任何出站连接被拒绝。 此策略对进入任何 Pod 的隔离没有影响。\n\n### 默认拒绝所有入站和所有出站流量\n\n你可以为名字空间创建“默认”策略，以通过在该名字空间中创建以下 NetworkPolicy 来阻止所有入站和出站流量。\n\n[`service/networking/network-policy-default-deny-all.yaml`](https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/network-policy-default-deny-all.yaml)\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: default-deny-all\nspec:\n  podSelector: {}\n  policyTypes:\n  - Ingress\n  - Egress\n```\n\n此策略可以确保即使没有被其他任何 NetworkPolicy 选择的 Pod 也不会被允许入站或出站流量。\n\n## SCTP 支持\n\n**特性状态：** `Kubernetes v1.20 [stable]`\n\n作为一个稳定特性，SCTP 支持默认是被启用的。 要在集群层面禁用 SCTP，你（或你的集群管理员）需要为 API 服务器指定 `--feature-gates=SCTPSupport=false,...` 来禁用 `SCTPSupport` [特性门控](https://kubernetes.io/zh-cn/docs/reference/command-line-tools-reference/feature-gates/)。 启用该特性门控后，用户可以将 NetworkPolicy 的 `protocol` 字段设置为 `SCTP`。\n\n**说明：**\n\n你必须使用支持 SCTP 协议 NetworkPolicy 的 [CNI](https://kubernetes.io/zh-cn/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/) 插件。\n\n## 针对某个端口范围\n\n**特性状态：** `Kubernetes v1.25 [stable]`\n\n在编写 NetworkPolicy 时，你可以针对一个端口范围而不是某个固定端口。\n\n这一目的可以通过使用 `endPort` 字段来实现，如下例所示：\n\n[`service/networking/networkpolicy-multiport-egress.yaml`](https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/networkpolicy-multiport-egress.yaml) \n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: multi-port-egress\n  namespace: default\nspec:\n  podSelector:\n    matchLabels:\n      role: db\n  policyTypes:\n    - Egress\n  egress:\n    - to:\n        - ipBlock:\n            cidr: 10.0.0.0/24\n      ports:\n        - protocol: TCP\n          port: 32000\n          endPort: 32768\n```\n\n上面的规则允许名字空间 `default` 中所有带有标签 `role=db` 的 Pod 使用 TCP 协议与 `10.0.0.0/24` 范围内的 IP 通信，只要目标端口介于 32000 和 32768 之间就可以。\n\n使用此字段时存在以下限制：\n\n- `endPort` 字段必须等于或者大于 `port` 字段的值。\n- 只有在定义了 `port` 时才能定义 `endPort`。\n- 两个字段的设置值都只能是数字。\n\n**说明：**\n\n你的集群所使用的 [CNI](https://kubernetes.io/zh-cn/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/) 插件必须支持在 NetworkPolicy 规约中使用 `endPort` 字段。 如果你的[网络插件](https://kubernetes.io/zh-cn/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/)不支持 `endPort` 字段，而你指定了一个包含 `endPort` 字段的 NetworkPolicy， 策略只对单个 `port` 字段生效。\n\n## 按标签选择多个命名空间\n\n在这种情况下，你的 `Egress` NetworkPolicy 使用名字空间的标签名称来将多个名字空间作为其目标。 为此，你需要为目标名字空间设置标签。例如：\n\n```shell\n kubectl label namespace frontend namespace=frontend\n kubectl label namespace backend namespace=backend\n```\n\n在 NetworkPolicy 文档中的 namespaceSelector 下添加标签。例如：\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: egress-namespaces\nspec:\n  podSelector:\n    matchLabels:\n      app: myapp\n  policyTypes:\n  - Egress\n  egress:\n   - to:\n     - namespaceSelector:\n       matchExpressions:\n       - key: namespace\n         operator: In\n         values: [\"frontend\", \"backend\"]\n```\n\n**说明：**\n\n你不可以在 NetworkPolicy 中直接指定命名空间的名称。 你必须使用带有 `matchLabels` 或 `matchExpressions` 的 `namespaceSelector` 来根据标签选择命名空间。\n\n## 基于名字指向某名字空间\n\n**特性状态：** `Kubernetes 1.22 [stable]`\n\n只要 `NamespaceDefaultLabelName` [特性门控](https://kubernetes.io/zh-cn/docs/reference/command-line-tools-reference/feature-gates/)被启用， Kubernetes 控制面会在所有名字空间上设置一个不可变更的标签 `kubernetes.io/metadata.name`。该标签的值是名字空间的名称。\n\n如果 NetworkPolicy 无法在某些对象字段中指向某名字空间， 你可以使用标准的标签方式来指向特定名字空间。\n\n## 通过网络策略（至少目前还）无法完成的工作\n\n到 Kubernetes 1.27 为止，NetworkPolicy API 还不支持以下功能， 不过你可能可以使用操作系统组件（如 SELinux、OpenVSwitch、IPTables 等等） 或者第七层技术（Ingress 控制器、服务网格实现）或准入控制器来实现一些替代方案。 如果你对 Kubernetes 中的网络安全性还不太了解，了解使用 NetworkPolicy API 还无法实现下面的用户场景是很值得的。\n\n- 强制集群内部流量经过某公用网关（这种场景最好通过服务网格或其他代理来实现）；\n- 与 TLS 相关的场景（考虑使用服务网格或者 Ingress 控制器）；\n- 特定于节点的策略（你可以使用 CIDR 来表达这一需求不过你无法使用节点在 Kubernetes 中的其他标识信息来辩识目标节点）；\n- 基于名字来选择服务（不过，你可以使用 [标签](https://kubernetes.io/zh-cn/docs/concepts/overview/working-with-objects/labels/) 来选择目标 Pod 或名字空间，这也通常是一种可靠的替代方案）；\n- 创建或管理由第三方来实际完成的“策略请求”；\n\n- 实现适用于所有名字空间或 Pods 的默认策略（某些第三方 Kubernetes 发行版本或项目可以做到这点）；\n- 高级的策略查询或者可达性相关工具；\n- 生成网络安全事件日志的能力（例如，被阻塞或接收的连接请求）；\n- 显式地拒绝策略的能力（目前，NetworkPolicy 的模型默认采用拒绝操作， 其唯一的能力是添加允许策略）；\n- 禁止本地回路或指向宿主的网络流量（Pod 目前无法阻塞 localhost 访问， 它们也无法禁止来自所在节点的访问请求）。","slug":"k8s/study/k8s 网络策略","published":1,"_id":"clny08vfb000k5ovf8xs7dl2b","comments":1,"layout":"post","photos":[],"link":"","content":"<p>如果你希望在 IP 地址或端口层面（OSI 第 3 层或第 4 层）控制网络流量， 则你可以考虑为集群中特定应用使用 Kubernetes 网络策略（NetworkPolicy）。 NetworkPolicy 是一种以应用为中心的结构，允许你设置如何允许 <a href=\"https://kubernetes.io/zh-cn/docs/concepts/workloads/pods/\">Pod</a> 与网络上的各类网络“实体” （我们这里使用实体以避免过度使用诸如“端点”和“服务”这类常用术语， 这些术语在 Kubernetes 中有特定含义）通信。 NetworkPolicy 适用于一端或两端与 Pod 的连接，与其他连接无关。</p>\n<p>Pod 可以通信的 Pod 是通过如下三个标识符的组合来辩识的：</p>\n<ol>\n<li>其他被允许的 Pods（例外：Pod 无法阻塞对自身的访问）</li>\n<li>被允许的名字空间</li>\n<li>IP 组块（例外：与 Pod 运行所在的节点的通信总是被允许的， 无论 Pod 或节点的 IP 地址）</li>\n</ol>\n<p>在定义基于 Pod 或名字空间的 NetworkPolicy 时， 你会使用<a href=\"https://kubernetes.io/zh-cn/docs/concepts/overview/working-with-objects/labels/\">选择算符</a>来设定哪些流量可以进入或离开与该算符匹配的 Pod。 另外，当创建基于 IP 的 NetworkPolicy 时，我们基于 IP 组块（CIDR 范围）来定义策略。</p>\n<h2 id=\"前置条件\"><a href=\"#前置条件\" class=\"headerlink\" title=\"前置条件\"></a>前置条件</h2><p>网络策略通过<a href=\"https://kubernetes.io/zh-cn/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/\">网络插件</a>来实现。 要使用网络策略，你必须使用支持 NetworkPolicy 的网络解决方案。 创建一个 NetworkPolicy 资源对象而没有控制器来使它生效的话，是没有任何作用的。</p>\n<h2 id=\"Pod-隔离的两种类型\"><a href=\"#Pod-隔离的两种类型\" class=\"headerlink\" title=\"Pod 隔离的两种类型\"></a>Pod 隔离的两种类型</h2><p>Pod 有两种隔离: 出口的隔离和入口的隔离。它们涉及到可以建立哪些连接。 这里的“隔离”不是绝对的，而是意味着“有一些限制”。 另外的，“非隔离方向”意味着在所述方向上没有限制。这两种隔离（或不隔离）是独立声明的， 并且都与从一个 Pod 到另一个 Pod 的连接有关。</p>\n<p>默认情况下，一个 Pod 的出口是非隔离的，即所有外向连接都是被允许的。如果有任何的 NetworkPolicy 选择该 Pod 并在其 <code>policyTypes</code> 中包含 “Egress”，则该 Pod 是出口隔离的， 我们称这样的策略适用于该 Pod 的出口。当一个 Pod 的出口被隔离时， 唯一允许的来自 Pod 的连接是适用于出口的 Pod 的某个 NetworkPolicy 的 <code>egress</code> 列表所允许的连接。 这些 <code>egress</code> 列表的效果是相加的。</p>\n<p>默认情况下，一个 Pod 对入口是非隔离的，即所有入站连接都是被允许的。如果有任何的 NetworkPolicy 选择该 Pod 并在其 <code>policyTypes</code> 中包含 “Ingress”，则该 Pod 被隔离入口， 我们称这种策略适用于该 Pod 的入口。当一个 Pod 的入口被隔离时，唯一允许进入该 Pod 的连接是来自该 Pod 节点的连接和适用于入口的 Pod 的某个 NetworkPolicy 的 <code>ingress</code> 列表所允许的连接。这些 <code>ingress</code> 列表的效果是相加的。</p>\n<p>网络策略是相加的，所以不会产生冲突。如果策略适用于 Pod 某一特定方向的流量， Pod 在对应方向所允许的连接是适用的网络策略所允许的集合。 因此，评估的顺序不影响策略的结果。</p>\n<p>要允许从源 Pod 到目的 Pod 的连接，源 Pod 的出口策略和目的 Pod 的入口策略都需要允许连接。 如果任何一方不允许连接，建立连接将会失败。</p>\n<h2 id=\"NetworkPolicy-资源\"><a href=\"#NetworkPolicy-资源\" class=\"headerlink\" title=\"NetworkPolicy 资源\"></a>NetworkPolicy 资源</h2><p>参阅 <a href=\"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#networkpolicy-v1-networking-k8s-io\">NetworkPolicy</a> 来了解资源的完整定义。</p>\n<p>下面是一个 NetworkPolicy 的示例:</p>\n<p><a href=\"https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/networkpolicy.yaml\"><code>service/networking/networkpolicy.yaml</code></a></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> networking.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> NetworkPolicy\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> test<span class=\"token punctuation\">-</span>network<span class=\"token punctuation\">-</span>policy\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> default\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">role</span><span class=\"token punctuation\">:</span> db\n  <span class=\"token key atrule\">policyTypes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> Ingress\n    <span class=\"token punctuation\">-</span> Egress\n  <span class=\"token key atrule\">ingress</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">from</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">ipBlock</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">cidr</span><span class=\"token punctuation\">:</span> 172.17.0.0/16\n            <span class=\"token key atrule\">except</span><span class=\"token punctuation\">:</span>\n              <span class=\"token punctuation\">-</span> 172.17.1.0/24\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">namespaceSelector</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">project</span><span class=\"token punctuation\">:</span> myproject\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">role</span><span class=\"token punctuation\">:</span> frontend\n      <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n          <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">6379</span>\n  <span class=\"token key atrule\">egress</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">to</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">ipBlock</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">cidr</span><span class=\"token punctuation\">:</span> 10.0.0.0/24\n      <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n          <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5978</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>说明：</strong></p>\n<p>除非选择支持网络策略的网络解决方案，否则将上述示例发送到API服务器没有任何效果。</p>\n<p><strong>必需字段</strong>：与所有其他的 Kubernetes 配置一样，NetworkPolicy 需要 <code>apiVersion</code>、 <code>kind</code> 和 <code>metadata</code> 字段。关于配置文件操作的一般信息， 请参考<a href=\"https://kubernetes.io/zh-cn/docs/tasks/configure-pod-container/configure-pod-configmap/\">配置 Pod 以使用 ConfigMap</a> 和<a href=\"https://kubernetes.io/zh-cn/docs/concepts/overview/working-with-objects/object-management\">对象管理</a>。</p>\n<p><strong>spec</strong>：NetworkPolicy <a href=\"https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\">规约</a> 中包含了在一个名字空间中定义特定网络策略所需的所有信息。</p>\n<p><strong>podSelector</strong>：每个 NetworkPolicy 都包括一个 <code>podSelector</code>， 它对该策略所适用的一组 Pod 进行选择。示例中的策略选择带有 “role&#x3D;db” 标签的 Pod。 空的 <code>podSelector</code> 选择名字空间下的所有 Pod。</p>\n<p><strong>policyTypes</strong>：每个 NetworkPolicy 都包含一个 <code>policyTypes</code> 列表，其中包含 <code>Ingress</code> 或 <code>Egress</code> 或两者兼具。<code>policyTypes</code> 字段表示给定的策略是应用于进入所选 Pod 的入站流量还是来自所选 Pod 的出站流量，或两者兼有。 如果 NetworkPolicy 未指定 <code>policyTypes</code> 则默认情况下始终设置 <code>Ingress</code>； 如果 NetworkPolicy 有任何出口规则的话则设置 <code>Egress</code>。</p>\n<p><strong>ingress</strong>：每个 NetworkPolicy 可包含一个 <code>ingress</code> 规则的白名单列表。 每个规则都允许同时匹配 <code>from</code> 和 <code>ports</code> 部分的流量。示例策略中包含一条简单的规则： 它匹配某个特定端口，来自三个来源中的一个，第一个通过 <code>ipBlock</code> 指定，第二个通过 <code>namespaceSelector</code> 指定，第三个通过 <code>podSelector</code> 指定。</p>\n<p><strong>egress</strong>：每个 NetworkPolicy 可包含一个 <code>egress</code> 规则的白名单列表。 每个规则都允许匹配 <code>to</code> 和 <code>port</code> 部分的流量。该示例策略包含一条规则， 该规则将指定端口上的流量匹配到 <code>10.0.0.0/24</code> 中的任何目的地。</p>\n<p>所以，该网络策略示例:</p>\n<ol>\n<li>隔离 <code>default</code> 名字空间下 <code>role=db</code> 的 Pod （如果它们不是已经被隔离的话）。</li>\n<li>（Ingress 规则）允许以下 Pod 连接到 <code>default</code> 名字空间下的带有 <code>role=db</code> 标签的所有 Pod 的 6379 TCP 端口：<ul>\n<li><code>default</code> 名字空间下带有 <code>role=frontend</code> 标签的所有 Pod</li>\n<li>带有 <code>project=myproject</code> 标签的所有名字空间中的 Pod</li>\n<li>IP 地址范围为 172.17.0.0–172.17.0.255 和 172.17.2.0–172.17.255.255 （即，除了 172.17.1.0&#x2F;24 之外的所有 172.17.0.0&#x2F;16）</li>\n</ul>\n</li>\n<li>（Egress 规则）允许 <code>default</code> 名字空间中任何带有标签 <code>role=db</code> 的 Pod 到 CIDR 10.0.0.0&#x2F;24 下 5978 TCP 端口的连接。</li>\n</ol>\n<p>参阅<a href=\"https://kubernetes.io/zh-cn/docs/tasks/administer-cluster/declare-network-policy/\">声明网络策略</a>演练了解更多示例。</p>\n<h2 id=\"选择器-to-和-from-的行为\"><a href=\"#选择器-to-和-from-的行为\" class=\"headerlink\" title=\"选择器 to 和 from 的行为\"></a>选择器 <code>to</code> 和 <code>from</code> 的行为</h2><p>可以在 <code>ingress</code> 的 <code>from</code> 部分或 <code>egress</code> 的 <code>to</code> 部分中指定四种选择器：</p>\n<p><strong>podSelector</strong>：此选择器将在与 NetworkPolicy 相同的名字空间中选择特定的 Pod，应将其允许作为入站流量来源或出站流量目的地。</p>\n<p><strong>namespaceSelector</strong>：此选择器将选择特定的名字空间，应将所有 Pod 用作其入站流量来源或出站流量目的地。</p>\n<p><strong>namespaceSelector 和 podSelector</strong>：一个指定 <code>namespaceSelector</code> 和 <code>podSelector</code> 的 <code>to</code>&#x2F;<code>from</code> 条目选择特定名字空间中的特定 Pod。 注意使用正确的 YAML 语法；下面的策略：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">...</span>\n<span class=\"token key atrule\">ingress</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">from</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">namespaceSelector</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> alice\n    <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">role</span><span class=\"token punctuation\">:</span> client\n<span class=\"token punctuation\">...</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>此策略在 <code>from</code> 数组中仅包含一个元素，只允许来自标有 <code>role=client</code> 的 Pod 且该 Pod 所在的名字空间中标有 <code>user=alice</code> 的连接。但是<strong>这项</strong>策略：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">...</span>\n<span class=\"token key atrule\">ingress</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">from</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">namespaceSelector</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> alice\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">role</span><span class=\"token punctuation\">:</span> client\n<span class=\"token punctuation\">...</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>它在 <code>from</code> 数组中包含两个元素，允许来自本地名字空间中标有 <code>role=client</code> 的 Pod 的连接，<strong>或</strong>来自任何名字空间中标有 <code>user=alice</code> 的任何 Pod 的连接。</p>\n<p>如有疑问，请使用 <code>kubectl describe</code> 查看 Kubernetes 如何解释该策略。</p>\n<p><strong>ipBlock</strong>：此选择器将选择特定的 IP CIDR 范围以用作入站流量来源或出站流量目的地。 这些应该是集群外部 IP，因为 Pod IP 存在时间短暂的且随机产生。</p>\n<p>集群的入站和出站机制通常需要重写数据包的源 IP 或目标 IP。 在发生这种情况时，不确定在 NetworkPolicy 处理之前还是之后发生， 并且对于网络插件、云提供商、<code>Service</code> 实现等的不同组合，其行为可能会有所不同。</p>\n<p>对入站流量而言，这意味着在某些情况下，你可以根据实际的原始源 IP 过滤传入的数据包， 而在其他情况下，NetworkPolicy 所作用的 <code>源IP</code> 则可能是 <code>LoadBalancer</code> 或 Pod 的节点等。</p>\n<p>对于出站流量而言，这意味着从 Pod 到被重写为集群外部 IP 的 <code>Service</code> IP 的连接可能会或可能不会受到基于 <code>ipBlock</code> 的策略的约束。</p>\n<h2 id=\"默认策略\"><a href=\"#默认策略\" class=\"headerlink\" title=\"默认策略\"></a>默认策略</h2><p>默认情况下，如果名字空间中不存在任何策略，则所有进出该名字空间中 Pod 的流量都被允许。 以下示例使你可以更改该名字空间中的默认行为。</p>\n<h3 id=\"默认拒绝所有入站流量\"><a href=\"#默认拒绝所有入站流量\" class=\"headerlink\" title=\"默认拒绝所有入站流量\"></a>默认拒绝所有入站流量</h3><p>你可以通过创建选择所有 Pod 但不允许任何进入这些 Pod 的入站流量的 NetworkPolicy 来为名字空间创建 “default” 隔离策略。</p>\n<p><a href=\"https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/network-policy-default-deny-ingress.yaml\"><code>service/networking/network-policy-default-deny-ingress.yaml</code></a> </p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> networking.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> NetworkPolicy\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> default<span class=\"token punctuation\">-</span>deny<span class=\"token punctuation\">-</span>ingress\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token key atrule\">policyTypes</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> Ingress<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这确保即使没有被任何其他 NetworkPolicy 选择的 Pod 仍将被隔离以进行入口。 此策略不影响任何 Pod 的出口隔离。</p>\n<h3 id=\"允许所有入站流量\"><a href=\"#允许所有入站流量\" class=\"headerlink\" title=\"允许所有入站流量\"></a>允许所有入站流量</h3><p>如果你想允许一个名字空间中所有 Pod 的所有入站连接，你可以创建一个明确允许的策略。</p>\n<p><a href=\"https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/network-policy-allow-all-ingress.yaml\"><code>service/networking/network-policy-allow-all-ingress.yaml</code></a> </p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> networking.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> NetworkPolicy\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> allow<span class=\"token punctuation\">-</span>all<span class=\"token punctuation\">-</span>ingress\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token key atrule\">ingress</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token key atrule\">policyTypes</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> Ingress<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>有了这个策略，任何额外的策略都不会导致到这些 Pod 的任何入站连接被拒绝。 此策略对任何 Pod 的出口隔离没有影响。</p>\n<h3 id=\"默认拒绝所有出站流量\"><a href=\"#默认拒绝所有出站流量\" class=\"headerlink\" title=\"默认拒绝所有出站流量\"></a>默认拒绝所有出站流量</h3><p>你可以通过创建选择所有容器但不允许来自这些容器的任何出站流量的 NetworkPolicy 来为名字空间创建 “default” 隔离策略。</p>\n<p><a href=\"https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/network-policy-default-deny-egress.yaml\"><code>service/networking/network-policy-default-deny-egress.yaml</code></a> </p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> networking.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> NetworkPolicy\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> default<span class=\"token punctuation\">-</span>deny<span class=\"token punctuation\">-</span>egress\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token key atrule\">policyTypes</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> Egress<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>此策略可以确保即使没有被其他任何 NetworkPolicy 选择的 Pod 也不会被允许流出流量。 此策略不会更改任何 Pod 的入站流量隔离行为。</p>\n<h3 id=\"允许所有出站流量\"><a href=\"#允许所有出站流量\" class=\"headerlink\" title=\"允许所有出站流量\"></a>允许所有出站流量</h3><p>如果要允许来自名字空间中所有 Pod 的所有连接， 则可以创建一个明确允许来自该名字空间中 Pod 的所有出站连接的策略。</p>\n<p><a href=\"https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/network-policy-allow-all-egress.yaml\"><code>service/networking/network-policy-allow-all-egress.yaml</code></a> </p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> networking.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> NetworkPolicy\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> allow<span class=\"token punctuation\">-</span>all<span class=\"token punctuation\">-</span>egress\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token key atrule\">egress</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token key atrule\">policyTypes</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> Egress<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>有了这个策略，任何额外的策略都不会导致来自这些 Pod 的任何出站连接被拒绝。 此策略对进入任何 Pod 的隔离没有影响。</p>\n<h3 id=\"默认拒绝所有入站和所有出站流量\"><a href=\"#默认拒绝所有入站和所有出站流量\" class=\"headerlink\" title=\"默认拒绝所有入站和所有出站流量\"></a>默认拒绝所有入站和所有出站流量</h3><p>你可以为名字空间创建“默认”策略，以通过在该名字空间中创建以下 NetworkPolicy 来阻止所有入站和出站流量。</p>\n<p><a href=\"https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/network-policy-default-deny-all.yaml\"><code>service/networking/network-policy-default-deny-all.yaml</code></a></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> networking.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> NetworkPolicy\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> default<span class=\"token punctuation\">-</span>deny<span class=\"token punctuation\">-</span>all\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token key atrule\">policyTypes</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> Ingress\n  <span class=\"token punctuation\">-</span> Egress<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>此策略可以确保即使没有被其他任何 NetworkPolicy 选择的 Pod 也不会被允许入站或出站流量。</p>\n<h2 id=\"SCTP-支持\"><a href=\"#SCTP-支持\" class=\"headerlink\" title=\"SCTP 支持\"></a>SCTP 支持</h2><p><strong>特性状态：</strong> <code>Kubernetes v1.20 [stable]</code></p>\n<p>作为一个稳定特性，SCTP 支持默认是被启用的。 要在集群层面禁用 SCTP，你（或你的集群管理员）需要为 API 服务器指定 <code>--feature-gates=SCTPSupport=false,...</code> 来禁用 <code>SCTPSupport</code> <a href=\"https://kubernetes.io/zh-cn/docs/reference/command-line-tools-reference/feature-gates/\">特性门控</a>。 启用该特性门控后，用户可以将 NetworkPolicy 的 <code>protocol</code> 字段设置为 <code>SCTP</code>。</p>\n<p><strong>说明：</strong></p>\n<p>你必须使用支持 SCTP 协议 NetworkPolicy 的 <a href=\"https://kubernetes.io/zh-cn/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/\">CNI</a> 插件。</p>\n<h2 id=\"针对某个端口范围\"><a href=\"#针对某个端口范围\" class=\"headerlink\" title=\"针对某个端口范围\"></a>针对某个端口范围</h2><p><strong>特性状态：</strong> <code>Kubernetes v1.25 [stable]</code></p>\n<p>在编写 NetworkPolicy 时，你可以针对一个端口范围而不是某个固定端口。</p>\n<p>这一目的可以通过使用 <code>endPort</code> 字段来实现，如下例所示：</p>\n<p><a href=\"https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/networkpolicy-multiport-egress.yaml\"><code>service/networking/networkpolicy-multiport-egress.yaml</code></a> </p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> networking.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> NetworkPolicy\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> multi<span class=\"token punctuation\">-</span>port<span class=\"token punctuation\">-</span>egress\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> default\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">role</span><span class=\"token punctuation\">:</span> db\n  <span class=\"token key atrule\">policyTypes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> Egress\n  <span class=\"token key atrule\">egress</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">to</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">ipBlock</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">cidr</span><span class=\"token punctuation\">:</span> 10.0.0.0/24\n      <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n          <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">32000</span>\n          <span class=\"token key atrule\">endPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">32768</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>上面的规则允许名字空间 <code>default</code> 中所有带有标签 <code>role=db</code> 的 Pod 使用 TCP 协议与 <code>10.0.0.0/24</code> 范围内的 IP 通信，只要目标端口介于 32000 和 32768 之间就可以。</p>\n<p>使用此字段时存在以下限制：</p>\n<ul>\n<li><code>endPort</code> 字段必须等于或者大于 <code>port</code> 字段的值。</li>\n<li>只有在定义了 <code>port</code> 时才能定义 <code>endPort</code>。</li>\n<li>两个字段的设置值都只能是数字。</li>\n</ul>\n<p><strong>说明：</strong></p>\n<p>你的集群所使用的 <a href=\"https://kubernetes.io/zh-cn/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/\">CNI</a> 插件必须支持在 NetworkPolicy 规约中使用 <code>endPort</code> 字段。 如果你的<a href=\"https://kubernetes.io/zh-cn/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/\">网络插件</a>不支持 <code>endPort</code> 字段，而你指定了一个包含 <code>endPort</code> 字段的 NetworkPolicy， 策略只对单个 <code>port</code> 字段生效。</p>\n<h2 id=\"按标签选择多个命名空间\"><a href=\"#按标签选择多个命名空间\" class=\"headerlink\" title=\"按标签选择多个命名空间\"></a>按标签选择多个命名空间</h2><p>在这种情况下，你的 <code>Egress</code> NetworkPolicy 使用名字空间的标签名称来将多个名字空间作为其目标。 为此，你需要为目标名字空间设置标签。例如：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl label namespace frontend <span class=\"token assign-left variable\">namespace</span><span class=\"token operator\">=</span>frontend\nkubectl label namespace backend <span class=\"token assign-left variable\">namespace</span><span class=\"token operator\">=</span>backend<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>在 NetworkPolicy 文档中的 namespaceSelector 下添加标签。例如：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> networking.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> NetworkPolicy\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> egress<span class=\"token punctuation\">-</span>namespaces\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> myapp\n  <span class=\"token key atrule\">policyTypes</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> Egress\n  <span class=\"token key atrule\">egress</span><span class=\"token punctuation\">:</span>\n   <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">to</span><span class=\"token punctuation\">:</span>\n     <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">namespaceSelector</span><span class=\"token punctuation\">:</span>\n       <span class=\"token key atrule\">matchExpressions</span><span class=\"token punctuation\">:</span>\n       <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> namespace\n         <span class=\"token key atrule\">operator</span><span class=\"token punctuation\">:</span> In\n         <span class=\"token key atrule\">values</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"frontend\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"backend\"</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>说明：</strong></p>\n<p>你不可以在 NetworkPolicy 中直接指定命名空间的名称。 你必须使用带有 <code>matchLabels</code> 或 <code>matchExpressions</code> 的 <code>namespaceSelector</code> 来根据标签选择命名空间。</p>\n<h2 id=\"基于名字指向某名字空间\"><a href=\"#基于名字指向某名字空间\" class=\"headerlink\" title=\"基于名字指向某名字空间\"></a>基于名字指向某名字空间</h2><p><strong>特性状态：</strong> <code>Kubernetes 1.22 [stable]</code></p>\n<p>只要 <code>NamespaceDefaultLabelName</code> <a href=\"https://kubernetes.io/zh-cn/docs/reference/command-line-tools-reference/feature-gates/\">特性门控</a>被启用， Kubernetes 控制面会在所有名字空间上设置一个不可变更的标签 <code>kubernetes.io/metadata.name</code>。该标签的值是名字空间的名称。</p>\n<p>如果 NetworkPolicy 无法在某些对象字段中指向某名字空间， 你可以使用标准的标签方式来指向特定名字空间。</p>\n<h2 id=\"通过网络策略（至少目前还）无法完成的工作\"><a href=\"#通过网络策略（至少目前还）无法完成的工作\" class=\"headerlink\" title=\"通过网络策略（至少目前还）无法完成的工作\"></a>通过网络策略（至少目前还）无法完成的工作</h2><p>到 Kubernetes 1.27 为止，NetworkPolicy API 还不支持以下功能， 不过你可能可以使用操作系统组件（如 SELinux、OpenVSwitch、IPTables 等等） 或者第七层技术（Ingress 控制器、服务网格实现）或准入控制器来实现一些替代方案。 如果你对 Kubernetes 中的网络安全性还不太了解，了解使用 NetworkPolicy API 还无法实现下面的用户场景是很值得的。</p>\n<ul>\n<li><p>强制集群内部流量经过某公用网关（这种场景最好通过服务网格或其他代理来实现）；</p>\n</li>\n<li><p>与 TLS 相关的场景（考虑使用服务网格或者 Ingress 控制器）；</p>\n</li>\n<li><p>特定于节点的策略（你可以使用 CIDR 来表达这一需求不过你无法使用节点在 Kubernetes 中的其他标识信息来辩识目标节点）；</p>\n</li>\n<li><p>基于名字来选择服务（不过，你可以使用 <a href=\"https://kubernetes.io/zh-cn/docs/concepts/overview/working-with-objects/labels/\">标签</a> 来选择目标 Pod 或名字空间，这也通常是一种可靠的替代方案）；</p>\n</li>\n<li><p>创建或管理由第三方来实际完成的“策略请求”；</p>\n</li>\n<li><p>实现适用于所有名字空间或 Pods 的默认策略（某些第三方 Kubernetes 发行版本或项目可以做到这点）；</p>\n</li>\n<li><p>高级的策略查询或者可达性相关工具；</p>\n</li>\n<li><p>生成网络安全事件日志的能力（例如，被阻塞或接收的连接请求）；</p>\n</li>\n<li><p>显式地拒绝策略的能力（目前，NetworkPolicy 的模型默认采用拒绝操作， 其唯一的能力是添加允许策略）；</p>\n</li>\n<li><p>禁止本地回路或指向宿主的网络流量（Pod 目前无法阻塞 localhost 访问， 它们也无法禁止来自所在节点的访问请求）。</p>\n</li>\n</ul>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}},"cover":"/img/default_cover/geomeric4.jpg","cover_type":"img","excerpt":"","more":"<p>如果你希望在 IP 地址或端口层面（OSI 第 3 层或第 4 层）控制网络流量， 则你可以考虑为集群中特定应用使用 Kubernetes 网络策略（NetworkPolicy）。 NetworkPolicy 是一种以应用为中心的结构，允许你设置如何允许 <a href=\"https://kubernetes.io/zh-cn/docs/concepts/workloads/pods/\">Pod</a> 与网络上的各类网络“实体” （我们这里使用实体以避免过度使用诸如“端点”和“服务”这类常用术语， 这些术语在 Kubernetes 中有特定含义）通信。 NetworkPolicy 适用于一端或两端与 Pod 的连接，与其他连接无关。</p>\n<p>Pod 可以通信的 Pod 是通过如下三个标识符的组合来辩识的：</p>\n<ol>\n<li>其他被允许的 Pods（例外：Pod 无法阻塞对自身的访问）</li>\n<li>被允许的名字空间</li>\n<li>IP 组块（例外：与 Pod 运行所在的节点的通信总是被允许的， 无论 Pod 或节点的 IP 地址）</li>\n</ol>\n<p>在定义基于 Pod 或名字空间的 NetworkPolicy 时， 你会使用<a href=\"https://kubernetes.io/zh-cn/docs/concepts/overview/working-with-objects/labels/\">选择算符</a>来设定哪些流量可以进入或离开与该算符匹配的 Pod。 另外，当创建基于 IP 的 NetworkPolicy 时，我们基于 IP 组块（CIDR 范围）来定义策略。</p>\n<h2 id=\"前置条件\"><a href=\"#前置条件\" class=\"headerlink\" title=\"前置条件\"></a>前置条件</h2><p>网络策略通过<a href=\"https://kubernetes.io/zh-cn/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/\">网络插件</a>来实现。 要使用网络策略，你必须使用支持 NetworkPolicy 的网络解决方案。 创建一个 NetworkPolicy 资源对象而没有控制器来使它生效的话，是没有任何作用的。</p>\n<h2 id=\"Pod-隔离的两种类型\"><a href=\"#Pod-隔离的两种类型\" class=\"headerlink\" title=\"Pod 隔离的两种类型\"></a>Pod 隔离的两种类型</h2><p>Pod 有两种隔离: 出口的隔离和入口的隔离。它们涉及到可以建立哪些连接。 这里的“隔离”不是绝对的，而是意味着“有一些限制”。 另外的，“非隔离方向”意味着在所述方向上没有限制。这两种隔离（或不隔离）是独立声明的， 并且都与从一个 Pod 到另一个 Pod 的连接有关。</p>\n<p>默认情况下，一个 Pod 的出口是非隔离的，即所有外向连接都是被允许的。如果有任何的 NetworkPolicy 选择该 Pod 并在其 <code>policyTypes</code> 中包含 “Egress”，则该 Pod 是出口隔离的， 我们称这样的策略适用于该 Pod 的出口。当一个 Pod 的出口被隔离时， 唯一允许的来自 Pod 的连接是适用于出口的 Pod 的某个 NetworkPolicy 的 <code>egress</code> 列表所允许的连接。 这些 <code>egress</code> 列表的效果是相加的。</p>\n<p>默认情况下，一个 Pod 对入口是非隔离的，即所有入站连接都是被允许的。如果有任何的 NetworkPolicy 选择该 Pod 并在其 <code>policyTypes</code> 中包含 “Ingress”，则该 Pod 被隔离入口， 我们称这种策略适用于该 Pod 的入口。当一个 Pod 的入口被隔离时，唯一允许进入该 Pod 的连接是来自该 Pod 节点的连接和适用于入口的 Pod 的某个 NetworkPolicy 的 <code>ingress</code> 列表所允许的连接。这些 <code>ingress</code> 列表的效果是相加的。</p>\n<p>网络策略是相加的，所以不会产生冲突。如果策略适用于 Pod 某一特定方向的流量， Pod 在对应方向所允许的连接是适用的网络策略所允许的集合。 因此，评估的顺序不影响策略的结果。</p>\n<p>要允许从源 Pod 到目的 Pod 的连接，源 Pod 的出口策略和目的 Pod 的入口策略都需要允许连接。 如果任何一方不允许连接，建立连接将会失败。</p>\n<h2 id=\"NetworkPolicy-资源\"><a href=\"#NetworkPolicy-资源\" class=\"headerlink\" title=\"NetworkPolicy 资源\"></a>NetworkPolicy 资源</h2><p>参阅 <a href=\"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#networkpolicy-v1-networking-k8s-io\">NetworkPolicy</a> 来了解资源的完整定义。</p>\n<p>下面是一个 NetworkPolicy 的示例:</p>\n<p><a href=\"https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/networkpolicy.yaml\"><code>service/networking/networkpolicy.yaml</code></a></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> networking.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> NetworkPolicy\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> test<span class=\"token punctuation\">-</span>network<span class=\"token punctuation\">-</span>policy\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> default\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">role</span><span class=\"token punctuation\">:</span> db\n  <span class=\"token key atrule\">policyTypes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> Ingress\n    <span class=\"token punctuation\">-</span> Egress\n  <span class=\"token key atrule\">ingress</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">from</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">ipBlock</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">cidr</span><span class=\"token punctuation\">:</span> 172.17.0.0/16\n            <span class=\"token key atrule\">except</span><span class=\"token punctuation\">:</span>\n              <span class=\"token punctuation\">-</span> 172.17.1.0/24\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">namespaceSelector</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">project</span><span class=\"token punctuation\">:</span> myproject\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">role</span><span class=\"token punctuation\">:</span> frontend\n      <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n          <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">6379</span>\n  <span class=\"token key atrule\">egress</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">to</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">ipBlock</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">cidr</span><span class=\"token punctuation\">:</span> 10.0.0.0/24\n      <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n          <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5978</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>说明：</strong></p>\n<p>除非选择支持网络策略的网络解决方案，否则将上述示例发送到API服务器没有任何效果。</p>\n<p><strong>必需字段</strong>：与所有其他的 Kubernetes 配置一样，NetworkPolicy 需要 <code>apiVersion</code>、 <code>kind</code> 和 <code>metadata</code> 字段。关于配置文件操作的一般信息， 请参考<a href=\"https://kubernetes.io/zh-cn/docs/tasks/configure-pod-container/configure-pod-configmap/\">配置 Pod 以使用 ConfigMap</a> 和<a href=\"https://kubernetes.io/zh-cn/docs/concepts/overview/working-with-objects/object-management\">对象管理</a>。</p>\n<p><strong>spec</strong>：NetworkPolicy <a href=\"https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\">规约</a> 中包含了在一个名字空间中定义特定网络策略所需的所有信息。</p>\n<p><strong>podSelector</strong>：每个 NetworkPolicy 都包括一个 <code>podSelector</code>， 它对该策略所适用的一组 Pod 进行选择。示例中的策略选择带有 “role&#x3D;db” 标签的 Pod。 空的 <code>podSelector</code> 选择名字空间下的所有 Pod。</p>\n<p><strong>policyTypes</strong>：每个 NetworkPolicy 都包含一个 <code>policyTypes</code> 列表，其中包含 <code>Ingress</code> 或 <code>Egress</code> 或两者兼具。<code>policyTypes</code> 字段表示给定的策略是应用于进入所选 Pod 的入站流量还是来自所选 Pod 的出站流量，或两者兼有。 如果 NetworkPolicy 未指定 <code>policyTypes</code> 则默认情况下始终设置 <code>Ingress</code>； 如果 NetworkPolicy 有任何出口规则的话则设置 <code>Egress</code>。</p>\n<p><strong>ingress</strong>：每个 NetworkPolicy 可包含一个 <code>ingress</code> 规则的白名单列表。 每个规则都允许同时匹配 <code>from</code> 和 <code>ports</code> 部分的流量。示例策略中包含一条简单的规则： 它匹配某个特定端口，来自三个来源中的一个，第一个通过 <code>ipBlock</code> 指定，第二个通过 <code>namespaceSelector</code> 指定，第三个通过 <code>podSelector</code> 指定。</p>\n<p><strong>egress</strong>：每个 NetworkPolicy 可包含一个 <code>egress</code> 规则的白名单列表。 每个规则都允许匹配 <code>to</code> 和 <code>port</code> 部分的流量。该示例策略包含一条规则， 该规则将指定端口上的流量匹配到 <code>10.0.0.0/24</code> 中的任何目的地。</p>\n<p>所以，该网络策略示例:</p>\n<ol>\n<li>隔离 <code>default</code> 名字空间下 <code>role=db</code> 的 Pod （如果它们不是已经被隔离的话）。</li>\n<li>（Ingress 规则）允许以下 Pod 连接到 <code>default</code> 名字空间下的带有 <code>role=db</code> 标签的所有 Pod 的 6379 TCP 端口：<ul>\n<li><code>default</code> 名字空间下带有 <code>role=frontend</code> 标签的所有 Pod</li>\n<li>带有 <code>project=myproject</code> 标签的所有名字空间中的 Pod</li>\n<li>IP 地址范围为 172.17.0.0–172.17.0.255 和 172.17.2.0–172.17.255.255 （即，除了 172.17.1.0&#x2F;24 之外的所有 172.17.0.0&#x2F;16）</li>\n</ul>\n</li>\n<li>（Egress 规则）允许 <code>default</code> 名字空间中任何带有标签 <code>role=db</code> 的 Pod 到 CIDR 10.0.0.0&#x2F;24 下 5978 TCP 端口的连接。</li>\n</ol>\n<p>参阅<a href=\"https://kubernetes.io/zh-cn/docs/tasks/administer-cluster/declare-network-policy/\">声明网络策略</a>演练了解更多示例。</p>\n<h2 id=\"选择器-to-和-from-的行为\"><a href=\"#选择器-to-和-from-的行为\" class=\"headerlink\" title=\"选择器 to 和 from 的行为\"></a>选择器 <code>to</code> 和 <code>from</code> 的行为</h2><p>可以在 <code>ingress</code> 的 <code>from</code> 部分或 <code>egress</code> 的 <code>to</code> 部分中指定四种选择器：</p>\n<p><strong>podSelector</strong>：此选择器将在与 NetworkPolicy 相同的名字空间中选择特定的 Pod，应将其允许作为入站流量来源或出站流量目的地。</p>\n<p><strong>namespaceSelector</strong>：此选择器将选择特定的名字空间，应将所有 Pod 用作其入站流量来源或出站流量目的地。</p>\n<p><strong>namespaceSelector 和 podSelector</strong>：一个指定 <code>namespaceSelector</code> 和 <code>podSelector</code> 的 <code>to</code>&#x2F;<code>from</code> 条目选择特定名字空间中的特定 Pod。 注意使用正确的 YAML 语法；下面的策略：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">...</span>\n<span class=\"token key atrule\">ingress</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">from</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">namespaceSelector</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> alice\n    <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">role</span><span class=\"token punctuation\">:</span> client\n<span class=\"token punctuation\">...</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>此策略在 <code>from</code> 数组中仅包含一个元素，只允许来自标有 <code>role=client</code> 的 Pod 且该 Pod 所在的名字空间中标有 <code>user=alice</code> 的连接。但是<strong>这项</strong>策略：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">...</span>\n<span class=\"token key atrule\">ingress</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">from</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">namespaceSelector</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> alice\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">role</span><span class=\"token punctuation\">:</span> client\n<span class=\"token punctuation\">...</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>它在 <code>from</code> 数组中包含两个元素，允许来自本地名字空间中标有 <code>role=client</code> 的 Pod 的连接，<strong>或</strong>来自任何名字空间中标有 <code>user=alice</code> 的任何 Pod 的连接。</p>\n<p>如有疑问，请使用 <code>kubectl describe</code> 查看 Kubernetes 如何解释该策略。</p>\n<p><strong>ipBlock</strong>：此选择器将选择特定的 IP CIDR 范围以用作入站流量来源或出站流量目的地。 这些应该是集群外部 IP，因为 Pod IP 存在时间短暂的且随机产生。</p>\n<p>集群的入站和出站机制通常需要重写数据包的源 IP 或目标 IP。 在发生这种情况时，不确定在 NetworkPolicy 处理之前还是之后发生， 并且对于网络插件、云提供商、<code>Service</code> 实现等的不同组合，其行为可能会有所不同。</p>\n<p>对入站流量而言，这意味着在某些情况下，你可以根据实际的原始源 IP 过滤传入的数据包， 而在其他情况下，NetworkPolicy 所作用的 <code>源IP</code> 则可能是 <code>LoadBalancer</code> 或 Pod 的节点等。</p>\n<p>对于出站流量而言，这意味着从 Pod 到被重写为集群外部 IP 的 <code>Service</code> IP 的连接可能会或可能不会受到基于 <code>ipBlock</code> 的策略的约束。</p>\n<h2 id=\"默认策略\"><a href=\"#默认策略\" class=\"headerlink\" title=\"默认策略\"></a>默认策略</h2><p>默认情况下，如果名字空间中不存在任何策略，则所有进出该名字空间中 Pod 的流量都被允许。 以下示例使你可以更改该名字空间中的默认行为。</p>\n<h3 id=\"默认拒绝所有入站流量\"><a href=\"#默认拒绝所有入站流量\" class=\"headerlink\" title=\"默认拒绝所有入站流量\"></a>默认拒绝所有入站流量</h3><p>你可以通过创建选择所有 Pod 但不允许任何进入这些 Pod 的入站流量的 NetworkPolicy 来为名字空间创建 “default” 隔离策略。</p>\n<p><a href=\"https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/network-policy-default-deny-ingress.yaml\"><code>service/networking/network-policy-default-deny-ingress.yaml</code></a> </p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> networking.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> NetworkPolicy\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> default<span class=\"token punctuation\">-</span>deny<span class=\"token punctuation\">-</span>ingress\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token key atrule\">policyTypes</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> Ingress<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这确保即使没有被任何其他 NetworkPolicy 选择的 Pod 仍将被隔离以进行入口。 此策略不影响任何 Pod 的出口隔离。</p>\n<h3 id=\"允许所有入站流量\"><a href=\"#允许所有入站流量\" class=\"headerlink\" title=\"允许所有入站流量\"></a>允许所有入站流量</h3><p>如果你想允许一个名字空间中所有 Pod 的所有入站连接，你可以创建一个明确允许的策略。</p>\n<p><a href=\"https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/network-policy-allow-all-ingress.yaml\"><code>service/networking/network-policy-allow-all-ingress.yaml</code></a> </p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> networking.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> NetworkPolicy\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> allow<span class=\"token punctuation\">-</span>all<span class=\"token punctuation\">-</span>ingress\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token key atrule\">ingress</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token key atrule\">policyTypes</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> Ingress<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>有了这个策略，任何额外的策略都不会导致到这些 Pod 的任何入站连接被拒绝。 此策略对任何 Pod 的出口隔离没有影响。</p>\n<h3 id=\"默认拒绝所有出站流量\"><a href=\"#默认拒绝所有出站流量\" class=\"headerlink\" title=\"默认拒绝所有出站流量\"></a>默认拒绝所有出站流量</h3><p>你可以通过创建选择所有容器但不允许来自这些容器的任何出站流量的 NetworkPolicy 来为名字空间创建 “default” 隔离策略。</p>\n<p><a href=\"https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/network-policy-default-deny-egress.yaml\"><code>service/networking/network-policy-default-deny-egress.yaml</code></a> </p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> networking.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> NetworkPolicy\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> default<span class=\"token punctuation\">-</span>deny<span class=\"token punctuation\">-</span>egress\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token key atrule\">policyTypes</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> Egress<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>此策略可以确保即使没有被其他任何 NetworkPolicy 选择的 Pod 也不会被允许流出流量。 此策略不会更改任何 Pod 的入站流量隔离行为。</p>\n<h3 id=\"允许所有出站流量\"><a href=\"#允许所有出站流量\" class=\"headerlink\" title=\"允许所有出站流量\"></a>允许所有出站流量</h3><p>如果要允许来自名字空间中所有 Pod 的所有连接， 则可以创建一个明确允许来自该名字空间中 Pod 的所有出站连接的策略。</p>\n<p><a href=\"https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/network-policy-allow-all-egress.yaml\"><code>service/networking/network-policy-allow-all-egress.yaml</code></a> </p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> networking.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> NetworkPolicy\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> allow<span class=\"token punctuation\">-</span>all<span class=\"token punctuation\">-</span>egress\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token key atrule\">egress</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token key atrule\">policyTypes</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> Egress<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>有了这个策略，任何额外的策略都不会导致来自这些 Pod 的任何出站连接被拒绝。 此策略对进入任何 Pod 的隔离没有影响。</p>\n<h3 id=\"默认拒绝所有入站和所有出站流量\"><a href=\"#默认拒绝所有入站和所有出站流量\" class=\"headerlink\" title=\"默认拒绝所有入站和所有出站流量\"></a>默认拒绝所有入站和所有出站流量</h3><p>你可以为名字空间创建“默认”策略，以通过在该名字空间中创建以下 NetworkPolicy 来阻止所有入站和出站流量。</p>\n<p><a href=\"https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/network-policy-default-deny-all.yaml\"><code>service/networking/network-policy-default-deny-all.yaml</code></a></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> networking.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> NetworkPolicy\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> default<span class=\"token punctuation\">-</span>deny<span class=\"token punctuation\">-</span>all\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token key atrule\">policyTypes</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> Ingress\n  <span class=\"token punctuation\">-</span> Egress<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>此策略可以确保即使没有被其他任何 NetworkPolicy 选择的 Pod 也不会被允许入站或出站流量。</p>\n<h2 id=\"SCTP-支持\"><a href=\"#SCTP-支持\" class=\"headerlink\" title=\"SCTP 支持\"></a>SCTP 支持</h2><p><strong>特性状态：</strong> <code>Kubernetes v1.20 [stable]</code></p>\n<p>作为一个稳定特性，SCTP 支持默认是被启用的。 要在集群层面禁用 SCTP，你（或你的集群管理员）需要为 API 服务器指定 <code>--feature-gates=SCTPSupport=false,...</code> 来禁用 <code>SCTPSupport</code> <a href=\"https://kubernetes.io/zh-cn/docs/reference/command-line-tools-reference/feature-gates/\">特性门控</a>。 启用该特性门控后，用户可以将 NetworkPolicy 的 <code>protocol</code> 字段设置为 <code>SCTP</code>。</p>\n<p><strong>说明：</strong></p>\n<p>你必须使用支持 SCTP 协议 NetworkPolicy 的 <a href=\"https://kubernetes.io/zh-cn/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/\">CNI</a> 插件。</p>\n<h2 id=\"针对某个端口范围\"><a href=\"#针对某个端口范围\" class=\"headerlink\" title=\"针对某个端口范围\"></a>针对某个端口范围</h2><p><strong>特性状态：</strong> <code>Kubernetes v1.25 [stable]</code></p>\n<p>在编写 NetworkPolicy 时，你可以针对一个端口范围而不是某个固定端口。</p>\n<p>这一目的可以通过使用 <code>endPort</code> 字段来实现，如下例所示：</p>\n<p><a href=\"https://raw.githubusercontent.com/kubernetes/website/main/content/zh-cn/examples/service/networking/networkpolicy-multiport-egress.yaml\"><code>service/networking/networkpolicy-multiport-egress.yaml</code></a> </p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> networking.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> NetworkPolicy\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> multi<span class=\"token punctuation\">-</span>port<span class=\"token punctuation\">-</span>egress\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> default\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">role</span><span class=\"token punctuation\">:</span> db\n  <span class=\"token key atrule\">policyTypes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> Egress\n  <span class=\"token key atrule\">egress</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">to</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">ipBlock</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">cidr</span><span class=\"token punctuation\">:</span> 10.0.0.0/24\n      <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n          <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">32000</span>\n          <span class=\"token key atrule\">endPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">32768</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>上面的规则允许名字空间 <code>default</code> 中所有带有标签 <code>role=db</code> 的 Pod 使用 TCP 协议与 <code>10.0.0.0/24</code> 范围内的 IP 通信，只要目标端口介于 32000 和 32768 之间就可以。</p>\n<p>使用此字段时存在以下限制：</p>\n<ul>\n<li><code>endPort</code> 字段必须等于或者大于 <code>port</code> 字段的值。</li>\n<li>只有在定义了 <code>port</code> 时才能定义 <code>endPort</code>。</li>\n<li>两个字段的设置值都只能是数字。</li>\n</ul>\n<p><strong>说明：</strong></p>\n<p>你的集群所使用的 <a href=\"https://kubernetes.io/zh-cn/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/\">CNI</a> 插件必须支持在 NetworkPolicy 规约中使用 <code>endPort</code> 字段。 如果你的<a href=\"https://kubernetes.io/zh-cn/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/\">网络插件</a>不支持 <code>endPort</code> 字段，而你指定了一个包含 <code>endPort</code> 字段的 NetworkPolicy， 策略只对单个 <code>port</code> 字段生效。</p>\n<h2 id=\"按标签选择多个命名空间\"><a href=\"#按标签选择多个命名空间\" class=\"headerlink\" title=\"按标签选择多个命名空间\"></a>按标签选择多个命名空间</h2><p>在这种情况下，你的 <code>Egress</code> NetworkPolicy 使用名字空间的标签名称来将多个名字空间作为其目标。 为此，你需要为目标名字空间设置标签。例如：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl label namespace frontend <span class=\"token assign-left variable\">namespace</span><span class=\"token operator\">=</span>frontend\nkubectl label namespace backend <span class=\"token assign-left variable\">namespace</span><span class=\"token operator\">=</span>backend<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>在 NetworkPolicy 文档中的 namespaceSelector 下添加标签。例如：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> networking.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> NetworkPolicy\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> egress<span class=\"token punctuation\">-</span>namespaces\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">podSelector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> myapp\n  <span class=\"token key atrule\">policyTypes</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> Egress\n  <span class=\"token key atrule\">egress</span><span class=\"token punctuation\">:</span>\n   <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">to</span><span class=\"token punctuation\">:</span>\n     <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">namespaceSelector</span><span class=\"token punctuation\">:</span>\n       <span class=\"token key atrule\">matchExpressions</span><span class=\"token punctuation\">:</span>\n       <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> namespace\n         <span class=\"token key atrule\">operator</span><span class=\"token punctuation\">:</span> In\n         <span class=\"token key atrule\">values</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"frontend\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"backend\"</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>说明：</strong></p>\n<p>你不可以在 NetworkPolicy 中直接指定命名空间的名称。 你必须使用带有 <code>matchLabels</code> 或 <code>matchExpressions</code> 的 <code>namespaceSelector</code> 来根据标签选择命名空间。</p>\n<h2 id=\"基于名字指向某名字空间\"><a href=\"#基于名字指向某名字空间\" class=\"headerlink\" title=\"基于名字指向某名字空间\"></a>基于名字指向某名字空间</h2><p><strong>特性状态：</strong> <code>Kubernetes 1.22 [stable]</code></p>\n<p>只要 <code>NamespaceDefaultLabelName</code> <a href=\"https://kubernetes.io/zh-cn/docs/reference/command-line-tools-reference/feature-gates/\">特性门控</a>被启用， Kubernetes 控制面会在所有名字空间上设置一个不可变更的标签 <code>kubernetes.io/metadata.name</code>。该标签的值是名字空间的名称。</p>\n<p>如果 NetworkPolicy 无法在某些对象字段中指向某名字空间， 你可以使用标准的标签方式来指向特定名字空间。</p>\n<h2 id=\"通过网络策略（至少目前还）无法完成的工作\"><a href=\"#通过网络策略（至少目前还）无法完成的工作\" class=\"headerlink\" title=\"通过网络策略（至少目前还）无法完成的工作\"></a>通过网络策略（至少目前还）无法完成的工作</h2><p>到 Kubernetes 1.27 为止，NetworkPolicy API 还不支持以下功能， 不过你可能可以使用操作系统组件（如 SELinux、OpenVSwitch、IPTables 等等） 或者第七层技术（Ingress 控制器、服务网格实现）或准入控制器来实现一些替代方案。 如果你对 Kubernetes 中的网络安全性还不太了解，了解使用 NetworkPolicy API 还无法实现下面的用户场景是很值得的。</p>\n<ul>\n<li><p>强制集群内部流量经过某公用网关（这种场景最好通过服务网格或其他代理来实现）；</p>\n</li>\n<li><p>与 TLS 相关的场景（考虑使用服务网格或者 Ingress 控制器）；</p>\n</li>\n<li><p>特定于节点的策略（你可以使用 CIDR 来表达这一需求不过你无法使用节点在 Kubernetes 中的其他标识信息来辩识目标节点）；</p>\n</li>\n<li><p>基于名字来选择服务（不过，你可以使用 <a href=\"https://kubernetes.io/zh-cn/docs/concepts/overview/working-with-objects/labels/\">标签</a> 来选择目标 Pod 或名字空间，这也通常是一种可靠的替代方案）；</p>\n</li>\n<li><p>创建或管理由第三方来实际完成的“策略请求”；</p>\n</li>\n<li><p>实现适用于所有名字空间或 Pods 的默认策略（某些第三方 Kubernetes 发行版本或项目可以做到这点）；</p>\n</li>\n<li><p>高级的策略查询或者可达性相关工具；</p>\n</li>\n<li><p>生成网络安全事件日志的能力（例如，被阻塞或接收的连接请求）；</p>\n</li>\n<li><p>显式地拒绝策略的能力（目前，NetworkPolicy 的模型默认采用拒绝操作， 其唯一的能力是添加允许策略）；</p>\n</li>\n<li><p>禁止本地回路或指向宿主的网络流量（Pod 目前无法阻塞 localhost 访问， 它们也无法禁止来自所在节点的访问请求）。</p>\n</li>\n</ul>\n"},{"title":"HashMap 与 TreeMap","date":"2019-12-31T16:00:00.000Z","updated":"2025-09-24T06:00:08.734Z","keywords":"HashMap TreeMap","description":"Java 常见面试题汇总 - 基础篇","copyright":true,"_content":"\n## HashMap 和 TreeMap 的实现\n\n**HashMap**：基于**哈希表**实现。使用 `HashMap` 要求添加的键类明确定义了 `hashCode()`和 `equals()` _[可以重写 hashCode()和 equals()]_ ，为了优化 `HashMap` 空间的使用，您可以调优**初始容量**和**负载因子**。\n\n- `HashMap()`: 构建一个空的哈希映像\n- `HashMap(Map m)`: 构建一个哈希映像，并且添加映像 m 的所有映射\n- `HashMap(int initialCapacity)`: 构建一个拥有特定容量的空的哈希映像\n- `HashMap(int initialCapacity, float loadFactor)`: 构建一个拥有特定容量和加载因子的空的哈希映像\n\n**TreeMap**：基于红黑树实现。`TreeMap` 没有调优选项，因为该树总处于平衡状态。\n\n- `TreeMap()`：构建一个空的映像树\n- `TreeMap(Map m)`: 构建一个映像树，并且添加映像 m 中所有元素\n- `TreeMap(Comparator c)`: 构建一个映像树，并且使用特定的比较器对关键字进行排序\n- `TreeMap(SortedMap s)`: 构建一个映像树，添加映像树 s 中所有映射，并且使用与有序映像 s 相同的比较器排序\n\n## HashMap 和 TreeMap 都是非线程安全\n\n`HashMap` 继承 `AbstractMap` 抽象类，`TreeMap` 继承自 `SortedMap` 接口。\n\n`AbstractMap` 抽象类：覆盖了 `equals()`和 `hashCode()`方法以确保两个相等映射返回相同的哈希码。**如果两个映射大小相等、包含同样的键且每个键在这两个映射中对应的值都相同，则这两个映射相等**。映射的哈希码是映射元素哈希码的总和，其中每个元素是 `Map.Entry` 接口的一个实现。因此，不论映射内部顺序如何，两个相等映射会报告相同的哈希码。\n\n`SortedMap` 接口：它用来保持键的**有序顺序**。`SortedMap` 接口为映像的视图(子集)，包括两个端点提供了访问方法。除了排序是作用于映射的键以外，处理 `SortedMap` 和处理 `SortedSet` 一样。添加到 `SortedMap` 实现类的元素必须实现 `Comparable` 接口，否则您必须给它的构造函数提供一个 `Comparator` 接口的实现。`TreeMap` 类是它的唯一一个实现。\n","source":"_posts/java/note/HashMap 与 TreeMap.md","raw":"---\n# 【必需】文章标题\ntitle: HashMap 与 TreeMap\n# 【必需】文章创建日期\ndate: 2020-01-01\n# 【可选】文章更新日期\nupdated:\n# 【可选】文章标签\ntags: Java 笔记\n# 【可选】文章分类\ncategories: Java\n# 【可选】文章关键字\nkeywords: HashMap TreeMap\n# 【可选】文章描述\ndescription: Java 常见面试题汇总 - 基础篇\ncopyright: true\n---\n\n## HashMap 和 TreeMap 的实现\n\n**HashMap**：基于**哈希表**实现。使用 `HashMap` 要求添加的键类明确定义了 `hashCode()`和 `equals()` _[可以重写 hashCode()和 equals()]_ ，为了优化 `HashMap` 空间的使用，您可以调优**初始容量**和**负载因子**。\n\n- `HashMap()`: 构建一个空的哈希映像\n- `HashMap(Map m)`: 构建一个哈希映像，并且添加映像 m 的所有映射\n- `HashMap(int initialCapacity)`: 构建一个拥有特定容量的空的哈希映像\n- `HashMap(int initialCapacity, float loadFactor)`: 构建一个拥有特定容量和加载因子的空的哈希映像\n\n**TreeMap**：基于红黑树实现。`TreeMap` 没有调优选项，因为该树总处于平衡状态。\n\n- `TreeMap()`：构建一个空的映像树\n- `TreeMap(Map m)`: 构建一个映像树，并且添加映像 m 中所有元素\n- `TreeMap(Comparator c)`: 构建一个映像树，并且使用特定的比较器对关键字进行排序\n- `TreeMap(SortedMap s)`: 构建一个映像树，添加映像树 s 中所有映射，并且使用与有序映像 s 相同的比较器排序\n\n## HashMap 和 TreeMap 都是非线程安全\n\n`HashMap` 继承 `AbstractMap` 抽象类，`TreeMap` 继承自 `SortedMap` 接口。\n\n`AbstractMap` 抽象类：覆盖了 `equals()`和 `hashCode()`方法以确保两个相等映射返回相同的哈希码。**如果两个映射大小相等、包含同样的键且每个键在这两个映射中对应的值都相同，则这两个映射相等**。映射的哈希码是映射元素哈希码的总和，其中每个元素是 `Map.Entry` 接口的一个实现。因此，不论映射内部顺序如何，两个相等映射会报告相同的哈希码。\n\n`SortedMap` 接口：它用来保持键的**有序顺序**。`SortedMap` 接口为映像的视图(子集)，包括两个端点提供了访问方法。除了排序是作用于映射的键以外，处理 `SortedMap` 和处理 `SortedSet` 一样。添加到 `SortedMap` 实现类的元素必须实现 `Comparable` 接口，否则您必须给它的构造函数提供一个 `Comparator` 接口的实现。`TreeMap` 类是它的唯一一个实现。\n","slug":"java/note/HashMap 与 TreeMap","published":1,"_id":"clny08vfd000m5ovf702baqr3","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"HashMap-和-TreeMap-的实现\"><a href=\"#HashMap-和-TreeMap-的实现\" class=\"headerlink\" title=\"HashMap 和 TreeMap 的实现\"></a>HashMap 和 TreeMap 的实现</h2><p><strong>HashMap</strong>：基于<strong>哈希表</strong>实现。使用 <code>HashMap</code> 要求添加的键类明确定义了 <code>hashCode()</code>和 <code>equals()</code> <em>[可以重写 hashCode()和 equals()]</em> ，为了优化 <code>HashMap</code> 空间的使用，您可以调优<strong>初始容量</strong>和<strong>负载因子</strong>。</p>\n<ul>\n<li><code>HashMap()</code>: 构建一个空的哈希映像</li>\n<li><code>HashMap(Map m)</code>: 构建一个哈希映像，并且添加映像 m 的所有映射</li>\n<li><code>HashMap(int initialCapacity)</code>: 构建一个拥有特定容量的空的哈希映像</li>\n<li><code>HashMap(int initialCapacity, float loadFactor)</code>: 构建一个拥有特定容量和加载因子的空的哈希映像</li>\n</ul>\n<p><strong>TreeMap</strong>：基于红黑树实现。<code>TreeMap</code> 没有调优选项，因为该树总处于平衡状态。</p>\n<ul>\n<li><code>TreeMap()</code>：构建一个空的映像树</li>\n<li><code>TreeMap(Map m)</code>: 构建一个映像树，并且添加映像 m 中所有元素</li>\n<li><code>TreeMap(Comparator c)</code>: 构建一个映像树，并且使用特定的比较器对关键字进行排序</li>\n<li><code>TreeMap(SortedMap s)</code>: 构建一个映像树，添加映像树 s 中所有映射，并且使用与有序映像 s 相同的比较器排序</li>\n</ul>\n<h2 id=\"HashMap-和-TreeMap-都是非线程安全\"><a href=\"#HashMap-和-TreeMap-都是非线程安全\" class=\"headerlink\" title=\"HashMap 和 TreeMap 都是非线程安全\"></a>HashMap 和 TreeMap 都是非线程安全</h2><p><code>HashMap</code> 继承 <code>AbstractMap</code> 抽象类，<code>TreeMap</code> 继承自 <code>SortedMap</code> 接口。</p>\n<p><code>AbstractMap</code> 抽象类：覆盖了 <code>equals()</code>和 <code>hashCode()</code>方法以确保两个相等映射返回相同的哈希码。<strong>如果两个映射大小相等、包含同样的键且每个键在这两个映射中对应的值都相同，则这两个映射相等</strong>。映射的哈希码是映射元素哈希码的总和，其中每个元素是 <code>Map.Entry</code> 接口的一个实现。因此，不论映射内部顺序如何，两个相等映射会报告相同的哈希码。</p>\n<p><code>SortedMap</code> 接口：它用来保持键的<strong>有序顺序</strong>。<code>SortedMap</code> 接口为映像的视图(子集)，包括两个端点提供了访问方法。除了排序是作用于映射的键以外，处理 <code>SortedMap</code> 和处理 <code>SortedSet</code> 一样。添加到 <code>SortedMap</code> 实现类的元素必须实现 <code>Comparable</code> 接口，否则您必须给它的构造函数提供一个 <code>Comparator</code> 接口的实现。<code>TreeMap</code> 类是它的唯一一个实现。</p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}},"cover":"/img/default_cover/geomeric6.png","cover_type":"img","excerpt":"","more":"<h2 id=\"HashMap-和-TreeMap-的实现\"><a href=\"#HashMap-和-TreeMap-的实现\" class=\"headerlink\" title=\"HashMap 和 TreeMap 的实现\"></a>HashMap 和 TreeMap 的实现</h2><p><strong>HashMap</strong>：基于<strong>哈希表</strong>实现。使用 <code>HashMap</code> 要求添加的键类明确定义了 <code>hashCode()</code>和 <code>equals()</code> <em>[可以重写 hashCode()和 equals()]</em> ，为了优化 <code>HashMap</code> 空间的使用，您可以调优<strong>初始容量</strong>和<strong>负载因子</strong>。</p>\n<ul>\n<li><code>HashMap()</code>: 构建一个空的哈希映像</li>\n<li><code>HashMap(Map m)</code>: 构建一个哈希映像，并且添加映像 m 的所有映射</li>\n<li><code>HashMap(int initialCapacity)</code>: 构建一个拥有特定容量的空的哈希映像</li>\n<li><code>HashMap(int initialCapacity, float loadFactor)</code>: 构建一个拥有特定容量和加载因子的空的哈希映像</li>\n</ul>\n<p><strong>TreeMap</strong>：基于红黑树实现。<code>TreeMap</code> 没有调优选项，因为该树总处于平衡状态。</p>\n<ul>\n<li><code>TreeMap()</code>：构建一个空的映像树</li>\n<li><code>TreeMap(Map m)</code>: 构建一个映像树，并且添加映像 m 中所有元素</li>\n<li><code>TreeMap(Comparator c)</code>: 构建一个映像树，并且使用特定的比较器对关键字进行排序</li>\n<li><code>TreeMap(SortedMap s)</code>: 构建一个映像树，添加映像树 s 中所有映射，并且使用与有序映像 s 相同的比较器排序</li>\n</ul>\n<h2 id=\"HashMap-和-TreeMap-都是非线程安全\"><a href=\"#HashMap-和-TreeMap-都是非线程安全\" class=\"headerlink\" title=\"HashMap 和 TreeMap 都是非线程安全\"></a>HashMap 和 TreeMap 都是非线程安全</h2><p><code>HashMap</code> 继承 <code>AbstractMap</code> 抽象类，<code>TreeMap</code> 继承自 <code>SortedMap</code> 接口。</p>\n<p><code>AbstractMap</code> 抽象类：覆盖了 <code>equals()</code>和 <code>hashCode()</code>方法以确保两个相等映射返回相同的哈希码。<strong>如果两个映射大小相等、包含同样的键且每个键在这两个映射中对应的值都相同，则这两个映射相等</strong>。映射的哈希码是映射元素哈希码的总和，其中每个元素是 <code>Map.Entry</code> 接口的一个实现。因此，不论映射内部顺序如何，两个相等映射会报告相同的哈希码。</p>\n<p><code>SortedMap</code> 接口：它用来保持键的<strong>有序顺序</strong>。<code>SortedMap</code> 接口为映像的视图(子集)，包括两个端点提供了访问方法。除了排序是作用于映射的键以外，处理 <code>SortedMap</code> 和处理 <code>SortedSet</code> 一样。添加到 <code>SortedMap</code> 实现类的元素必须实现 <code>Comparable</code> 接口，否则您必须给它的构造函数提供一个 <code>Comparator</code> 接口的实现。<code>TreeMap</code> 类是它的唯一一个实现。</p>\n"},{"title":"cloud-init 无法调整分区大小：当 LANG 不是 en_US 时，growpart 不起作用","date":"2023-06-13T16:00:00.000Z","updated":"2025-09-24T06:00:08.736Z","keywords":["k8s","NetworkPolicy"],"copyright":false,"_content":"\n## 起因\n\n起初是想验证一下 kubevirt 动态扩展磁盘功能，发现在 kubevirt 资源定义上已经配置了 `ExpandDisks` 功能门，\n且 cephfs 的动态存储的 pvc 也已经配置了 `allowVolumeExpansion: true`，但是在 kubevirt 虚拟机中的 cloud-init 执行 `growpart` 报错，发现并没有生效。\nkubevirt 的版本是 0.56.0\ncr 资源定义如下：\n\n```yaml\napiVersion: kubevirt.io/v1\nkind: KubeVirt\nmetadata:\n    name: kubevirt\n    namespace: kubevirt\nspec:\n  ...\n  configuration:\n    developerConfiguration:\n      featureGates:\n      - LiveMigration\n      - DataVolumes\n      - ExpandDisks\n      - GPU\n    imagePullPolicy: IfNotPresent\n    permittedHostDevices:\n      pciHostDevices:\n      - externalResourceProvider: true\n        pciVendorSelector: 10DE:1DB4\n        resourceName: nvidia.com/GV100GL_TESLA_V100_PCIE_16GB\n      - externalResourceProvider: true\n        pciVendorSelector: 10DE:20F1\n        resourceName: nvidia.com/GA100_A100_PCIE_40GB\n      - externalResourceProvider: true\n        pciVendorSelector: 10DE:1EB8\n        resourceName: nvidia.com/TU104GL_TESLA_T4\n  imagePullPolicy: IfNotPresent\n    ...\n\n```\n\ncephfs 的动态存储的 pvc 的定义如下：\n\n```yaml\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: drug\n  namespace: default\nspec:\n  accessModes:\n    - ReadWriteMany\n  resources:\n    requests:\n      storage: 120Gi\n  storageClassName: csi-cephfs-sc-delete\n```\n\n## 排查\n\n经过排查，发现kubevirt 虚拟机中的 cloud-init 服务有个日志报错：\n\n![image-20230614205248005](https://jason-dong-blog-1259058668.cos.ap-nanjing.myqcloud.com/img/image-20230614205248005.png)\n\n于是 google 了一下，在 Red Hat 官网中找到了答案：\n\n![image-20230614205357544](https://jason-dong-blog-1259058668.cos.ap-nanjing.myqcloud.com/img/image-20230614205357544.png)\n\n链接地址为：https://access.redhat.com/solutions/5775351\n\n也就是说, 当虚拟机中的 `/etc/default/locale` 中的LANG 不为 `en_US`， 则 cloud-init 无法修改磁盘分区大小。。。。\n\n发现果然 `/etc/default/locale` 的 LANG 属性值不是 `en_US`, 而是：\n\n![image-20230614210156279](https://jason-dong-blog-1259058668.cos.ap-nanjing.myqcloud.com/img/image-20230614210156279.png)\n\n\n\n\n\n于是我把 `LANG` 属性改为 `en_US.UTF-8`\n\n![image-20230614210257832](https://jason-dong-blog-1259058668.cos.ap-nanjing.myqcloud.com/img/image-20230614210257832.png)\n\n最后重启虚拟机，看了下 `cloud-init` 服务，发现已经正常了。 kubevirt 虚拟机磁盘也可以正常扩容了\n\n![image-20230614210503666](https://jason-dong-blog-1259058668.cos.ap-nanjing.myqcloud.com/img/image-20230614210503666.png)\n\n \n","source":"_posts/k8s/kubevirt/cloud-init 无法调整分区大小：当 LANG 不是 en_US 时，growpart 不起作用.md","raw":"---\ntitle: cloud-init 无法调整分区大小：当 LANG 不是 en_US 时，growpart 不起作用\ndate: 2023-06-14\nupdated:\ntags:\n  - k8s\n  - kubevirt\ncategories: 容器/虚拟化\nkeywords:\n  - k8s\n  - NetworkPolicy\ncopyright: false\n---\n\n## 起因\n\n起初是想验证一下 kubevirt 动态扩展磁盘功能，发现在 kubevirt 资源定义上已经配置了 `ExpandDisks` 功能门，\n且 cephfs 的动态存储的 pvc 也已经配置了 `allowVolumeExpansion: true`，但是在 kubevirt 虚拟机中的 cloud-init 执行 `growpart` 报错，发现并没有生效。\nkubevirt 的版本是 0.56.0\ncr 资源定义如下：\n\n```yaml\napiVersion: kubevirt.io/v1\nkind: KubeVirt\nmetadata:\n    name: kubevirt\n    namespace: kubevirt\nspec:\n  ...\n  configuration:\n    developerConfiguration:\n      featureGates:\n      - LiveMigration\n      - DataVolumes\n      - ExpandDisks\n      - GPU\n    imagePullPolicy: IfNotPresent\n    permittedHostDevices:\n      pciHostDevices:\n      - externalResourceProvider: true\n        pciVendorSelector: 10DE:1DB4\n        resourceName: nvidia.com/GV100GL_TESLA_V100_PCIE_16GB\n      - externalResourceProvider: true\n        pciVendorSelector: 10DE:20F1\n        resourceName: nvidia.com/GA100_A100_PCIE_40GB\n      - externalResourceProvider: true\n        pciVendorSelector: 10DE:1EB8\n        resourceName: nvidia.com/TU104GL_TESLA_T4\n  imagePullPolicy: IfNotPresent\n    ...\n\n```\n\ncephfs 的动态存储的 pvc 的定义如下：\n\n```yaml\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: drug\n  namespace: default\nspec:\n  accessModes:\n    - ReadWriteMany\n  resources:\n    requests:\n      storage: 120Gi\n  storageClassName: csi-cephfs-sc-delete\n```\n\n## 排查\n\n经过排查，发现kubevirt 虚拟机中的 cloud-init 服务有个日志报错：\n\n![image-20230614205248005](https://jason-dong-blog-1259058668.cos.ap-nanjing.myqcloud.com/img/image-20230614205248005.png)\n\n于是 google 了一下，在 Red Hat 官网中找到了答案：\n\n![image-20230614205357544](https://jason-dong-blog-1259058668.cos.ap-nanjing.myqcloud.com/img/image-20230614205357544.png)\n\n链接地址为：https://access.redhat.com/solutions/5775351\n\n也就是说, 当虚拟机中的 `/etc/default/locale` 中的LANG 不为 `en_US`， 则 cloud-init 无法修改磁盘分区大小。。。。\n\n发现果然 `/etc/default/locale` 的 LANG 属性值不是 `en_US`, 而是：\n\n![image-20230614210156279](https://jason-dong-blog-1259058668.cos.ap-nanjing.myqcloud.com/img/image-20230614210156279.png)\n\n\n\n\n\n于是我把 `LANG` 属性改为 `en_US.UTF-8`\n\n![image-20230614210257832](https://jason-dong-blog-1259058668.cos.ap-nanjing.myqcloud.com/img/image-20230614210257832.png)\n\n最后重启虚拟机，看了下 `cloud-init` 服务，发现已经正常了。 kubevirt 虚拟机磁盘也可以正常扩容了\n\n![image-20230614210503666](https://jason-dong-blog-1259058668.cos.ap-nanjing.myqcloud.com/img/image-20230614210503666.png)\n\n \n","slug":"k8s/kubevirt/cloud-init 无法调整分区大小：当 LANG 不是 en_US 时，growpart 不起作用","published":1,"_id":"clny08vfd000q5ovfef7bgbhg","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h2><p>起初是想验证一下 kubevirt 动态扩展磁盘功能，发现在 kubevirt 资源定义上已经配置了 <code>ExpandDisks</code> 功能门，<br>且 cephfs 的动态存储的 pvc 也已经配置了 <code>allowVolumeExpansion: true</code>，但是在 kubevirt 虚拟机中的 cloud-init 执行 <code>growpart</code> 报错，发现并没有生效。<br>kubevirt 的版本是 0.56.0<br>cr 资源定义如下：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> kubevirt.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> KubeVirt\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> kubevirt\n    <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> kubevirt\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">...</span>\n  <span class=\"token key atrule\">configuration</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">developerConfiguration</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">featureGates</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> LiveMigration\n      <span class=\"token punctuation\">-</span> DataVolumes\n      <span class=\"token punctuation\">-</span> ExpandDisks\n      <span class=\"token punctuation\">-</span> GPU\n    <span class=\"token key atrule\">imagePullPolicy</span><span class=\"token punctuation\">:</span> IfNotPresent\n    <span class=\"token key atrule\">permittedHostDevices</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">pciHostDevices</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">externalResourceProvider</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n        <span class=\"token key atrule\">pciVendorSelector</span><span class=\"token punctuation\">:</span> 10DE<span class=\"token punctuation\">:</span>1DB4\n        <span class=\"token key atrule\">resourceName</span><span class=\"token punctuation\">:</span> nvidia.com/GV100GL_TESLA_V100_PCIE_16GB\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">externalResourceProvider</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n        <span class=\"token key atrule\">pciVendorSelector</span><span class=\"token punctuation\">:</span> 10DE<span class=\"token punctuation\">:</span>20F1\n        <span class=\"token key atrule\">resourceName</span><span class=\"token punctuation\">:</span> nvidia.com/GA100_A100_PCIE_40GB\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">externalResourceProvider</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n        <span class=\"token key atrule\">pciVendorSelector</span><span class=\"token punctuation\">:</span> 10DE<span class=\"token punctuation\">:</span>1EB8\n        <span class=\"token key atrule\">resourceName</span><span class=\"token punctuation\">:</span> nvidia.com/TU104GL_TESLA_T4\n  <span class=\"token key atrule\">imagePullPolicy</span><span class=\"token punctuation\">:</span> IfNotPresent\n    <span class=\"token punctuation\">...</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>cephfs 的动态存储的 pvc 的定义如下：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> PersistentVolumeClaim\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> drug\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> default\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">accessModes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> ReadWriteMany\n  <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">storage</span><span class=\"token punctuation\">:</span> 120Gi\n  <span class=\"token key atrule\">storageClassName</span><span class=\"token punctuation\">:</span> csi<span class=\"token punctuation\">-</span>cephfs<span class=\"token punctuation\">-</span>sc<span class=\"token punctuation\">-</span>delete<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"排查\"><a href=\"#排查\" class=\"headerlink\" title=\"排查\"></a>排查</h2><p>经过排查，发现kubevirt 虚拟机中的 cloud-init 服务有个日志报错：</p>\n<p><img src=\"https://jason-dong-blog-1259058668.cos.ap-nanjing.myqcloud.com/img/image-20230614205248005.png\" alt=\"image-20230614205248005\"></p>\n<p>于是 google 了一下，在 Red Hat 官网中找到了答案：</p>\n<p><img src=\"https://jason-dong-blog-1259058668.cos.ap-nanjing.myqcloud.com/img/image-20230614205357544.png\" alt=\"image-20230614205357544\"></p>\n<p>链接地址为：<a href=\"https://access.redhat.com/solutions/5775351\">https://access.redhat.com/solutions/5775351</a></p>\n<p>也就是说, 当虚拟机中的 <code>/etc/default/locale</code> 中的LANG 不为 <code>en_US</code>， 则 cloud-init 无法修改磁盘分区大小。。。。</p>\n<p>发现果然 <code>/etc/default/locale</code> 的 LANG 属性值不是 <code>en_US</code>, 而是：</p>\n<p><img src=\"https://jason-dong-blog-1259058668.cos.ap-nanjing.myqcloud.com/img/image-20230614210156279.png\" alt=\"image-20230614210156279\"></p>\n<p>于是我把 <code>LANG</code> 属性改为 <code>en_US.UTF-8</code></p>\n<p><img src=\"https://jason-dong-blog-1259058668.cos.ap-nanjing.myqcloud.com/img/image-20230614210257832.png\" alt=\"image-20230614210257832\"></p>\n<p>最后重启虚拟机，看了下 <code>cloud-init</code> 服务，发现已经正常了。 kubevirt 虚拟机磁盘也可以正常扩容了</p>\n<p><img src=\"https://jason-dong-blog-1259058668.cos.ap-nanjing.myqcloud.com/img/image-20230614210503666.png\" alt=\"image-20230614210503666\"></p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}},"cover":"/img/default_cover/geomeric8.png","cover_type":"img","excerpt":"","more":"<h2 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h2><p>起初是想验证一下 kubevirt 动态扩展磁盘功能，发现在 kubevirt 资源定义上已经配置了 <code>ExpandDisks</code> 功能门，<br>且 cephfs 的动态存储的 pvc 也已经配置了 <code>allowVolumeExpansion: true</code>，但是在 kubevirt 虚拟机中的 cloud-init 执行 <code>growpart</code> 报错，发现并没有生效。<br>kubevirt 的版本是 0.56.0<br>cr 资源定义如下：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> kubevirt.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> KubeVirt\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> kubevirt\n    <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> kubevirt\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">...</span>\n  <span class=\"token key atrule\">configuration</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">developerConfiguration</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">featureGates</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> LiveMigration\n      <span class=\"token punctuation\">-</span> DataVolumes\n      <span class=\"token punctuation\">-</span> ExpandDisks\n      <span class=\"token punctuation\">-</span> GPU\n    <span class=\"token key atrule\">imagePullPolicy</span><span class=\"token punctuation\">:</span> IfNotPresent\n    <span class=\"token key atrule\">permittedHostDevices</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">pciHostDevices</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">externalResourceProvider</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n        <span class=\"token key atrule\">pciVendorSelector</span><span class=\"token punctuation\">:</span> 10DE<span class=\"token punctuation\">:</span>1DB4\n        <span class=\"token key atrule\">resourceName</span><span class=\"token punctuation\">:</span> nvidia.com/GV100GL_TESLA_V100_PCIE_16GB\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">externalResourceProvider</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n        <span class=\"token key atrule\">pciVendorSelector</span><span class=\"token punctuation\">:</span> 10DE<span class=\"token punctuation\">:</span>20F1\n        <span class=\"token key atrule\">resourceName</span><span class=\"token punctuation\">:</span> nvidia.com/GA100_A100_PCIE_40GB\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">externalResourceProvider</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n        <span class=\"token key atrule\">pciVendorSelector</span><span class=\"token punctuation\">:</span> 10DE<span class=\"token punctuation\">:</span>1EB8\n        <span class=\"token key atrule\">resourceName</span><span class=\"token punctuation\">:</span> nvidia.com/TU104GL_TESLA_T4\n  <span class=\"token key atrule\">imagePullPolicy</span><span class=\"token punctuation\">:</span> IfNotPresent\n    <span class=\"token punctuation\">...</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>cephfs 的动态存储的 pvc 的定义如下：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> PersistentVolumeClaim\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> drug\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> default\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">accessModes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> ReadWriteMany\n  <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">storage</span><span class=\"token punctuation\">:</span> 120Gi\n  <span class=\"token key atrule\">storageClassName</span><span class=\"token punctuation\">:</span> csi<span class=\"token punctuation\">-</span>cephfs<span class=\"token punctuation\">-</span>sc<span class=\"token punctuation\">-</span>delete<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"排查\"><a href=\"#排查\" class=\"headerlink\" title=\"排查\"></a>排查</h2><p>经过排查，发现kubevirt 虚拟机中的 cloud-init 服务有个日志报错：</p>\n<p><img src=\"https://jason-dong-blog-1259058668.cos.ap-nanjing.myqcloud.com/img/image-20230614205248005.png\" alt=\"image-20230614205248005\"></p>\n<p>于是 google 了一下，在 Red Hat 官网中找到了答案：</p>\n<p><img src=\"https://jason-dong-blog-1259058668.cos.ap-nanjing.myqcloud.com/img/image-20230614205357544.png\" alt=\"image-20230614205357544\"></p>\n<p>链接地址为：<a href=\"https://access.redhat.com/solutions/5775351\">https://access.redhat.com/solutions/5775351</a></p>\n<p>也就是说, 当虚拟机中的 <code>/etc/default/locale</code> 中的LANG 不为 <code>en_US</code>， 则 cloud-init 无法修改磁盘分区大小。。。。</p>\n<p>发现果然 <code>/etc/default/locale</code> 的 LANG 属性值不是 <code>en_US</code>, 而是：</p>\n<p><img src=\"https://jason-dong-blog-1259058668.cos.ap-nanjing.myqcloud.com/img/image-20230614210156279.png\" alt=\"image-20230614210156279\"></p>\n<p>于是我把 <code>LANG</code> 属性改为 <code>en_US.UTF-8</code></p>\n<p><img src=\"https://jason-dong-blog-1259058668.cos.ap-nanjing.myqcloud.com/img/image-20230614210257832.png\" alt=\"image-20230614210257832\"></p>\n<p>最后重启虚拟机，看了下 <code>cloud-init</code> 服务，发现已经正常了。 kubevirt 虚拟机磁盘也可以正常扩容了</p>\n<p><img src=\"https://jason-dong-blog-1259058668.cos.ap-nanjing.myqcloud.com/img/image-20230614210503666.png\" alt=\"image-20230614210503666\"></p>\n"},{"title":"Java 精选面试题 (持续更新)","date":"2020-01-01T04:00:00.000Z","updated":"2025-09-24T06:00:08.733Z","keywords":"Java 面试","description":"Java 精选","copyright":false,"_content":"\n## Java 基础\n\n### 为什么 HashMap 是线程不安全的？\n\n在 jdk1.8 中，在多线程环境下，会发生数据覆盖的情况。\n\n#### jdk1.8 中 HashMap\n\n在 jdk1.8 中对 HashMap 进行了优化，在发生 hash 碰撞，不再采用头插法方式，而是直接插入链表尾部，因此不会出现环形链表的情况，但是在多线程的情况下仍然不安全，这里我们看 jdk1.8 中 HashMap 的 put 操作源码：\n\n```java\nfinal V putVal(int hash, K key, V value, boolean onlyIfAbsent,\n                   boolean evict) {\n        Node<K,V>[] tab; Node<K,V> p; int n, i;\n        if ((tab = table) == null || (n = tab.length) == 0)\n            n = (tab = resize()).length;\n        if ((p = tab[i = (n - 1) & hash]) == null) // 如果没有hash碰撞则直接插入元素\n            tab[i] = newNode(hash, key, value, null);\n        else {\n            Node<K,V> e; K k;\n            if (p.hash == hash &&\n                ((k = p.key) == key || (key != null && key.equals(k))))\n                e = p;\n            else if (p instanceof TreeNode)\n                e = ((TreeNode<K,V>)p).putTreeVal(this, tab, hash, key, value);\n            else {\n                for (int binCount = 0; ; ++binCount) {\n                    if ((e = p.next) == null) {\n                        p.next = newNode(hash, key, value, null);\n                        if (binCount >= TREEIFY_THRESHOLD - 1) // -1 for 1st\n                            treeifyBin(tab, hash);\n                        break;\n                    }\n                    if (e.hash == hash &&\n                        ((k = e.key) == key || (key != null && key.equals(k))))\n                        break;\n                    p = e;\n                }\n            }\n            if (e != null) { // existing mapping for key\n                V oldValue = e.value;\n                if (!onlyIfAbsent || oldValue == null)\n                    e.value = value;\n                afterNodeAccess(e);\n                return oldValue;\n            }\n        }\n        ++modCount;\n        if (++size > threshold)\n            resize();\n        afterNodeInsertion(evict);\n        return null;\n    }\n```\n\n这是 jdk1.8 中 HashMap 中 put 操作的主函数， 注意第 6 行代码，如果没有 hash 碰撞则会直接插入元素。如果线程 A 和线程 B 同时进行 put 操作，刚好这两条不同的数据 hash 值一样，并且该位置数据为 null，所以这线程 A、B 都会进入第 6 行代码中。\n\n假设一种情况，线程 A 进入后还未进行数据插入时挂起，而线程 B 正常执行，从而正常插入数据，然后线程 A 获取 CPU 时间片，此时线程 A 不用再进行 hash 判断了，问题出现：线程 A 会把线程 B 插入的数据给覆盖，发生线程不安全。\n\n### 单例模式一共有几种写法？\n\n大体可分为 4 类，下面分别介绍他们的基本形式、变种及特点。\n\n#### 饱汉模式\n\n饱汉是变种最多的单例模式。我们从饱汉出发，通过其变种逐渐了解实现单例模式时需要关注的问题。\n\n##### 基础的饱汉\n\n饱汉，即已经吃饱，不着急再吃，饿的时候再吃。所以他就先不初始化单例，等第一次使用的时候再初始化，即“懒加载”。\n\n```java\n// 饱汉\n// UnThreadSafe\npublic class Singleton1 {\n  private static Singleton1 singleton = null;\n  private Singleton1() {\n  }\n  public static Singleton1 getInstance() {\n    if (singleton == null) {\n      singleton = new Singleton1();\n    }\n    return singleton;\n  }\n}\n```\n\n饱汉模式的核心就是懒加载。好处是更启动速度快、节省资源，一直到实例被第一次访问，才需要初始化单例；小坏处是写起来麻烦，大坏处是线程不安全，if 语句存在竞态条件。\n\n写起来麻烦不是大问题，可读性好啊。因此，单线程环境下，基础饱汉是笔者最喜欢的写法。但多线程环境下，基础饱汉就彻底不可用了。下面的几种变种都在试图解决基础饱汉线程不安全的问题。\n\n##### 饱汉 - 变种 1\n\n最粗暴的犯法是用 synchronized 关键字修饰 getInstance()方法，这样能达到绝对的线程安全。\n\n```java\n// 饱汉\n// ThreadSafe\npublic class Singleton1_1 {\n  private static Singleton1_1 singleton = null;\n  private Singleton1_1() {\n  }\n  public synchronized static Singleton1_1 getInstance() {\n    if (singleton == null) {\n      singleton = new Singleton1_1();\n    }\n    return singleton;\n  }\n}\n```\n\n变种 1 的好处是写起来简单，且绝对线程安全；坏处是并发性能极差，事实上完全退化到了串行。单例只需要初始化一次，但就算初始化以后，synchronized 的锁也无法避开，从而 getInstance()完全变成了串行操作。性能不敏感的场景建议使用。\n\n##### 饱汉 - 变种 2\n\n变种 2 是“臭名昭著”的 DCL 1.0。\n\n针对变种 1 中单例初始化后锁仍然无法避开的问题，变种 2 在变种 1 的外层又套了一层 check，加上 synchronized 内层的 check，即所谓“双重检查锁”（Double Check Lock，简称 DCL）。\n\n```java\n// 饱汉\n// UnThreadSafe\npublic class Singleton1_2 {\n  private static Singleton1_2 singleton = null;\n\n  public int f1 = 1;   // 触发部分初始化问题\n  public int f2 = 2;\n  private Singleton1_2() {\n  }\n  public static Singleton1_2 getInstance() {\n    // may get half object\n    if (singleton == null) {\n      synchronized (Singleton1_2.class) {\n        if (singleton == null) {\n          singleton = new Singleton1_2();\n        }\n      }\n    }\n    return singleton;\n  }\n}\n```\n\n变种 2 的核心是 DCL，看起来变种 2 似乎已经达到了理想的效果：懒加载+线程安全。可惜的是，正如注释中所说，DCL 仍然是线程不安全的，由于指令重排序，你可能会得到“半个对象”，即”部分初始化“问题。详细在看完变种 3 后，可参考下面这篇文章，这里不再赘述。\n\n> https://monkeysayhi.github.io/2016/11/29/volatile关键字的作用、原理/\n\n##### 饱汉 - 变种 3\n\n变种 3 专门针对变种 2，可谓 DCL 2.0。\n\n针对变种 3 的“半个对象”问题，变种 3 在 instance 上增加了 volatile 关键字，原理见上述参考。\n\n```java\n// 饱汉\n// ThreadSafe\npublic class Singleton1_3 {\n  private static volatile Singleton1_3 singleton = null;\n\n  public int f1 = 1;   // 触发部分初始化问题\n  public int f2 = 2;\n  private Singleton1_3() {\n  }\n  public static Singleton1_3 getInstance() {\n    if (singleton == null) {\n      synchronized (Singleton1_3.class) {\n        // must be a complete instance\n        if (singleton == null) {\n          singleton = new Singleton1_3();\n        }\n      }\n    }\n    return singleton;\n  }\n}\n```\n\n多线程环境下，变种 3 更适用于性能敏感的场景。但后面我们将了解到，就算是线程安全的，还有一些办法能破坏单例。\n\n当然，还有很多方式，能通过与 volatile 类似的方式防止部分初始化。读者可自行阅读内存屏障相关内容，但面试时不建议主动装逼。\n\n#### 饿汉模式\n\n与饱汉相对，饿汉很饿，只想着尽早吃到。所以他就在最早的时机，即类加载时初始化单例，以后访问时直接返回即可。\n\n```java\n// 饿汉\n// ThreadSafe\npublic class Singleton2 {\n  private static final Singleton2 singleton = new Singleton2();\n  private Singleton2() {\n  }\n  public static Singleton2 getInstance() {\n    return singleton;\n  }\n}\n```\n\n饿汉的好处是天生的线程安全（得益于类加载机制），写起来超级简单，使用时没有延迟；坏处是有可能造成资源浪费（如果类加载后就一直不使用单例的话）。\n\n> 值得注意的时，单线程环境下，饿汉与饱汉在性能上没什么差别；但多线程环境下，由于饱汉需要加锁，饿汉的性能反而更优。\n\n#### Holder 模式\n\n我们既希望利用饿汉模式中静态变量的方便和线程安全；又希望通过懒加载规避资源浪费。Holder 模式满足了这两点要求：核心仍然是静态变量，足够方便和线程安全；通过静态的 Holder 类持有真正实例，间接实现了懒加载。\n\n```java\n// Holder模式\n// ThreadSafe\npublic class Singleton3 {\n  private static class SingletonHolder {\n    private static final Singleton3 singleton = new Singleton3();\n    private SingletonHolder() {\n    }\n  }\n  private Singleton3() {\n  }\n\n  /**\n  * 勘误：多写了个synchronized。。\n  public synchronized static Singleton3 getInstance() {\n    return SingletonHolder.singleton;\n  }\n  */\n  public static Singleton3 getInstance() {\n    return SingletonHolder.singleton;\n  }\n}\n```\n\n相对于饿汉模式，Holder 模式仅增加了一个静态内部类的成本，与饱汉的变种 3 效果相当（略优），都是比较受欢迎的实现方式。同样建议考虑。\n\n#### 枚举模式\n\n用枚举实现单例模式，相当好用，但可读性是不存在的。\n\n##### 基础的枚举\n\n将枚举的静态成员变量作为单例的实例：\n\n```java\n// 枚举\n// ThreadSafe\npublic enum Singleton4 {\n  SINGLETON;\n}\n```\n\n代码量比饿汉模式更少。但用户只能直接访问实例 Singleton4.SINGLETON——事实上，这样的访问方式作为单例使用也是恰当的，只是牺牲了静态工厂方法的优点，如无法实现懒加载。\n\n##### 丑陋但好用的语法糖\n\nJava 的枚举是一个“丑陋但好用的语法糖”。\n\n##### 枚举型单例模式的本质\n\n通过反编译打开语法糖，就看到了枚举类型的本质，简化如下：\n\n```java\n// 枚举\n// ThreadSafe\npublic class Singleton4 extends Enum<Singleton4> {\n  ...\n  public static final Singleton4 SINGLETON = new Singleton4();\n  ...\n}\n```\n\n本质上和饿汉模式相同，区别仅在于公有的静态成员变量。\n\n##### 用枚举实现一些 trick\n\n> 这一部分与单例没什么关系，可以跳过。如果选择阅读也请认清这样的事实：虽然枚举相当灵活，但如何恰当的使用枚举有一定难度。一个足够简单的典型例子是 TimeUnit 类，建议有时间耐心阅读。\n\n上面已经看到，枚举型单例的本质仍然是一个普通的类。实际上，我们可以在枚举型型单例上增加任何普通类可以完成的功能。要点在于枚举实例的初始化，可以理解为实例化了一个匿名内部类。为了更明显，我们在 Singleton4_1 中定义一个普通的私有成员变量，一个普通的公有成员方法，和一个公有的抽象成员方法，如下：\n\n```java\n// 枚举\n// ThreadSafe\npublic enum Singleton4_1 {\n  SINGLETON(\"enum is the easiest singleton pattern, but not the most readable\") {\n    public void testAbsMethod() {\n      print();\n      System.out.println(\"enum is ugly, but so flexible to make lots of trick\");\n    }\n  };\n  private String comment = null;\n  Singleton4_1(String comment) {\n    this.comment = comment;\n  }\n  public void print() {\n    System.out.println(\"comment=\" + comment);\n  }\n  abstract public void testAbsMethod();\n  public static Singleton4_1 getInstance() {\n    return SINGLETON;\n  }\n}\n```\n\n这样，枚举类 Singleton4_1 中的每一个枚举实例不仅继承了父类 Singleton4_1 的成员方法 print()，还必须实现父类 Singleton4_1 的抽象成员方法 testAbsMethod()。\n\n#### 总结\n\n上面的分析都忽略了反射和序列化的问题。通过反射或序列化，我们仍然能够访问到私有构造器，创建新的实例破坏单例模式。此时，只有枚举模式能天然防范这一问题。反射和序列化笔者还不太了解，但基本原理并不难，可以在其他模式上手动实现。\n\n下面继续忽略反射和序列化的问题，做个总结回味一下：\n\n![图片](/img/posts/java/interview/5.png)\n\n### 你能说说进程与线程的区别吗\n\n#### 两者的定义\n\n进程是具有一定独立功能的程序关于某个数据集合上的一次运行活动，进程是系统进行资源分配和调度的一个独立单位。\n\n线程是进程的一个实体，是 CPU 调度和分派的基本单位，它是比进程更小的能独立运行的基本单位.线程自己基本上不拥有系统资源，只拥有一点在运行中必不可少的资源(如程序计数器,一组寄存器和栈)，但是它可与同属一个进程的其他的线程共享进程所拥有的全部资源。\n\n#### 进程与线程的区别\n\n1. 进程是资源分配最小单位，线程是程序执行的最小单位；\n2. 进程有自己独立的地址空间，每启动一个进程，系统都会为其分配地址空间，建立数据表来维护代码段、堆栈段和数据段，线程没有独立的地址空间，它使用相同的地址空间共享数据；\n3. CPU 切换一个线程比切换进程花费小；\n4. 创建一个线程比进程开销小；\n5. 线程占用的资源要⽐进程少很多。\n6. 线程之间通信更方便，同一个进程下，线程共享全局变量，静态变量等数据，进程之间的通信需要以通信的方式（IPC）进行；（但多线程程序处理好同步与互斥是个难点）\n7. 多进程程序更安全，生命力更强，一个进程死掉不会对另一个进程造成影响（源于有独立的地址空间），多线程程序更不易维护，一个线程死掉，整个进程就死掉了（因为共享地址空间）；\n8. 进程对资源保护要求高，开销大，效率相对较低，线程资源保护要求不高，但开销小，效率高，可频繁切换；\n\n### 创建线程有几种不同的方式？你喜欢哪一种？为什么？\n\n有三种方式可以用来创建线程：\n\n- 继承 Thread 类\n- 实现 Runnable 接口\n- 应用程序可以使用 Executor 框架来创建线程池\n\n实现 Runnable 接口这种方式更受欢迎，因为这不需要继承 Thread 类。在应用设计中已经继承了别的对象的情况下，这需要多继承（而 Java 不支持多继承），只能实现接口。同时，线程池也是非常高效的，很容易实现和使用。\n\n### 概括的解释下线程的几种可用状态。\n\n**新建( new )：**新创建了一个线程对象；\n\n**可运行( runnable )：**线程对象创建后，其他线程(比如 main 线程）调用了该对象的 start ()方法。该状态的线程位于可运行线程池中，等待被线程调度选中，获 取 CPU 的使用权；\n\n**运行( running )：**可运行状态( runnable )的线程获得了 CPU 时间片（ timeslice ） ，执行程序代码；\n\n**阻塞( block )：**阻塞状态是指线程因为某种原因放弃了 CPU 使用权，也即让出了 CPU timeslice ，暂时停止运行。直到线程进入可运行( runnable )状态，才有 机会再次获得 cpu timeslice 转到运行( running )状态。\n\n阻塞的情况分三种：\n\n1. 等待阻塞：运行( running )的线程执行 o . wait ()方法， JVM 会把该线程放 入等待队列( waitting queue )中。\n2. 同步阻塞：运行( running )的线程在获取对象的同步锁时，若该同步锁被别的线程占用，则 JVM 会把该线程放入锁池( lock pool )中。\n3. 其他阻塞: 运行( running )的线程执行 Thread . sleep ( long ms )或 t . join ()方法，或者发出了 I / O 请求时， JVM 会把该线程置为阻塞状态。当 sleep ()状态超时、 join ()等待线程终止或者超时、或者 I / O 处理完毕时，线程重新转入可运行( runnable )状态。\n\n**死亡( dead )：**线程 run ()、 main () 方法执行结束，或者因异常退出了 run ()方法，则该线程结束生命周期。死亡的线程不可再次复生。\n\n### 同步方法和同步代码块的区别是什么？\n\n**区别：**\n\n- 同步方法默认用 this 或者当前类 class 对象作为锁；\n- 同步代码块可以选择以什么来加锁，比同步方法要更细颗粒度，我们可以选择只同步会发生同步问题的部分代码而不是整个方法；\n\n### 在监视器(Monitor)内部，是如何做线程同步的？程序应该做哪种级别的同步？\n\n监视器和锁在 Java 虚拟机中是一块使用的。监视器监视一块同步代码块，确保一次只有一个线程执行同步代码块。每一个监视器都和一个对象引用相关联。线程在获取锁之前不允许执行同步代码。\n\njava 还提供了显式监视器( Lock )和隐式监视器( synchronized )两种锁方案。\n\n### 什么是死锁(deadlock)？\n\n两个线程或两个以上线程都在等待对方执行完毕才能继续往下执行的时候就发生了死锁。结果就是这些线程都陷入了无限的等待中。\n\n### 如何确保 N 个线程可以访问 N 个资源同时又不导致死锁？\n\n多线程产生死锁的四个必要条件：\n\n- **互斥条件：**一个资源每次只能被一个进程使用。\n- **保持和请求条件：**一个进程因请求资源而阻塞时，对已获得资源保持不放。\n- **不可剥夺性：**进程已获得资源，在未使用完成前，不能被剥夺。\n- **循环等待条件（闭环）：**若干进程之间形成一种头尾相接的循环等待资源关系。\n\n只要破坏其中任意一个条件，就可以避免死锁\n\n一种非常简单的避免死锁的方式就是：**指定获取锁的顺序，并强制线程按照指定的顺序获取锁。**因此，如果所有的线程都是以同样的顺序加锁和释放锁，就不会出现死锁了。\n\n### Java 序列化与反序列化三连问：是什么？为什么要？如何做？\n\n#### Java 序列化与反序列化是什么？\n\nJava 序列化是指把 Java 对象转换为字节序列的过程，而 Java 反序列化是指把字节序列恢复为 Java 对象的过程：\n\n- **序列化**：对象序列化的最主要的用处就是在传递和保存对象的时候，保证对象的完整性和可传递性。序列化是把对象转换成有序字节流，以便在网络上传输或者保存在本地文件中。核心作用是对象状态的保存与重建。\n- **反序列化**：客户端从文件中或网络上获得序列化后的对象字节流，根据字节流中所保存的对象状态及描述信息，通过反序列化重建对象。\n\n#### 为什么需要序列化与反序列化？\n\n为什么要序列化，那就是说一下序列化的好处喽，序列化有什么什么优点，所以我们要序列化。\n\n**一：对象序列化可以实现分布式对象。**\n\n主要应用例如：RMI(即远程调用 Remote Method Invocation)要利用对象序列化运行远程主机上的服务，就像在本地机上运行对象时一样。\n\n**二：java 对象序列化不仅保留一个对象的数据，而且递归保存对象引用的每个对象的数据。**\n\n可以将整个对象层次写入字节流中，可以保存在文件中或在网络连接上传递。利用对象序列化可以进行对象的\"深复制\"，即复制对象本身及引用的对象本身。序列化一个对象可能得到整个对象序列。\n\n**三：序列化可以将内存中的类写入文件或数据库中。**\n\n比如：将某个类序列化后存为文件，下次读取时只需将文件中的数据反序列化就可以将原先的类还原到内存中。也可以将类序列化为流数据进行传输。\n\n总的来说就是将一个已经实例化的类转成文件存储，下次需要实例化的时候只要反序列化即可将类实例化到内存中并保留序列化时类中的所有变量和状态。\n\n**四：对象、文件、数据，有许多不同的格式，很难统一传输和保存。**\n\n序列化以后就都是字节流了，无论原来是什么东西，都能变成一样的东西，就可以进行通用的格式传输或保存，传输结束以后，要再次使用，就进行反序列化还原，这样对象还是对象，文件还是文件。\n\n#### 如何实现 Java 序列化与反序列化?\n\n首先我们要把准备要序列化类，实现 Serializabel 接口\n\n例如：我们要 Person 类里的 name 和 age 都序列化\n\n```java\nimport java.io.Serializable;\n\n\npublic class Person implements Serializable { //本类可以序列化\n\n    private String name;\n    private int age;\n\n    public Person(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String toString() {\n        return \"姓名：\" + this.name + \"，年龄\" + this.age;\n    }\n}\n```\n\n然后：我们将 name 和 age 序列化（也就是把这 2 个对象转为二进制，理解为“打碎”）\n\n```java\npackage org.lxh.SerDemo;\n\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.ObjectOutputStream;\n\n\npublic class ObjectOutputStreamDemo { //序列化\n    public static void main(String[] args) throws Exception {\n        //序列化后生成指定文件路径\n        File file = new File(\"D:\" + File.separator + \"person.ser\");\n        ObjectOutputStream oos = null;\n        //装饰流（流）\n        oos = new ObjectOutputStream(new FileOutputStream(file));\n\n        //实例化类\n        Person per = new Person(\"张三\", 30);\n        oos.writeObject(per); //把类对象序列化\n        oos.close();\n    }\n}\n```\n\n> 《Java 对象的序列化（Serialization）和反序列化详解》\n> https://blog.csdn.net/yaomingyang/article/details/79321939\n\n> 《Java 序列化的高级认识》\n> https://www.ibm.com/developerworks/cn/java/j-lo-serial/\n\n\n\n###  什么情况用ArrayList or LinkedList呢?\n\n列表（list）是元素的有序集合，也称为序列。它提供了基于元素位置的操作，有助于快速访问、添加和删除列表中特定索引位置的元素。List 接口实现了 `Collection `和 `Iterable `作为父接口。它允许存储重复值和空值，支持通过索引访问元素。\n\n#### ArrayList 和 LinkedList 的不同之处\n\n#####  增加元素到列表尾端\n\n在 `ArrayList` 中增加元素到队列尾端的代码如下：\n\n```java\npublic boolean add(E e){\n   ensureCapacity(size+1);//确保内部数组有足够的空间\n   elementData[size++]=e;//将元素加入到数组的末尾，完成添加\n   return true;      \n} \n```\n\n`ArrayList`中 `add()` 方法的性能决定于`ensureCapacity()`方法。`ensureCapacity()`的实现如下：\n\n```java\npublic vod ensureCapacity(int minCapacity){\n  modCount++;\n  int oldCapacity=elementData.length;\n  if(minCapacity>oldCapacity){    //如果数组容量不足，进行扩容\n      Object[] oldData=elementData;\n      int newCapacity=(oldCapacity*3)/2+1;  //扩容到原始容量的1.5倍\n      if(newCapacitty<minCapacity)   //如果新容量小于最小需要的容量，则使用最小\n                                                    //需要的容量大小\n         newCapacity=minCapacity ;  //进行扩容的数组复制\n         elementData=Arrays.copyof(elementData,newCapacity);\n  }\n}\n```\n\n可以看到，只要`ArrayList`的当前容量足够大，`a  dd()`操作的效率非常高的。只有当`ArrayList`对容量的需求超出当前数组大小时，才需要进行扩容。扩容的过程中，会进行大量的数组复制操作。而数组复制时，最终将调用`System.arraycopy()`方法，因此`add()`操作的效率还是相当高的。\n\n`LinkedList` 的`add()`操作实现如下，它也将任意元素增加到队列的尾端：\n\n```java\npublic boolean add(E e){\n   addBefore(e,header);//将元素增加到header的前面\n   return true;\n}\n```\n\n其中`addBefore()`的方法实现如下：\n\n```java\nprivate Entry<E> addBefore(E e,Entry<E> entry){\n     Entry<E> newEntry = new Entry<E>(e,entry,entry.previous);\n     newEntry.provious.next=newEntry;\n     newEntry.next.previous=newEntry;\n     size++;\n     modCount++;\n     return newEntry;\n}\n```\n\n可见，**LinkeList由于使用了链表的结构，因此不需要维护容量的大小。从这点上说，它比ArrayList有一定的性能优势，然而，每次的元素增加都需要新建一个Entry对象，并进行更多的赋值操作。在频繁的系统调用中，对性能会产生一定的影响。**\n\n##### 增加元素到列表任意位置\n\n除了提供元素到List的尾端，List接口还提供了在任意位置插入元素的方法：`void add(int index,E element);`\n\n**由于实现的不同，ArrayList和LinkedList在这个方法上存在一定的性能差异，由于ArrayList是基于数组实现的，而数组是一块连续的内存空间，如果在数组的任意位置插入元素，必然导致在该位置后的所有元素需要重新排列，因此，其效率相对会比较低。**\n\n以下代码是ArrayList中的实现：\n\n```java\npublic void add(int index,E element){\n   if(index>size||index<0)\n      throw new IndexOutOfBoundsException(\n        \"Index:\"+index+\",size: \"+size);\n         ensureCapacity(size+1);\n         System.arraycopy(elementData,index,elementData,index+1,size-index);\n         elementData[index] = element;\n         size++;\n}\n```\n\n可以看到每次插入操作，都会进行一次数组复制。而这个操作在增加元素到List尾端的时候是不存在的，大量的数组重组操作会导致系统性能低下。并且插入元素在List中的位置越是靠前，数组重组的开销也越大。\n\n而LinkedList此时显示了优势：\n\n```java\npublic void add(int index,E element){\n   addBefore(element,(index==size?header:entry(index)));\n}\n```\n\n可见，**对LinkedList来说，在List的尾端插入数据与在任意位置插入数据是一样的，不会因为插入的位置靠前而导致插入的方法性能降低。**\n\n##### 删除任意位置元素\n\n对于元素的删除，List接口提供了在任意位置删除元素的方法：\n\n```java\npublic E remove(int index);\n```\n\n对ArrayList来说，remove()方法和add()方法是雷同的。在任意位置移除元素后，都要进行数组的重组。ArrayList的实现如下：\n\n```java\npublic E remove(int index){\n   RangeCheck(index);\n   modCount++;\n   E oldValue=(E) elementData[index];\n  int numMoved=size-index-1;\n  if(numMoved>0)\n     System.arraycopy(elementData,index+1,elementData,index,numMoved);\n     elementData[--size]=null;\n     return oldValue;\n}\n```\n\n可以看到，**在ArrayList的每一次有效的元素删除操作后，都要进行数组的重组。并且删除的位置越靠前，数组重组时的开销越大。**\n\n```java\npublic E remove(int index){\n  return remove(entry(index));         \n}\nprivate Entry<E> entry(int index){\n  if(index<0 || index>=size)\n      throw new IndexOutBoundsException(\"Index:\"+index+\",size:\"+size);\n      Entry<E> e= header;\n      if(index<(size>>1)){//要删除的元素位于前半段\n         for(int i=0;i<=index;i++)\n             e=e.next;\n     }else{\n         for(int i=size;i>index;i--)\n             e=e.previous;\n     }\n         return e;\n}\n```\n\n在LinkedList的实现中，首先要通过循环找到要删除的元素。如果要删除的位置处于List的前半段，则从前往后找；若其位置处于后半段，则从后往前找。因此无论要删除较为靠前或者靠后的元素都是非常高效的；但要移除List中间的元素却几乎要遍历完半个List，在List拥有大量元素的情况下，效率很低。\n\n##### 容量参数\n\n容量参数是ArrayList和Vector等基于数组的List的特有性能参数。它表示初始化的数组大小。当ArrayList所存储的元素数量超过其已有大小时。它便会进行扩容，数组的扩容会导致整个数组进行一次内存复制。因此合理的数组大小有助于减少数组扩容的次数，从而提高系统性能。\n\n```java\npublic  ArrayList(){\n  this(10);  \n}\npublic ArrayList (int initialCapacity){\n   super();\n   if(initialCapacity<0)\n       throw new IllegalArgumentException(\"Illegal Capacity:\"+initialCapacity)\n      this.elementData=new Object[initialCapacity];\n}\n```\n\nArrayList提供了一个可以制定初始数组大小的构造函数：\n\n```java\npublic ArrayList(int initialCapacity) \n```\n\n现以构造一个拥有100万元素的List为例，当使用默认初始化大小时，其消耗的相对时间为125ms左右，当直接制定数组大小为100万时，构造相同的ArrayList仅相对耗时16ms。\n\n##### 遍历列表\n\n遍历列表操作是最常用的列表操作之一，在JDK1.5之后，至少有3中常用的列表遍历方式：\n\n> - forEach操作\n> - 迭代器\n> - for循环。\n\n```java\nString tmp;\nlong start=System.currentTimeMills();    //ForEach \nfor(String s:list){\n    tmp=s;\n}\nSystem.out.println(\"foreach spend:\"+(System.currentTimeMills()-start));\nstart = System.currentTimeMills();\nfor(Iterator<String> it=list.iterator();it.hasNext();){    \n   tmp=it.next();\n}\nSystem.out.println(\"Iterator spend;\"+(System.currentTimeMills()-start));\nstart=System.currentTimeMills();\nint size=;list.size();\nfor(int i=0;i<size;i++){                     \n    tmp=list.get(i);\n}\nSystem.out.println(\"for spend;\"+(System.currentTimeMills()-start));\n```\n\n构造一个拥有100万数据的ArrayList和等价的LinkedList，使用以上代码进行测试，测试结果：\n\n![图片](https://jason-dong-blog-1259058668.cos.ap-nanjing.myqcloud.com/img/11.png)\n\n可以看到，**最简便的ForEach循环并没有很好的性能表现，综合性能不如普通的迭代器，而是用for循环通过随机访问遍历列表时，ArrayList表项很好，但是LinkedList的表现却无法让人接受，甚至没有办法等待程序的结束。这是因为对LinkedList进行随机访问时，总会进行一次列表的遍历操作。性能非常差，应避免使用。**\n\n\n\n## Java 进阶\n\n### 你能说说 Spring 框架中 Bean 的生命周期吗？\n\n1. 实例化一个 `Bean` , 也就是我们常说的 `new`；\n2. 按照 `Spring` 上下文对实例化的 `Bean` 进行配置－－也就是 `IOC` 注入；\n3. 如果这个 `Bean` 已经实现了 `BeanNameAware` 接口，会调用它实现的 `setBeanName(String)`方法，此处传递的就是 `Spring` 配置文件中 `Bean` 的 `id` 值\n4. 如果这个 `Bean` 已经实现了 `BeanFactoryAware` 接口，会调用它实现的 `setBeanFactory(setBeanFactory(BeanFactory)`传递的是 Spring 工厂自身（可以用这个方式来获取其它 Bean，只需在 Spring 配置文件中配置一个普通的 Bean 就可以）；\n5. 如果这个 `Bean` 已经实现了 `ApplicationContextAware` 接口，会调用 `setApplicationContext(ApplicationContext)`方法，传入 Spring 上下文（同样这个方式也可以实现步骤 4 的内容，但比 4 更好，因为 `ApplicationContext` 是 `BeanFactory` 的子接口，有更多的实现方法）；\n6. 如果这个 `Bean` 关联了 `BeanPostProcessor` 接口，将会调用 `postProcessBeforeInitialization(Object obj, String s)`方法，`BeanPostProcessor` 经常被用作是 `Bean` 内容的更改，并且由于这个是在 `Bean` 初始化结束时调用那个的方法，也可以被应用于内存或缓存技术；\n7. 如果 `Bean` 在 `Spring` 配置文件中配置了 `init-method` 属性会自动调用其配置的初始化方法。\n8. 如果这个 `Bean` 关联了 `BeanPostProcessor` 接口，将会调用 `postProcessAfterInitialization(Object obj, String s)`方法、；\n\n   > 注：以上工作完成以后就可以应用这个 `Bean` 了，那这个 `Bean` 是一个 `Singleton` 的，所以一般情况下我们调用同一个 `id` 的 `Bean` 会是在内容地址相同的实例，当然在 `Spring` 配置文件中也可以配置非 `Singleton`，这里我们不做赘述。\n\n9. 当 `Bean` 不再需要时，会经过清理阶段，如果 `Bean` 实现了 `DisposableBean` 这个接口，会调用那个其实现的 `destroy()`方法；\n10. 最后，如果这个 `Bean` 的 `Spring` 配置中配置了 `destroy-method` 属性，会自动调用其配置的销毁方法。\n\n### Spring，SpringMVC，SpringBoot，SpringCloud 有什么区别和联系？\n\n#### 简单介绍\n\n- `Spring` 是一个轻量级的控制反转(`IoC`)和面向切面(`AOP`)的容器框架。Spring 使你能够编写更干净、更可管理、并且更易于测试的代码。\n- `Spring MVC` 是 Spring 的一个模块，一个 web 框架。通过 `Dispatcher Servlet`, `ModelAndView` 和 `View Resolver`，开发 web 应用变得很容易。主要针对的是网站应用程序或者服务开发——`URL 路由`、`Session`、`模板引擎`、`静态 Web 资源`等等。\n- `Spring` 配置复杂，繁琐，所以推出了 `Spring boot`，约定优于配置，简化了 spring 的配置流程。\n- `Spring Cloud` 构建于 `Spring Boot` 之上，是一个关注全局的服务治理框架。\n\n#### Spring VS SpringMVC\n\n- `Spring` 是一个一站式的轻量级的 java 开发框架，核心是`控制反转（IOC）`和`面向切面（AOP）`，针对于开发的 WEB 层 (`springMvc`)、业务层(`Ioc`)、持久层(`jdbcTemplate`)等都提供了多种配置解决方案；\n- `SpringMVC` 是 `Spring` 基础之上的一个 `MVC` 框架，主要处理 `web` 开发的路径映射和视图渲染，属于 `Spring` 框架中 `WEB` 层开发的一部分；\n\n#### SpringMVC VS SpringBoot\n\n- `SpringMVC`属于一个企业 WEB 开发的 MVC 框架，涵盖面包括前端**视图开发**、**文件配置**、**后台接口逻辑开发**等，XML、config 等配置相对比较繁琐复杂；\n- `SpringBoot`框架相对于 SpringMVC 框架来说，更**专注于开发微服务后台接口**，不开发前端视图；\n\n#### SpringBoot VS SpringCloud\n\n- `SpringBoot` 使用了**默认大于配置**的理念，集成了快速开发的 `Spring` 多个插件，同时**自动过滤不需要配置的多余的插件**，**简化了项目的开发配置流程**，一定程度上**取消 xml 配置**，是一套**快速配置开发的脚手架**，能快速开发**单个微服务**；\n- `SpringCloud` 大部分的功能插件都是基于 `SpringBoot` 去实现的，`SpringCloud` 关注于**全局的微服务整合和管理**，将多个 `SpringBoot` 单体微服务进行整合以及管理；`SpringCloud` 依赖于 `SpringBoot` 开发，而 - `SpringBoot` 可以独立开发；\n\n#### 总结\n\n- Spring 是核心，提供了基础功能；\n- Spring MVC 是基于 Spring 的一个 MVC 框架 ；\n- Spring Boot 是为简化 Spring 配置的快速开发整合包；\n- Spring Cloud 是构建在 Spring Boot 之上的服务治理框架。\n\n### 如何保证消息的顺序性？\n\n#### 面试官心理分析\n\n其实这个也是用 MQ 的时候必问的话题，第一看看你了不了解顺序这个事儿？第二看看你有没有办法保证消息是有顺序的？这是生产系统中常见的问题。\n\n#### 面试题剖析\n\n我举个例子，我们以前做过一个 mysql `binlog` 同步的系统，压力还是非常大的，日同步数据要达到上亿，就是说数据从一个 mysql 库原封不动地同步到另一个 mysql 库里面去（mysql -> mysql）。常见的一点在于说比如大数据 team，就需要同步一个 mysql 库过来，对公司的业务系统的数据做各种复杂的操作。\n\n你在 mysql 里增删改一条数据，对应出来了增删改 3 条 `binlog` 日志，接着这三条 `binlog` 发送到 MQ 里面，再消费出来依次执行，起码得保证人家是按照顺序来的吧？不然本来是：增加、修改、删除；你楞是换了顺序给执行成删除、修改、增加，不全错了么。\n\n本来这个数据同步过来，应该最后这个数据被删除了；结果你搞错了这个顺序，最后这个数据保留下来了，数据同步就出错了。\n\n先看看顺序会错乱的俩场景：\n\n- **RabbitMQ**：一个 queue，多个 consumer。比如，生产者向 RabbitMQ 里发送了三条数据，顺序依次是 data1/data2/data3，压入的是 RabbitMQ 的一个内存队列。有三个消费者分别从 MQ 中消费这三条数据中的一条，结果消费者 2 先执行完操作，把 data2 存入数据库，然后是 data1/data3。这不明显乱了。\n\n![图片](/img/posts/java/interview/1.png)\n\n- **Kafka**：比如说我们建了一个 topic，有三个 partition。生产者在写的时候，其实可以指定一个 key，比如说我们指定了某个订单 id 作为 key，那么这个订单相关的数据，一定会被分发到同一个 partition 中去，而且这个 partition 中的数据一定是有顺序的。\n\n  消费者从 partition 中取出来数据的时候，也一定是有顺序的。到这里，顺序还是 ok 的，没有错乱。接着，我们在消费者里可能会搞**多个线程来并发处理消息**。因为如果消费者是单线程消费处理，而处理比较耗时的话，比如处理一条消息耗时几十 ms，那么 1 秒钟只能处理几十条消息，这吞吐量太低了。而多个线程并发跑的话，顺序可能就乱掉了。\n\n![图片](/img/posts/java/interview/2.png)\n\n#### 解决方案\n\n#### RabbitMQ\n\n拆分多个 queue，每个 queue 一个 consumer，就是多一些 queue 而已，确实是麻烦点；或者就一个 queue 但是对应一个 consumer，然后这个 consumer 内部用内存队列做排队，然后分发给底层不同的 worker 来处理。\n\n![图片](/img/posts/java/interview/3.png)\n\n#### Kafka\n\n- 一个 topic，一个 partition，一个 consumer，内部单线程消费，单线程吞吐量太低，一般不会用这个。\n- 写 N 个内存 queue，具有相同 key 的数据都到同一个内存 queue；然后对于 N 个线程，每个线程分别消费一个内存 queue 即可，这样就能保证顺序性。\n\n![图片](/img/posts/java/interview/4.png)\n\n\n## Redis\n\n### Redis 是如何实现分布式锁的？\n\n分布式锁常见的三种实现方式：\n\n1. 数据库乐观锁；\n2. 基于 Redis 的分布式锁；\n3. 基于 ZooKeeper 的分布式锁。\n\n本面试考点是，你对 Redis 使用熟悉吗？Redis 中是如何实现分布式锁的。\n\n#### 要点\n\nRedis 要实现分布式锁，以下条件应该得到满足\n\n#### 互斥性\n\n- 在任意时刻，只有一个客户端能持有锁。\n\n#### 不能死锁\n\n- 客户端在持有锁的期间崩溃而没有主动解锁，也能保证后续其他客户端能加锁。\n\n#### 容错性\n\n- 只要大部分的 Redis 节点正常运行，客户端就可以加锁和解锁。\n\n#### 实现\n\n可以直接通过 `set key value px milliseconds nx` 命令实现加锁， 通过 Lua 脚本实现解锁。\n\n```lua\n//获取锁（unique_value可以是UUID等）\nSET resource_name unique_value NX PX  30000\n\n//释放锁（lua脚本中，一定要比较value，防止误解锁）\nif redis.call(\"get\",KEYS[1]) == ARGV[1] then\n    return redis.call(\"del\",KEYS[1])\nelse\n    return 0\nend\n```\n\n#### 代码解释\n\n- set 命令要用 `set key value px milliseconds nx`，替代 `setnx + expire` 需要分两次执行命令的方式，保证了原子性，\n- value 要具有唯一性，可以使用`UUID.randomUUID().toString()`方法生成，用来标识这把锁是属于哪个请求加的，在解锁的时候就可以有依据；\n- 释放锁时要验证 value 值，防止误解锁；\n- 通过 Lua 脚本来避免 Check And Set 模型的并发问题，因为在释放锁的时候因为涉及到多个 Redis 操作 （利用了 eval 命令执行 Lua 脚本的原子性）；\n\n#### 加锁代码分析\n\n首先，set()加入了 NX 参数，可以保证如果已有 key 存在，则函数不会调用成功，也就是只有一个客户端能持有锁，满足互斥性。其次，由于我们对锁设置了过期时间，即使锁的持有者后续发生崩溃而没有解锁，锁也会因为到了过期时间而自动解锁（即 key 被删除），不会发生死锁。最后，因为我们将 value 赋值为 requestId，用来标识这把锁是属于哪个请求加的，那么在客户端在解锁的时候就可以进行校验是否是同一个客户端。\n\n#### 解锁代码分析\n\n将 Lua 代码传到 jedis.eval()方法里，并使参数 KEYS[1]赋值为 lockKey，ARGV[1]赋值为 requestId。在执行的时候，首先会获取锁对应的 value 值，检查是否与 requestId 相等，如果相等则解锁（删除 key）。\n\n#### 存在的风险\n\n如果存储锁对应 key 的那个节点挂了的话，就可能存在丢失锁的风险，导致出现多个客户端持有锁的情况，这样就不能实现资源的独享了。\n\n1. 客户端 A 从 master 获取到锁\n2. 在 master 将锁同步到 slave 之前，master 宕掉了（Redis 的主从同步通常是异步的）。\n   主从切换，slave 节点被晋级为 master 节点\n3. 客户端 B 取得了同一个资源被客户端 A 已经获取到的另外一个锁。导致存在同一时刻存不止一个线程获取到锁的情况。\n\n#### redlock 算法出现\n\n这个场景是假设有一个 redis cluster，有 5 个 redis master 实例。然后执行如下步骤获取一把锁：\n\n1. 获取当前时间戳，单位是毫秒；\n2. 跟上面类似，轮流尝试在每个 master 节点上创建锁，过期时间较短，一般就几十毫秒；\n3. 尝试在大多数节点上建立一个锁，比如 5 个节点就要求是 3 个节点 n / 2 + 1；\n4. 客户端计算建立好锁的时间，如果建立锁的时间小于超时时间，就算建立成功了；\n5. 要是锁建立失败了，那么就依次之前建立过的锁删除；\n6. 只要别人建立了一把分布式锁，你就得不断轮询去尝试获取锁。\n\n![图片](/img/posts/java/interview/6.png)\n\nRedis 官方给出了以上两种基于 Redis 实现分布式锁的方法，详细说明可以查看：\n\n> https://redis.io/topics/distlock 。\n\n#### Redisson 实现\n\nRedisson 是一个在 Redis 的基础上实现的 Java 驻内存数据网格（In-Memory Data Grid）。它不仅提供了一系列的分布式的 Java 常用对象，还实现了可重入锁（Reentrant Lock）、公平锁（Fair Lock、联锁（MultiLock）、 红锁（RedLock）、 读写锁（ReadWriteLock）等，还提供了许多分布式服务。\n\nRedisson 提供了使用 Redis 的最简单和最便捷的方法。Redisson 的宗旨是促进使用者对 Redis 的关注分离（Separation of Concern），从而让使用者能够将精力更集中地放在处理业务逻辑上。\n\n**Redisson 分布式重入锁用法**\n\nRedisson 支持单点模式、主从模式、哨兵模式、集群模式，这里以单点模式为例：\n\n```lua\n// 1.构造redisson实现分布式锁必要的Config\nConfig config = new Config();\nconfig.useSingleServer().setAddress(\"redis://127.0.0.1:5379\").setPassword(\"123456\").setDatabase(0);\n// 2.构造RedissonClient\nRedissonClient redissonClient = Redisson.create(config);\n// 3.获取锁对象实例（无法保证是按线程的顺序获取到）\nRLock rLock = redissonClient.getLock(lockKey);\ntry {\n    /**\n     * 4.尝试获取锁\n     * waitTimeout 尝试获取锁的最大等待时间，超过这个值，则认为获取锁失败\n     * leaseTime   锁的持有时间,超过这个时间锁会自动失效（值应设置为大于业务处理的时间，确保在锁有效期内业务能处理完）\n     */\n    boolean res = rLock.tryLock((long)waitTimeout, (long)leaseTime, TimeUnit.SECONDS);\n    if (res) {\n        //成功获得锁，在这里处理业务\n    }\n} catch (Exception e) {\n    throw new RuntimeException(\"aquire lock fail\");\n}finally{\n    //无论如何, 最后都要解锁\n    rLock.unlock();\n}\n```\n\n加锁流程图\n\n![图片](/img/posts/java/interview/7.png)\n\n解锁流程图\n\n![图片](/img/posts/java/interview/8.png)\n\n我们可以看到，RedissonLock 是可重入的，并且考虑了失败重试，可以设置锁的最大等待时间， 在实现上也做了一些优化，减少了无效的锁申请，提升了资源的利用率。\n\n需要特别注意的是，RedissonLock 同样没有解决 节点挂掉的时候，存在丢失锁的风险的问题。而现实情况是有一些场景无法容忍的，所以 Redisson 提供了实现了 redlock 算法的 RedissonRedLock，RedissonRedLock 真正解决了单点失败的问题，代价是需要额外的为 RedissonRedLock 搭建 Redis 环境。\n\n所以，如果业务场景可以容忍这种小概率的错误，则推荐使用 RedissonLock， 如果无法容忍，则推荐使用 RedissonRedLock。\n\n### Redis 面试常见问答\n\n#### 什么是缓存雪崩？怎么解决？\n\n![图片](/img/posts/java/interview/9.png)\n\n通常，我们会使用缓存用于缓冲对 DB 的冲击，如果缓存宕机，所有请求将直接打在 DB，造成 DB 宕机——从而导致整个系统宕机。\n\n**如何解决呢？**\n\n![图片](/img/posts/java/interview/10.png)\n\n**2 种策略（同时使用）：**\n\n- 对缓存做高可用，防止缓存宕机\n- 使用断路器，如果缓存宕机，为了防止系统全部宕机，限制部分流量进入 DB，保证部分可用，其余的请求返回断路器的默认值。\n\n#### 什么是缓存穿透？怎么解决？\n\n**解释 1：**缓存查询一个没有的 key，同时数据库也没有，如果黑客大量的使用这种方式，那么就会导致 DB 宕机。\n\n**解决方案：**我们可以使用一个默认值来防止，例如，当访问一个不存在的 key，然后再去访问数据库，还是没有，那么就在缓存里放一个占位符，下次来的时候，检查这个占位符，如果发生时占位符，就不去数据库查询了，防止 DB 宕机。\n\n**解释 2：**大量请求查询一个刚刚失效的 key，导致 DB 压力倍增，可能导致宕机，但实际上，查询的都是相同的数据。\n\n**解决方案：**可以在这些请求代码加上双重检查锁。但是那个阶段的请求会变慢。不过总比 DB 宕机好。\n\n#### 什么是缓存并发竞争？怎么解决？\n\n**解释：**多个客户端写一个 key，如果顺序错了，数据就不对了。但是顺序我们无法控制。\n\n**解决方案：**使用分布式锁，例如 zk，同时加入数据的时间戳。同一时刻，只有抢到锁的客户端才能写入，同时，写入时，比较当前数据的时间戳和缓存中数据的时间戳。\n\n####什么是缓存和数据库双写不一致？怎么解决？\n\n解释：连续写数据库和缓存，但是操作期间，出现并发了，数据不一致了。\n\n通常，更新缓存和数据库有以下几种顺序：\n\n- 先更新数据库，再更新缓存。\n- 先删缓存，再更新数据库。\n- 先更新数据库，再删除缓存。\n\n_三种方式的优劣来看一下：_\n\n#### 先更新数据库，再更新缓存\n\n这么做的问题是：当有 2 个请求同时更新数据，那么如果不使用分布式锁，将无法控制最后缓存的值到底是多少。也就是并发写的时候有问题。\n\n#### 先删缓存，Redis 面试常见问答再更新数据库\n\n这么做的问题：如果在删除缓存后，有客户端读数据，将可能读到旧数据，并有可能设置到缓存中，导致缓存中的数据一直是老数据。\n\n有 2 种解决方案：\n\n- 使用“双删”，即删更删，最后一步的删除作为异步操作，就是防止有客户端读取的时候设置了旧值。\n- 使用队列，当这个 key 不存在时，将其放入队列，串行执行，必须等到更新数据库完毕才能读取数据。\n\n总的来讲，比较麻烦。\n\n#### 先更新数据库，再删除缓存\n\n这个实际是常用的方案，但是有很多人不知道，这里介绍一下，这个叫 Cache Aside Pattern，老外发明的。如果先更新数据库，再删除缓存，那么就会出现更新数据库之前有瞬间数据不是很及时。\n\n同时，如果在更新之前，缓存刚好失效了，读客户端有可能读到旧值，然后在写客户端删除结束后再次设置了旧值，非常巧合的情况。\n\n有 2 个前提条件：\n\n- 缓存在写之前的时候失效，同时，在写客户度删除操作结束后，放置旧数据 —— 也就是读比写慢。\n- 设置有的写操作还会锁表\n\n所以，这个很难出现，但是如果出现了怎么办？使用双删！！！记录更新期间有没有客户端读数据库，如果有，在更新完数据库之后，执行延迟删除。\n还有一种可能，如果执行更新数据库，准备执行删除缓存时，服务挂了，执行删除失败怎么办？？？\n这就坑了！！！不过可以通过订阅数据库的 binlog 来删除。\n\n### 谈谈 Redis 的过期策略\n\n在日常开发中，我们使用 Redis 存储 key 时通常会设置一个过期时间，但是 Redis 是怎么删除过期的 key，而且 Redis 是单线程的，删除 key 会不会造成阻塞。要搞清楚这些，就要了解 Redis 的过期策略和内存淘汰机制。\n\n**Redis 采用的是定期删除 + 懒惰删除策略。**\n\n#### 定期删除策略\n\nRedis 会将每个设置了过期时间的 key 放入到一个独立的字典中，默认每 100ms 进行一次过期扫描：\n\n1. 随机抽取 20 个 key\n2. 删除这 20 个 key 中过期的 key\n3. 如果过期的 key 比例超过 1/4，就重复步骤 1，继续删除。\n\n**为什不扫描所有的 key？**\n\nRedis 是单线程，全部扫描岂不是卡死了。而且为了防止每次扫描过期的 key 比例都超过 1/4，导致不停循环卡死线程，Redis 为每次扫描添加了上限时间，默认是 25ms。\n\n如果客户端将超时时间设置的比较短，比如 10ms，那么就会出现大量的链接因为超时而关闭，业务端就会出现很多异常。而且这时你还无法从 Redis 的 slowlog 中看到慢查询记录，因为慢查询指的是逻辑处理过程慢，不包含等待时间。\n\n如果在同一时间出现大面积 key 过期，Redis 循环多次扫描过期词典，直到过期的 key 比例小于 1/4。这会导致卡顿，而且在高并发的情况下，可能会导致缓存雪崩。\n\n**为什么 Redis 为每次扫描添的上限时间是 25ms，还会出现上面的情况？**\n\n因为 Redis 是单线程，每个请求处理都需要排队，而且由于 Redis 每次扫描都是 25ms，也就是每个请求最多 25ms，100 个请求就是 2500ms。\n\n如果有大批量的 key 过期，要给过期时间设置一个随机范围，而不宜全部在同一时间过期，分散过期处理的压力。\n\n#### 从库的过期策略\n\n从库不会进行过期扫描，从库对过期的处理是被动的。主库在 key 到期时，会在 AOF 文件里增加一条 del 指令，同步到所有的从库，从库通过执行这条 del 指令来删除过期的 key。\n\n因为指令同步是异步进行的，所以主库过期的 key 的 del 指令没有及时同步到从库的话，会出现主从数据的不一致，主库没有的数据在从库里还存在。\n\n#### 懒惰删除策略\n\n**Redis 为什么要懒惰删除(lazy free)？**\n\n删除指令 del 会直接释放对象的内存，大部分情况下，这个指令非常快，没有明显延迟。不过如果删除的 key 是一个非常大的对象，比如一个包含了千万元素的 hash，又或者在使用 FLUSHDB 和 FLUSHALL 删除包含大量键的数据库时，那么删除操作就会导致单线程卡顿。\n\nredis 4.0 引入了 lazyfree 的机制，它可以将删除键或数据库的操作放在后台线程里执行， 从而尽可能地避免服务器阻塞。\n\n#### unlink\n\nunlink 指令，它能对删除操作进行懒处理，丢给后台线程来异步回收内存。\n\n```bash\n> unlink key\nOK\n```\n\n#### flush\n\nflushdb 和 flushall 指令，用来清空数据库，这也是极其缓慢的操作。Redis 4.0 同样给这两个指令也带来了异步化，在指令后面增加 async 参数就可以将整棵大树连根拔起，扔给后台线程慢慢焚烧。\n\n```bash\n> flushall async\nOK\n```\n\n#### 异步队列\n\n主线程将对象的引用从「大树」中摘除后，会将这个 key 的内存回收操作包装成一个任务，塞进异步任务队列，后台线程会从这个异步队列中取任务。任务队列被主线程和异步线程同时操作，所以必须是一个线程安全的队列。\n\n不是所有的 unlink 操作都会延后处理，如果对应 key 所占用的内存很小，延后处理就没有必要了，这时候 Redis 会将对应的 key 内存立即回收，跟 del 指令一样。\n\n#### 更多异步删除点\n\nRedis 回收内存除了 del 指令和 flush 之外，还会存在于在 key 的过期、LRU 淘汰、rename 指令以及从库全量同步时接受完 rdb 文件后会立即进行的 flush 操作。\n\nRedis4.0 为这些删除点也带来了异步删除机制，打开这些点需要额外的配置选项。\n\n- slave-lazy-flush 从库接受完 rdb 文件后的 flush 操作\n- lazyfree-lazy-eviction 内存达到 maxmemory 时进行淘汰\n- lazyfree-lazy-expire key 过期删除\n- lazyfree-lazy-server-del rename 指令删除 destKey\n\n#### 内存淘汰机制\n\nRedis 的内存占用会越来越高。Redis 为了限制最大使用内存，提供了 redis.conf 中的\n配置参数 maxmemory。当内存超出 maxmemory，**Redis 提供了几种内存淘汰机制让用户选择，配置 maxmemory-policy：**\n\n- **noeviction：**当内存超出 maxmemory，写入请求会报错，但是删除和读请求可以继续。（使用这个策略，疯了吧）\n- **allkeys-lru：**当内存超出 maxmemory，在所有的 key 中，移除最少使用的 key。只把 Redis 既当缓存是使用这种策略。（推荐）。\n- **allkeys-random：**当内存超出 maxmemory，在所有的 key 中，随机移除某个 key。（应该没人用吧）\n- **volatile-lru：**当内存超出 maxmemory，在设置了过期时间 key 的字典中，移除最少使用的 key。把 Redis 既当缓存，又做持久化的时候使用这种策略。\n- **volatile-random：**当内存超出 maxmemory，在设置了过期时间 key 的字典中，随机移除某个 key。\n- **volatile-ttl：**当内存超出 maxmemory，在设置了过期时间 key 的字典中，优先移除 ttl 小的。\n\n#### LRU 算法\n\n实现 LRU 算法除了需要 key/value 字典外，还需要附加一个链表，链表中的元素按照一定的顺序进行排列。当空间满的时候，会踢掉链表尾部的元素。当字典的某个元素被访问时，它在链表中的位置会被移动到表头。所以链表的元素排列顺序就是元素最近被访问的时间顺序。\n\n使用 Python 的 OrderedDict(双向链表 + 字典) 来实现一个简单的 LRU 算法：\n\n```python\nfrom collections import OrderedDict\n\nclass LRUDict(OrderedDict):\n\n    def __init__(self, capacity):\n        self.capacity = capacity\n        self.items = OrderedDict()\n\n    def __setitem__(self, key, value):\n        old_value = self.items.get(key)\n        if old_value is not None:\n            self.items.pop(key)\n            self.items[key] = value\n        elif len(self.items) < self.capacity:\n            self.items[key] = value\n        else:\n            self.items.popitem(last=True)\n            self.items[key] = value\n\n    def __getitem__(self, key):\n        value = self.items.get(key)\n        if value is not None:\n            self.items.pop(key)\n            self.items[key] = value\n        return value\n\n    def __repr__(self):\n        return repr(self.items)\n\n\nd = LRUDict(10)\n\nfor i in range(15):\n    d[i] = i\nprint d\n```\n\n#### 近似 LRU 算法\n\nRedis 使用的并不是完全 LRU 算法。不使用 LRU 算法，是为了节省内存，Redis 采用的是随机 LRU 算法，Redis 为每一个 key 增加了一个 24 bit 的字段，用来记录这个 key 最后一次被访问的时间戳。\n\n注意 Redis 的 LRU 淘汰策略是懒惰处理，也就是不会主动执行淘汰策略，当 Redis 执行写操作时，发现内存超出 maxmemory，就会执行 LRU 淘汰算法。这个算法就是随机采样出 5(默认值)个 key，然后移除最旧的 key，如果移除后内存还是超出 maxmemory，那就继续随机采样淘汰，直到内存低于 maxmemory 为止。\n\n如何采样就是看 maxmemory-policy 的配置，如果是 allkeys 就是从所有的 key 字典中随机，如果是 volatile 就从带过期时间的 key 字典中随机。每次采样多少个 key 看的是 maxmemory_samples 的配置，默认为 5。\n\n#### LFU\n\nRedis 4.0 里引入了一个新的淘汰策略 —— LFU（Least Frequently Used） 模式，作者认为它比 LRU 更加优秀。\n\nLFU 表示按最近的访问频率进行淘汰，它比 LRU 更加精准地表示了一个 key 被访问的热度。\n\n如果一个 key 长时间不被访问，只是刚刚偶然被用户访问了一下，那么在使用 LRU 算法下它是不容易被淘汰的，因为 LRU 算法认为当前这个 key 是很热的。而 LFU 是需要追踪最近一段时间的访问频率，如果某个 key 只是偶然被访问一次是不足以变得很热的，它需要在近期一段时间内被访问很多次才有机会被认为很热。\n\n**Redis 对象的热度**\n\nRedis 的所有对象结构头中都有一个 24bit 的字段，这个字段用来记录对象的热度。\n\n```lua\n// redis 的对象头\ntypedef struct redisObject {\n    unsigned type:4; // 对象类型如 zset/set/hash 等等\n    unsigned encoding:4; // 对象编码如 ziplist/intset/skiplist 等等\n    unsigned lru:24; // 对象的「热度」\n    int refcount; // 引用计数\n    void *ptr; // 对象的 body\n} robj;\n```\n\n**LRU 模式**\n\n在 LRU 模式下，lru 字段存储的是 Redis 时钟 server.lruclock，Redis 时钟是一个 24bit 的整数，默认是 Unix 时间戳对 2^24 取模的结果，大约 97 天清零一次。当某个 key 被访问一次，它的对象头的 lru 字段值就会被更新为 server.lruclock。\n\n**LFU 模式**\n\n在 LFU 模式下，lru 字段 24 个 bit 用来存储两个值，分别是 ldt(last decrement time) 和 logc(logistic counter)。\n\nlogc 是 8 个 bit，用来存储访问频次，因为 8 个 bit 能表示的最大整数值为 255，存储频次肯定远远不够，所以这 8 个 bit 存储的是频次的对数值，并且这个值还会随时间衰减。如果它的值比较小，那么就很容易被回收。为了确保新创建的对象不被回收，新对象的这 8 个 bit 会初始化为一个大于零的值，默认是 LFU_INIT_VAL=5。\n\nldt 是 16 个位，用来存储上一次 logc 的更新时间，因为只有 16 位，所以精度不可能很高。它取的是分钟时间戳对 2^16 进行取模，大约每隔 45 天就会折返。\n\n同 LRU 模式一样，我们也可以使用这个逻辑计算出对象的空闲时间，只不过精度是分钟级别的。图中的 server.unixtime 是当前 redis 记录的系统时间戳，和 server.lruclock 一样，它也是每毫秒更新一次。\n\n\n\n\n\n","source":"_posts/java/interview/index.md","raw":"---\n# 【必需】文章标题\ntitle: Java 精选面试题 (持续更新)\n# 【必需】文章创建日期\ndate: 2020-01-01 12:00:00\n# 【可选】文章更新日期\nupdated:\n# 【可选】文章标签\ntags: Java 面试\n# 【可选】文章分类\ncategories: Java\n# 【可选】文章关键字\nkeywords: Java 面试\n# 【可选】文章描述\ndescription: Java 精选\ncopyright: false\n---\n\n## Java 基础\n\n### 为什么 HashMap 是线程不安全的？\n\n在 jdk1.8 中，在多线程环境下，会发生数据覆盖的情况。\n\n#### jdk1.8 中 HashMap\n\n在 jdk1.8 中对 HashMap 进行了优化，在发生 hash 碰撞，不再采用头插法方式，而是直接插入链表尾部，因此不会出现环形链表的情况，但是在多线程的情况下仍然不安全，这里我们看 jdk1.8 中 HashMap 的 put 操作源码：\n\n```java\nfinal V putVal(int hash, K key, V value, boolean onlyIfAbsent,\n                   boolean evict) {\n        Node<K,V>[] tab; Node<K,V> p; int n, i;\n        if ((tab = table) == null || (n = tab.length) == 0)\n            n = (tab = resize()).length;\n        if ((p = tab[i = (n - 1) & hash]) == null) // 如果没有hash碰撞则直接插入元素\n            tab[i] = newNode(hash, key, value, null);\n        else {\n            Node<K,V> e; K k;\n            if (p.hash == hash &&\n                ((k = p.key) == key || (key != null && key.equals(k))))\n                e = p;\n            else if (p instanceof TreeNode)\n                e = ((TreeNode<K,V>)p).putTreeVal(this, tab, hash, key, value);\n            else {\n                for (int binCount = 0; ; ++binCount) {\n                    if ((e = p.next) == null) {\n                        p.next = newNode(hash, key, value, null);\n                        if (binCount >= TREEIFY_THRESHOLD - 1) // -1 for 1st\n                            treeifyBin(tab, hash);\n                        break;\n                    }\n                    if (e.hash == hash &&\n                        ((k = e.key) == key || (key != null && key.equals(k))))\n                        break;\n                    p = e;\n                }\n            }\n            if (e != null) { // existing mapping for key\n                V oldValue = e.value;\n                if (!onlyIfAbsent || oldValue == null)\n                    e.value = value;\n                afterNodeAccess(e);\n                return oldValue;\n            }\n        }\n        ++modCount;\n        if (++size > threshold)\n            resize();\n        afterNodeInsertion(evict);\n        return null;\n    }\n```\n\n这是 jdk1.8 中 HashMap 中 put 操作的主函数， 注意第 6 行代码，如果没有 hash 碰撞则会直接插入元素。如果线程 A 和线程 B 同时进行 put 操作，刚好这两条不同的数据 hash 值一样，并且该位置数据为 null，所以这线程 A、B 都会进入第 6 行代码中。\n\n假设一种情况，线程 A 进入后还未进行数据插入时挂起，而线程 B 正常执行，从而正常插入数据，然后线程 A 获取 CPU 时间片，此时线程 A 不用再进行 hash 判断了，问题出现：线程 A 会把线程 B 插入的数据给覆盖，发生线程不安全。\n\n### 单例模式一共有几种写法？\n\n大体可分为 4 类，下面分别介绍他们的基本形式、变种及特点。\n\n#### 饱汉模式\n\n饱汉是变种最多的单例模式。我们从饱汉出发，通过其变种逐渐了解实现单例模式时需要关注的问题。\n\n##### 基础的饱汉\n\n饱汉，即已经吃饱，不着急再吃，饿的时候再吃。所以他就先不初始化单例，等第一次使用的时候再初始化，即“懒加载”。\n\n```java\n// 饱汉\n// UnThreadSafe\npublic class Singleton1 {\n  private static Singleton1 singleton = null;\n  private Singleton1() {\n  }\n  public static Singleton1 getInstance() {\n    if (singleton == null) {\n      singleton = new Singleton1();\n    }\n    return singleton;\n  }\n}\n```\n\n饱汉模式的核心就是懒加载。好处是更启动速度快、节省资源，一直到实例被第一次访问，才需要初始化单例；小坏处是写起来麻烦，大坏处是线程不安全，if 语句存在竞态条件。\n\n写起来麻烦不是大问题，可读性好啊。因此，单线程环境下，基础饱汉是笔者最喜欢的写法。但多线程环境下，基础饱汉就彻底不可用了。下面的几种变种都在试图解决基础饱汉线程不安全的问题。\n\n##### 饱汉 - 变种 1\n\n最粗暴的犯法是用 synchronized 关键字修饰 getInstance()方法，这样能达到绝对的线程安全。\n\n```java\n// 饱汉\n// ThreadSafe\npublic class Singleton1_1 {\n  private static Singleton1_1 singleton = null;\n  private Singleton1_1() {\n  }\n  public synchronized static Singleton1_1 getInstance() {\n    if (singleton == null) {\n      singleton = new Singleton1_1();\n    }\n    return singleton;\n  }\n}\n```\n\n变种 1 的好处是写起来简单，且绝对线程安全；坏处是并发性能极差，事实上完全退化到了串行。单例只需要初始化一次，但就算初始化以后，synchronized 的锁也无法避开，从而 getInstance()完全变成了串行操作。性能不敏感的场景建议使用。\n\n##### 饱汉 - 变种 2\n\n变种 2 是“臭名昭著”的 DCL 1.0。\n\n针对变种 1 中单例初始化后锁仍然无法避开的问题，变种 2 在变种 1 的外层又套了一层 check，加上 synchronized 内层的 check，即所谓“双重检查锁”（Double Check Lock，简称 DCL）。\n\n```java\n// 饱汉\n// UnThreadSafe\npublic class Singleton1_2 {\n  private static Singleton1_2 singleton = null;\n\n  public int f1 = 1;   // 触发部分初始化问题\n  public int f2 = 2;\n  private Singleton1_2() {\n  }\n  public static Singleton1_2 getInstance() {\n    // may get half object\n    if (singleton == null) {\n      synchronized (Singleton1_2.class) {\n        if (singleton == null) {\n          singleton = new Singleton1_2();\n        }\n      }\n    }\n    return singleton;\n  }\n}\n```\n\n变种 2 的核心是 DCL，看起来变种 2 似乎已经达到了理想的效果：懒加载+线程安全。可惜的是，正如注释中所说，DCL 仍然是线程不安全的，由于指令重排序，你可能会得到“半个对象”，即”部分初始化“问题。详细在看完变种 3 后，可参考下面这篇文章，这里不再赘述。\n\n> https://monkeysayhi.github.io/2016/11/29/volatile关键字的作用、原理/\n\n##### 饱汉 - 变种 3\n\n变种 3 专门针对变种 2，可谓 DCL 2.0。\n\n针对变种 3 的“半个对象”问题，变种 3 在 instance 上增加了 volatile 关键字，原理见上述参考。\n\n```java\n// 饱汉\n// ThreadSafe\npublic class Singleton1_3 {\n  private static volatile Singleton1_3 singleton = null;\n\n  public int f1 = 1;   // 触发部分初始化问题\n  public int f2 = 2;\n  private Singleton1_3() {\n  }\n  public static Singleton1_3 getInstance() {\n    if (singleton == null) {\n      synchronized (Singleton1_3.class) {\n        // must be a complete instance\n        if (singleton == null) {\n          singleton = new Singleton1_3();\n        }\n      }\n    }\n    return singleton;\n  }\n}\n```\n\n多线程环境下，变种 3 更适用于性能敏感的场景。但后面我们将了解到，就算是线程安全的，还有一些办法能破坏单例。\n\n当然，还有很多方式，能通过与 volatile 类似的方式防止部分初始化。读者可自行阅读内存屏障相关内容，但面试时不建议主动装逼。\n\n#### 饿汉模式\n\n与饱汉相对，饿汉很饿，只想着尽早吃到。所以他就在最早的时机，即类加载时初始化单例，以后访问时直接返回即可。\n\n```java\n// 饿汉\n// ThreadSafe\npublic class Singleton2 {\n  private static final Singleton2 singleton = new Singleton2();\n  private Singleton2() {\n  }\n  public static Singleton2 getInstance() {\n    return singleton;\n  }\n}\n```\n\n饿汉的好处是天生的线程安全（得益于类加载机制），写起来超级简单，使用时没有延迟；坏处是有可能造成资源浪费（如果类加载后就一直不使用单例的话）。\n\n> 值得注意的时，单线程环境下，饿汉与饱汉在性能上没什么差别；但多线程环境下，由于饱汉需要加锁，饿汉的性能反而更优。\n\n#### Holder 模式\n\n我们既希望利用饿汉模式中静态变量的方便和线程安全；又希望通过懒加载规避资源浪费。Holder 模式满足了这两点要求：核心仍然是静态变量，足够方便和线程安全；通过静态的 Holder 类持有真正实例，间接实现了懒加载。\n\n```java\n// Holder模式\n// ThreadSafe\npublic class Singleton3 {\n  private static class SingletonHolder {\n    private static final Singleton3 singleton = new Singleton3();\n    private SingletonHolder() {\n    }\n  }\n  private Singleton3() {\n  }\n\n  /**\n  * 勘误：多写了个synchronized。。\n  public synchronized static Singleton3 getInstance() {\n    return SingletonHolder.singleton;\n  }\n  */\n  public static Singleton3 getInstance() {\n    return SingletonHolder.singleton;\n  }\n}\n```\n\n相对于饿汉模式，Holder 模式仅增加了一个静态内部类的成本，与饱汉的变种 3 效果相当（略优），都是比较受欢迎的实现方式。同样建议考虑。\n\n#### 枚举模式\n\n用枚举实现单例模式，相当好用，但可读性是不存在的。\n\n##### 基础的枚举\n\n将枚举的静态成员变量作为单例的实例：\n\n```java\n// 枚举\n// ThreadSafe\npublic enum Singleton4 {\n  SINGLETON;\n}\n```\n\n代码量比饿汉模式更少。但用户只能直接访问实例 Singleton4.SINGLETON——事实上，这样的访问方式作为单例使用也是恰当的，只是牺牲了静态工厂方法的优点，如无法实现懒加载。\n\n##### 丑陋但好用的语法糖\n\nJava 的枚举是一个“丑陋但好用的语法糖”。\n\n##### 枚举型单例模式的本质\n\n通过反编译打开语法糖，就看到了枚举类型的本质，简化如下：\n\n```java\n// 枚举\n// ThreadSafe\npublic class Singleton4 extends Enum<Singleton4> {\n  ...\n  public static final Singleton4 SINGLETON = new Singleton4();\n  ...\n}\n```\n\n本质上和饿汉模式相同，区别仅在于公有的静态成员变量。\n\n##### 用枚举实现一些 trick\n\n> 这一部分与单例没什么关系，可以跳过。如果选择阅读也请认清这样的事实：虽然枚举相当灵活，但如何恰当的使用枚举有一定难度。一个足够简单的典型例子是 TimeUnit 类，建议有时间耐心阅读。\n\n上面已经看到，枚举型单例的本质仍然是一个普通的类。实际上，我们可以在枚举型型单例上增加任何普通类可以完成的功能。要点在于枚举实例的初始化，可以理解为实例化了一个匿名内部类。为了更明显，我们在 Singleton4_1 中定义一个普通的私有成员变量，一个普通的公有成员方法，和一个公有的抽象成员方法，如下：\n\n```java\n// 枚举\n// ThreadSafe\npublic enum Singleton4_1 {\n  SINGLETON(\"enum is the easiest singleton pattern, but not the most readable\") {\n    public void testAbsMethod() {\n      print();\n      System.out.println(\"enum is ugly, but so flexible to make lots of trick\");\n    }\n  };\n  private String comment = null;\n  Singleton4_1(String comment) {\n    this.comment = comment;\n  }\n  public void print() {\n    System.out.println(\"comment=\" + comment);\n  }\n  abstract public void testAbsMethod();\n  public static Singleton4_1 getInstance() {\n    return SINGLETON;\n  }\n}\n```\n\n这样，枚举类 Singleton4_1 中的每一个枚举实例不仅继承了父类 Singleton4_1 的成员方法 print()，还必须实现父类 Singleton4_1 的抽象成员方法 testAbsMethod()。\n\n#### 总结\n\n上面的分析都忽略了反射和序列化的问题。通过反射或序列化，我们仍然能够访问到私有构造器，创建新的实例破坏单例模式。此时，只有枚举模式能天然防范这一问题。反射和序列化笔者还不太了解，但基本原理并不难，可以在其他模式上手动实现。\n\n下面继续忽略反射和序列化的问题，做个总结回味一下：\n\n![图片](/img/posts/java/interview/5.png)\n\n### 你能说说进程与线程的区别吗\n\n#### 两者的定义\n\n进程是具有一定独立功能的程序关于某个数据集合上的一次运行活动，进程是系统进行资源分配和调度的一个独立单位。\n\n线程是进程的一个实体，是 CPU 调度和分派的基本单位，它是比进程更小的能独立运行的基本单位.线程自己基本上不拥有系统资源，只拥有一点在运行中必不可少的资源(如程序计数器,一组寄存器和栈)，但是它可与同属一个进程的其他的线程共享进程所拥有的全部资源。\n\n#### 进程与线程的区别\n\n1. 进程是资源分配最小单位，线程是程序执行的最小单位；\n2. 进程有自己独立的地址空间，每启动一个进程，系统都会为其分配地址空间，建立数据表来维护代码段、堆栈段和数据段，线程没有独立的地址空间，它使用相同的地址空间共享数据；\n3. CPU 切换一个线程比切换进程花费小；\n4. 创建一个线程比进程开销小；\n5. 线程占用的资源要⽐进程少很多。\n6. 线程之间通信更方便，同一个进程下，线程共享全局变量，静态变量等数据，进程之间的通信需要以通信的方式（IPC）进行；（但多线程程序处理好同步与互斥是个难点）\n7. 多进程程序更安全，生命力更强，一个进程死掉不会对另一个进程造成影响（源于有独立的地址空间），多线程程序更不易维护，一个线程死掉，整个进程就死掉了（因为共享地址空间）；\n8. 进程对资源保护要求高，开销大，效率相对较低，线程资源保护要求不高，但开销小，效率高，可频繁切换；\n\n### 创建线程有几种不同的方式？你喜欢哪一种？为什么？\n\n有三种方式可以用来创建线程：\n\n- 继承 Thread 类\n- 实现 Runnable 接口\n- 应用程序可以使用 Executor 框架来创建线程池\n\n实现 Runnable 接口这种方式更受欢迎，因为这不需要继承 Thread 类。在应用设计中已经继承了别的对象的情况下，这需要多继承（而 Java 不支持多继承），只能实现接口。同时，线程池也是非常高效的，很容易实现和使用。\n\n### 概括的解释下线程的几种可用状态。\n\n**新建( new )：**新创建了一个线程对象；\n\n**可运行( runnable )：**线程对象创建后，其他线程(比如 main 线程）调用了该对象的 start ()方法。该状态的线程位于可运行线程池中，等待被线程调度选中，获 取 CPU 的使用权；\n\n**运行( running )：**可运行状态( runnable )的线程获得了 CPU 时间片（ timeslice ） ，执行程序代码；\n\n**阻塞( block )：**阻塞状态是指线程因为某种原因放弃了 CPU 使用权，也即让出了 CPU timeslice ，暂时停止运行。直到线程进入可运行( runnable )状态，才有 机会再次获得 cpu timeslice 转到运行( running )状态。\n\n阻塞的情况分三种：\n\n1. 等待阻塞：运行( running )的线程执行 o . wait ()方法， JVM 会把该线程放 入等待队列( waitting queue )中。\n2. 同步阻塞：运行( running )的线程在获取对象的同步锁时，若该同步锁被别的线程占用，则 JVM 会把该线程放入锁池( lock pool )中。\n3. 其他阻塞: 运行( running )的线程执行 Thread . sleep ( long ms )或 t . join ()方法，或者发出了 I / O 请求时， JVM 会把该线程置为阻塞状态。当 sleep ()状态超时、 join ()等待线程终止或者超时、或者 I / O 处理完毕时，线程重新转入可运行( runnable )状态。\n\n**死亡( dead )：**线程 run ()、 main () 方法执行结束，或者因异常退出了 run ()方法，则该线程结束生命周期。死亡的线程不可再次复生。\n\n### 同步方法和同步代码块的区别是什么？\n\n**区别：**\n\n- 同步方法默认用 this 或者当前类 class 对象作为锁；\n- 同步代码块可以选择以什么来加锁，比同步方法要更细颗粒度，我们可以选择只同步会发生同步问题的部分代码而不是整个方法；\n\n### 在监视器(Monitor)内部，是如何做线程同步的？程序应该做哪种级别的同步？\n\n监视器和锁在 Java 虚拟机中是一块使用的。监视器监视一块同步代码块，确保一次只有一个线程执行同步代码块。每一个监视器都和一个对象引用相关联。线程在获取锁之前不允许执行同步代码。\n\njava 还提供了显式监视器( Lock )和隐式监视器( synchronized )两种锁方案。\n\n### 什么是死锁(deadlock)？\n\n两个线程或两个以上线程都在等待对方执行完毕才能继续往下执行的时候就发生了死锁。结果就是这些线程都陷入了无限的等待中。\n\n### 如何确保 N 个线程可以访问 N 个资源同时又不导致死锁？\n\n多线程产生死锁的四个必要条件：\n\n- **互斥条件：**一个资源每次只能被一个进程使用。\n- **保持和请求条件：**一个进程因请求资源而阻塞时，对已获得资源保持不放。\n- **不可剥夺性：**进程已获得资源，在未使用完成前，不能被剥夺。\n- **循环等待条件（闭环）：**若干进程之间形成一种头尾相接的循环等待资源关系。\n\n只要破坏其中任意一个条件，就可以避免死锁\n\n一种非常简单的避免死锁的方式就是：**指定获取锁的顺序，并强制线程按照指定的顺序获取锁。**因此，如果所有的线程都是以同样的顺序加锁和释放锁，就不会出现死锁了。\n\n### Java 序列化与反序列化三连问：是什么？为什么要？如何做？\n\n#### Java 序列化与反序列化是什么？\n\nJava 序列化是指把 Java 对象转换为字节序列的过程，而 Java 反序列化是指把字节序列恢复为 Java 对象的过程：\n\n- **序列化**：对象序列化的最主要的用处就是在传递和保存对象的时候，保证对象的完整性和可传递性。序列化是把对象转换成有序字节流，以便在网络上传输或者保存在本地文件中。核心作用是对象状态的保存与重建。\n- **反序列化**：客户端从文件中或网络上获得序列化后的对象字节流，根据字节流中所保存的对象状态及描述信息，通过反序列化重建对象。\n\n#### 为什么需要序列化与反序列化？\n\n为什么要序列化，那就是说一下序列化的好处喽，序列化有什么什么优点，所以我们要序列化。\n\n**一：对象序列化可以实现分布式对象。**\n\n主要应用例如：RMI(即远程调用 Remote Method Invocation)要利用对象序列化运行远程主机上的服务，就像在本地机上运行对象时一样。\n\n**二：java 对象序列化不仅保留一个对象的数据，而且递归保存对象引用的每个对象的数据。**\n\n可以将整个对象层次写入字节流中，可以保存在文件中或在网络连接上传递。利用对象序列化可以进行对象的\"深复制\"，即复制对象本身及引用的对象本身。序列化一个对象可能得到整个对象序列。\n\n**三：序列化可以将内存中的类写入文件或数据库中。**\n\n比如：将某个类序列化后存为文件，下次读取时只需将文件中的数据反序列化就可以将原先的类还原到内存中。也可以将类序列化为流数据进行传输。\n\n总的来说就是将一个已经实例化的类转成文件存储，下次需要实例化的时候只要反序列化即可将类实例化到内存中并保留序列化时类中的所有变量和状态。\n\n**四：对象、文件、数据，有许多不同的格式，很难统一传输和保存。**\n\n序列化以后就都是字节流了，无论原来是什么东西，都能变成一样的东西，就可以进行通用的格式传输或保存，传输结束以后，要再次使用，就进行反序列化还原，这样对象还是对象，文件还是文件。\n\n#### 如何实现 Java 序列化与反序列化?\n\n首先我们要把准备要序列化类，实现 Serializabel 接口\n\n例如：我们要 Person 类里的 name 和 age 都序列化\n\n```java\nimport java.io.Serializable;\n\n\npublic class Person implements Serializable { //本类可以序列化\n\n    private String name;\n    private int age;\n\n    public Person(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String toString() {\n        return \"姓名：\" + this.name + \"，年龄\" + this.age;\n    }\n}\n```\n\n然后：我们将 name 和 age 序列化（也就是把这 2 个对象转为二进制，理解为“打碎”）\n\n```java\npackage org.lxh.SerDemo;\n\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.ObjectOutputStream;\n\n\npublic class ObjectOutputStreamDemo { //序列化\n    public static void main(String[] args) throws Exception {\n        //序列化后生成指定文件路径\n        File file = new File(\"D:\" + File.separator + \"person.ser\");\n        ObjectOutputStream oos = null;\n        //装饰流（流）\n        oos = new ObjectOutputStream(new FileOutputStream(file));\n\n        //实例化类\n        Person per = new Person(\"张三\", 30);\n        oos.writeObject(per); //把类对象序列化\n        oos.close();\n    }\n}\n```\n\n> 《Java 对象的序列化（Serialization）和反序列化详解》\n> https://blog.csdn.net/yaomingyang/article/details/79321939\n\n> 《Java 序列化的高级认识》\n> https://www.ibm.com/developerworks/cn/java/j-lo-serial/\n\n\n\n###  什么情况用ArrayList or LinkedList呢?\n\n列表（list）是元素的有序集合，也称为序列。它提供了基于元素位置的操作，有助于快速访问、添加和删除列表中特定索引位置的元素。List 接口实现了 `Collection `和 `Iterable `作为父接口。它允许存储重复值和空值，支持通过索引访问元素。\n\n#### ArrayList 和 LinkedList 的不同之处\n\n#####  增加元素到列表尾端\n\n在 `ArrayList` 中增加元素到队列尾端的代码如下：\n\n```java\npublic boolean add(E e){\n   ensureCapacity(size+1);//确保内部数组有足够的空间\n   elementData[size++]=e;//将元素加入到数组的末尾，完成添加\n   return true;      \n} \n```\n\n`ArrayList`中 `add()` 方法的性能决定于`ensureCapacity()`方法。`ensureCapacity()`的实现如下：\n\n```java\npublic vod ensureCapacity(int minCapacity){\n  modCount++;\n  int oldCapacity=elementData.length;\n  if(minCapacity>oldCapacity){    //如果数组容量不足，进行扩容\n      Object[] oldData=elementData;\n      int newCapacity=(oldCapacity*3)/2+1;  //扩容到原始容量的1.5倍\n      if(newCapacitty<minCapacity)   //如果新容量小于最小需要的容量，则使用最小\n                                                    //需要的容量大小\n         newCapacity=minCapacity ;  //进行扩容的数组复制\n         elementData=Arrays.copyof(elementData,newCapacity);\n  }\n}\n```\n\n可以看到，只要`ArrayList`的当前容量足够大，`a  dd()`操作的效率非常高的。只有当`ArrayList`对容量的需求超出当前数组大小时，才需要进行扩容。扩容的过程中，会进行大量的数组复制操作。而数组复制时，最终将调用`System.arraycopy()`方法，因此`add()`操作的效率还是相当高的。\n\n`LinkedList` 的`add()`操作实现如下，它也将任意元素增加到队列的尾端：\n\n```java\npublic boolean add(E e){\n   addBefore(e,header);//将元素增加到header的前面\n   return true;\n}\n```\n\n其中`addBefore()`的方法实现如下：\n\n```java\nprivate Entry<E> addBefore(E e,Entry<E> entry){\n     Entry<E> newEntry = new Entry<E>(e,entry,entry.previous);\n     newEntry.provious.next=newEntry;\n     newEntry.next.previous=newEntry;\n     size++;\n     modCount++;\n     return newEntry;\n}\n```\n\n可见，**LinkeList由于使用了链表的结构，因此不需要维护容量的大小。从这点上说，它比ArrayList有一定的性能优势，然而，每次的元素增加都需要新建一个Entry对象，并进行更多的赋值操作。在频繁的系统调用中，对性能会产生一定的影响。**\n\n##### 增加元素到列表任意位置\n\n除了提供元素到List的尾端，List接口还提供了在任意位置插入元素的方法：`void add(int index,E element);`\n\n**由于实现的不同，ArrayList和LinkedList在这个方法上存在一定的性能差异，由于ArrayList是基于数组实现的，而数组是一块连续的内存空间，如果在数组的任意位置插入元素，必然导致在该位置后的所有元素需要重新排列，因此，其效率相对会比较低。**\n\n以下代码是ArrayList中的实现：\n\n```java\npublic void add(int index,E element){\n   if(index>size||index<0)\n      throw new IndexOutOfBoundsException(\n        \"Index:\"+index+\",size: \"+size);\n         ensureCapacity(size+1);\n         System.arraycopy(elementData,index,elementData,index+1,size-index);\n         elementData[index] = element;\n         size++;\n}\n```\n\n可以看到每次插入操作，都会进行一次数组复制。而这个操作在增加元素到List尾端的时候是不存在的，大量的数组重组操作会导致系统性能低下。并且插入元素在List中的位置越是靠前，数组重组的开销也越大。\n\n而LinkedList此时显示了优势：\n\n```java\npublic void add(int index,E element){\n   addBefore(element,(index==size?header:entry(index)));\n}\n```\n\n可见，**对LinkedList来说，在List的尾端插入数据与在任意位置插入数据是一样的，不会因为插入的位置靠前而导致插入的方法性能降低。**\n\n##### 删除任意位置元素\n\n对于元素的删除，List接口提供了在任意位置删除元素的方法：\n\n```java\npublic E remove(int index);\n```\n\n对ArrayList来说，remove()方法和add()方法是雷同的。在任意位置移除元素后，都要进行数组的重组。ArrayList的实现如下：\n\n```java\npublic E remove(int index){\n   RangeCheck(index);\n   modCount++;\n   E oldValue=(E) elementData[index];\n  int numMoved=size-index-1;\n  if(numMoved>0)\n     System.arraycopy(elementData,index+1,elementData,index,numMoved);\n     elementData[--size]=null;\n     return oldValue;\n}\n```\n\n可以看到，**在ArrayList的每一次有效的元素删除操作后，都要进行数组的重组。并且删除的位置越靠前，数组重组时的开销越大。**\n\n```java\npublic E remove(int index){\n  return remove(entry(index));         \n}\nprivate Entry<E> entry(int index){\n  if(index<0 || index>=size)\n      throw new IndexOutBoundsException(\"Index:\"+index+\",size:\"+size);\n      Entry<E> e= header;\n      if(index<(size>>1)){//要删除的元素位于前半段\n         for(int i=0;i<=index;i++)\n             e=e.next;\n     }else{\n         for(int i=size;i>index;i--)\n             e=e.previous;\n     }\n         return e;\n}\n```\n\n在LinkedList的实现中，首先要通过循环找到要删除的元素。如果要删除的位置处于List的前半段，则从前往后找；若其位置处于后半段，则从后往前找。因此无论要删除较为靠前或者靠后的元素都是非常高效的；但要移除List中间的元素却几乎要遍历完半个List，在List拥有大量元素的情况下，效率很低。\n\n##### 容量参数\n\n容量参数是ArrayList和Vector等基于数组的List的特有性能参数。它表示初始化的数组大小。当ArrayList所存储的元素数量超过其已有大小时。它便会进行扩容，数组的扩容会导致整个数组进行一次内存复制。因此合理的数组大小有助于减少数组扩容的次数，从而提高系统性能。\n\n```java\npublic  ArrayList(){\n  this(10);  \n}\npublic ArrayList (int initialCapacity){\n   super();\n   if(initialCapacity<0)\n       throw new IllegalArgumentException(\"Illegal Capacity:\"+initialCapacity)\n      this.elementData=new Object[initialCapacity];\n}\n```\n\nArrayList提供了一个可以制定初始数组大小的构造函数：\n\n```java\npublic ArrayList(int initialCapacity) \n```\n\n现以构造一个拥有100万元素的List为例，当使用默认初始化大小时，其消耗的相对时间为125ms左右，当直接制定数组大小为100万时，构造相同的ArrayList仅相对耗时16ms。\n\n##### 遍历列表\n\n遍历列表操作是最常用的列表操作之一，在JDK1.5之后，至少有3中常用的列表遍历方式：\n\n> - forEach操作\n> - 迭代器\n> - for循环。\n\n```java\nString tmp;\nlong start=System.currentTimeMills();    //ForEach \nfor(String s:list){\n    tmp=s;\n}\nSystem.out.println(\"foreach spend:\"+(System.currentTimeMills()-start));\nstart = System.currentTimeMills();\nfor(Iterator<String> it=list.iterator();it.hasNext();){    \n   tmp=it.next();\n}\nSystem.out.println(\"Iterator spend;\"+(System.currentTimeMills()-start));\nstart=System.currentTimeMills();\nint size=;list.size();\nfor(int i=0;i<size;i++){                     \n    tmp=list.get(i);\n}\nSystem.out.println(\"for spend;\"+(System.currentTimeMills()-start));\n```\n\n构造一个拥有100万数据的ArrayList和等价的LinkedList，使用以上代码进行测试，测试结果：\n\n![图片](https://jason-dong-blog-1259058668.cos.ap-nanjing.myqcloud.com/img/11.png)\n\n可以看到，**最简便的ForEach循环并没有很好的性能表现，综合性能不如普通的迭代器，而是用for循环通过随机访问遍历列表时，ArrayList表项很好，但是LinkedList的表现却无法让人接受，甚至没有办法等待程序的结束。这是因为对LinkedList进行随机访问时，总会进行一次列表的遍历操作。性能非常差，应避免使用。**\n\n\n\n## Java 进阶\n\n### 你能说说 Spring 框架中 Bean 的生命周期吗？\n\n1. 实例化一个 `Bean` , 也就是我们常说的 `new`；\n2. 按照 `Spring` 上下文对实例化的 `Bean` 进行配置－－也就是 `IOC` 注入；\n3. 如果这个 `Bean` 已经实现了 `BeanNameAware` 接口，会调用它实现的 `setBeanName(String)`方法，此处传递的就是 `Spring` 配置文件中 `Bean` 的 `id` 值\n4. 如果这个 `Bean` 已经实现了 `BeanFactoryAware` 接口，会调用它实现的 `setBeanFactory(setBeanFactory(BeanFactory)`传递的是 Spring 工厂自身（可以用这个方式来获取其它 Bean，只需在 Spring 配置文件中配置一个普通的 Bean 就可以）；\n5. 如果这个 `Bean` 已经实现了 `ApplicationContextAware` 接口，会调用 `setApplicationContext(ApplicationContext)`方法，传入 Spring 上下文（同样这个方式也可以实现步骤 4 的内容，但比 4 更好，因为 `ApplicationContext` 是 `BeanFactory` 的子接口，有更多的实现方法）；\n6. 如果这个 `Bean` 关联了 `BeanPostProcessor` 接口，将会调用 `postProcessBeforeInitialization(Object obj, String s)`方法，`BeanPostProcessor` 经常被用作是 `Bean` 内容的更改，并且由于这个是在 `Bean` 初始化结束时调用那个的方法，也可以被应用于内存或缓存技术；\n7. 如果 `Bean` 在 `Spring` 配置文件中配置了 `init-method` 属性会自动调用其配置的初始化方法。\n8. 如果这个 `Bean` 关联了 `BeanPostProcessor` 接口，将会调用 `postProcessAfterInitialization(Object obj, String s)`方法、；\n\n   > 注：以上工作完成以后就可以应用这个 `Bean` 了，那这个 `Bean` 是一个 `Singleton` 的，所以一般情况下我们调用同一个 `id` 的 `Bean` 会是在内容地址相同的实例，当然在 `Spring` 配置文件中也可以配置非 `Singleton`，这里我们不做赘述。\n\n9. 当 `Bean` 不再需要时，会经过清理阶段，如果 `Bean` 实现了 `DisposableBean` 这个接口，会调用那个其实现的 `destroy()`方法；\n10. 最后，如果这个 `Bean` 的 `Spring` 配置中配置了 `destroy-method` 属性，会自动调用其配置的销毁方法。\n\n### Spring，SpringMVC，SpringBoot，SpringCloud 有什么区别和联系？\n\n#### 简单介绍\n\n- `Spring` 是一个轻量级的控制反转(`IoC`)和面向切面(`AOP`)的容器框架。Spring 使你能够编写更干净、更可管理、并且更易于测试的代码。\n- `Spring MVC` 是 Spring 的一个模块，一个 web 框架。通过 `Dispatcher Servlet`, `ModelAndView` 和 `View Resolver`，开发 web 应用变得很容易。主要针对的是网站应用程序或者服务开发——`URL 路由`、`Session`、`模板引擎`、`静态 Web 资源`等等。\n- `Spring` 配置复杂，繁琐，所以推出了 `Spring boot`，约定优于配置，简化了 spring 的配置流程。\n- `Spring Cloud` 构建于 `Spring Boot` 之上，是一个关注全局的服务治理框架。\n\n#### Spring VS SpringMVC\n\n- `Spring` 是一个一站式的轻量级的 java 开发框架，核心是`控制反转（IOC）`和`面向切面（AOP）`，针对于开发的 WEB 层 (`springMvc`)、业务层(`Ioc`)、持久层(`jdbcTemplate`)等都提供了多种配置解决方案；\n- `SpringMVC` 是 `Spring` 基础之上的一个 `MVC` 框架，主要处理 `web` 开发的路径映射和视图渲染，属于 `Spring` 框架中 `WEB` 层开发的一部分；\n\n#### SpringMVC VS SpringBoot\n\n- `SpringMVC`属于一个企业 WEB 开发的 MVC 框架，涵盖面包括前端**视图开发**、**文件配置**、**后台接口逻辑开发**等，XML、config 等配置相对比较繁琐复杂；\n- `SpringBoot`框架相对于 SpringMVC 框架来说，更**专注于开发微服务后台接口**，不开发前端视图；\n\n#### SpringBoot VS SpringCloud\n\n- `SpringBoot` 使用了**默认大于配置**的理念，集成了快速开发的 `Spring` 多个插件，同时**自动过滤不需要配置的多余的插件**，**简化了项目的开发配置流程**，一定程度上**取消 xml 配置**，是一套**快速配置开发的脚手架**，能快速开发**单个微服务**；\n- `SpringCloud` 大部分的功能插件都是基于 `SpringBoot` 去实现的，`SpringCloud` 关注于**全局的微服务整合和管理**，将多个 `SpringBoot` 单体微服务进行整合以及管理；`SpringCloud` 依赖于 `SpringBoot` 开发，而 - `SpringBoot` 可以独立开发；\n\n#### 总结\n\n- Spring 是核心，提供了基础功能；\n- Spring MVC 是基于 Spring 的一个 MVC 框架 ；\n- Spring Boot 是为简化 Spring 配置的快速开发整合包；\n- Spring Cloud 是构建在 Spring Boot 之上的服务治理框架。\n\n### 如何保证消息的顺序性？\n\n#### 面试官心理分析\n\n其实这个也是用 MQ 的时候必问的话题，第一看看你了不了解顺序这个事儿？第二看看你有没有办法保证消息是有顺序的？这是生产系统中常见的问题。\n\n#### 面试题剖析\n\n我举个例子，我们以前做过一个 mysql `binlog` 同步的系统，压力还是非常大的，日同步数据要达到上亿，就是说数据从一个 mysql 库原封不动地同步到另一个 mysql 库里面去（mysql -> mysql）。常见的一点在于说比如大数据 team，就需要同步一个 mysql 库过来，对公司的业务系统的数据做各种复杂的操作。\n\n你在 mysql 里增删改一条数据，对应出来了增删改 3 条 `binlog` 日志，接着这三条 `binlog` 发送到 MQ 里面，再消费出来依次执行，起码得保证人家是按照顺序来的吧？不然本来是：增加、修改、删除；你楞是换了顺序给执行成删除、修改、增加，不全错了么。\n\n本来这个数据同步过来，应该最后这个数据被删除了；结果你搞错了这个顺序，最后这个数据保留下来了，数据同步就出错了。\n\n先看看顺序会错乱的俩场景：\n\n- **RabbitMQ**：一个 queue，多个 consumer。比如，生产者向 RabbitMQ 里发送了三条数据，顺序依次是 data1/data2/data3，压入的是 RabbitMQ 的一个内存队列。有三个消费者分别从 MQ 中消费这三条数据中的一条，结果消费者 2 先执行完操作，把 data2 存入数据库，然后是 data1/data3。这不明显乱了。\n\n![图片](/img/posts/java/interview/1.png)\n\n- **Kafka**：比如说我们建了一个 topic，有三个 partition。生产者在写的时候，其实可以指定一个 key，比如说我们指定了某个订单 id 作为 key，那么这个订单相关的数据，一定会被分发到同一个 partition 中去，而且这个 partition 中的数据一定是有顺序的。\n\n  消费者从 partition 中取出来数据的时候，也一定是有顺序的。到这里，顺序还是 ok 的，没有错乱。接着，我们在消费者里可能会搞**多个线程来并发处理消息**。因为如果消费者是单线程消费处理，而处理比较耗时的话，比如处理一条消息耗时几十 ms，那么 1 秒钟只能处理几十条消息，这吞吐量太低了。而多个线程并发跑的话，顺序可能就乱掉了。\n\n![图片](/img/posts/java/interview/2.png)\n\n#### 解决方案\n\n#### RabbitMQ\n\n拆分多个 queue，每个 queue 一个 consumer，就是多一些 queue 而已，确实是麻烦点；或者就一个 queue 但是对应一个 consumer，然后这个 consumer 内部用内存队列做排队，然后分发给底层不同的 worker 来处理。\n\n![图片](/img/posts/java/interview/3.png)\n\n#### Kafka\n\n- 一个 topic，一个 partition，一个 consumer，内部单线程消费，单线程吞吐量太低，一般不会用这个。\n- 写 N 个内存 queue，具有相同 key 的数据都到同一个内存 queue；然后对于 N 个线程，每个线程分别消费一个内存 queue 即可，这样就能保证顺序性。\n\n![图片](/img/posts/java/interview/4.png)\n\n\n## Redis\n\n### Redis 是如何实现分布式锁的？\n\n分布式锁常见的三种实现方式：\n\n1. 数据库乐观锁；\n2. 基于 Redis 的分布式锁；\n3. 基于 ZooKeeper 的分布式锁。\n\n本面试考点是，你对 Redis 使用熟悉吗？Redis 中是如何实现分布式锁的。\n\n#### 要点\n\nRedis 要实现分布式锁，以下条件应该得到满足\n\n#### 互斥性\n\n- 在任意时刻，只有一个客户端能持有锁。\n\n#### 不能死锁\n\n- 客户端在持有锁的期间崩溃而没有主动解锁，也能保证后续其他客户端能加锁。\n\n#### 容错性\n\n- 只要大部分的 Redis 节点正常运行，客户端就可以加锁和解锁。\n\n#### 实现\n\n可以直接通过 `set key value px milliseconds nx` 命令实现加锁， 通过 Lua 脚本实现解锁。\n\n```lua\n//获取锁（unique_value可以是UUID等）\nSET resource_name unique_value NX PX  30000\n\n//释放锁（lua脚本中，一定要比较value，防止误解锁）\nif redis.call(\"get\",KEYS[1]) == ARGV[1] then\n    return redis.call(\"del\",KEYS[1])\nelse\n    return 0\nend\n```\n\n#### 代码解释\n\n- set 命令要用 `set key value px milliseconds nx`，替代 `setnx + expire` 需要分两次执行命令的方式，保证了原子性，\n- value 要具有唯一性，可以使用`UUID.randomUUID().toString()`方法生成，用来标识这把锁是属于哪个请求加的，在解锁的时候就可以有依据；\n- 释放锁时要验证 value 值，防止误解锁；\n- 通过 Lua 脚本来避免 Check And Set 模型的并发问题，因为在释放锁的时候因为涉及到多个 Redis 操作 （利用了 eval 命令执行 Lua 脚本的原子性）；\n\n#### 加锁代码分析\n\n首先，set()加入了 NX 参数，可以保证如果已有 key 存在，则函数不会调用成功，也就是只有一个客户端能持有锁，满足互斥性。其次，由于我们对锁设置了过期时间，即使锁的持有者后续发生崩溃而没有解锁，锁也会因为到了过期时间而自动解锁（即 key 被删除），不会发生死锁。最后，因为我们将 value 赋值为 requestId，用来标识这把锁是属于哪个请求加的，那么在客户端在解锁的时候就可以进行校验是否是同一个客户端。\n\n#### 解锁代码分析\n\n将 Lua 代码传到 jedis.eval()方法里，并使参数 KEYS[1]赋值为 lockKey，ARGV[1]赋值为 requestId。在执行的时候，首先会获取锁对应的 value 值，检查是否与 requestId 相等，如果相等则解锁（删除 key）。\n\n#### 存在的风险\n\n如果存储锁对应 key 的那个节点挂了的话，就可能存在丢失锁的风险，导致出现多个客户端持有锁的情况，这样就不能实现资源的独享了。\n\n1. 客户端 A 从 master 获取到锁\n2. 在 master 将锁同步到 slave 之前，master 宕掉了（Redis 的主从同步通常是异步的）。\n   主从切换，slave 节点被晋级为 master 节点\n3. 客户端 B 取得了同一个资源被客户端 A 已经获取到的另外一个锁。导致存在同一时刻存不止一个线程获取到锁的情况。\n\n#### redlock 算法出现\n\n这个场景是假设有一个 redis cluster，有 5 个 redis master 实例。然后执行如下步骤获取一把锁：\n\n1. 获取当前时间戳，单位是毫秒；\n2. 跟上面类似，轮流尝试在每个 master 节点上创建锁，过期时间较短，一般就几十毫秒；\n3. 尝试在大多数节点上建立一个锁，比如 5 个节点就要求是 3 个节点 n / 2 + 1；\n4. 客户端计算建立好锁的时间，如果建立锁的时间小于超时时间，就算建立成功了；\n5. 要是锁建立失败了，那么就依次之前建立过的锁删除；\n6. 只要别人建立了一把分布式锁，你就得不断轮询去尝试获取锁。\n\n![图片](/img/posts/java/interview/6.png)\n\nRedis 官方给出了以上两种基于 Redis 实现分布式锁的方法，详细说明可以查看：\n\n> https://redis.io/topics/distlock 。\n\n#### Redisson 实现\n\nRedisson 是一个在 Redis 的基础上实现的 Java 驻内存数据网格（In-Memory Data Grid）。它不仅提供了一系列的分布式的 Java 常用对象，还实现了可重入锁（Reentrant Lock）、公平锁（Fair Lock、联锁（MultiLock）、 红锁（RedLock）、 读写锁（ReadWriteLock）等，还提供了许多分布式服务。\n\nRedisson 提供了使用 Redis 的最简单和最便捷的方法。Redisson 的宗旨是促进使用者对 Redis 的关注分离（Separation of Concern），从而让使用者能够将精力更集中地放在处理业务逻辑上。\n\n**Redisson 分布式重入锁用法**\n\nRedisson 支持单点模式、主从模式、哨兵模式、集群模式，这里以单点模式为例：\n\n```lua\n// 1.构造redisson实现分布式锁必要的Config\nConfig config = new Config();\nconfig.useSingleServer().setAddress(\"redis://127.0.0.1:5379\").setPassword(\"123456\").setDatabase(0);\n// 2.构造RedissonClient\nRedissonClient redissonClient = Redisson.create(config);\n// 3.获取锁对象实例（无法保证是按线程的顺序获取到）\nRLock rLock = redissonClient.getLock(lockKey);\ntry {\n    /**\n     * 4.尝试获取锁\n     * waitTimeout 尝试获取锁的最大等待时间，超过这个值，则认为获取锁失败\n     * leaseTime   锁的持有时间,超过这个时间锁会自动失效（值应设置为大于业务处理的时间，确保在锁有效期内业务能处理完）\n     */\n    boolean res = rLock.tryLock((long)waitTimeout, (long)leaseTime, TimeUnit.SECONDS);\n    if (res) {\n        //成功获得锁，在这里处理业务\n    }\n} catch (Exception e) {\n    throw new RuntimeException(\"aquire lock fail\");\n}finally{\n    //无论如何, 最后都要解锁\n    rLock.unlock();\n}\n```\n\n加锁流程图\n\n![图片](/img/posts/java/interview/7.png)\n\n解锁流程图\n\n![图片](/img/posts/java/interview/8.png)\n\n我们可以看到，RedissonLock 是可重入的，并且考虑了失败重试，可以设置锁的最大等待时间， 在实现上也做了一些优化，减少了无效的锁申请，提升了资源的利用率。\n\n需要特别注意的是，RedissonLock 同样没有解决 节点挂掉的时候，存在丢失锁的风险的问题。而现实情况是有一些场景无法容忍的，所以 Redisson 提供了实现了 redlock 算法的 RedissonRedLock，RedissonRedLock 真正解决了单点失败的问题，代价是需要额外的为 RedissonRedLock 搭建 Redis 环境。\n\n所以，如果业务场景可以容忍这种小概率的错误，则推荐使用 RedissonLock， 如果无法容忍，则推荐使用 RedissonRedLock。\n\n### Redis 面试常见问答\n\n#### 什么是缓存雪崩？怎么解决？\n\n![图片](/img/posts/java/interview/9.png)\n\n通常，我们会使用缓存用于缓冲对 DB 的冲击，如果缓存宕机，所有请求将直接打在 DB，造成 DB 宕机——从而导致整个系统宕机。\n\n**如何解决呢？**\n\n![图片](/img/posts/java/interview/10.png)\n\n**2 种策略（同时使用）：**\n\n- 对缓存做高可用，防止缓存宕机\n- 使用断路器，如果缓存宕机，为了防止系统全部宕机，限制部分流量进入 DB，保证部分可用，其余的请求返回断路器的默认值。\n\n#### 什么是缓存穿透？怎么解决？\n\n**解释 1：**缓存查询一个没有的 key，同时数据库也没有，如果黑客大量的使用这种方式，那么就会导致 DB 宕机。\n\n**解决方案：**我们可以使用一个默认值来防止，例如，当访问一个不存在的 key，然后再去访问数据库，还是没有，那么就在缓存里放一个占位符，下次来的时候，检查这个占位符，如果发生时占位符，就不去数据库查询了，防止 DB 宕机。\n\n**解释 2：**大量请求查询一个刚刚失效的 key，导致 DB 压力倍增，可能导致宕机，但实际上，查询的都是相同的数据。\n\n**解决方案：**可以在这些请求代码加上双重检查锁。但是那个阶段的请求会变慢。不过总比 DB 宕机好。\n\n#### 什么是缓存并发竞争？怎么解决？\n\n**解释：**多个客户端写一个 key，如果顺序错了，数据就不对了。但是顺序我们无法控制。\n\n**解决方案：**使用分布式锁，例如 zk，同时加入数据的时间戳。同一时刻，只有抢到锁的客户端才能写入，同时，写入时，比较当前数据的时间戳和缓存中数据的时间戳。\n\n####什么是缓存和数据库双写不一致？怎么解决？\n\n解释：连续写数据库和缓存，但是操作期间，出现并发了，数据不一致了。\n\n通常，更新缓存和数据库有以下几种顺序：\n\n- 先更新数据库，再更新缓存。\n- 先删缓存，再更新数据库。\n- 先更新数据库，再删除缓存。\n\n_三种方式的优劣来看一下：_\n\n#### 先更新数据库，再更新缓存\n\n这么做的问题是：当有 2 个请求同时更新数据，那么如果不使用分布式锁，将无法控制最后缓存的值到底是多少。也就是并发写的时候有问题。\n\n#### 先删缓存，Redis 面试常见问答再更新数据库\n\n这么做的问题：如果在删除缓存后，有客户端读数据，将可能读到旧数据，并有可能设置到缓存中，导致缓存中的数据一直是老数据。\n\n有 2 种解决方案：\n\n- 使用“双删”，即删更删，最后一步的删除作为异步操作，就是防止有客户端读取的时候设置了旧值。\n- 使用队列，当这个 key 不存在时，将其放入队列，串行执行，必须等到更新数据库完毕才能读取数据。\n\n总的来讲，比较麻烦。\n\n#### 先更新数据库，再删除缓存\n\n这个实际是常用的方案，但是有很多人不知道，这里介绍一下，这个叫 Cache Aside Pattern，老外发明的。如果先更新数据库，再删除缓存，那么就会出现更新数据库之前有瞬间数据不是很及时。\n\n同时，如果在更新之前，缓存刚好失效了，读客户端有可能读到旧值，然后在写客户端删除结束后再次设置了旧值，非常巧合的情况。\n\n有 2 个前提条件：\n\n- 缓存在写之前的时候失效，同时，在写客户度删除操作结束后，放置旧数据 —— 也就是读比写慢。\n- 设置有的写操作还会锁表\n\n所以，这个很难出现，但是如果出现了怎么办？使用双删！！！记录更新期间有没有客户端读数据库，如果有，在更新完数据库之后，执行延迟删除。\n还有一种可能，如果执行更新数据库，准备执行删除缓存时，服务挂了，执行删除失败怎么办？？？\n这就坑了！！！不过可以通过订阅数据库的 binlog 来删除。\n\n### 谈谈 Redis 的过期策略\n\n在日常开发中，我们使用 Redis 存储 key 时通常会设置一个过期时间，但是 Redis 是怎么删除过期的 key，而且 Redis 是单线程的，删除 key 会不会造成阻塞。要搞清楚这些，就要了解 Redis 的过期策略和内存淘汰机制。\n\n**Redis 采用的是定期删除 + 懒惰删除策略。**\n\n#### 定期删除策略\n\nRedis 会将每个设置了过期时间的 key 放入到一个独立的字典中，默认每 100ms 进行一次过期扫描：\n\n1. 随机抽取 20 个 key\n2. 删除这 20 个 key 中过期的 key\n3. 如果过期的 key 比例超过 1/4，就重复步骤 1，继续删除。\n\n**为什不扫描所有的 key？**\n\nRedis 是单线程，全部扫描岂不是卡死了。而且为了防止每次扫描过期的 key 比例都超过 1/4，导致不停循环卡死线程，Redis 为每次扫描添加了上限时间，默认是 25ms。\n\n如果客户端将超时时间设置的比较短，比如 10ms，那么就会出现大量的链接因为超时而关闭，业务端就会出现很多异常。而且这时你还无法从 Redis 的 slowlog 中看到慢查询记录，因为慢查询指的是逻辑处理过程慢，不包含等待时间。\n\n如果在同一时间出现大面积 key 过期，Redis 循环多次扫描过期词典，直到过期的 key 比例小于 1/4。这会导致卡顿，而且在高并发的情况下，可能会导致缓存雪崩。\n\n**为什么 Redis 为每次扫描添的上限时间是 25ms，还会出现上面的情况？**\n\n因为 Redis 是单线程，每个请求处理都需要排队，而且由于 Redis 每次扫描都是 25ms，也就是每个请求最多 25ms，100 个请求就是 2500ms。\n\n如果有大批量的 key 过期，要给过期时间设置一个随机范围，而不宜全部在同一时间过期，分散过期处理的压力。\n\n#### 从库的过期策略\n\n从库不会进行过期扫描，从库对过期的处理是被动的。主库在 key 到期时，会在 AOF 文件里增加一条 del 指令，同步到所有的从库，从库通过执行这条 del 指令来删除过期的 key。\n\n因为指令同步是异步进行的，所以主库过期的 key 的 del 指令没有及时同步到从库的话，会出现主从数据的不一致，主库没有的数据在从库里还存在。\n\n#### 懒惰删除策略\n\n**Redis 为什么要懒惰删除(lazy free)？**\n\n删除指令 del 会直接释放对象的内存，大部分情况下，这个指令非常快，没有明显延迟。不过如果删除的 key 是一个非常大的对象，比如一个包含了千万元素的 hash，又或者在使用 FLUSHDB 和 FLUSHALL 删除包含大量键的数据库时，那么删除操作就会导致单线程卡顿。\n\nredis 4.0 引入了 lazyfree 的机制，它可以将删除键或数据库的操作放在后台线程里执行， 从而尽可能地避免服务器阻塞。\n\n#### unlink\n\nunlink 指令，它能对删除操作进行懒处理，丢给后台线程来异步回收内存。\n\n```bash\n> unlink key\nOK\n```\n\n#### flush\n\nflushdb 和 flushall 指令，用来清空数据库，这也是极其缓慢的操作。Redis 4.0 同样给这两个指令也带来了异步化，在指令后面增加 async 参数就可以将整棵大树连根拔起，扔给后台线程慢慢焚烧。\n\n```bash\n> flushall async\nOK\n```\n\n#### 异步队列\n\n主线程将对象的引用从「大树」中摘除后，会将这个 key 的内存回收操作包装成一个任务，塞进异步任务队列，后台线程会从这个异步队列中取任务。任务队列被主线程和异步线程同时操作，所以必须是一个线程安全的队列。\n\n不是所有的 unlink 操作都会延后处理，如果对应 key 所占用的内存很小，延后处理就没有必要了，这时候 Redis 会将对应的 key 内存立即回收，跟 del 指令一样。\n\n#### 更多异步删除点\n\nRedis 回收内存除了 del 指令和 flush 之外，还会存在于在 key 的过期、LRU 淘汰、rename 指令以及从库全量同步时接受完 rdb 文件后会立即进行的 flush 操作。\n\nRedis4.0 为这些删除点也带来了异步删除机制，打开这些点需要额外的配置选项。\n\n- slave-lazy-flush 从库接受完 rdb 文件后的 flush 操作\n- lazyfree-lazy-eviction 内存达到 maxmemory 时进行淘汰\n- lazyfree-lazy-expire key 过期删除\n- lazyfree-lazy-server-del rename 指令删除 destKey\n\n#### 内存淘汰机制\n\nRedis 的内存占用会越来越高。Redis 为了限制最大使用内存，提供了 redis.conf 中的\n配置参数 maxmemory。当内存超出 maxmemory，**Redis 提供了几种内存淘汰机制让用户选择，配置 maxmemory-policy：**\n\n- **noeviction：**当内存超出 maxmemory，写入请求会报错，但是删除和读请求可以继续。（使用这个策略，疯了吧）\n- **allkeys-lru：**当内存超出 maxmemory，在所有的 key 中，移除最少使用的 key。只把 Redis 既当缓存是使用这种策略。（推荐）。\n- **allkeys-random：**当内存超出 maxmemory，在所有的 key 中，随机移除某个 key。（应该没人用吧）\n- **volatile-lru：**当内存超出 maxmemory，在设置了过期时间 key 的字典中，移除最少使用的 key。把 Redis 既当缓存，又做持久化的时候使用这种策略。\n- **volatile-random：**当内存超出 maxmemory，在设置了过期时间 key 的字典中，随机移除某个 key。\n- **volatile-ttl：**当内存超出 maxmemory，在设置了过期时间 key 的字典中，优先移除 ttl 小的。\n\n#### LRU 算法\n\n实现 LRU 算法除了需要 key/value 字典外，还需要附加一个链表，链表中的元素按照一定的顺序进行排列。当空间满的时候，会踢掉链表尾部的元素。当字典的某个元素被访问时，它在链表中的位置会被移动到表头。所以链表的元素排列顺序就是元素最近被访问的时间顺序。\n\n使用 Python 的 OrderedDict(双向链表 + 字典) 来实现一个简单的 LRU 算法：\n\n```python\nfrom collections import OrderedDict\n\nclass LRUDict(OrderedDict):\n\n    def __init__(self, capacity):\n        self.capacity = capacity\n        self.items = OrderedDict()\n\n    def __setitem__(self, key, value):\n        old_value = self.items.get(key)\n        if old_value is not None:\n            self.items.pop(key)\n            self.items[key] = value\n        elif len(self.items) < self.capacity:\n            self.items[key] = value\n        else:\n            self.items.popitem(last=True)\n            self.items[key] = value\n\n    def __getitem__(self, key):\n        value = self.items.get(key)\n        if value is not None:\n            self.items.pop(key)\n            self.items[key] = value\n        return value\n\n    def __repr__(self):\n        return repr(self.items)\n\n\nd = LRUDict(10)\n\nfor i in range(15):\n    d[i] = i\nprint d\n```\n\n#### 近似 LRU 算法\n\nRedis 使用的并不是完全 LRU 算法。不使用 LRU 算法，是为了节省内存，Redis 采用的是随机 LRU 算法，Redis 为每一个 key 增加了一个 24 bit 的字段，用来记录这个 key 最后一次被访问的时间戳。\n\n注意 Redis 的 LRU 淘汰策略是懒惰处理，也就是不会主动执行淘汰策略，当 Redis 执行写操作时，发现内存超出 maxmemory，就会执行 LRU 淘汰算法。这个算法就是随机采样出 5(默认值)个 key，然后移除最旧的 key，如果移除后内存还是超出 maxmemory，那就继续随机采样淘汰，直到内存低于 maxmemory 为止。\n\n如何采样就是看 maxmemory-policy 的配置，如果是 allkeys 就是从所有的 key 字典中随机，如果是 volatile 就从带过期时间的 key 字典中随机。每次采样多少个 key 看的是 maxmemory_samples 的配置，默认为 5。\n\n#### LFU\n\nRedis 4.0 里引入了一个新的淘汰策略 —— LFU（Least Frequently Used） 模式，作者认为它比 LRU 更加优秀。\n\nLFU 表示按最近的访问频率进行淘汰，它比 LRU 更加精准地表示了一个 key 被访问的热度。\n\n如果一个 key 长时间不被访问，只是刚刚偶然被用户访问了一下，那么在使用 LRU 算法下它是不容易被淘汰的，因为 LRU 算法认为当前这个 key 是很热的。而 LFU 是需要追踪最近一段时间的访问频率，如果某个 key 只是偶然被访问一次是不足以变得很热的，它需要在近期一段时间内被访问很多次才有机会被认为很热。\n\n**Redis 对象的热度**\n\nRedis 的所有对象结构头中都有一个 24bit 的字段，这个字段用来记录对象的热度。\n\n```lua\n// redis 的对象头\ntypedef struct redisObject {\n    unsigned type:4; // 对象类型如 zset/set/hash 等等\n    unsigned encoding:4; // 对象编码如 ziplist/intset/skiplist 等等\n    unsigned lru:24; // 对象的「热度」\n    int refcount; // 引用计数\n    void *ptr; // 对象的 body\n} robj;\n```\n\n**LRU 模式**\n\n在 LRU 模式下，lru 字段存储的是 Redis 时钟 server.lruclock，Redis 时钟是一个 24bit 的整数，默认是 Unix 时间戳对 2^24 取模的结果，大约 97 天清零一次。当某个 key 被访问一次，它的对象头的 lru 字段值就会被更新为 server.lruclock。\n\n**LFU 模式**\n\n在 LFU 模式下，lru 字段 24 个 bit 用来存储两个值，分别是 ldt(last decrement time) 和 logc(logistic counter)。\n\nlogc 是 8 个 bit，用来存储访问频次，因为 8 个 bit 能表示的最大整数值为 255，存储频次肯定远远不够，所以这 8 个 bit 存储的是频次的对数值，并且这个值还会随时间衰减。如果它的值比较小，那么就很容易被回收。为了确保新创建的对象不被回收，新对象的这 8 个 bit 会初始化为一个大于零的值，默认是 LFU_INIT_VAL=5。\n\nldt 是 16 个位，用来存储上一次 logc 的更新时间，因为只有 16 位，所以精度不可能很高。它取的是分钟时间戳对 2^16 进行取模，大约每隔 45 天就会折返。\n\n同 LRU 模式一样，我们也可以使用这个逻辑计算出对象的空闲时间，只不过精度是分钟级别的。图中的 server.unixtime 是当前 redis 记录的系统时间戳，和 server.lruclock 一样，它也是每毫秒更新一次。\n\n\n\n\n\n","slug":"java/interview/index","published":1,"_id":"clny08vfe000s5ovf3dk93nf4","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"Java-基础\"><a href=\"#Java-基础\" class=\"headerlink\" title=\"Java 基础\"></a>Java 基础</h2><h3 id=\"为什么-HashMap-是线程不安全的？\"><a href=\"#为什么-HashMap-是线程不安全的？\" class=\"headerlink\" title=\"为什么 HashMap 是线程不安全的？\"></a>为什么 HashMap 是线程不安全的？</h3><p>在 jdk1.8 中，在多线程环境下，会发生数据覆盖的情况。</p>\n<h4 id=\"jdk1-8-中-HashMap\"><a href=\"#jdk1-8-中-HashMap\" class=\"headerlink\" title=\"jdk1.8 中 HashMap\"></a>jdk1.8 中 HashMap</h4><p>在 jdk1.8 中对 HashMap 进行了优化，在发生 hash 碰撞，不再采用头插法方式，而是直接插入链表尾部，因此不会出现环形链表的情况，但是在多线程的情况下仍然不安全，这里我们看 jdk1.8 中 HashMap 的 put 操作源码：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">final</span> <span class=\"token class-name\">V</span> <span class=\"token function\">putVal</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> hash<span class=\"token punctuation\">,</span> <span class=\"token class-name\">K</span> key<span class=\"token punctuation\">,</span> <span class=\"token class-name\">V</span> value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> onlyIfAbsent<span class=\"token punctuation\">,</span>\n                   <span class=\"token keyword\">boolean</span> evict<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Node</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> tab<span class=\"token punctuation\">;</span> <span class=\"token class-name\">Node</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> p<span class=\"token punctuation\">;</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>tab <span class=\"token operator\">=</span> table<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">=</span> tab<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            n <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>tab <span class=\"token operator\">=</span> <span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">=</span> tab<span class=\"token punctuation\">[</span>i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> hash<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 如果没有hash碰撞则直接插入元素</span>\n            tab<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">newNode</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">Node</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> e<span class=\"token punctuation\">;</span> <span class=\"token class-name\">K</span> k<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>hash <span class=\"token operator\">==</span> hash <span class=\"token operator\">&amp;&amp;</span>\n                <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> key <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                e <span class=\"token operator\">=</span> p<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">TreeNode</span><span class=\"token punctuation\">)</span>\n                e <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TreeNode</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">putTreeVal</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> tab<span class=\"token punctuation\">,</span> hash<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> binCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>binCount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        p<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> <span class=\"token function\">newNode</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>binCount <span class=\"token operator\">>=</span> <span class=\"token constant\">TREEIFY_THRESHOLD</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// -1 for 1st</span>\n                            <span class=\"token function\">treeifyBin</span><span class=\"token punctuation\">(</span>tab<span class=\"token punctuation\">,</span> hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">&#125;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>hash <span class=\"token operator\">==</span> hash <span class=\"token operator\">&amp;&amp;</span>\n                        <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> key <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                    p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// existing mapping for key</span>\n                <span class=\"token class-name\">V</span> oldValue <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>onlyIfAbsent <span class=\"token operator\">||</span> oldValue <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n                    e<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n                <span class=\"token function\">afterNodeAccess</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> oldValue<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token operator\">++</span>modCount<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">++</span>size <span class=\"token operator\">></span> threshold<span class=\"token punctuation\">)</span>\n            <span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">afterNodeInsertion</span><span class=\"token punctuation\">(</span>evict<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这是 jdk1.8 中 HashMap 中 put 操作的主函数， 注意第 6 行代码，如果没有 hash 碰撞则会直接插入元素。如果线程 A 和线程 B 同时进行 put 操作，刚好这两条不同的数据 hash 值一样，并且该位置数据为 null，所以这线程 A、B 都会进入第 6 行代码中。</p>\n<p>假设一种情况，线程 A 进入后还未进行数据插入时挂起，而线程 B 正常执行，从而正常插入数据，然后线程 A 获取 CPU 时间片，此时线程 A 不用再进行 hash 判断了，问题出现：线程 A 会把线程 B 插入的数据给覆盖，发生线程不安全。</p>\n<h3 id=\"单例模式一共有几种写法？\"><a href=\"#单例模式一共有几种写法？\" class=\"headerlink\" title=\"单例模式一共有几种写法？\"></a>单例模式一共有几种写法？</h3><p>大体可分为 4 类，下面分别介绍他们的基本形式、变种及特点。</p>\n<h4 id=\"饱汉模式\"><a href=\"#饱汉模式\" class=\"headerlink\" title=\"饱汉模式\"></a>饱汉模式</h4><p>饱汉是变种最多的单例模式。我们从饱汉出发，通过其变种逐渐了解实现单例模式时需要关注的问题。</p>\n<h5 id=\"基础的饱汉\"><a href=\"#基础的饱汉\" class=\"headerlink\" title=\"基础的饱汉\"></a>基础的饱汉</h5><p>饱汉，即已经吃饱，不着急再吃，饿的时候再吃。所以他就先不初始化单例，等第一次使用的时候再初始化，即“懒加载”。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 饱汉</span>\n<span class=\"token comment\">// UnThreadSafe</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton1</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton1</span> singleton <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">Singleton1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton1</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>singleton <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      singleton <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Singleton1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> singleton<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>饱汉模式的核心就是懒加载。好处是更启动速度快、节省资源，一直到实例被第一次访问，才需要初始化单例；小坏处是写起来麻烦，大坏处是线程不安全，if 语句存在竞态条件。</p>\n<p>写起来麻烦不是大问题，可读性好啊。因此，单线程环境下，基础饱汉是笔者最喜欢的写法。但多线程环境下，基础饱汉就彻底不可用了。下面的几种变种都在试图解决基础饱汉线程不安全的问题。</p>\n<h5 id=\"饱汉-变种-1\"><a href=\"#饱汉-变种-1\" class=\"headerlink\" title=\"饱汉 - 变种 1\"></a>饱汉 - 变种 1</h5><p>最粗暴的犯法是用 synchronized 关键字修饰 getInstance()方法，这样能达到绝对的线程安全。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 饱汉</span>\n<span class=\"token comment\">// ThreadSafe</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton1_1</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton1_1</span> singleton <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">Singleton1_1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">synchronized</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton1_1</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>singleton <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      singleton <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Singleton1_1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> singleton<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>变种 1 的好处是写起来简单，且绝对线程安全；坏处是并发性能极差，事实上完全退化到了串行。单例只需要初始化一次，但就算初始化以后，synchronized 的锁也无法避开，从而 getInstance()完全变成了串行操作。性能不敏感的场景建议使用。</p>\n<h5 id=\"饱汉-变种-2\"><a href=\"#饱汉-变种-2\" class=\"headerlink\" title=\"饱汉 - 变种 2\"></a>饱汉 - 变种 2</h5><p>变种 2 是“臭名昭著”的 DCL 1.0。</p>\n<p>针对变种 1 中单例初始化后锁仍然无法避开的问题，变种 2 在变种 1 的外层又套了一层 check，加上 synchronized 内层的 check，即所谓“双重检查锁”（Double Check Lock，简称 DCL）。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 饱汉</span>\n<span class=\"token comment\">// UnThreadSafe</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton1_2</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton1_2</span> singleton <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> f1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 触发部分初始化问题</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> f2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">Singleton1_2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton1_2</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// may get half object</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>singleton <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Singleton1_2</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>singleton <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          singleton <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Singleton1_2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> singleton<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>变种 2 的核心是 DCL，看起来变种 2 似乎已经达到了理想的效果：懒加载+线程安全。可惜的是，正如注释中所说，DCL 仍然是线程不安全的，由于指令重排序，你可能会得到“半个对象”，即”部分初始化“问题。详细在看完变种 3 后，可参考下面这篇文章，这里不再赘述。</p>\n<blockquote>\n<p><a href=\"https://monkeysayhi.github.io/2016/11/29/volatile%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E4%BD%9C%E7%94%A8%E3%80%81%E5%8E%9F%E7%90%86/\">https://monkeysayhi.github.io/2016/11/29/volatile关键字的作用、原理/</a></p>\n</blockquote>\n<h5 id=\"饱汉-变种-3\"><a href=\"#饱汉-变种-3\" class=\"headerlink\" title=\"饱汉 - 变种 3\"></a>饱汉 - 变种 3</h5><p>变种 3 专门针对变种 2，可谓 DCL 2.0。</p>\n<p>针对变种 3 的“半个对象”问题，变种 3 在 instance 上增加了 volatile 关键字，原理见上述参考。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 饱汉</span>\n<span class=\"token comment\">// ThreadSafe</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton1_3</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">volatile</span> <span class=\"token class-name\">Singleton1_3</span> singleton <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> f1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 触发部分初始化问题</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> f2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">Singleton1_3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton1_3</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>singleton <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Singleton1_3</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// must be a complete instance</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>singleton <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          singleton <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Singleton1_3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> singleton<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>多线程环境下，变种 3 更适用于性能敏感的场景。但后面我们将了解到，就算是线程安全的，还有一些办法能破坏单例。</p>\n<p>当然，还有很多方式，能通过与 volatile 类似的方式防止部分初始化。读者可自行阅读内存屏障相关内容，但面试时不建议主动装逼。</p>\n<h4 id=\"饿汉模式\"><a href=\"#饿汉模式\" class=\"headerlink\" title=\"饿汉模式\"></a>饿汉模式</h4><p>与饱汉相对，饿汉很饿，只想着尽早吃到。所以他就在最早的时机，即类加载时初始化单例，以后访问时直接返回即可。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 饿汉</span>\n<span class=\"token comment\">// ThreadSafe</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton2</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Singleton2</span> singleton <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Singleton2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">Singleton2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton2</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> singleton<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>饿汉的好处是天生的线程安全（得益于类加载机制），写起来超级简单，使用时没有延迟；坏处是有可能造成资源浪费（如果类加载后就一直不使用单例的话）。</p>\n<blockquote>\n<p>值得注意的时，单线程环境下，饿汉与饱汉在性能上没什么差别；但多线程环境下，由于饱汉需要加锁，饿汉的性能反而更优。</p>\n</blockquote>\n<h4 id=\"Holder-模式\"><a href=\"#Holder-模式\" class=\"headerlink\" title=\"Holder 模式\"></a>Holder 模式</h4><p>我们既希望利用饿汉模式中静态变量的方便和线程安全；又希望通过懒加载规避资源浪费。Holder 模式满足了这两点要求：核心仍然是静态变量，足够方便和线程安全；通过静态的 Holder 类持有真正实例，间接实现了懒加载。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// Holder模式</span>\n<span class=\"token comment\">// ThreadSafe</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton3</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SingletonHolder</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Singleton3</span> singleton <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Singleton3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">SingletonHolder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">Singleton3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">/**\n  * 勘误：多写了个synchronized。。\n  public synchronized static Singleton3 getInstance() &#123;\n    return SingletonHolder.singleton;\n  &#125;\n  */</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton3</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name\">SingletonHolder</span><span class=\"token punctuation\">.</span>singleton<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>相对于饿汉模式，Holder 模式仅增加了一个静态内部类的成本，与饱汉的变种 3 效果相当（略优），都是比较受欢迎的实现方式。同样建议考虑。</p>\n<h4 id=\"枚举模式\"><a href=\"#枚举模式\" class=\"headerlink\" title=\"枚举模式\"></a>枚举模式</h4><p>用枚举实现单例模式，相当好用，但可读性是不存在的。</p>\n<h5 id=\"基础的枚举\"><a href=\"#基础的枚举\" class=\"headerlink\" title=\"基础的枚举\"></a>基础的枚举</h5><p>将枚举的静态成员变量作为单例的实例：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 枚举</span>\n<span class=\"token comment\">// ThreadSafe</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">Singleton4</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token constant\">SINGLETON</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>代码量比饿汉模式更少。但用户只能直接访问实例 Singleton4.SINGLETON——事实上，这样的访问方式作为单例使用也是恰当的，只是牺牲了静态工厂方法的优点，如无法实现懒加载。</p>\n<h5 id=\"丑陋但好用的语法糖\"><a href=\"#丑陋但好用的语法糖\" class=\"headerlink\" title=\"丑陋但好用的语法糖\"></a>丑陋但好用的语法糖</h5><p>Java 的枚举是一个“丑陋但好用的语法糖”。</p>\n<h5 id=\"枚举型单例模式的本质\"><a href=\"#枚举型单例模式的本质\" class=\"headerlink\" title=\"枚举型单例模式的本质\"></a>枚举型单例模式的本质</h5><p>通过反编译打开语法糖，就看到了枚举类型的本质，简化如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 枚举</span>\n<span class=\"token comment\">// ThreadSafe</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton4</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Enum</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Singleton4</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Singleton4</span> <span class=\"token constant\">SINGLETON</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Singleton4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>本质上和饿汉模式相同，区别仅在于公有的静态成员变量。</p>\n<h5 id=\"用枚举实现一些-trick\"><a href=\"#用枚举实现一些-trick\" class=\"headerlink\" title=\"用枚举实现一些 trick\"></a>用枚举实现一些 trick</h5><blockquote>\n<p>这一部分与单例没什么关系，可以跳过。如果选择阅读也请认清这样的事实：虽然枚举相当灵活，但如何恰当的使用枚举有一定难度。一个足够简单的典型例子是 TimeUnit 类，建议有时间耐心阅读。</p>\n</blockquote>\n<p>上面已经看到，枚举型单例的本质仍然是一个普通的类。实际上，我们可以在枚举型型单例上增加任何普通类可以完成的功能。要点在于枚举实例的初始化，可以理解为实例化了一个匿名内部类。为了更明显，我们在 Singleton4_1 中定义一个普通的私有成员变量，一个普通的公有成员方法，和一个公有的抽象成员方法，如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 枚举</span>\n<span class=\"token comment\">// ThreadSafe</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">Singleton4_1</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">SINGLETON</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"enum is the easiest singleton pattern, but not the most readable\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testAbsMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"enum is ugly, but so flexible to make lots of trick\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> comment <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">Singleton4_1</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> comment<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>comment <span class=\"token operator\">=</span> comment<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"comment=\"</span> <span class=\"token operator\">+</span> comment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testAbsMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton4_1</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token constant\">SINGLETON</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这样，枚举类 Singleton4_1 中的每一个枚举实例不仅继承了父类 Singleton4_1 的成员方法 print()，还必须实现父类 Singleton4_1 的抽象成员方法 testAbsMethod()。</p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><p>上面的分析都忽略了反射和序列化的问题。通过反射或序列化，我们仍然能够访问到私有构造器，创建新的实例破坏单例模式。此时，只有枚举模式能天然防范这一问题。反射和序列化笔者还不太了解，但基本原理并不难，可以在其他模式上手动实现。</p>\n<p>下面继续忽略反射和序列化的问题，做个总结回味一下：</p>\n<p><img src=\"/img/posts/java/interview/5.png\" alt=\"图片\"></p>\n<h3 id=\"你能说说进程与线程的区别吗\"><a href=\"#你能说说进程与线程的区别吗\" class=\"headerlink\" title=\"你能说说进程与线程的区别吗\"></a>你能说说进程与线程的区别吗</h3><h4 id=\"两者的定义\"><a href=\"#两者的定义\" class=\"headerlink\" title=\"两者的定义\"></a>两者的定义</h4><p>进程是具有一定独立功能的程序关于某个数据集合上的一次运行活动，进程是系统进行资源分配和调度的一个独立单位。</p>\n<p>线程是进程的一个实体，是 CPU 调度和分派的基本单位，它是比进程更小的能独立运行的基本单位.线程自己基本上不拥有系统资源，只拥有一点在运行中必不可少的资源(如程序计数器,一组寄存器和栈)，但是它可与同属一个进程的其他的线程共享进程所拥有的全部资源。</p>\n<h4 id=\"进程与线程的区别\"><a href=\"#进程与线程的区别\" class=\"headerlink\" title=\"进程与线程的区别\"></a>进程与线程的区别</h4><ol>\n<li>进程是资源分配最小单位，线程是程序执行的最小单位；</li>\n<li>进程有自己独立的地址空间，每启动一个进程，系统都会为其分配地址空间，建立数据表来维护代码段、堆栈段和数据段，线程没有独立的地址空间，它使用相同的地址空间共享数据；</li>\n<li>CPU 切换一个线程比切换进程花费小；</li>\n<li>创建一个线程比进程开销小；</li>\n<li>线程占用的资源要⽐进程少很多。</li>\n<li>线程之间通信更方便，同一个进程下，线程共享全局变量，静态变量等数据，进程之间的通信需要以通信的方式（IPC）进行；（但多线程程序处理好同步与互斥是个难点）</li>\n<li>多进程程序更安全，生命力更强，一个进程死掉不会对另一个进程造成影响（源于有独立的地址空间），多线程程序更不易维护，一个线程死掉，整个进程就死掉了（因为共享地址空间）；</li>\n<li>进程对资源保护要求高，开销大，效率相对较低，线程资源保护要求不高，但开销小，效率高，可频繁切换；</li>\n</ol>\n<h3 id=\"创建线程有几种不同的方式？你喜欢哪一种？为什么？\"><a href=\"#创建线程有几种不同的方式？你喜欢哪一种？为什么？\" class=\"headerlink\" title=\"创建线程有几种不同的方式？你喜欢哪一种？为什么？\"></a>创建线程有几种不同的方式？你喜欢哪一种？为什么？</h3><p>有三种方式可以用来创建线程：</p>\n<ul>\n<li>继承 Thread 类</li>\n<li>实现 Runnable 接口</li>\n<li>应用程序可以使用 Executor 框架来创建线程池</li>\n</ul>\n<p>实现 Runnable 接口这种方式更受欢迎，因为这不需要继承 Thread 类。在应用设计中已经继承了别的对象的情况下，这需要多继承（而 Java 不支持多继承），只能实现接口。同时，线程池也是非常高效的，很容易实现和使用。</p>\n<h3 id=\"概括的解释下线程的几种可用状态。\"><a href=\"#概括的解释下线程的几种可用状态。\" class=\"headerlink\" title=\"概括的解释下线程的几种可用状态。\"></a>概括的解释下线程的几种可用状态。</h3><p><strong>新建( new )：</strong>新创建了一个线程对象；</p>\n<p><strong>可运行( runnable )：</strong>线程对象创建后，其他线程(比如 main 线程）调用了该对象的 start ()方法。该状态的线程位于可运行线程池中，等待被线程调度选中，获 取 CPU 的使用权；</p>\n<p><strong>运行( running )：</strong>可运行状态( runnable )的线程获得了 CPU 时间片（ timeslice ） ，执行程序代码；</p>\n<p><strong>阻塞( block )：</strong>阻塞状态是指线程因为某种原因放弃了 CPU 使用权，也即让出了 CPU timeslice ，暂时停止运行。直到线程进入可运行( runnable )状态，才有 机会再次获得 cpu timeslice 转到运行( running )状态。</p>\n<p>阻塞的情况分三种：</p>\n<ol>\n<li>等待阻塞：运行( running )的线程执行 o . wait ()方法， JVM 会把该线程放 入等待队列( waitting queue )中。</li>\n<li>同步阻塞：运行( running )的线程在获取对象的同步锁时，若该同步锁被别的线程占用，则 JVM 会把该线程放入锁池( lock pool )中。</li>\n<li>其他阻塞: 运行( running )的线程执行 Thread . sleep ( long ms )或 t . join ()方法，或者发出了 I &#x2F; O 请求时， JVM 会把该线程置为阻塞状态。当 sleep ()状态超时、 join ()等待线程终止或者超时、或者 I &#x2F; O 处理完毕时，线程重新转入可运行( runnable )状态。</li>\n</ol>\n<p><strong>死亡( dead )：</strong>线程 run ()、 main () 方法执行结束，或者因异常退出了 run ()方法，则该线程结束生命周期。死亡的线程不可再次复生。</p>\n<h3 id=\"同步方法和同步代码块的区别是什么？\"><a href=\"#同步方法和同步代码块的区别是什么？\" class=\"headerlink\" title=\"同步方法和同步代码块的区别是什么？\"></a>同步方法和同步代码块的区别是什么？</h3><p><strong>区别：</strong></p>\n<ul>\n<li>同步方法默认用 this 或者当前类 class 对象作为锁；</li>\n<li>同步代码块可以选择以什么来加锁，比同步方法要更细颗粒度，我们可以选择只同步会发生同步问题的部分代码而不是整个方法；</li>\n</ul>\n<h3 id=\"在监视器-Monitor-内部，是如何做线程同步的？程序应该做哪种级别的同步？\"><a href=\"#在监视器-Monitor-内部，是如何做线程同步的？程序应该做哪种级别的同步？\" class=\"headerlink\" title=\"在监视器(Monitor)内部，是如何做线程同步的？程序应该做哪种级别的同步？\"></a>在监视器(Monitor)内部，是如何做线程同步的？程序应该做哪种级别的同步？</h3><p>监视器和锁在 Java 虚拟机中是一块使用的。监视器监视一块同步代码块，确保一次只有一个线程执行同步代码块。每一个监视器都和一个对象引用相关联。线程在获取锁之前不允许执行同步代码。</p>\n<p>java 还提供了显式监视器( Lock )和隐式监视器( synchronized )两种锁方案。</p>\n<h3 id=\"什么是死锁-deadlock-？\"><a href=\"#什么是死锁-deadlock-？\" class=\"headerlink\" title=\"什么是死锁(deadlock)？\"></a>什么是死锁(deadlock)？</h3><p>两个线程或两个以上线程都在等待对方执行完毕才能继续往下执行的时候就发生了死锁。结果就是这些线程都陷入了无限的等待中。</p>\n<h3 id=\"如何确保-N-个线程可以访问-N-个资源同时又不导致死锁？\"><a href=\"#如何确保-N-个线程可以访问-N-个资源同时又不导致死锁？\" class=\"headerlink\" title=\"如何确保 N 个线程可以访问 N 个资源同时又不导致死锁？\"></a>如何确保 N 个线程可以访问 N 个资源同时又不导致死锁？</h3><p>多线程产生死锁的四个必要条件：</p>\n<ul>\n<li><strong>互斥条件：</strong>一个资源每次只能被一个进程使用。</li>\n<li><strong>保持和请求条件：</strong>一个进程因请求资源而阻塞时，对已获得资源保持不放。</li>\n<li><strong>不可剥夺性：</strong>进程已获得资源，在未使用完成前，不能被剥夺。</li>\n<li><strong>循环等待条件（闭环）：</strong>若干进程之间形成一种头尾相接的循环等待资源关系。</li>\n</ul>\n<p>只要破坏其中任意一个条件，就可以避免死锁</p>\n<p>一种非常简单的避免死锁的方式就是：<strong>指定获取锁的顺序，并强制线程按照指定的顺序获取锁。</strong>因此，如果所有的线程都是以同样的顺序加锁和释放锁，就不会出现死锁了。</p>\n<h3 id=\"Java-序列化与反序列化三连问：是什么？为什么要？如何做？\"><a href=\"#Java-序列化与反序列化三连问：是什么？为什么要？如何做？\" class=\"headerlink\" title=\"Java 序列化与反序列化三连问：是什么？为什么要？如何做？\"></a>Java 序列化与反序列化三连问：是什么？为什么要？如何做？</h3><h4 id=\"Java-序列化与反序列化是什么？\"><a href=\"#Java-序列化与反序列化是什么？\" class=\"headerlink\" title=\"Java 序列化与反序列化是什么？\"></a>Java 序列化与反序列化是什么？</h4><p>Java 序列化是指把 Java 对象转换为字节序列的过程，而 Java 反序列化是指把字节序列恢复为 Java 对象的过程：</p>\n<ul>\n<li><strong>序列化</strong>：对象序列化的最主要的用处就是在传递和保存对象的时候，保证对象的完整性和可传递性。序列化是把对象转换成有序字节流，以便在网络上传输或者保存在本地文件中。核心作用是对象状态的保存与重建。</li>\n<li><strong>反序列化</strong>：客户端从文件中或网络上获得序列化后的对象字节流，根据字节流中所保存的对象状态及描述信息，通过反序列化重建对象。</li>\n</ul>\n<h4 id=\"为什么需要序列化与反序列化？\"><a href=\"#为什么需要序列化与反序列化？\" class=\"headerlink\" title=\"为什么需要序列化与反序列化？\"></a>为什么需要序列化与反序列化？</h4><p>为什么要序列化，那就是说一下序列化的好处喽，序列化有什么什么优点，所以我们要序列化。</p>\n<p><strong>一：对象序列化可以实现分布式对象。</strong></p>\n<p>主要应用例如：RMI(即远程调用 Remote Method Invocation)要利用对象序列化运行远程主机上的服务，就像在本地机上运行对象时一样。</p>\n<p><strong>二：java 对象序列化不仅保留一个对象的数据，而且递归保存对象引用的每个对象的数据。</strong></p>\n<p>可以将整个对象层次写入字节流中，可以保存在文件中或在网络连接上传递。利用对象序列化可以进行对象的”深复制”，即复制对象本身及引用的对象本身。序列化一个对象可能得到整个对象序列。</p>\n<p><strong>三：序列化可以将内存中的类写入文件或数据库中。</strong></p>\n<p>比如：将某个类序列化后存为文件，下次读取时只需将文件中的数据反序列化就可以将原先的类还原到内存中。也可以将类序列化为流数据进行传输。</p>\n<p>总的来说就是将一个已经实例化的类转成文件存储，下次需要实例化的时候只要反序列化即可将类实例化到内存中并保留序列化时类中的所有变量和状态。</p>\n<p><strong>四：对象、文件、数据，有许多不同的格式，很难统一传输和保存。</strong></p>\n<p>序列化以后就都是字节流了，无论原来是什么东西，都能变成一样的东西，就可以进行通用的格式传输或保存，传输结束以后，要再次使用，就进行反序列化还原，这样对象还是对象，文件还是文件。</p>\n<h4 id=\"如何实现-Java-序列化与反序列化\"><a href=\"#如何实现-Java-序列化与反序列化\" class=\"headerlink\" title=\"如何实现 Java 序列化与反序列化?\"></a>如何实现 Java 序列化与反序列化?</h4><p>首先我们要把准备要序列化类，实现 Serializabel 接口</p>\n<p>例如：我们要 Person 类里的 name 和 age 都序列化</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Serializable</span></span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Serializable</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//本类可以序列化</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"姓名：\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">\"，年龄\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>然后：我们将 name 和 age 序列化（也就是把这 2 个对象转为二进制，理解为“打碎”）</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>lxh<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SerDemo</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">File</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileOutputStream</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ObjectOutputStream</span></span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ObjectOutputStreamDemo</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//序列化</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//序列化后生成指定文件路径</span>\n        <span class=\"token class-name\">File</span> file <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"D:\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">.</span>separator <span class=\"token operator\">+</span> <span class=\"token string\">\"person.ser\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ObjectOutputStream</span> oos <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//装饰流（流）</span>\n        oos <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObjectOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FileOutputStream</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//实例化类</span>\n        <span class=\"token class-name\">Person</span> per <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"张三\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        oos<span class=\"token punctuation\">.</span><span class=\"token function\">writeObject</span><span class=\"token punctuation\">(</span>per<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//把类对象序列化</span>\n        oos<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>《Java 对象的序列化（Serialization）和反序列化详解》<br><a href=\"https://blog.csdn.net/yaomingyang/article/details/79321939\">https://blog.csdn.net/yaomingyang/article/details/79321939</a></p>\n</blockquote>\n<blockquote>\n<p>《Java 序列化的高级认识》<br><a href=\"https://www.ibm.com/developerworks/cn/java/j-lo-serial/\">https://www.ibm.com/developerworks/cn/java/j-lo-serial/</a></p>\n</blockquote>\n<h3 id=\"什么情况用ArrayList-or-LinkedList呢\"><a href=\"#什么情况用ArrayList-or-LinkedList呢\" class=\"headerlink\" title=\"什么情况用ArrayList or LinkedList呢?\"></a>什么情况用ArrayList or LinkedList呢?</h3><p>列表（list）是元素的有序集合，也称为序列。它提供了基于元素位置的操作，有助于快速访问、添加和删除列表中特定索引位置的元素。List 接口实现了 <code>Collection </code>和 <code>Iterable </code>作为父接口。它允许存储重复值和空值，支持通过索引访问元素。</p>\n<h4 id=\"ArrayList-和-LinkedList-的不同之处\"><a href=\"#ArrayList-和-LinkedList-的不同之处\" class=\"headerlink\" title=\"ArrayList 和 LinkedList 的不同之处\"></a>ArrayList 和 LinkedList 的不同之处</h4><h5 id=\"增加元素到列表尾端\"><a href=\"#增加元素到列表尾端\" class=\"headerlink\" title=\"增加元素到列表尾端\"></a>增加元素到列表尾端</h5><p>在 <code>ArrayList</code> 中增加元素到队列尾端的代码如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">E</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n   <span class=\"token function\">ensureCapacity</span><span class=\"token punctuation\">(</span>size<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//确保内部数组有足够的空间</span>\n   elementData<span class=\"token punctuation\">[</span>size<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>e<span class=\"token punctuation\">;</span><span class=\"token comment\">//将元素加入到数组的末尾，完成添加</span>\n   <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>      \n<span class=\"token punctuation\">&#125;</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>ArrayList</code>中 <code>add()</code> 方法的性能决定于<code>ensureCapacity()</code>方法。<code>ensureCapacity()</code>的实现如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> vod <span class=\"token function\">ensureCapacity</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> minCapacity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  modCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">int</span> oldCapacity<span class=\"token operator\">=</span>elementData<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>minCapacity<span class=\"token operator\">></span>oldCapacity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>    <span class=\"token comment\">//如果数组容量不足，进行扩容</span>\n      <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> oldData<span class=\"token operator\">=</span>elementData<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">int</span> newCapacity<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>oldCapacity<span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//扩容到原始容量的1.5倍</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>newCapacitty<span class=\"token operator\">&lt;</span>minCapacity<span class=\"token punctuation\">)</span>   <span class=\"token comment\">//如果新容量小于最小需要的容量，则使用最小</span>\n                                                    <span class=\"token comment\">//需要的容量大小</span>\n         newCapacity<span class=\"token operator\">=</span>minCapacity <span class=\"token punctuation\">;</span>  <span class=\"token comment\">//进行扩容的数组复制</span>\n         elementData<span class=\"token operator\">=</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyof</span><span class=\"token punctuation\">(</span>elementData<span class=\"token punctuation\">,</span>newCapacity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可以看到，只要<code>ArrayList</code>的当前容量足够大，<code>a  dd()</code>操作的效率非常高的。只有当<code>ArrayList</code>对容量的需求超出当前数组大小时，才需要进行扩容。扩容的过程中，会进行大量的数组复制操作。而数组复制时，最终将调用<code>System.arraycopy()</code>方法，因此<code>add()</code>操作的效率还是相当高的。</p>\n<p><code>LinkedList</code> 的<code>add()</code>操作实现如下，它也将任意元素增加到队列的尾端：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">E</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n   <span class=\"token function\">addBefore</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>header<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//将元素增加到header的前面</span>\n   <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>其中<code>addBefore()</code>的方法实现如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">E</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">addBefore</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">E</span> e<span class=\"token punctuation\">,</span><span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">E</span><span class=\"token punctuation\">></span></span> entry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n     <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">E</span><span class=\"token punctuation\">></span></span> newEntry <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">E</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>entry<span class=\"token punctuation\">,</span>entry<span class=\"token punctuation\">.</span>previous<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     newEntry<span class=\"token punctuation\">.</span>provious<span class=\"token punctuation\">.</span>next<span class=\"token operator\">=</span>newEntry<span class=\"token punctuation\">;</span>\n     newEntry<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">.</span>previous<span class=\"token operator\">=</span>newEntry<span class=\"token punctuation\">;</span>\n     size<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n     modCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">return</span> newEntry<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可见，<strong>LinkeList由于使用了链表的结构，因此不需要维护容量的大小。从这点上说，它比ArrayList有一定的性能优势，然而，每次的元素增加都需要新建一个Entry对象，并进行更多的赋值操作。在频繁的系统调用中，对性能会产生一定的影响。</strong></p>\n<h5 id=\"增加元素到列表任意位置\"><a href=\"#增加元素到列表任意位置\" class=\"headerlink\" title=\"增加元素到列表任意位置\"></a>增加元素到列表任意位置</h5><p>除了提供元素到List的尾端，List接口还提供了在任意位置插入元素的方法：<code>void add(int index,E element);</code></p>\n<p><strong>由于实现的不同，ArrayList和LinkedList在这个方法上存在一定的性能差异，由于ArrayList是基于数组实现的，而数组是一块连续的内存空间，如果在数组的任意位置插入元素，必然导致在该位置后的所有元素需要重新排列，因此，其效率相对会比较低。</strong></p>\n<p>以下代码是ArrayList中的实现：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token punctuation\">,</span><span class=\"token class-name\">E</span> element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n   <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>index<span class=\"token operator\">></span>size<span class=\"token operator\">||</span>index<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IndexOutOfBoundsException</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"Index:\"</span><span class=\"token operator\">+</span>index<span class=\"token operator\">+</span><span class=\"token string\">\",size: \"</span><span class=\"token operator\">+</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token function\">ensureCapacity</span><span class=\"token punctuation\">(</span>size<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">arraycopy</span><span class=\"token punctuation\">(</span>elementData<span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span>elementData<span class=\"token punctuation\">,</span>index<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>size<span class=\"token operator\">-</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         elementData<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> element<span class=\"token punctuation\">;</span>\n         size<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可以看到每次插入操作，都会进行一次数组复制。而这个操作在增加元素到List尾端的时候是不存在的，大量的数组重组操作会导致系统性能低下。并且插入元素在List中的位置越是靠前，数组重组的开销也越大。</p>\n<p>而LinkedList此时显示了优势：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token punctuation\">,</span><span class=\"token class-name\">E</span> element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n   <span class=\"token function\">addBefore</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>index<span class=\"token operator\">==</span>size<span class=\"token operator\">?</span>header<span class=\"token operator\">:</span><span class=\"token function\">entry</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>可见，<strong>对LinkedList来说，在List的尾端插入数据与在任意位置插入数据是一样的，不会因为插入的位置靠前而导致插入的方法性能降低。</strong></p>\n<h5 id=\"删除任意位置元素\"><a href=\"#删除任意位置元素\" class=\"headerlink\" title=\"删除任意位置元素\"></a>删除任意位置元素</h5><p>对于元素的删除，List接口提供了在任意位置删除元素的方法：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">E</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>对ArrayList来说，remove()方法和add()方法是雷同的。在任意位置移除元素后，都要进行数组的重组。ArrayList的实现如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">E</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n   <span class=\"token class-name\">RangeCheck</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   modCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n   <span class=\"token class-name\">E</span> oldValue<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">E</span><span class=\"token punctuation\">)</span> elementData<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">int</span> numMoved<span class=\"token operator\">=</span>size<span class=\"token operator\">-</span>index<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>numMoved<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n     <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">arraycopy</span><span class=\"token punctuation\">(</span>elementData<span class=\"token punctuation\">,</span>index<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>elementData<span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span>numMoved<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     elementData<span class=\"token punctuation\">[</span><span class=\"token operator\">--</span>size<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">return</span> oldValue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可以看到，<strong>在ArrayList的每一次有效的元素删除操作后，都要进行数组的重组。并且删除的位置越靠前，数组重组时的开销越大。</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">E</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token function\">entry</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>         \n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">E</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">entry</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>index<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span> <span class=\"token operator\">||</span> index<span class=\"token operator\">>=</span>size<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IndexOutBoundsException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Index:\"</span><span class=\"token operator\">+</span>index<span class=\"token operator\">+</span><span class=\"token string\">\",size:\"</span><span class=\"token operator\">+</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">E</span><span class=\"token punctuation\">></span></span> e<span class=\"token operator\">=</span> header<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>index<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>size<span class=\"token operator\">>></span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token comment\">//要删除的元素位于前半段</span>\n         <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>index<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n             e<span class=\"token operator\">=</span>e<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n         <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span>size<span class=\"token punctuation\">;</span>i<span class=\"token operator\">></span>index<span class=\"token punctuation\">;</span>i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\n             e<span class=\"token operator\">=</span>e<span class=\"token punctuation\">.</span>previous<span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#125;</span>\n         <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在LinkedList的实现中，首先要通过循环找到要删除的元素。如果要删除的位置处于List的前半段，则从前往后找；若其位置处于后半段，则从后往前找。因此无论要删除较为靠前或者靠后的元素都是非常高效的；但要移除List中间的元素却几乎要遍历完半个List，在List拥有大量元素的情况下，效率很低。</p>\n<h5 id=\"容量参数\"><a href=\"#容量参数\" class=\"headerlink\" title=\"容量参数\"></a>容量参数</h5><p>容量参数是ArrayList和Vector等基于数组的List的特有性能参数。它表示初始化的数组大小。当ArrayList所存储的元素数量超过其已有大小时。它便会进行扩容，数组的扩容会导致整个数组进行一次内存复制。因此合理的数组大小有助于减少数组扩容的次数，从而提高系统性能。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span>  <span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">ArrayList</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> initialCapacity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n   <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>initialCapacity<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n       <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Illegal Capacity:\"</span><span class=\"token operator\">+</span>initialCapacity<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elementData<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span>initialCapacity<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>ArrayList提供了一个可以制定初始数组大小的构造函数：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> initialCapacity<span class=\"token punctuation\">)</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>现以构造一个拥有100万元素的List为例，当使用默认初始化大小时，其消耗的相对时间为125ms左右，当直接制定数组大小为100万时，构造相同的ArrayList仅相对耗时16ms。</p>\n<h5 id=\"遍历列表\"><a href=\"#遍历列表\" class=\"headerlink\" title=\"遍历列表\"></a>遍历列表</h5><p>遍历列表操作是最常用的列表操作之一，在JDK1.5之后，至少有3中常用的列表遍历方式：</p>\n<blockquote>\n<ul>\n<li>forEach操作</li>\n<li>迭代器</li>\n<li>for循环。</li>\n</ul>\n</blockquote>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">String</span> tmp<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">long</span> start<span class=\"token operator\">=</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMills</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//ForEach </span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token operator\">:</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    tmp<span class=\"token operator\">=</span>s<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foreach spend:\"</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMills</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nstart <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMills</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> it<span class=\"token operator\">=</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>it<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>    \n   tmp<span class=\"token operator\">=</span>it<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Iterator spend;\"</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMills</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nstart<span class=\"token operator\">=</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMills</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> size<span class=\"token operator\">=</span><span class=\"token punctuation\">;</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>size<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>                     \n    tmp<span class=\"token operator\">=</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"for spend;\"</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMills</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>构造一个拥有100万数据的ArrayList和等价的LinkedList，使用以上代码进行测试，测试结果：</p>\n<p><img src=\"https://jason-dong-blog-1259058668.cos.ap-nanjing.myqcloud.com/img/11.png\" alt=\"图片\"></p>\n<p>可以看到，<strong>最简便的ForEach循环并没有很好的性能表现，综合性能不如普通的迭代器，而是用for循环通过随机访问遍历列表时，ArrayList表项很好，但是LinkedList的表现却无法让人接受，甚至没有办法等待程序的结束。这是因为对LinkedList进行随机访问时，总会进行一次列表的遍历操作。性能非常差，应避免使用。</strong></p>\n<h2 id=\"Java-进阶\"><a href=\"#Java-进阶\" class=\"headerlink\" title=\"Java 进阶\"></a>Java 进阶</h2><h3 id=\"你能说说-Spring-框架中-Bean-的生命周期吗？\"><a href=\"#你能说说-Spring-框架中-Bean-的生命周期吗？\" class=\"headerlink\" title=\"你能说说 Spring 框架中 Bean 的生命周期吗？\"></a>你能说说 Spring 框架中 Bean 的生命周期吗？</h3><ol>\n<li><p>实例化一个 <code>Bean</code> , 也就是我们常说的 <code>new</code>；</p>\n</li>\n<li><p>按照 <code>Spring</code> 上下文对实例化的 <code>Bean</code> 进行配置－－也就是 <code>IOC</code> 注入；</p>\n</li>\n<li><p>如果这个 <code>Bean</code> 已经实现了 <code>BeanNameAware</code> 接口，会调用它实现的 <code>setBeanName(String)</code>方法，此处传递的就是 <code>Spring</code> 配置文件中 <code>Bean</code> 的 <code>id</code> 值</p>\n</li>\n<li><p>如果这个 <code>Bean</code> 已经实现了 <code>BeanFactoryAware</code> 接口，会调用它实现的 <code>setBeanFactory(setBeanFactory(BeanFactory)</code>传递的是 Spring 工厂自身（可以用这个方式来获取其它 Bean，只需在 Spring 配置文件中配置一个普通的 Bean 就可以）；</p>\n</li>\n<li><p>如果这个 <code>Bean</code> 已经实现了 <code>ApplicationContextAware</code> 接口，会调用 <code>setApplicationContext(ApplicationContext)</code>方法，传入 Spring 上下文（同样这个方式也可以实现步骤 4 的内容，但比 4 更好，因为 <code>ApplicationContext</code> 是 <code>BeanFactory</code> 的子接口，有更多的实现方法）；</p>\n</li>\n<li><p>如果这个 <code>Bean</code> 关联了 <code>BeanPostProcessor</code> 接口，将会调用 <code>postProcessBeforeInitialization(Object obj, String s)</code>方法，<code>BeanPostProcessor</code> 经常被用作是 <code>Bean</code> 内容的更改，并且由于这个是在 <code>Bean</code> 初始化结束时调用那个的方法，也可以被应用于内存或缓存技术；</p>\n</li>\n<li><p>如果 <code>Bean</code> 在 <code>Spring</code> 配置文件中配置了 <code>init-method</code> 属性会自动调用其配置的初始化方法。</p>\n</li>\n<li><p>如果这个 <code>Bean</code> 关联了 <code>BeanPostProcessor</code> 接口，将会调用 <code>postProcessAfterInitialization(Object obj, String s)</code>方法、；</p>\n<blockquote>\n<p>注：以上工作完成以后就可以应用这个 <code>Bean</code> 了，那这个 <code>Bean</code> 是一个 <code>Singleton</code> 的，所以一般情况下我们调用同一个 <code>id</code> 的 <code>Bean</code> 会是在内容地址相同的实例，当然在 <code>Spring</code> 配置文件中也可以配置非 <code>Singleton</code>，这里我们不做赘述。</p>\n</blockquote>\n</li>\n<li><p>当 <code>Bean</code> 不再需要时，会经过清理阶段，如果 <code>Bean</code> 实现了 <code>DisposableBean</code> 这个接口，会调用那个其实现的 <code>destroy()</code>方法；</p>\n</li>\n<li><p>最后，如果这个 <code>Bean</code> 的 <code>Spring</code> 配置中配置了 <code>destroy-method</code> 属性，会自动调用其配置的销毁方法。</p>\n</li>\n</ol>\n<h3 id=\"Spring，SpringMVC，SpringBoot，SpringCloud-有什么区别和联系？\"><a href=\"#Spring，SpringMVC，SpringBoot，SpringCloud-有什么区别和联系？\" class=\"headerlink\" title=\"Spring，SpringMVC，SpringBoot，SpringCloud 有什么区别和联系？\"></a>Spring，SpringMVC，SpringBoot，SpringCloud 有什么区别和联系？</h3><h4 id=\"简单介绍\"><a href=\"#简单介绍\" class=\"headerlink\" title=\"简单介绍\"></a>简单介绍</h4><ul>\n<li><code>Spring</code> 是一个轻量级的控制反转(<code>IoC</code>)和面向切面(<code>AOP</code>)的容器框架。Spring 使你能够编写更干净、更可管理、并且更易于测试的代码。</li>\n<li><code>Spring MVC</code> 是 Spring 的一个模块，一个 web 框架。通过 <code>Dispatcher Servlet</code>, <code>ModelAndView</code> 和 <code>View Resolver</code>，开发 web 应用变得很容易。主要针对的是网站应用程序或者服务开发——<code>URL 路由</code>、<code>Session</code>、<code>模板引擎</code>、<code>静态 Web 资源</code>等等。</li>\n<li><code>Spring</code> 配置复杂，繁琐，所以推出了 <code>Spring boot</code>，约定优于配置，简化了 spring 的配置流程。</li>\n<li><code>Spring Cloud</code> 构建于 <code>Spring Boot</code> 之上，是一个关注全局的服务治理框架。</li>\n</ul>\n<h4 id=\"Spring-VS-SpringMVC\"><a href=\"#Spring-VS-SpringMVC\" class=\"headerlink\" title=\"Spring VS SpringMVC\"></a>Spring VS SpringMVC</h4><ul>\n<li><code>Spring</code> 是一个一站式的轻量级的 java 开发框架，核心是<code>控制反转（IOC）</code>和<code>面向切面（AOP）</code>，针对于开发的 WEB 层 (<code>springMvc</code>)、业务层(<code>Ioc</code>)、持久层(<code>jdbcTemplate</code>)等都提供了多种配置解决方案；</li>\n<li><code>SpringMVC</code> 是 <code>Spring</code> 基础之上的一个 <code>MVC</code> 框架，主要处理 <code>web</code> 开发的路径映射和视图渲染，属于 <code>Spring</code> 框架中 <code>WEB</code> 层开发的一部分；</li>\n</ul>\n<h4 id=\"SpringMVC-VS-SpringBoot\"><a href=\"#SpringMVC-VS-SpringBoot\" class=\"headerlink\" title=\"SpringMVC VS SpringBoot\"></a>SpringMVC VS SpringBoot</h4><ul>\n<li><code>SpringMVC</code>属于一个企业 WEB 开发的 MVC 框架，涵盖面包括前端<strong>视图开发</strong>、<strong>文件配置</strong>、<strong>后台接口逻辑开发</strong>等，XML、config 等配置相对比较繁琐复杂；</li>\n<li><code>SpringBoot</code>框架相对于 SpringMVC 框架来说，更<strong>专注于开发微服务后台接口</strong>，不开发前端视图；</li>\n</ul>\n<h4 id=\"SpringBoot-VS-SpringCloud\"><a href=\"#SpringBoot-VS-SpringCloud\" class=\"headerlink\" title=\"SpringBoot VS SpringCloud\"></a>SpringBoot VS SpringCloud</h4><ul>\n<li><code>SpringBoot</code> 使用了<strong>默认大于配置</strong>的理念，集成了快速开发的 <code>Spring</code> 多个插件，同时<strong>自动过滤不需要配置的多余的插件</strong>，<strong>简化了项目的开发配置流程</strong>，一定程度上<strong>取消 xml 配置</strong>，是一套<strong>快速配置开发的脚手架</strong>，能快速开发<strong>单个微服务</strong>；</li>\n<li><code>SpringCloud</code> 大部分的功能插件都是基于 <code>SpringBoot</code> 去实现的，<code>SpringCloud</code> 关注于<strong>全局的微服务整合和管理</strong>，将多个 <code>SpringBoot</code> 单体微服务进行整合以及管理；<code>SpringCloud</code> 依赖于 <code>SpringBoot</code> 开发，而 - <code>SpringBoot</code> 可以独立开发；</li>\n</ul>\n<h4 id=\"总结-1\"><a href=\"#总结-1\" class=\"headerlink\" title=\"总结\"></a>总结</h4><ul>\n<li>Spring 是核心，提供了基础功能；</li>\n<li>Spring MVC 是基于 Spring 的一个 MVC 框架 ；</li>\n<li>Spring Boot 是为简化 Spring 配置的快速开发整合包；</li>\n<li>Spring Cloud 是构建在 Spring Boot 之上的服务治理框架。</li>\n</ul>\n<h3 id=\"如何保证消息的顺序性？\"><a href=\"#如何保证消息的顺序性？\" class=\"headerlink\" title=\"如何保证消息的顺序性？\"></a>如何保证消息的顺序性？</h3><h4 id=\"面试官心理分析\"><a href=\"#面试官心理分析\" class=\"headerlink\" title=\"面试官心理分析\"></a>面试官心理分析</h4><p>其实这个也是用 MQ 的时候必问的话题，第一看看你了不了解顺序这个事儿？第二看看你有没有办法保证消息是有顺序的？这是生产系统中常见的问题。</p>\n<h4 id=\"面试题剖析\"><a href=\"#面试题剖析\" class=\"headerlink\" title=\"面试题剖析\"></a>面试题剖析</h4><p>我举个例子，我们以前做过一个 mysql <code>binlog</code> 同步的系统，压力还是非常大的，日同步数据要达到上亿，就是说数据从一个 mysql 库原封不动地同步到另一个 mysql 库里面去（mysql -&gt; mysql）。常见的一点在于说比如大数据 team，就需要同步一个 mysql 库过来，对公司的业务系统的数据做各种复杂的操作。</p>\n<p>你在 mysql 里增删改一条数据，对应出来了增删改 3 条 <code>binlog</code> 日志，接着这三条 <code>binlog</code> 发送到 MQ 里面，再消费出来依次执行，起码得保证人家是按照顺序来的吧？不然本来是：增加、修改、删除；你楞是换了顺序给执行成删除、修改、增加，不全错了么。</p>\n<p>本来这个数据同步过来，应该最后这个数据被删除了；结果你搞错了这个顺序，最后这个数据保留下来了，数据同步就出错了。</p>\n<p>先看看顺序会错乱的俩场景：</p>\n<ul>\n<li><strong>RabbitMQ</strong>：一个 queue，多个 consumer。比如，生产者向 RabbitMQ 里发送了三条数据，顺序依次是 data1&#x2F;data2&#x2F;data3，压入的是 RabbitMQ 的一个内存队列。有三个消费者分别从 MQ 中消费这三条数据中的一条，结果消费者 2 先执行完操作，把 data2 存入数据库，然后是 data1&#x2F;data3。这不明显乱了。</li>\n</ul>\n<p><img src=\"/img/posts/java/interview/1.png\" alt=\"图片\"></p>\n<ul>\n<li><p><strong>Kafka</strong>：比如说我们建了一个 topic，有三个 partition。生产者在写的时候，其实可以指定一个 key，比如说我们指定了某个订单 id 作为 key，那么这个订单相关的数据，一定会被分发到同一个 partition 中去，而且这个 partition 中的数据一定是有顺序的。</p>\n<p>消费者从 partition 中取出来数据的时候，也一定是有顺序的。到这里，顺序还是 ok 的，没有错乱。接着，我们在消费者里可能会搞<strong>多个线程来并发处理消息</strong>。因为如果消费者是单线程消费处理，而处理比较耗时的话，比如处理一条消息耗时几十 ms，那么 1 秒钟只能处理几十条消息，这吞吐量太低了。而多个线程并发跑的话，顺序可能就乱掉了。</p>\n</li>\n</ul>\n<p><img src=\"/img/posts/java/interview/2.png\" alt=\"图片\"></p>\n<h4 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h4><h4 id=\"RabbitMQ\"><a href=\"#RabbitMQ\" class=\"headerlink\" title=\"RabbitMQ\"></a>RabbitMQ</h4><p>拆分多个 queue，每个 queue 一个 consumer，就是多一些 queue 而已，确实是麻烦点；或者就一个 queue 但是对应一个 consumer，然后这个 consumer 内部用内存队列做排队，然后分发给底层不同的 worker 来处理。</p>\n<p><img src=\"/img/posts/java/interview/3.png\" alt=\"图片\"></p>\n<h4 id=\"Kafka\"><a href=\"#Kafka\" class=\"headerlink\" title=\"Kafka\"></a>Kafka</h4><ul>\n<li>一个 topic，一个 partition，一个 consumer，内部单线程消费，单线程吞吐量太低，一般不会用这个。</li>\n<li>写 N 个内存 queue，具有相同 key 的数据都到同一个内存 queue；然后对于 N 个线程，每个线程分别消费一个内存 queue 即可，这样就能保证顺序性。</li>\n</ul>\n<p><img src=\"/img/posts/java/interview/4.png\" alt=\"图片\"></p>\n<h2 id=\"Redis\"><a href=\"#Redis\" class=\"headerlink\" title=\"Redis\"></a>Redis</h2><h3 id=\"Redis-是如何实现分布式锁的？\"><a href=\"#Redis-是如何实现分布式锁的？\" class=\"headerlink\" title=\"Redis 是如何实现分布式锁的？\"></a>Redis 是如何实现分布式锁的？</h3><p>分布式锁常见的三种实现方式：</p>\n<ol>\n<li>数据库乐观锁；</li>\n<li>基于 Redis 的分布式锁；</li>\n<li>基于 ZooKeeper 的分布式锁。</li>\n</ol>\n<p>本面试考点是，你对 Redis 使用熟悉吗？Redis 中是如何实现分布式锁的。</p>\n<h4 id=\"要点\"><a href=\"#要点\" class=\"headerlink\" title=\"要点\"></a>要点</h4><p>Redis 要实现分布式锁，以下条件应该得到满足</p>\n<h4 id=\"互斥性\"><a href=\"#互斥性\" class=\"headerlink\" title=\"互斥性\"></a>互斥性</h4><ul>\n<li>在任意时刻，只有一个客户端能持有锁。</li>\n</ul>\n<h4 id=\"不能死锁\"><a href=\"#不能死锁\" class=\"headerlink\" title=\"不能死锁\"></a>不能死锁</h4><ul>\n<li>客户端在持有锁的期间崩溃而没有主动解锁，也能保证后续其他客户端能加锁。</li>\n</ul>\n<h4 id=\"容错性\"><a href=\"#容错性\" class=\"headerlink\" title=\"容错性\"></a>容错性</h4><ul>\n<li>只要大部分的 Redis 节点正常运行，客户端就可以加锁和解锁。</li>\n</ul>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><p>可以直接通过 <code>set key value px milliseconds nx</code> 命令实现加锁， 通过 Lua 脚本实现解锁。</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token operator\">//</span>获取锁（unique_value可以是UUID等）\nSET resource_name unique_value NX PX  <span class=\"token number\">30000</span>\n\n<span class=\"token operator\">//</span>释放锁（lua脚本中，一定要比较value，防止误解锁）\n<span class=\"token keyword\">if</span> redis<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"get\"</span><span class=\"token punctuation\">,</span>KEYS<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> ARGV<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">then</span>\n    <span class=\"token keyword\">return</span> redis<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"del\"</span><span class=\"token punctuation\">,</span>KEYS<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">end</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"代码解释\"><a href=\"#代码解释\" class=\"headerlink\" title=\"代码解释\"></a>代码解释</h4><ul>\n<li>set 命令要用 <code>set key value px milliseconds nx</code>，替代 <code>setnx + expire</code> 需要分两次执行命令的方式，保证了原子性，</li>\n<li>value 要具有唯一性，可以使用<code>UUID.randomUUID().toString()</code>方法生成，用来标识这把锁是属于哪个请求加的，在解锁的时候就可以有依据；</li>\n<li>释放锁时要验证 value 值，防止误解锁；</li>\n<li>通过 Lua 脚本来避免 Check And Set 模型的并发问题，因为在释放锁的时候因为涉及到多个 Redis 操作 （利用了 eval 命令执行 Lua 脚本的原子性）；</li>\n</ul>\n<h4 id=\"加锁代码分析\"><a href=\"#加锁代码分析\" class=\"headerlink\" title=\"加锁代码分析\"></a>加锁代码分析</h4><p>首先，set()加入了 NX 参数，可以保证如果已有 key 存在，则函数不会调用成功，也就是只有一个客户端能持有锁，满足互斥性。其次，由于我们对锁设置了过期时间，即使锁的持有者后续发生崩溃而没有解锁，锁也会因为到了过期时间而自动解锁（即 key 被删除），不会发生死锁。最后，因为我们将 value 赋值为 requestId，用来标识这把锁是属于哪个请求加的，那么在客户端在解锁的时候就可以进行校验是否是同一个客户端。</p>\n<h4 id=\"解锁代码分析\"><a href=\"#解锁代码分析\" class=\"headerlink\" title=\"解锁代码分析\"></a>解锁代码分析</h4><p>将 Lua 代码传到 jedis.eval()方法里，并使参数 KEYS[1]赋值为 lockKey，ARGV[1]赋值为 requestId。在执行的时候，首先会获取锁对应的 value 值，检查是否与 requestId 相等，如果相等则解锁（删除 key）。</p>\n<h4 id=\"存在的风险\"><a href=\"#存在的风险\" class=\"headerlink\" title=\"存在的风险\"></a>存在的风险</h4><p>如果存储锁对应 key 的那个节点挂了的话，就可能存在丢失锁的风险，导致出现多个客户端持有锁的情况，这样就不能实现资源的独享了。</p>\n<ol>\n<li>客户端 A 从 master 获取到锁</li>\n<li>在 master 将锁同步到 slave 之前，master 宕掉了（Redis 的主从同步通常是异步的）。<br>主从切换，slave 节点被晋级为 master 节点</li>\n<li>客户端 B 取得了同一个资源被客户端 A 已经获取到的另外一个锁。导致存在同一时刻存不止一个线程获取到锁的情况。</li>\n</ol>\n<h4 id=\"redlock-算法出现\"><a href=\"#redlock-算法出现\" class=\"headerlink\" title=\"redlock 算法出现\"></a>redlock 算法出现</h4><p>这个场景是假设有一个 redis cluster，有 5 个 redis master 实例。然后执行如下步骤获取一把锁：</p>\n<ol>\n<li>获取当前时间戳，单位是毫秒；</li>\n<li>跟上面类似，轮流尝试在每个 master 节点上创建锁，过期时间较短，一般就几十毫秒；</li>\n<li>尝试在大多数节点上建立一个锁，比如 5 个节点就要求是 3 个节点 n &#x2F; 2 + 1；</li>\n<li>客户端计算建立好锁的时间，如果建立锁的时间小于超时时间，就算建立成功了；</li>\n<li>要是锁建立失败了，那么就依次之前建立过的锁删除；</li>\n<li>只要别人建立了一把分布式锁，你就得不断轮询去尝试获取锁。</li>\n</ol>\n<p><img src=\"/img/posts/java/interview/6.png\" alt=\"图片\"></p>\n<p>Redis 官方给出了以上两种基于 Redis 实现分布式锁的方法，详细说明可以查看：</p>\n<blockquote>\n<p><a href=\"https://redis.io/topics/distlock\">https://redis.io/topics/distlock</a> 。</p>\n</blockquote>\n<h4 id=\"Redisson-实现\"><a href=\"#Redisson-实现\" class=\"headerlink\" title=\"Redisson 实现\"></a>Redisson 实现</h4><p>Redisson 是一个在 Redis 的基础上实现的 Java 驻内存数据网格（In-Memory Data Grid）。它不仅提供了一系列的分布式的 Java 常用对象，还实现了可重入锁（Reentrant Lock）、公平锁（Fair Lock、联锁（MultiLock）、 红锁（RedLock）、 读写锁（ReadWriteLock）等，还提供了许多分布式服务。</p>\n<p>Redisson 提供了使用 Redis 的最简单和最便捷的方法。Redisson 的宗旨是促进使用者对 Redis 的关注分离（Separation of Concern），从而让使用者能够将精力更集中地放在处理业务逻辑上。</p>\n<p><strong>Redisson 分布式重入锁用法</strong></p>\n<p>Redisson 支持单点模式、主从模式、哨兵模式、集群模式，这里以单点模式为例：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token operator\">//</span> <span class=\"token number\">1.</span>构造redisson实现分布式锁必要的Config\nConfig config <span class=\"token operator\">=</span> new <span class=\"token function\">Config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconfig<span class=\"token punctuation\">.</span><span class=\"token function\">useSingleServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"redis://127.0.0.1:5379\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setDatabase</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">//</span> <span class=\"token number\">2.</span>构造RedissonClient\nRedissonClient redissonClient <span class=\"token operator\">=</span> Redisson<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">//</span> <span class=\"token number\">3.</span>获取锁对象实例（无法保证是按线程的顺序获取到）\nRLock rLock <span class=\"token operator\">=</span> redissonClient<span class=\"token punctuation\">.</span><span class=\"token function\">getLock</span><span class=\"token punctuation\">(</span>lockKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">try</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token operator\">/</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span>\n     <span class=\"token operator\">*</span> <span class=\"token number\">4.</span>尝试获取锁\n     <span class=\"token operator\">*</span> waitTimeout 尝试获取锁的最大等待时间，超过这个值，则认为获取锁失败\n     <span class=\"token operator\">*</span> leaseTime   锁的持有时间<span class=\"token punctuation\">,</span>超过这个时间锁会自动失效（值应设置为大于业务处理的时间，确保在锁有效期内业务能处理完）\n     <span class=\"token operator\">*</span><span class=\"token operator\">/</span>\n    boolean res <span class=\"token operator\">=</span> rLock<span class=\"token punctuation\">.</span><span class=\"token function\">tryLock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>long<span class=\"token punctuation\">)</span>waitTimeout<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>long<span class=\"token punctuation\">)</span>leaseTime<span class=\"token punctuation\">,</span> TimeUnit<span class=\"token punctuation\">.</span>SECONDS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token operator\">//</span>成功获得锁，在这里处理业务\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token function\">catch</span> <span class=\"token punctuation\">(</span>Exception e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    throw new <span class=\"token function\">RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aquire lock fail\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token function\">finally</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token operator\">//</span>无论如何<span class=\"token punctuation\">,</span> 最后都要解锁\n    rLock<span class=\"token punctuation\">.</span><span class=\"token function\">unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>加锁流程图</p>\n<p><img src=\"/img/posts/java/interview/7.png\" alt=\"图片\"></p>\n<p>解锁流程图</p>\n<p><img src=\"/img/posts/java/interview/8.png\" alt=\"图片\"></p>\n<p>我们可以看到，RedissonLock 是可重入的，并且考虑了失败重试，可以设置锁的最大等待时间， 在实现上也做了一些优化，减少了无效的锁申请，提升了资源的利用率。</p>\n<p>需要特别注意的是，RedissonLock 同样没有解决 节点挂掉的时候，存在丢失锁的风险的问题。而现实情况是有一些场景无法容忍的，所以 Redisson 提供了实现了 redlock 算法的 RedissonRedLock，RedissonRedLock 真正解决了单点失败的问题，代价是需要额外的为 RedissonRedLock 搭建 Redis 环境。</p>\n<p>所以，如果业务场景可以容忍这种小概率的错误，则推荐使用 RedissonLock， 如果无法容忍，则推荐使用 RedissonRedLock。</p>\n<h3 id=\"Redis-面试常见问答\"><a href=\"#Redis-面试常见问答\" class=\"headerlink\" title=\"Redis 面试常见问答\"></a>Redis 面试常见问答</h3><h4 id=\"什么是缓存雪崩？怎么解决？\"><a href=\"#什么是缓存雪崩？怎么解决？\" class=\"headerlink\" title=\"什么是缓存雪崩？怎么解决？\"></a>什么是缓存雪崩？怎么解决？</h4><p><img src=\"/img/posts/java/interview/9.png\" alt=\"图片\"></p>\n<p>通常，我们会使用缓存用于缓冲对 DB 的冲击，如果缓存宕机，所有请求将直接打在 DB，造成 DB 宕机——从而导致整个系统宕机。</p>\n<p><strong>如何解决呢？</strong></p>\n<p><img src=\"/img/posts/java/interview/10.png\" alt=\"图片\"></p>\n<p><strong>2 种策略（同时使用）：</strong></p>\n<ul>\n<li>对缓存做高可用，防止缓存宕机</li>\n<li>使用断路器，如果缓存宕机，为了防止系统全部宕机，限制部分流量进入 DB，保证部分可用，其余的请求返回断路器的默认值。</li>\n</ul>\n<h4 id=\"什么是缓存穿透？怎么解决？\"><a href=\"#什么是缓存穿透？怎么解决？\" class=\"headerlink\" title=\"什么是缓存穿透？怎么解决？\"></a>什么是缓存穿透？怎么解决？</h4><p><strong>解释 1：</strong>缓存查询一个没有的 key，同时数据库也没有，如果黑客大量的使用这种方式，那么就会导致 DB 宕机。</p>\n<p><strong>解决方案：</strong>我们可以使用一个默认值来防止，例如，当访问一个不存在的 key，然后再去访问数据库，还是没有，那么就在缓存里放一个占位符，下次来的时候，检查这个占位符，如果发生时占位符，就不去数据库查询了，防止 DB 宕机。</p>\n<p><strong>解释 2：</strong>大量请求查询一个刚刚失效的 key，导致 DB 压力倍增，可能导致宕机，但实际上，查询的都是相同的数据。</p>\n<p><strong>解决方案：</strong>可以在这些请求代码加上双重检查锁。但是那个阶段的请求会变慢。不过总比 DB 宕机好。</p>\n<h4 id=\"什么是缓存并发竞争？怎么解决？\"><a href=\"#什么是缓存并发竞争？怎么解决？\" class=\"headerlink\" title=\"什么是缓存并发竞争？怎么解决？\"></a>什么是缓存并发竞争？怎么解决？</h4><p><strong>解释：</strong>多个客户端写一个 key，如果顺序错了，数据就不对了。但是顺序我们无法控制。</p>\n<p><strong>解决方案：</strong>使用分布式锁，例如 zk，同时加入数据的时间戳。同一时刻，只有抢到锁的客户端才能写入，同时，写入时，比较当前数据的时间戳和缓存中数据的时间戳。</p>\n<p>####什么是缓存和数据库双写不一致？怎么解决？</p>\n<p>解释：连续写数据库和缓存，但是操作期间，出现并发了，数据不一致了。</p>\n<p>通常，更新缓存和数据库有以下几种顺序：</p>\n<ul>\n<li>先更新数据库，再更新缓存。</li>\n<li>先删缓存，再更新数据库。</li>\n<li>先更新数据库，再删除缓存。</li>\n</ul>\n<p><em>三种方式的优劣来看一下：</em></p>\n<h4 id=\"先更新数据库，再更新缓存\"><a href=\"#先更新数据库，再更新缓存\" class=\"headerlink\" title=\"先更新数据库，再更新缓存\"></a>先更新数据库，再更新缓存</h4><p>这么做的问题是：当有 2 个请求同时更新数据，那么如果不使用分布式锁，将无法控制最后缓存的值到底是多少。也就是并发写的时候有问题。</p>\n<h4 id=\"先删缓存，Redis-面试常见问答再更新数据库\"><a href=\"#先删缓存，Redis-面试常见问答再更新数据库\" class=\"headerlink\" title=\"先删缓存，Redis 面试常见问答再更新数据库\"></a>先删缓存，Redis 面试常见问答再更新数据库</h4><p>这么做的问题：如果在删除缓存后，有客户端读数据，将可能读到旧数据，并有可能设置到缓存中，导致缓存中的数据一直是老数据。</p>\n<p>有 2 种解决方案：</p>\n<ul>\n<li>使用“双删”，即删更删，最后一步的删除作为异步操作，就是防止有客户端读取的时候设置了旧值。</li>\n<li>使用队列，当这个 key 不存在时，将其放入队列，串行执行，必须等到更新数据库完毕才能读取数据。</li>\n</ul>\n<p>总的来讲，比较麻烦。</p>\n<h4 id=\"先更新数据库，再删除缓存\"><a href=\"#先更新数据库，再删除缓存\" class=\"headerlink\" title=\"先更新数据库，再删除缓存\"></a>先更新数据库，再删除缓存</h4><p>这个实际是常用的方案，但是有很多人不知道，这里介绍一下，这个叫 Cache Aside Pattern，老外发明的。如果先更新数据库，再删除缓存，那么就会出现更新数据库之前有瞬间数据不是很及时。</p>\n<p>同时，如果在更新之前，缓存刚好失效了，读客户端有可能读到旧值，然后在写客户端删除结束后再次设置了旧值，非常巧合的情况。</p>\n<p>有 2 个前提条件：</p>\n<ul>\n<li>缓存在写之前的时候失效，同时，在写客户度删除操作结束后，放置旧数据 —— 也就是读比写慢。</li>\n<li>设置有的写操作还会锁表</li>\n</ul>\n<p>所以，这个很难出现，但是如果出现了怎么办？使用双删！！！记录更新期间有没有客户端读数据库，如果有，在更新完数据库之后，执行延迟删除。<br>还有一种可能，如果执行更新数据库，准备执行删除缓存时，服务挂了，执行删除失败怎么办？？？<br>这就坑了！！！不过可以通过订阅数据库的 binlog 来删除。</p>\n<h3 id=\"谈谈-Redis-的过期策略\"><a href=\"#谈谈-Redis-的过期策略\" class=\"headerlink\" title=\"谈谈 Redis 的过期策略\"></a>谈谈 Redis 的过期策略</h3><p>在日常开发中，我们使用 Redis 存储 key 时通常会设置一个过期时间，但是 Redis 是怎么删除过期的 key，而且 Redis 是单线程的，删除 key 会不会造成阻塞。要搞清楚这些，就要了解 Redis 的过期策略和内存淘汰机制。</p>\n<p><strong>Redis 采用的是定期删除 + 懒惰删除策略。</strong></p>\n<h4 id=\"定期删除策略\"><a href=\"#定期删除策略\" class=\"headerlink\" title=\"定期删除策略\"></a>定期删除策略</h4><p>Redis 会将每个设置了过期时间的 key 放入到一个独立的字典中，默认每 100ms 进行一次过期扫描：</p>\n<ol>\n<li>随机抽取 20 个 key</li>\n<li>删除这 20 个 key 中过期的 key</li>\n<li>如果过期的 key 比例超过 1&#x2F;4，就重复步骤 1，继续删除。</li>\n</ol>\n<p><strong>为什不扫描所有的 key？</strong></p>\n<p>Redis 是单线程，全部扫描岂不是卡死了。而且为了防止每次扫描过期的 key 比例都超过 1&#x2F;4，导致不停循环卡死线程，Redis 为每次扫描添加了上限时间，默认是 25ms。</p>\n<p>如果客户端将超时时间设置的比较短，比如 10ms，那么就会出现大量的链接因为超时而关闭，业务端就会出现很多异常。而且这时你还无法从 Redis 的 slowlog 中看到慢查询记录，因为慢查询指的是逻辑处理过程慢，不包含等待时间。</p>\n<p>如果在同一时间出现大面积 key 过期，Redis 循环多次扫描过期词典，直到过期的 key 比例小于 1&#x2F;4。这会导致卡顿，而且在高并发的情况下，可能会导致缓存雪崩。</p>\n<p><strong>为什么 Redis 为每次扫描添的上限时间是 25ms，还会出现上面的情况？</strong></p>\n<p>因为 Redis 是单线程，每个请求处理都需要排队，而且由于 Redis 每次扫描都是 25ms，也就是每个请求最多 25ms，100 个请求就是 2500ms。</p>\n<p>如果有大批量的 key 过期，要给过期时间设置一个随机范围，而不宜全部在同一时间过期，分散过期处理的压力。</p>\n<h4 id=\"从库的过期策略\"><a href=\"#从库的过期策略\" class=\"headerlink\" title=\"从库的过期策略\"></a>从库的过期策略</h4><p>从库不会进行过期扫描，从库对过期的处理是被动的。主库在 key 到期时，会在 AOF 文件里增加一条 del 指令，同步到所有的从库，从库通过执行这条 del 指令来删除过期的 key。</p>\n<p>因为指令同步是异步进行的，所以主库过期的 key 的 del 指令没有及时同步到从库的话，会出现主从数据的不一致，主库没有的数据在从库里还存在。</p>\n<h4 id=\"懒惰删除策略\"><a href=\"#懒惰删除策略\" class=\"headerlink\" title=\"懒惰删除策略\"></a>懒惰删除策略</h4><p><strong>Redis 为什么要懒惰删除(lazy free)？</strong></p>\n<p>删除指令 del 会直接释放对象的内存，大部分情况下，这个指令非常快，没有明显延迟。不过如果删除的 key 是一个非常大的对象，比如一个包含了千万元素的 hash，又或者在使用 FLUSHDB 和 FLUSHALL 删除包含大量键的数据库时，那么删除操作就会导致单线程卡顿。</p>\n<p>redis 4.0 引入了 lazyfree 的机制，它可以将删除键或数据库的操作放在后台线程里执行， 从而尽可能地避免服务器阻塞。</p>\n<h4 id=\"unlink\"><a href=\"#unlink\" class=\"headerlink\" title=\"unlink\"></a>unlink</h4><p>unlink 指令，它能对删除操作进行懒处理，丢给后台线程来异步回收内存。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> unlink key\nOK<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"flush\"><a href=\"#flush\" class=\"headerlink\" title=\"flush\"></a>flush</h4><p>flushdb 和 flushall 指令，用来清空数据库，这也是极其缓慢的操作。Redis 4.0 同样给这两个指令也带来了异步化，在指令后面增加 async 参数就可以将整棵大树连根拔起，扔给后台线程慢慢焚烧。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> flushall async\nOK<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"异步队列\"><a href=\"#异步队列\" class=\"headerlink\" title=\"异步队列\"></a>异步队列</h4><p>主线程将对象的引用从「大树」中摘除后，会将这个 key 的内存回收操作包装成一个任务，塞进异步任务队列，后台线程会从这个异步队列中取任务。任务队列被主线程和异步线程同时操作，所以必须是一个线程安全的队列。</p>\n<p>不是所有的 unlink 操作都会延后处理，如果对应 key 所占用的内存很小，延后处理就没有必要了，这时候 Redis 会将对应的 key 内存立即回收，跟 del 指令一样。</p>\n<h4 id=\"更多异步删除点\"><a href=\"#更多异步删除点\" class=\"headerlink\" title=\"更多异步删除点\"></a>更多异步删除点</h4><p>Redis 回收内存除了 del 指令和 flush 之外，还会存在于在 key 的过期、LRU 淘汰、rename 指令以及从库全量同步时接受完 rdb 文件后会立即进行的 flush 操作。</p>\n<p>Redis4.0 为这些删除点也带来了异步删除机制，打开这些点需要额外的配置选项。</p>\n<ul>\n<li>slave-lazy-flush 从库接受完 rdb 文件后的 flush 操作</li>\n<li>lazyfree-lazy-eviction 内存达到 maxmemory 时进行淘汰</li>\n<li>lazyfree-lazy-expire key 过期删除</li>\n<li>lazyfree-lazy-server-del rename 指令删除 destKey</li>\n</ul>\n<h4 id=\"内存淘汰机制\"><a href=\"#内存淘汰机制\" class=\"headerlink\" title=\"内存淘汰机制\"></a>内存淘汰机制</h4><p>Redis 的内存占用会越来越高。Redis 为了限制最大使用内存，提供了 redis.conf 中的<br>配置参数 maxmemory。当内存超出 maxmemory，<strong>Redis 提供了几种内存淘汰机制让用户选择，配置 maxmemory-policy：</strong></p>\n<ul>\n<li><strong>noeviction：</strong>当内存超出 maxmemory，写入请求会报错，但是删除和读请求可以继续。（使用这个策略，疯了吧）</li>\n<li><strong>allkeys-lru：</strong>当内存超出 maxmemory，在所有的 key 中，移除最少使用的 key。只把 Redis 既当缓存是使用这种策略。（推荐）。</li>\n<li><strong>allkeys-random：</strong>当内存超出 maxmemory，在所有的 key 中，随机移除某个 key。（应该没人用吧）</li>\n<li><strong>volatile-lru：</strong>当内存超出 maxmemory，在设置了过期时间 key 的字典中，移除最少使用的 key。把 Redis 既当缓存，又做持久化的时候使用这种策略。</li>\n<li><strong>volatile-random：</strong>当内存超出 maxmemory，在设置了过期时间 key 的字典中，随机移除某个 key。</li>\n<li><strong>volatile-ttl：</strong>当内存超出 maxmemory，在设置了过期时间 key 的字典中，优先移除 ttl 小的。</li>\n</ul>\n<h4 id=\"LRU-算法\"><a href=\"#LRU-算法\" class=\"headerlink\" title=\"LRU 算法\"></a>LRU 算法</h4><p>实现 LRU 算法除了需要 key&#x2F;value 字典外，还需要附加一个链表，链表中的元素按照一定的顺序进行排列。当空间满的时候，会踢掉链表尾部的元素。当字典的某个元素被访问时，它在链表中的位置会被移动到表头。所以链表的元素排列顺序就是元素最近被访问的时间顺序。</p>\n<p>使用 Python 的 OrderedDict(双向链表 + 字典) 来实现一个简单的 LRU 算法：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> OrderedDict\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">LRUDict</span><span class=\"token punctuation\">(</span>OrderedDict<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> capacity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>capacity <span class=\"token operator\">=</span> capacity\n        self<span class=\"token punctuation\">.</span>items <span class=\"token operator\">=</span> OrderedDict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__setitem__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        old_value <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> old_value <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value\n        <span class=\"token keyword\">elif</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>capacity<span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span>popitem<span class=\"token punctuation\">(</span>last<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__getitem__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        value <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> value <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value\n        <span class=\"token keyword\">return</span> value\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__repr__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">repr</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">)</span>\n\n\nd <span class=\"token operator\">=</span> LRUDict<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    d<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i\n<span class=\"token keyword\">print</span> d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"近似-LRU-算法\"><a href=\"#近似-LRU-算法\" class=\"headerlink\" title=\"近似 LRU 算法\"></a>近似 LRU 算法</h4><p>Redis 使用的并不是完全 LRU 算法。不使用 LRU 算法，是为了节省内存，Redis 采用的是随机 LRU 算法，Redis 为每一个 key 增加了一个 24 bit 的字段，用来记录这个 key 最后一次被访问的时间戳。</p>\n<p>注意 Redis 的 LRU 淘汰策略是懒惰处理，也就是不会主动执行淘汰策略，当 Redis 执行写操作时，发现内存超出 maxmemory，就会执行 LRU 淘汰算法。这个算法就是随机采样出 5(默认值)个 key，然后移除最旧的 key，如果移除后内存还是超出 maxmemory，那就继续随机采样淘汰，直到内存低于 maxmemory 为止。</p>\n<p>如何采样就是看 maxmemory-policy 的配置，如果是 allkeys 就是从所有的 key 字典中随机，如果是 volatile 就从带过期时间的 key 字典中随机。每次采样多少个 key 看的是 maxmemory_samples 的配置，默认为 5。</p>\n<h4 id=\"LFU\"><a href=\"#LFU\" class=\"headerlink\" title=\"LFU\"></a>LFU</h4><p>Redis 4.0 里引入了一个新的淘汰策略 —— LFU（Least Frequently Used） 模式，作者认为它比 LRU 更加优秀。</p>\n<p>LFU 表示按最近的访问频率进行淘汰，它比 LRU 更加精准地表示了一个 key 被访问的热度。</p>\n<p>如果一个 key 长时间不被访问，只是刚刚偶然被用户访问了一下，那么在使用 LRU 算法下它是不容易被淘汰的，因为 LRU 算法认为当前这个 key 是很热的。而 LFU 是需要追踪最近一段时间的访问频率，如果某个 key 只是偶然被访问一次是不足以变得很热的，它需要在近期一段时间内被访问很多次才有机会被认为很热。</p>\n<p><strong>Redis 对象的热度</strong></p>\n<p>Redis 的所有对象结构头中都有一个 24bit 的字段，这个字段用来记录对象的热度。</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token operator\">//</span> redis 的对象头\ntypedef struct <span class=\"token function\">redisObject</span> <span class=\"token punctuation\">&#123;</span>\n    unsigned type<span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">//</span> 对象类型如 zset<span class=\"token operator\">/</span>set<span class=\"token operator\">/</span>hash 等等\n    unsigned encoding<span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">//</span> 对象编码如 ziplist<span class=\"token operator\">/</span>intset<span class=\"token operator\">/</span>skiplist 等等\n    unsigned lru<span class=\"token punctuation\">:</span><span class=\"token number\">24</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">//</span> 对象的「热度」\n    int refcount<span class=\"token punctuation\">;</span> <span class=\"token operator\">//</span> 引用计数\n    void <span class=\"token operator\">*</span>ptr<span class=\"token punctuation\">;</span> <span class=\"token operator\">//</span> 对象的 body\n<span class=\"token punctuation\">&#125;</span> robj<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>LRU 模式</strong></p>\n<p>在 LRU 模式下，lru 字段存储的是 Redis 时钟 server.lruclock，Redis 时钟是一个 24bit 的整数，默认是 Unix 时间戳对 2^24 取模的结果，大约 97 天清零一次。当某个 key 被访问一次，它的对象头的 lru 字段值就会被更新为 server.lruclock。</p>\n<p><strong>LFU 模式</strong></p>\n<p>在 LFU 模式下，lru 字段 24 个 bit 用来存储两个值，分别是 ldt(last decrement time) 和 logc(logistic counter)。</p>\n<p>logc 是 8 个 bit，用来存储访问频次，因为 8 个 bit 能表示的最大整数值为 255，存储频次肯定远远不够，所以这 8 个 bit 存储的是频次的对数值，并且这个值还会随时间衰减。如果它的值比较小，那么就很容易被回收。为了确保新创建的对象不被回收，新对象的这 8 个 bit 会初始化为一个大于零的值，默认是 LFU_INIT_VAL&#x3D;5。</p>\n<p>ldt 是 16 个位，用来存储上一次 logc 的更新时间，因为只有 16 位，所以精度不可能很高。它取的是分钟时间戳对 2^16 进行取模，大约每隔 45 天就会折返。</p>\n<p>同 LRU 模式一样，我们也可以使用这个逻辑计算出对象的空闲时间，只不过精度是分钟级别的。图中的 server.unixtime 是当前 redis 记录的系统时间戳，和 server.lruclock 一样，它也是每毫秒更新一次。</p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}},"cover":"/img/default_cover/geomeric10.png","cover_type":"img","excerpt":"","more":"<h2 id=\"Java-基础\"><a href=\"#Java-基础\" class=\"headerlink\" title=\"Java 基础\"></a>Java 基础</h2><h3 id=\"为什么-HashMap-是线程不安全的？\"><a href=\"#为什么-HashMap-是线程不安全的？\" class=\"headerlink\" title=\"为什么 HashMap 是线程不安全的？\"></a>为什么 HashMap 是线程不安全的？</h3><p>在 jdk1.8 中，在多线程环境下，会发生数据覆盖的情况。</p>\n<h4 id=\"jdk1-8-中-HashMap\"><a href=\"#jdk1-8-中-HashMap\" class=\"headerlink\" title=\"jdk1.8 中 HashMap\"></a>jdk1.8 中 HashMap</h4><p>在 jdk1.8 中对 HashMap 进行了优化，在发生 hash 碰撞，不再采用头插法方式，而是直接插入链表尾部，因此不会出现环形链表的情况，但是在多线程的情况下仍然不安全，这里我们看 jdk1.8 中 HashMap 的 put 操作源码：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">final</span> <span class=\"token class-name\">V</span> <span class=\"token function\">putVal</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> hash<span class=\"token punctuation\">,</span> <span class=\"token class-name\">K</span> key<span class=\"token punctuation\">,</span> <span class=\"token class-name\">V</span> value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> onlyIfAbsent<span class=\"token punctuation\">,</span>\n                   <span class=\"token keyword\">boolean</span> evict<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Node</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> tab<span class=\"token punctuation\">;</span> <span class=\"token class-name\">Node</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> p<span class=\"token punctuation\">;</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>tab <span class=\"token operator\">=</span> table<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">=</span> tab<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            n <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>tab <span class=\"token operator\">=</span> <span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">=</span> tab<span class=\"token punctuation\">[</span>i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> hash<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 如果没有hash碰撞则直接插入元素</span>\n            tab<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">newNode</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">Node</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> e<span class=\"token punctuation\">;</span> <span class=\"token class-name\">K</span> k<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>hash <span class=\"token operator\">==</span> hash <span class=\"token operator\">&amp;&amp;</span>\n                <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> key <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                e <span class=\"token operator\">=</span> p<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">TreeNode</span><span class=\"token punctuation\">)</span>\n                e <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TreeNode</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">putTreeVal</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> tab<span class=\"token punctuation\">,</span> hash<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> binCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>binCount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        p<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> <span class=\"token function\">newNode</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>binCount <span class=\"token operator\">>=</span> <span class=\"token constant\">TREEIFY_THRESHOLD</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// -1 for 1st</span>\n                            <span class=\"token function\">treeifyBin</span><span class=\"token punctuation\">(</span>tab<span class=\"token punctuation\">,</span> hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">&#125;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>hash <span class=\"token operator\">==</span> hash <span class=\"token operator\">&amp;&amp;</span>\n                        <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> key <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                    p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// existing mapping for key</span>\n                <span class=\"token class-name\">V</span> oldValue <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>onlyIfAbsent <span class=\"token operator\">||</span> oldValue <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n                    e<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n                <span class=\"token function\">afterNodeAccess</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> oldValue<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token operator\">++</span>modCount<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">++</span>size <span class=\"token operator\">></span> threshold<span class=\"token punctuation\">)</span>\n            <span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">afterNodeInsertion</span><span class=\"token punctuation\">(</span>evict<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这是 jdk1.8 中 HashMap 中 put 操作的主函数， 注意第 6 行代码，如果没有 hash 碰撞则会直接插入元素。如果线程 A 和线程 B 同时进行 put 操作，刚好这两条不同的数据 hash 值一样，并且该位置数据为 null，所以这线程 A、B 都会进入第 6 行代码中。</p>\n<p>假设一种情况，线程 A 进入后还未进行数据插入时挂起，而线程 B 正常执行，从而正常插入数据，然后线程 A 获取 CPU 时间片，此时线程 A 不用再进行 hash 判断了，问题出现：线程 A 会把线程 B 插入的数据给覆盖，发生线程不安全。</p>\n<h3 id=\"单例模式一共有几种写法？\"><a href=\"#单例模式一共有几种写法？\" class=\"headerlink\" title=\"单例模式一共有几种写法？\"></a>单例模式一共有几种写法？</h3><p>大体可分为 4 类，下面分别介绍他们的基本形式、变种及特点。</p>\n<h4 id=\"饱汉模式\"><a href=\"#饱汉模式\" class=\"headerlink\" title=\"饱汉模式\"></a>饱汉模式</h4><p>饱汉是变种最多的单例模式。我们从饱汉出发，通过其变种逐渐了解实现单例模式时需要关注的问题。</p>\n<h5 id=\"基础的饱汉\"><a href=\"#基础的饱汉\" class=\"headerlink\" title=\"基础的饱汉\"></a>基础的饱汉</h5><p>饱汉，即已经吃饱，不着急再吃，饿的时候再吃。所以他就先不初始化单例，等第一次使用的时候再初始化，即“懒加载”。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 饱汉</span>\n<span class=\"token comment\">// UnThreadSafe</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton1</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton1</span> singleton <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">Singleton1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton1</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>singleton <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      singleton <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Singleton1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> singleton<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>饱汉模式的核心就是懒加载。好处是更启动速度快、节省资源，一直到实例被第一次访问，才需要初始化单例；小坏处是写起来麻烦，大坏处是线程不安全，if 语句存在竞态条件。</p>\n<p>写起来麻烦不是大问题，可读性好啊。因此，单线程环境下，基础饱汉是笔者最喜欢的写法。但多线程环境下，基础饱汉就彻底不可用了。下面的几种变种都在试图解决基础饱汉线程不安全的问题。</p>\n<h5 id=\"饱汉-变种-1\"><a href=\"#饱汉-变种-1\" class=\"headerlink\" title=\"饱汉 - 变种 1\"></a>饱汉 - 变种 1</h5><p>最粗暴的犯法是用 synchronized 关键字修饰 getInstance()方法，这样能达到绝对的线程安全。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 饱汉</span>\n<span class=\"token comment\">// ThreadSafe</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton1_1</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton1_1</span> singleton <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">Singleton1_1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">synchronized</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton1_1</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>singleton <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      singleton <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Singleton1_1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> singleton<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>变种 1 的好处是写起来简单，且绝对线程安全；坏处是并发性能极差，事实上完全退化到了串行。单例只需要初始化一次，但就算初始化以后，synchronized 的锁也无法避开，从而 getInstance()完全变成了串行操作。性能不敏感的场景建议使用。</p>\n<h5 id=\"饱汉-变种-2\"><a href=\"#饱汉-变种-2\" class=\"headerlink\" title=\"饱汉 - 变种 2\"></a>饱汉 - 变种 2</h5><p>变种 2 是“臭名昭著”的 DCL 1.0。</p>\n<p>针对变种 1 中单例初始化后锁仍然无法避开的问题，变种 2 在变种 1 的外层又套了一层 check，加上 synchronized 内层的 check，即所谓“双重检查锁”（Double Check Lock，简称 DCL）。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 饱汉</span>\n<span class=\"token comment\">// UnThreadSafe</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton1_2</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton1_2</span> singleton <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> f1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 触发部分初始化问题</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> f2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">Singleton1_2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton1_2</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// may get half object</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>singleton <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Singleton1_2</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>singleton <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          singleton <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Singleton1_2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> singleton<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>变种 2 的核心是 DCL，看起来变种 2 似乎已经达到了理想的效果：懒加载+线程安全。可惜的是，正如注释中所说，DCL 仍然是线程不安全的，由于指令重排序，你可能会得到“半个对象”，即”部分初始化“问题。详细在看完变种 3 后，可参考下面这篇文章，这里不再赘述。</p>\n<blockquote>\n<p><a href=\"https://monkeysayhi.github.io/2016/11/29/volatile%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E4%BD%9C%E7%94%A8%E3%80%81%E5%8E%9F%E7%90%86/\">https://monkeysayhi.github.io/2016/11/29/volatile关键字的作用、原理/</a></p>\n</blockquote>\n<h5 id=\"饱汉-变种-3\"><a href=\"#饱汉-变种-3\" class=\"headerlink\" title=\"饱汉 - 变种 3\"></a>饱汉 - 变种 3</h5><p>变种 3 专门针对变种 2，可谓 DCL 2.0。</p>\n<p>针对变种 3 的“半个对象”问题，变种 3 在 instance 上增加了 volatile 关键字，原理见上述参考。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 饱汉</span>\n<span class=\"token comment\">// ThreadSafe</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton1_3</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">volatile</span> <span class=\"token class-name\">Singleton1_3</span> singleton <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> f1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 触发部分初始化问题</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> f2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">Singleton1_3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton1_3</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>singleton <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Singleton1_3</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// must be a complete instance</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>singleton <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          singleton <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Singleton1_3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> singleton<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>多线程环境下，变种 3 更适用于性能敏感的场景。但后面我们将了解到，就算是线程安全的，还有一些办法能破坏单例。</p>\n<p>当然，还有很多方式，能通过与 volatile 类似的方式防止部分初始化。读者可自行阅读内存屏障相关内容，但面试时不建议主动装逼。</p>\n<h4 id=\"饿汉模式\"><a href=\"#饿汉模式\" class=\"headerlink\" title=\"饿汉模式\"></a>饿汉模式</h4><p>与饱汉相对，饿汉很饿，只想着尽早吃到。所以他就在最早的时机，即类加载时初始化单例，以后访问时直接返回即可。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 饿汉</span>\n<span class=\"token comment\">// ThreadSafe</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton2</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Singleton2</span> singleton <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Singleton2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">Singleton2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton2</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> singleton<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>饿汉的好处是天生的线程安全（得益于类加载机制），写起来超级简单，使用时没有延迟；坏处是有可能造成资源浪费（如果类加载后就一直不使用单例的话）。</p>\n<blockquote>\n<p>值得注意的时，单线程环境下，饿汉与饱汉在性能上没什么差别；但多线程环境下，由于饱汉需要加锁，饿汉的性能反而更优。</p>\n</blockquote>\n<h4 id=\"Holder-模式\"><a href=\"#Holder-模式\" class=\"headerlink\" title=\"Holder 模式\"></a>Holder 模式</h4><p>我们既希望利用饿汉模式中静态变量的方便和线程安全；又希望通过懒加载规避资源浪费。Holder 模式满足了这两点要求：核心仍然是静态变量，足够方便和线程安全；通过静态的 Holder 类持有真正实例，间接实现了懒加载。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// Holder模式</span>\n<span class=\"token comment\">// ThreadSafe</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton3</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SingletonHolder</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Singleton3</span> singleton <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Singleton3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">SingletonHolder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">Singleton3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">/**\n  * 勘误：多写了个synchronized。。\n  public synchronized static Singleton3 getInstance() &#123;\n    return SingletonHolder.singleton;\n  &#125;\n  */</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton3</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name\">SingletonHolder</span><span class=\"token punctuation\">.</span>singleton<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>相对于饿汉模式，Holder 模式仅增加了一个静态内部类的成本，与饱汉的变种 3 效果相当（略优），都是比较受欢迎的实现方式。同样建议考虑。</p>\n<h4 id=\"枚举模式\"><a href=\"#枚举模式\" class=\"headerlink\" title=\"枚举模式\"></a>枚举模式</h4><p>用枚举实现单例模式，相当好用，但可读性是不存在的。</p>\n<h5 id=\"基础的枚举\"><a href=\"#基础的枚举\" class=\"headerlink\" title=\"基础的枚举\"></a>基础的枚举</h5><p>将枚举的静态成员变量作为单例的实例：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 枚举</span>\n<span class=\"token comment\">// ThreadSafe</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">Singleton4</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token constant\">SINGLETON</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>代码量比饿汉模式更少。但用户只能直接访问实例 Singleton4.SINGLETON——事实上，这样的访问方式作为单例使用也是恰当的，只是牺牲了静态工厂方法的优点，如无法实现懒加载。</p>\n<h5 id=\"丑陋但好用的语法糖\"><a href=\"#丑陋但好用的语法糖\" class=\"headerlink\" title=\"丑陋但好用的语法糖\"></a>丑陋但好用的语法糖</h5><p>Java 的枚举是一个“丑陋但好用的语法糖”。</p>\n<h5 id=\"枚举型单例模式的本质\"><a href=\"#枚举型单例模式的本质\" class=\"headerlink\" title=\"枚举型单例模式的本质\"></a>枚举型单例模式的本质</h5><p>通过反编译打开语法糖，就看到了枚举类型的本质，简化如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 枚举</span>\n<span class=\"token comment\">// ThreadSafe</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton4</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Enum</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Singleton4</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Singleton4</span> <span class=\"token constant\">SINGLETON</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Singleton4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>本质上和饿汉模式相同，区别仅在于公有的静态成员变量。</p>\n<h5 id=\"用枚举实现一些-trick\"><a href=\"#用枚举实现一些-trick\" class=\"headerlink\" title=\"用枚举实现一些 trick\"></a>用枚举实现一些 trick</h5><blockquote>\n<p>这一部分与单例没什么关系，可以跳过。如果选择阅读也请认清这样的事实：虽然枚举相当灵活，但如何恰当的使用枚举有一定难度。一个足够简单的典型例子是 TimeUnit 类，建议有时间耐心阅读。</p>\n</blockquote>\n<p>上面已经看到，枚举型单例的本质仍然是一个普通的类。实际上，我们可以在枚举型型单例上增加任何普通类可以完成的功能。要点在于枚举实例的初始化，可以理解为实例化了一个匿名内部类。为了更明显，我们在 Singleton4_1 中定义一个普通的私有成员变量，一个普通的公有成员方法，和一个公有的抽象成员方法，如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 枚举</span>\n<span class=\"token comment\">// ThreadSafe</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">Singleton4_1</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">SINGLETON</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"enum is the easiest singleton pattern, but not the most readable\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testAbsMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"enum is ugly, but so flexible to make lots of trick\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> comment <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">Singleton4_1</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> comment<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>comment <span class=\"token operator\">=</span> comment<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"comment=\"</span> <span class=\"token operator\">+</span> comment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testAbsMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton4_1</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token constant\">SINGLETON</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这样，枚举类 Singleton4_1 中的每一个枚举实例不仅继承了父类 Singleton4_1 的成员方法 print()，还必须实现父类 Singleton4_1 的抽象成员方法 testAbsMethod()。</p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><p>上面的分析都忽略了反射和序列化的问题。通过反射或序列化，我们仍然能够访问到私有构造器，创建新的实例破坏单例模式。此时，只有枚举模式能天然防范这一问题。反射和序列化笔者还不太了解，但基本原理并不难，可以在其他模式上手动实现。</p>\n<p>下面继续忽略反射和序列化的问题，做个总结回味一下：</p>\n<p><img src=\"/img/posts/java/interview/5.png\" alt=\"图片\"></p>\n<h3 id=\"你能说说进程与线程的区别吗\"><a href=\"#你能说说进程与线程的区别吗\" class=\"headerlink\" title=\"你能说说进程与线程的区别吗\"></a>你能说说进程与线程的区别吗</h3><h4 id=\"两者的定义\"><a href=\"#两者的定义\" class=\"headerlink\" title=\"两者的定义\"></a>两者的定义</h4><p>进程是具有一定独立功能的程序关于某个数据集合上的一次运行活动，进程是系统进行资源分配和调度的一个独立单位。</p>\n<p>线程是进程的一个实体，是 CPU 调度和分派的基本单位，它是比进程更小的能独立运行的基本单位.线程自己基本上不拥有系统资源，只拥有一点在运行中必不可少的资源(如程序计数器,一组寄存器和栈)，但是它可与同属一个进程的其他的线程共享进程所拥有的全部资源。</p>\n<h4 id=\"进程与线程的区别\"><a href=\"#进程与线程的区别\" class=\"headerlink\" title=\"进程与线程的区别\"></a>进程与线程的区别</h4><ol>\n<li>进程是资源分配最小单位，线程是程序执行的最小单位；</li>\n<li>进程有自己独立的地址空间，每启动一个进程，系统都会为其分配地址空间，建立数据表来维护代码段、堆栈段和数据段，线程没有独立的地址空间，它使用相同的地址空间共享数据；</li>\n<li>CPU 切换一个线程比切换进程花费小；</li>\n<li>创建一个线程比进程开销小；</li>\n<li>线程占用的资源要⽐进程少很多。</li>\n<li>线程之间通信更方便，同一个进程下，线程共享全局变量，静态变量等数据，进程之间的通信需要以通信的方式（IPC）进行；（但多线程程序处理好同步与互斥是个难点）</li>\n<li>多进程程序更安全，生命力更强，一个进程死掉不会对另一个进程造成影响（源于有独立的地址空间），多线程程序更不易维护，一个线程死掉，整个进程就死掉了（因为共享地址空间）；</li>\n<li>进程对资源保护要求高，开销大，效率相对较低，线程资源保护要求不高，但开销小，效率高，可频繁切换；</li>\n</ol>\n<h3 id=\"创建线程有几种不同的方式？你喜欢哪一种？为什么？\"><a href=\"#创建线程有几种不同的方式？你喜欢哪一种？为什么？\" class=\"headerlink\" title=\"创建线程有几种不同的方式？你喜欢哪一种？为什么？\"></a>创建线程有几种不同的方式？你喜欢哪一种？为什么？</h3><p>有三种方式可以用来创建线程：</p>\n<ul>\n<li>继承 Thread 类</li>\n<li>实现 Runnable 接口</li>\n<li>应用程序可以使用 Executor 框架来创建线程池</li>\n</ul>\n<p>实现 Runnable 接口这种方式更受欢迎，因为这不需要继承 Thread 类。在应用设计中已经继承了别的对象的情况下，这需要多继承（而 Java 不支持多继承），只能实现接口。同时，线程池也是非常高效的，很容易实现和使用。</p>\n<h3 id=\"概括的解释下线程的几种可用状态。\"><a href=\"#概括的解释下线程的几种可用状态。\" class=\"headerlink\" title=\"概括的解释下线程的几种可用状态。\"></a>概括的解释下线程的几种可用状态。</h3><p><strong>新建( new )：</strong>新创建了一个线程对象；</p>\n<p><strong>可运行( runnable )：</strong>线程对象创建后，其他线程(比如 main 线程）调用了该对象的 start ()方法。该状态的线程位于可运行线程池中，等待被线程调度选中，获 取 CPU 的使用权；</p>\n<p><strong>运行( running )：</strong>可运行状态( runnable )的线程获得了 CPU 时间片（ timeslice ） ，执行程序代码；</p>\n<p><strong>阻塞( block )：</strong>阻塞状态是指线程因为某种原因放弃了 CPU 使用权，也即让出了 CPU timeslice ，暂时停止运行。直到线程进入可运行( runnable )状态，才有 机会再次获得 cpu timeslice 转到运行( running )状态。</p>\n<p>阻塞的情况分三种：</p>\n<ol>\n<li>等待阻塞：运行( running )的线程执行 o . wait ()方法， JVM 会把该线程放 入等待队列( waitting queue )中。</li>\n<li>同步阻塞：运行( running )的线程在获取对象的同步锁时，若该同步锁被别的线程占用，则 JVM 会把该线程放入锁池( lock pool )中。</li>\n<li>其他阻塞: 运行( running )的线程执行 Thread . sleep ( long ms )或 t . join ()方法，或者发出了 I &#x2F; O 请求时， JVM 会把该线程置为阻塞状态。当 sleep ()状态超时、 join ()等待线程终止或者超时、或者 I &#x2F; O 处理完毕时，线程重新转入可运行( runnable )状态。</li>\n</ol>\n<p><strong>死亡( dead )：</strong>线程 run ()、 main () 方法执行结束，或者因异常退出了 run ()方法，则该线程结束生命周期。死亡的线程不可再次复生。</p>\n<h3 id=\"同步方法和同步代码块的区别是什么？\"><a href=\"#同步方法和同步代码块的区别是什么？\" class=\"headerlink\" title=\"同步方法和同步代码块的区别是什么？\"></a>同步方法和同步代码块的区别是什么？</h3><p><strong>区别：</strong></p>\n<ul>\n<li>同步方法默认用 this 或者当前类 class 对象作为锁；</li>\n<li>同步代码块可以选择以什么来加锁，比同步方法要更细颗粒度，我们可以选择只同步会发生同步问题的部分代码而不是整个方法；</li>\n</ul>\n<h3 id=\"在监视器-Monitor-内部，是如何做线程同步的？程序应该做哪种级别的同步？\"><a href=\"#在监视器-Monitor-内部，是如何做线程同步的？程序应该做哪种级别的同步？\" class=\"headerlink\" title=\"在监视器(Monitor)内部，是如何做线程同步的？程序应该做哪种级别的同步？\"></a>在监视器(Monitor)内部，是如何做线程同步的？程序应该做哪种级别的同步？</h3><p>监视器和锁在 Java 虚拟机中是一块使用的。监视器监视一块同步代码块，确保一次只有一个线程执行同步代码块。每一个监视器都和一个对象引用相关联。线程在获取锁之前不允许执行同步代码。</p>\n<p>java 还提供了显式监视器( Lock )和隐式监视器( synchronized )两种锁方案。</p>\n<h3 id=\"什么是死锁-deadlock-？\"><a href=\"#什么是死锁-deadlock-？\" class=\"headerlink\" title=\"什么是死锁(deadlock)？\"></a>什么是死锁(deadlock)？</h3><p>两个线程或两个以上线程都在等待对方执行完毕才能继续往下执行的时候就发生了死锁。结果就是这些线程都陷入了无限的等待中。</p>\n<h3 id=\"如何确保-N-个线程可以访问-N-个资源同时又不导致死锁？\"><a href=\"#如何确保-N-个线程可以访问-N-个资源同时又不导致死锁？\" class=\"headerlink\" title=\"如何确保 N 个线程可以访问 N 个资源同时又不导致死锁？\"></a>如何确保 N 个线程可以访问 N 个资源同时又不导致死锁？</h3><p>多线程产生死锁的四个必要条件：</p>\n<ul>\n<li><strong>互斥条件：</strong>一个资源每次只能被一个进程使用。</li>\n<li><strong>保持和请求条件：</strong>一个进程因请求资源而阻塞时，对已获得资源保持不放。</li>\n<li><strong>不可剥夺性：</strong>进程已获得资源，在未使用完成前，不能被剥夺。</li>\n<li><strong>循环等待条件（闭环）：</strong>若干进程之间形成一种头尾相接的循环等待资源关系。</li>\n</ul>\n<p>只要破坏其中任意一个条件，就可以避免死锁</p>\n<p>一种非常简单的避免死锁的方式就是：<strong>指定获取锁的顺序，并强制线程按照指定的顺序获取锁。</strong>因此，如果所有的线程都是以同样的顺序加锁和释放锁，就不会出现死锁了。</p>\n<h3 id=\"Java-序列化与反序列化三连问：是什么？为什么要？如何做？\"><a href=\"#Java-序列化与反序列化三连问：是什么？为什么要？如何做？\" class=\"headerlink\" title=\"Java 序列化与反序列化三连问：是什么？为什么要？如何做？\"></a>Java 序列化与反序列化三连问：是什么？为什么要？如何做？</h3><h4 id=\"Java-序列化与反序列化是什么？\"><a href=\"#Java-序列化与反序列化是什么？\" class=\"headerlink\" title=\"Java 序列化与反序列化是什么？\"></a>Java 序列化与反序列化是什么？</h4><p>Java 序列化是指把 Java 对象转换为字节序列的过程，而 Java 反序列化是指把字节序列恢复为 Java 对象的过程：</p>\n<ul>\n<li><strong>序列化</strong>：对象序列化的最主要的用处就是在传递和保存对象的时候，保证对象的完整性和可传递性。序列化是把对象转换成有序字节流，以便在网络上传输或者保存在本地文件中。核心作用是对象状态的保存与重建。</li>\n<li><strong>反序列化</strong>：客户端从文件中或网络上获得序列化后的对象字节流，根据字节流中所保存的对象状态及描述信息，通过反序列化重建对象。</li>\n</ul>\n<h4 id=\"为什么需要序列化与反序列化？\"><a href=\"#为什么需要序列化与反序列化？\" class=\"headerlink\" title=\"为什么需要序列化与反序列化？\"></a>为什么需要序列化与反序列化？</h4><p>为什么要序列化，那就是说一下序列化的好处喽，序列化有什么什么优点，所以我们要序列化。</p>\n<p><strong>一：对象序列化可以实现分布式对象。</strong></p>\n<p>主要应用例如：RMI(即远程调用 Remote Method Invocation)要利用对象序列化运行远程主机上的服务，就像在本地机上运行对象时一样。</p>\n<p><strong>二：java 对象序列化不仅保留一个对象的数据，而且递归保存对象引用的每个对象的数据。</strong></p>\n<p>可以将整个对象层次写入字节流中，可以保存在文件中或在网络连接上传递。利用对象序列化可以进行对象的”深复制”，即复制对象本身及引用的对象本身。序列化一个对象可能得到整个对象序列。</p>\n<p><strong>三：序列化可以将内存中的类写入文件或数据库中。</strong></p>\n<p>比如：将某个类序列化后存为文件，下次读取时只需将文件中的数据反序列化就可以将原先的类还原到内存中。也可以将类序列化为流数据进行传输。</p>\n<p>总的来说就是将一个已经实例化的类转成文件存储，下次需要实例化的时候只要反序列化即可将类实例化到内存中并保留序列化时类中的所有变量和状态。</p>\n<p><strong>四：对象、文件、数据，有许多不同的格式，很难统一传输和保存。</strong></p>\n<p>序列化以后就都是字节流了，无论原来是什么东西，都能变成一样的东西，就可以进行通用的格式传输或保存，传输结束以后，要再次使用，就进行反序列化还原，这样对象还是对象，文件还是文件。</p>\n<h4 id=\"如何实现-Java-序列化与反序列化\"><a href=\"#如何实现-Java-序列化与反序列化\" class=\"headerlink\" title=\"如何实现 Java 序列化与反序列化?\"></a>如何实现 Java 序列化与反序列化?</h4><p>首先我们要把准备要序列化类，实现 Serializabel 接口</p>\n<p>例如：我们要 Person 类里的 name 和 age 都序列化</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Serializable</span></span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Serializable</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//本类可以序列化</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"姓名：\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">\"，年龄\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>然后：我们将 name 和 age 序列化（也就是把这 2 个对象转为二进制，理解为“打碎”）</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>lxh<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SerDemo</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">File</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileOutputStream</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ObjectOutputStream</span></span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ObjectOutputStreamDemo</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//序列化</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//序列化后生成指定文件路径</span>\n        <span class=\"token class-name\">File</span> file <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"D:\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">.</span>separator <span class=\"token operator\">+</span> <span class=\"token string\">\"person.ser\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ObjectOutputStream</span> oos <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//装饰流（流）</span>\n        oos <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObjectOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FileOutputStream</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//实例化类</span>\n        <span class=\"token class-name\">Person</span> per <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"张三\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        oos<span class=\"token punctuation\">.</span><span class=\"token function\">writeObject</span><span class=\"token punctuation\">(</span>per<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//把类对象序列化</span>\n        oos<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>《Java 对象的序列化（Serialization）和反序列化详解》<br><a href=\"https://blog.csdn.net/yaomingyang/article/details/79321939\">https://blog.csdn.net/yaomingyang/article/details/79321939</a></p>\n</blockquote>\n<blockquote>\n<p>《Java 序列化的高级认识》<br><a href=\"https://www.ibm.com/developerworks/cn/java/j-lo-serial/\">https://www.ibm.com/developerworks/cn/java/j-lo-serial/</a></p>\n</blockquote>\n<h3 id=\"什么情况用ArrayList-or-LinkedList呢\"><a href=\"#什么情况用ArrayList-or-LinkedList呢\" class=\"headerlink\" title=\"什么情况用ArrayList or LinkedList呢?\"></a>什么情况用ArrayList or LinkedList呢?</h3><p>列表（list）是元素的有序集合，也称为序列。它提供了基于元素位置的操作，有助于快速访问、添加和删除列表中特定索引位置的元素。List 接口实现了 <code>Collection </code>和 <code>Iterable </code>作为父接口。它允许存储重复值和空值，支持通过索引访问元素。</p>\n<h4 id=\"ArrayList-和-LinkedList-的不同之处\"><a href=\"#ArrayList-和-LinkedList-的不同之处\" class=\"headerlink\" title=\"ArrayList 和 LinkedList 的不同之处\"></a>ArrayList 和 LinkedList 的不同之处</h4><h5 id=\"增加元素到列表尾端\"><a href=\"#增加元素到列表尾端\" class=\"headerlink\" title=\"增加元素到列表尾端\"></a>增加元素到列表尾端</h5><p>在 <code>ArrayList</code> 中增加元素到队列尾端的代码如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">E</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n   <span class=\"token function\">ensureCapacity</span><span class=\"token punctuation\">(</span>size<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//确保内部数组有足够的空间</span>\n   elementData<span class=\"token punctuation\">[</span>size<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>e<span class=\"token punctuation\">;</span><span class=\"token comment\">//将元素加入到数组的末尾，完成添加</span>\n   <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>      \n<span class=\"token punctuation\">&#125;</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>ArrayList</code>中 <code>add()</code> 方法的性能决定于<code>ensureCapacity()</code>方法。<code>ensureCapacity()</code>的实现如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> vod <span class=\"token function\">ensureCapacity</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> minCapacity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  modCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">int</span> oldCapacity<span class=\"token operator\">=</span>elementData<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>minCapacity<span class=\"token operator\">></span>oldCapacity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>    <span class=\"token comment\">//如果数组容量不足，进行扩容</span>\n      <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> oldData<span class=\"token operator\">=</span>elementData<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">int</span> newCapacity<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>oldCapacity<span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//扩容到原始容量的1.5倍</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>newCapacitty<span class=\"token operator\">&lt;</span>minCapacity<span class=\"token punctuation\">)</span>   <span class=\"token comment\">//如果新容量小于最小需要的容量，则使用最小</span>\n                                                    <span class=\"token comment\">//需要的容量大小</span>\n         newCapacity<span class=\"token operator\">=</span>minCapacity <span class=\"token punctuation\">;</span>  <span class=\"token comment\">//进行扩容的数组复制</span>\n         elementData<span class=\"token operator\">=</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyof</span><span class=\"token punctuation\">(</span>elementData<span class=\"token punctuation\">,</span>newCapacity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可以看到，只要<code>ArrayList</code>的当前容量足够大，<code>a  dd()</code>操作的效率非常高的。只有当<code>ArrayList</code>对容量的需求超出当前数组大小时，才需要进行扩容。扩容的过程中，会进行大量的数组复制操作。而数组复制时，最终将调用<code>System.arraycopy()</code>方法，因此<code>add()</code>操作的效率还是相当高的。</p>\n<p><code>LinkedList</code> 的<code>add()</code>操作实现如下，它也将任意元素增加到队列的尾端：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">E</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n   <span class=\"token function\">addBefore</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>header<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//将元素增加到header的前面</span>\n   <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>其中<code>addBefore()</code>的方法实现如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">E</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">addBefore</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">E</span> e<span class=\"token punctuation\">,</span><span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">E</span><span class=\"token punctuation\">></span></span> entry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n     <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">E</span><span class=\"token punctuation\">></span></span> newEntry <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">E</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>entry<span class=\"token punctuation\">,</span>entry<span class=\"token punctuation\">.</span>previous<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     newEntry<span class=\"token punctuation\">.</span>provious<span class=\"token punctuation\">.</span>next<span class=\"token operator\">=</span>newEntry<span class=\"token punctuation\">;</span>\n     newEntry<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">.</span>previous<span class=\"token operator\">=</span>newEntry<span class=\"token punctuation\">;</span>\n     size<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n     modCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">return</span> newEntry<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可见，<strong>LinkeList由于使用了链表的结构，因此不需要维护容量的大小。从这点上说，它比ArrayList有一定的性能优势，然而，每次的元素增加都需要新建一个Entry对象，并进行更多的赋值操作。在频繁的系统调用中，对性能会产生一定的影响。</strong></p>\n<h5 id=\"增加元素到列表任意位置\"><a href=\"#增加元素到列表任意位置\" class=\"headerlink\" title=\"增加元素到列表任意位置\"></a>增加元素到列表任意位置</h5><p>除了提供元素到List的尾端，List接口还提供了在任意位置插入元素的方法：<code>void add(int index,E element);</code></p>\n<p><strong>由于实现的不同，ArrayList和LinkedList在这个方法上存在一定的性能差异，由于ArrayList是基于数组实现的，而数组是一块连续的内存空间，如果在数组的任意位置插入元素，必然导致在该位置后的所有元素需要重新排列，因此，其效率相对会比较低。</strong></p>\n<p>以下代码是ArrayList中的实现：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token punctuation\">,</span><span class=\"token class-name\">E</span> element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n   <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>index<span class=\"token operator\">></span>size<span class=\"token operator\">||</span>index<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IndexOutOfBoundsException</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"Index:\"</span><span class=\"token operator\">+</span>index<span class=\"token operator\">+</span><span class=\"token string\">\",size: \"</span><span class=\"token operator\">+</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token function\">ensureCapacity</span><span class=\"token punctuation\">(</span>size<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">arraycopy</span><span class=\"token punctuation\">(</span>elementData<span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span>elementData<span class=\"token punctuation\">,</span>index<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>size<span class=\"token operator\">-</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         elementData<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> element<span class=\"token punctuation\">;</span>\n         size<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可以看到每次插入操作，都会进行一次数组复制。而这个操作在增加元素到List尾端的时候是不存在的，大量的数组重组操作会导致系统性能低下。并且插入元素在List中的位置越是靠前，数组重组的开销也越大。</p>\n<p>而LinkedList此时显示了优势：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token punctuation\">,</span><span class=\"token class-name\">E</span> element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n   <span class=\"token function\">addBefore</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>index<span class=\"token operator\">==</span>size<span class=\"token operator\">?</span>header<span class=\"token operator\">:</span><span class=\"token function\">entry</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>可见，<strong>对LinkedList来说，在List的尾端插入数据与在任意位置插入数据是一样的，不会因为插入的位置靠前而导致插入的方法性能降低。</strong></p>\n<h5 id=\"删除任意位置元素\"><a href=\"#删除任意位置元素\" class=\"headerlink\" title=\"删除任意位置元素\"></a>删除任意位置元素</h5><p>对于元素的删除，List接口提供了在任意位置删除元素的方法：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">E</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>对ArrayList来说，remove()方法和add()方法是雷同的。在任意位置移除元素后，都要进行数组的重组。ArrayList的实现如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">E</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n   <span class=\"token class-name\">RangeCheck</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   modCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n   <span class=\"token class-name\">E</span> oldValue<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">E</span><span class=\"token punctuation\">)</span> elementData<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">int</span> numMoved<span class=\"token operator\">=</span>size<span class=\"token operator\">-</span>index<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>numMoved<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n     <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">arraycopy</span><span class=\"token punctuation\">(</span>elementData<span class=\"token punctuation\">,</span>index<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>elementData<span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span>numMoved<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     elementData<span class=\"token punctuation\">[</span><span class=\"token operator\">--</span>size<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">return</span> oldValue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可以看到，<strong>在ArrayList的每一次有效的元素删除操作后，都要进行数组的重组。并且删除的位置越靠前，数组重组时的开销越大。</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">E</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token function\">entry</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>         \n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">E</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">entry</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>index<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span> <span class=\"token operator\">||</span> index<span class=\"token operator\">>=</span>size<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IndexOutBoundsException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Index:\"</span><span class=\"token operator\">+</span>index<span class=\"token operator\">+</span><span class=\"token string\">\",size:\"</span><span class=\"token operator\">+</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">E</span><span class=\"token punctuation\">></span></span> e<span class=\"token operator\">=</span> header<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>index<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>size<span class=\"token operator\">>></span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token comment\">//要删除的元素位于前半段</span>\n         <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>index<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n             e<span class=\"token operator\">=</span>e<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n         <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span>size<span class=\"token punctuation\">;</span>i<span class=\"token operator\">></span>index<span class=\"token punctuation\">;</span>i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\n             e<span class=\"token operator\">=</span>e<span class=\"token punctuation\">.</span>previous<span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#125;</span>\n         <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在LinkedList的实现中，首先要通过循环找到要删除的元素。如果要删除的位置处于List的前半段，则从前往后找；若其位置处于后半段，则从后往前找。因此无论要删除较为靠前或者靠后的元素都是非常高效的；但要移除List中间的元素却几乎要遍历完半个List，在List拥有大量元素的情况下，效率很低。</p>\n<h5 id=\"容量参数\"><a href=\"#容量参数\" class=\"headerlink\" title=\"容量参数\"></a>容量参数</h5><p>容量参数是ArrayList和Vector等基于数组的List的特有性能参数。它表示初始化的数组大小。当ArrayList所存储的元素数量超过其已有大小时。它便会进行扩容，数组的扩容会导致整个数组进行一次内存复制。因此合理的数组大小有助于减少数组扩容的次数，从而提高系统性能。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span>  <span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">ArrayList</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> initialCapacity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n   <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>initialCapacity<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n       <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Illegal Capacity:\"</span><span class=\"token operator\">+</span>initialCapacity<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elementData<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span>initialCapacity<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>ArrayList提供了一个可以制定初始数组大小的构造函数：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> initialCapacity<span class=\"token punctuation\">)</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>现以构造一个拥有100万元素的List为例，当使用默认初始化大小时，其消耗的相对时间为125ms左右，当直接制定数组大小为100万时，构造相同的ArrayList仅相对耗时16ms。</p>\n<h5 id=\"遍历列表\"><a href=\"#遍历列表\" class=\"headerlink\" title=\"遍历列表\"></a>遍历列表</h5><p>遍历列表操作是最常用的列表操作之一，在JDK1.5之后，至少有3中常用的列表遍历方式：</p>\n<blockquote>\n<ul>\n<li>forEach操作</li>\n<li>迭代器</li>\n<li>for循环。</li>\n</ul>\n</blockquote>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">String</span> tmp<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">long</span> start<span class=\"token operator\">=</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMills</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//ForEach </span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token operator\">:</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    tmp<span class=\"token operator\">=</span>s<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foreach spend:\"</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMills</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nstart <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMills</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> it<span class=\"token operator\">=</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>it<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>    \n   tmp<span class=\"token operator\">=</span>it<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Iterator spend;\"</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMills</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nstart<span class=\"token operator\">=</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMills</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> size<span class=\"token operator\">=</span><span class=\"token punctuation\">;</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>size<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>                     \n    tmp<span class=\"token operator\">=</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"for spend;\"</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMills</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>构造一个拥有100万数据的ArrayList和等价的LinkedList，使用以上代码进行测试，测试结果：</p>\n<p><img src=\"https://jason-dong-blog-1259058668.cos.ap-nanjing.myqcloud.com/img/11.png\" alt=\"图片\"></p>\n<p>可以看到，<strong>最简便的ForEach循环并没有很好的性能表现，综合性能不如普通的迭代器，而是用for循环通过随机访问遍历列表时，ArrayList表项很好，但是LinkedList的表现却无法让人接受，甚至没有办法等待程序的结束。这是因为对LinkedList进行随机访问时，总会进行一次列表的遍历操作。性能非常差，应避免使用。</strong></p>\n<h2 id=\"Java-进阶\"><a href=\"#Java-进阶\" class=\"headerlink\" title=\"Java 进阶\"></a>Java 进阶</h2><h3 id=\"你能说说-Spring-框架中-Bean-的生命周期吗？\"><a href=\"#你能说说-Spring-框架中-Bean-的生命周期吗？\" class=\"headerlink\" title=\"你能说说 Spring 框架中 Bean 的生命周期吗？\"></a>你能说说 Spring 框架中 Bean 的生命周期吗？</h3><ol>\n<li><p>实例化一个 <code>Bean</code> , 也就是我们常说的 <code>new</code>；</p>\n</li>\n<li><p>按照 <code>Spring</code> 上下文对实例化的 <code>Bean</code> 进行配置－－也就是 <code>IOC</code> 注入；</p>\n</li>\n<li><p>如果这个 <code>Bean</code> 已经实现了 <code>BeanNameAware</code> 接口，会调用它实现的 <code>setBeanName(String)</code>方法，此处传递的就是 <code>Spring</code> 配置文件中 <code>Bean</code> 的 <code>id</code> 值</p>\n</li>\n<li><p>如果这个 <code>Bean</code> 已经实现了 <code>BeanFactoryAware</code> 接口，会调用它实现的 <code>setBeanFactory(setBeanFactory(BeanFactory)</code>传递的是 Spring 工厂自身（可以用这个方式来获取其它 Bean，只需在 Spring 配置文件中配置一个普通的 Bean 就可以）；</p>\n</li>\n<li><p>如果这个 <code>Bean</code> 已经实现了 <code>ApplicationContextAware</code> 接口，会调用 <code>setApplicationContext(ApplicationContext)</code>方法，传入 Spring 上下文（同样这个方式也可以实现步骤 4 的内容，但比 4 更好，因为 <code>ApplicationContext</code> 是 <code>BeanFactory</code> 的子接口，有更多的实现方法）；</p>\n</li>\n<li><p>如果这个 <code>Bean</code> 关联了 <code>BeanPostProcessor</code> 接口，将会调用 <code>postProcessBeforeInitialization(Object obj, String s)</code>方法，<code>BeanPostProcessor</code> 经常被用作是 <code>Bean</code> 内容的更改，并且由于这个是在 <code>Bean</code> 初始化结束时调用那个的方法，也可以被应用于内存或缓存技术；</p>\n</li>\n<li><p>如果 <code>Bean</code> 在 <code>Spring</code> 配置文件中配置了 <code>init-method</code> 属性会自动调用其配置的初始化方法。</p>\n</li>\n<li><p>如果这个 <code>Bean</code> 关联了 <code>BeanPostProcessor</code> 接口，将会调用 <code>postProcessAfterInitialization(Object obj, String s)</code>方法、；</p>\n<blockquote>\n<p>注：以上工作完成以后就可以应用这个 <code>Bean</code> 了，那这个 <code>Bean</code> 是一个 <code>Singleton</code> 的，所以一般情况下我们调用同一个 <code>id</code> 的 <code>Bean</code> 会是在内容地址相同的实例，当然在 <code>Spring</code> 配置文件中也可以配置非 <code>Singleton</code>，这里我们不做赘述。</p>\n</blockquote>\n</li>\n<li><p>当 <code>Bean</code> 不再需要时，会经过清理阶段，如果 <code>Bean</code> 实现了 <code>DisposableBean</code> 这个接口，会调用那个其实现的 <code>destroy()</code>方法；</p>\n</li>\n<li><p>最后，如果这个 <code>Bean</code> 的 <code>Spring</code> 配置中配置了 <code>destroy-method</code> 属性，会自动调用其配置的销毁方法。</p>\n</li>\n</ol>\n<h3 id=\"Spring，SpringMVC，SpringBoot，SpringCloud-有什么区别和联系？\"><a href=\"#Spring，SpringMVC，SpringBoot，SpringCloud-有什么区别和联系？\" class=\"headerlink\" title=\"Spring，SpringMVC，SpringBoot，SpringCloud 有什么区别和联系？\"></a>Spring，SpringMVC，SpringBoot，SpringCloud 有什么区别和联系？</h3><h4 id=\"简单介绍\"><a href=\"#简单介绍\" class=\"headerlink\" title=\"简单介绍\"></a>简单介绍</h4><ul>\n<li><code>Spring</code> 是一个轻量级的控制反转(<code>IoC</code>)和面向切面(<code>AOP</code>)的容器框架。Spring 使你能够编写更干净、更可管理、并且更易于测试的代码。</li>\n<li><code>Spring MVC</code> 是 Spring 的一个模块，一个 web 框架。通过 <code>Dispatcher Servlet</code>, <code>ModelAndView</code> 和 <code>View Resolver</code>，开发 web 应用变得很容易。主要针对的是网站应用程序或者服务开发——<code>URL 路由</code>、<code>Session</code>、<code>模板引擎</code>、<code>静态 Web 资源</code>等等。</li>\n<li><code>Spring</code> 配置复杂，繁琐，所以推出了 <code>Spring boot</code>，约定优于配置，简化了 spring 的配置流程。</li>\n<li><code>Spring Cloud</code> 构建于 <code>Spring Boot</code> 之上，是一个关注全局的服务治理框架。</li>\n</ul>\n<h4 id=\"Spring-VS-SpringMVC\"><a href=\"#Spring-VS-SpringMVC\" class=\"headerlink\" title=\"Spring VS SpringMVC\"></a>Spring VS SpringMVC</h4><ul>\n<li><code>Spring</code> 是一个一站式的轻量级的 java 开发框架，核心是<code>控制反转（IOC）</code>和<code>面向切面（AOP）</code>，针对于开发的 WEB 层 (<code>springMvc</code>)、业务层(<code>Ioc</code>)、持久层(<code>jdbcTemplate</code>)等都提供了多种配置解决方案；</li>\n<li><code>SpringMVC</code> 是 <code>Spring</code> 基础之上的一个 <code>MVC</code> 框架，主要处理 <code>web</code> 开发的路径映射和视图渲染，属于 <code>Spring</code> 框架中 <code>WEB</code> 层开发的一部分；</li>\n</ul>\n<h4 id=\"SpringMVC-VS-SpringBoot\"><a href=\"#SpringMVC-VS-SpringBoot\" class=\"headerlink\" title=\"SpringMVC VS SpringBoot\"></a>SpringMVC VS SpringBoot</h4><ul>\n<li><code>SpringMVC</code>属于一个企业 WEB 开发的 MVC 框架，涵盖面包括前端<strong>视图开发</strong>、<strong>文件配置</strong>、<strong>后台接口逻辑开发</strong>等，XML、config 等配置相对比较繁琐复杂；</li>\n<li><code>SpringBoot</code>框架相对于 SpringMVC 框架来说，更<strong>专注于开发微服务后台接口</strong>，不开发前端视图；</li>\n</ul>\n<h4 id=\"SpringBoot-VS-SpringCloud\"><a href=\"#SpringBoot-VS-SpringCloud\" class=\"headerlink\" title=\"SpringBoot VS SpringCloud\"></a>SpringBoot VS SpringCloud</h4><ul>\n<li><code>SpringBoot</code> 使用了<strong>默认大于配置</strong>的理念，集成了快速开发的 <code>Spring</code> 多个插件，同时<strong>自动过滤不需要配置的多余的插件</strong>，<strong>简化了项目的开发配置流程</strong>，一定程度上<strong>取消 xml 配置</strong>，是一套<strong>快速配置开发的脚手架</strong>，能快速开发<strong>单个微服务</strong>；</li>\n<li><code>SpringCloud</code> 大部分的功能插件都是基于 <code>SpringBoot</code> 去实现的，<code>SpringCloud</code> 关注于<strong>全局的微服务整合和管理</strong>，将多个 <code>SpringBoot</code> 单体微服务进行整合以及管理；<code>SpringCloud</code> 依赖于 <code>SpringBoot</code> 开发，而 - <code>SpringBoot</code> 可以独立开发；</li>\n</ul>\n<h4 id=\"总结-1\"><a href=\"#总结-1\" class=\"headerlink\" title=\"总结\"></a>总结</h4><ul>\n<li>Spring 是核心，提供了基础功能；</li>\n<li>Spring MVC 是基于 Spring 的一个 MVC 框架 ；</li>\n<li>Spring Boot 是为简化 Spring 配置的快速开发整合包；</li>\n<li>Spring Cloud 是构建在 Spring Boot 之上的服务治理框架。</li>\n</ul>\n<h3 id=\"如何保证消息的顺序性？\"><a href=\"#如何保证消息的顺序性？\" class=\"headerlink\" title=\"如何保证消息的顺序性？\"></a>如何保证消息的顺序性？</h3><h4 id=\"面试官心理分析\"><a href=\"#面试官心理分析\" class=\"headerlink\" title=\"面试官心理分析\"></a>面试官心理分析</h4><p>其实这个也是用 MQ 的时候必问的话题，第一看看你了不了解顺序这个事儿？第二看看你有没有办法保证消息是有顺序的？这是生产系统中常见的问题。</p>\n<h4 id=\"面试题剖析\"><a href=\"#面试题剖析\" class=\"headerlink\" title=\"面试题剖析\"></a>面试题剖析</h4><p>我举个例子，我们以前做过一个 mysql <code>binlog</code> 同步的系统，压力还是非常大的，日同步数据要达到上亿，就是说数据从一个 mysql 库原封不动地同步到另一个 mysql 库里面去（mysql -&gt; mysql）。常见的一点在于说比如大数据 team，就需要同步一个 mysql 库过来，对公司的业务系统的数据做各种复杂的操作。</p>\n<p>你在 mysql 里增删改一条数据，对应出来了增删改 3 条 <code>binlog</code> 日志，接着这三条 <code>binlog</code> 发送到 MQ 里面，再消费出来依次执行，起码得保证人家是按照顺序来的吧？不然本来是：增加、修改、删除；你楞是换了顺序给执行成删除、修改、增加，不全错了么。</p>\n<p>本来这个数据同步过来，应该最后这个数据被删除了；结果你搞错了这个顺序，最后这个数据保留下来了，数据同步就出错了。</p>\n<p>先看看顺序会错乱的俩场景：</p>\n<ul>\n<li><strong>RabbitMQ</strong>：一个 queue，多个 consumer。比如，生产者向 RabbitMQ 里发送了三条数据，顺序依次是 data1&#x2F;data2&#x2F;data3，压入的是 RabbitMQ 的一个内存队列。有三个消费者分别从 MQ 中消费这三条数据中的一条，结果消费者 2 先执行完操作，把 data2 存入数据库，然后是 data1&#x2F;data3。这不明显乱了。</li>\n</ul>\n<p><img src=\"/img/posts/java/interview/1.png\" alt=\"图片\"></p>\n<ul>\n<li><p><strong>Kafka</strong>：比如说我们建了一个 topic，有三个 partition。生产者在写的时候，其实可以指定一个 key，比如说我们指定了某个订单 id 作为 key，那么这个订单相关的数据，一定会被分发到同一个 partition 中去，而且这个 partition 中的数据一定是有顺序的。</p>\n<p>消费者从 partition 中取出来数据的时候，也一定是有顺序的。到这里，顺序还是 ok 的，没有错乱。接着，我们在消费者里可能会搞<strong>多个线程来并发处理消息</strong>。因为如果消费者是单线程消费处理，而处理比较耗时的话，比如处理一条消息耗时几十 ms，那么 1 秒钟只能处理几十条消息，这吞吐量太低了。而多个线程并发跑的话，顺序可能就乱掉了。</p>\n</li>\n</ul>\n<p><img src=\"/img/posts/java/interview/2.png\" alt=\"图片\"></p>\n<h4 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h4><h4 id=\"RabbitMQ\"><a href=\"#RabbitMQ\" class=\"headerlink\" title=\"RabbitMQ\"></a>RabbitMQ</h4><p>拆分多个 queue，每个 queue 一个 consumer，就是多一些 queue 而已，确实是麻烦点；或者就一个 queue 但是对应一个 consumer，然后这个 consumer 内部用内存队列做排队，然后分发给底层不同的 worker 来处理。</p>\n<p><img src=\"/img/posts/java/interview/3.png\" alt=\"图片\"></p>\n<h4 id=\"Kafka\"><a href=\"#Kafka\" class=\"headerlink\" title=\"Kafka\"></a>Kafka</h4><ul>\n<li>一个 topic，一个 partition，一个 consumer，内部单线程消费，单线程吞吐量太低，一般不会用这个。</li>\n<li>写 N 个内存 queue，具有相同 key 的数据都到同一个内存 queue；然后对于 N 个线程，每个线程分别消费一个内存 queue 即可，这样就能保证顺序性。</li>\n</ul>\n<p><img src=\"/img/posts/java/interview/4.png\" alt=\"图片\"></p>\n<h2 id=\"Redis\"><a href=\"#Redis\" class=\"headerlink\" title=\"Redis\"></a>Redis</h2><h3 id=\"Redis-是如何实现分布式锁的？\"><a href=\"#Redis-是如何实现分布式锁的？\" class=\"headerlink\" title=\"Redis 是如何实现分布式锁的？\"></a>Redis 是如何实现分布式锁的？</h3><p>分布式锁常见的三种实现方式：</p>\n<ol>\n<li>数据库乐观锁；</li>\n<li>基于 Redis 的分布式锁；</li>\n<li>基于 ZooKeeper 的分布式锁。</li>\n</ol>\n<p>本面试考点是，你对 Redis 使用熟悉吗？Redis 中是如何实现分布式锁的。</p>\n<h4 id=\"要点\"><a href=\"#要点\" class=\"headerlink\" title=\"要点\"></a>要点</h4><p>Redis 要实现分布式锁，以下条件应该得到满足</p>\n<h4 id=\"互斥性\"><a href=\"#互斥性\" class=\"headerlink\" title=\"互斥性\"></a>互斥性</h4><ul>\n<li>在任意时刻，只有一个客户端能持有锁。</li>\n</ul>\n<h4 id=\"不能死锁\"><a href=\"#不能死锁\" class=\"headerlink\" title=\"不能死锁\"></a>不能死锁</h4><ul>\n<li>客户端在持有锁的期间崩溃而没有主动解锁，也能保证后续其他客户端能加锁。</li>\n</ul>\n<h4 id=\"容错性\"><a href=\"#容错性\" class=\"headerlink\" title=\"容错性\"></a>容错性</h4><ul>\n<li>只要大部分的 Redis 节点正常运行，客户端就可以加锁和解锁。</li>\n</ul>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><p>可以直接通过 <code>set key value px milliseconds nx</code> 命令实现加锁， 通过 Lua 脚本实现解锁。</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token operator\">//</span>获取锁（unique_value可以是UUID等）\nSET resource_name unique_value NX PX  <span class=\"token number\">30000</span>\n\n<span class=\"token operator\">//</span>释放锁（lua脚本中，一定要比较value，防止误解锁）\n<span class=\"token keyword\">if</span> redis<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"get\"</span><span class=\"token punctuation\">,</span>KEYS<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> ARGV<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">then</span>\n    <span class=\"token keyword\">return</span> redis<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"del\"</span><span class=\"token punctuation\">,</span>KEYS<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">end</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"代码解释\"><a href=\"#代码解释\" class=\"headerlink\" title=\"代码解释\"></a>代码解释</h4><ul>\n<li>set 命令要用 <code>set key value px milliseconds nx</code>，替代 <code>setnx + expire</code> 需要分两次执行命令的方式，保证了原子性，</li>\n<li>value 要具有唯一性，可以使用<code>UUID.randomUUID().toString()</code>方法生成，用来标识这把锁是属于哪个请求加的，在解锁的时候就可以有依据；</li>\n<li>释放锁时要验证 value 值，防止误解锁；</li>\n<li>通过 Lua 脚本来避免 Check And Set 模型的并发问题，因为在释放锁的时候因为涉及到多个 Redis 操作 （利用了 eval 命令执行 Lua 脚本的原子性）；</li>\n</ul>\n<h4 id=\"加锁代码分析\"><a href=\"#加锁代码分析\" class=\"headerlink\" title=\"加锁代码分析\"></a>加锁代码分析</h4><p>首先，set()加入了 NX 参数，可以保证如果已有 key 存在，则函数不会调用成功，也就是只有一个客户端能持有锁，满足互斥性。其次，由于我们对锁设置了过期时间，即使锁的持有者后续发生崩溃而没有解锁，锁也会因为到了过期时间而自动解锁（即 key 被删除），不会发生死锁。最后，因为我们将 value 赋值为 requestId，用来标识这把锁是属于哪个请求加的，那么在客户端在解锁的时候就可以进行校验是否是同一个客户端。</p>\n<h4 id=\"解锁代码分析\"><a href=\"#解锁代码分析\" class=\"headerlink\" title=\"解锁代码分析\"></a>解锁代码分析</h4><p>将 Lua 代码传到 jedis.eval()方法里，并使参数 KEYS[1]赋值为 lockKey，ARGV[1]赋值为 requestId。在执行的时候，首先会获取锁对应的 value 值，检查是否与 requestId 相等，如果相等则解锁（删除 key）。</p>\n<h4 id=\"存在的风险\"><a href=\"#存在的风险\" class=\"headerlink\" title=\"存在的风险\"></a>存在的风险</h4><p>如果存储锁对应 key 的那个节点挂了的话，就可能存在丢失锁的风险，导致出现多个客户端持有锁的情况，这样就不能实现资源的独享了。</p>\n<ol>\n<li>客户端 A 从 master 获取到锁</li>\n<li>在 master 将锁同步到 slave 之前，master 宕掉了（Redis 的主从同步通常是异步的）。<br>主从切换，slave 节点被晋级为 master 节点</li>\n<li>客户端 B 取得了同一个资源被客户端 A 已经获取到的另外一个锁。导致存在同一时刻存不止一个线程获取到锁的情况。</li>\n</ol>\n<h4 id=\"redlock-算法出现\"><a href=\"#redlock-算法出现\" class=\"headerlink\" title=\"redlock 算法出现\"></a>redlock 算法出现</h4><p>这个场景是假设有一个 redis cluster，有 5 个 redis master 实例。然后执行如下步骤获取一把锁：</p>\n<ol>\n<li>获取当前时间戳，单位是毫秒；</li>\n<li>跟上面类似，轮流尝试在每个 master 节点上创建锁，过期时间较短，一般就几十毫秒；</li>\n<li>尝试在大多数节点上建立一个锁，比如 5 个节点就要求是 3 个节点 n &#x2F; 2 + 1；</li>\n<li>客户端计算建立好锁的时间，如果建立锁的时间小于超时时间，就算建立成功了；</li>\n<li>要是锁建立失败了，那么就依次之前建立过的锁删除；</li>\n<li>只要别人建立了一把分布式锁，你就得不断轮询去尝试获取锁。</li>\n</ol>\n<p><img src=\"/img/posts/java/interview/6.png\" alt=\"图片\"></p>\n<p>Redis 官方给出了以上两种基于 Redis 实现分布式锁的方法，详细说明可以查看：</p>\n<blockquote>\n<p><a href=\"https://redis.io/topics/distlock\">https://redis.io/topics/distlock</a> 。</p>\n</blockquote>\n<h4 id=\"Redisson-实现\"><a href=\"#Redisson-实现\" class=\"headerlink\" title=\"Redisson 实现\"></a>Redisson 实现</h4><p>Redisson 是一个在 Redis 的基础上实现的 Java 驻内存数据网格（In-Memory Data Grid）。它不仅提供了一系列的分布式的 Java 常用对象，还实现了可重入锁（Reentrant Lock）、公平锁（Fair Lock、联锁（MultiLock）、 红锁（RedLock）、 读写锁（ReadWriteLock）等，还提供了许多分布式服务。</p>\n<p>Redisson 提供了使用 Redis 的最简单和最便捷的方法。Redisson 的宗旨是促进使用者对 Redis 的关注分离（Separation of Concern），从而让使用者能够将精力更集中地放在处理业务逻辑上。</p>\n<p><strong>Redisson 分布式重入锁用法</strong></p>\n<p>Redisson 支持单点模式、主从模式、哨兵模式、集群模式，这里以单点模式为例：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token operator\">//</span> <span class=\"token number\">1.</span>构造redisson实现分布式锁必要的Config\nConfig config <span class=\"token operator\">=</span> new <span class=\"token function\">Config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconfig<span class=\"token punctuation\">.</span><span class=\"token function\">useSingleServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"redis://127.0.0.1:5379\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setDatabase</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">//</span> <span class=\"token number\">2.</span>构造RedissonClient\nRedissonClient redissonClient <span class=\"token operator\">=</span> Redisson<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">//</span> <span class=\"token number\">3.</span>获取锁对象实例（无法保证是按线程的顺序获取到）\nRLock rLock <span class=\"token operator\">=</span> redissonClient<span class=\"token punctuation\">.</span><span class=\"token function\">getLock</span><span class=\"token punctuation\">(</span>lockKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">try</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token operator\">/</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span>\n     <span class=\"token operator\">*</span> <span class=\"token number\">4.</span>尝试获取锁\n     <span class=\"token operator\">*</span> waitTimeout 尝试获取锁的最大等待时间，超过这个值，则认为获取锁失败\n     <span class=\"token operator\">*</span> leaseTime   锁的持有时间<span class=\"token punctuation\">,</span>超过这个时间锁会自动失效（值应设置为大于业务处理的时间，确保在锁有效期内业务能处理完）\n     <span class=\"token operator\">*</span><span class=\"token operator\">/</span>\n    boolean res <span class=\"token operator\">=</span> rLock<span class=\"token punctuation\">.</span><span class=\"token function\">tryLock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>long<span class=\"token punctuation\">)</span>waitTimeout<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>long<span class=\"token punctuation\">)</span>leaseTime<span class=\"token punctuation\">,</span> TimeUnit<span class=\"token punctuation\">.</span>SECONDS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token operator\">//</span>成功获得锁，在这里处理业务\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token function\">catch</span> <span class=\"token punctuation\">(</span>Exception e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    throw new <span class=\"token function\">RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aquire lock fail\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token function\">finally</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token operator\">//</span>无论如何<span class=\"token punctuation\">,</span> 最后都要解锁\n    rLock<span class=\"token punctuation\">.</span><span class=\"token function\">unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>加锁流程图</p>\n<p><img src=\"/img/posts/java/interview/7.png\" alt=\"图片\"></p>\n<p>解锁流程图</p>\n<p><img src=\"/img/posts/java/interview/8.png\" alt=\"图片\"></p>\n<p>我们可以看到，RedissonLock 是可重入的，并且考虑了失败重试，可以设置锁的最大等待时间， 在实现上也做了一些优化，减少了无效的锁申请，提升了资源的利用率。</p>\n<p>需要特别注意的是，RedissonLock 同样没有解决 节点挂掉的时候，存在丢失锁的风险的问题。而现实情况是有一些场景无法容忍的，所以 Redisson 提供了实现了 redlock 算法的 RedissonRedLock，RedissonRedLock 真正解决了单点失败的问题，代价是需要额外的为 RedissonRedLock 搭建 Redis 环境。</p>\n<p>所以，如果业务场景可以容忍这种小概率的错误，则推荐使用 RedissonLock， 如果无法容忍，则推荐使用 RedissonRedLock。</p>\n<h3 id=\"Redis-面试常见问答\"><a href=\"#Redis-面试常见问答\" class=\"headerlink\" title=\"Redis 面试常见问答\"></a>Redis 面试常见问答</h3><h4 id=\"什么是缓存雪崩？怎么解决？\"><a href=\"#什么是缓存雪崩？怎么解决？\" class=\"headerlink\" title=\"什么是缓存雪崩？怎么解决？\"></a>什么是缓存雪崩？怎么解决？</h4><p><img src=\"/img/posts/java/interview/9.png\" alt=\"图片\"></p>\n<p>通常，我们会使用缓存用于缓冲对 DB 的冲击，如果缓存宕机，所有请求将直接打在 DB，造成 DB 宕机——从而导致整个系统宕机。</p>\n<p><strong>如何解决呢？</strong></p>\n<p><img src=\"/img/posts/java/interview/10.png\" alt=\"图片\"></p>\n<p><strong>2 种策略（同时使用）：</strong></p>\n<ul>\n<li>对缓存做高可用，防止缓存宕机</li>\n<li>使用断路器，如果缓存宕机，为了防止系统全部宕机，限制部分流量进入 DB，保证部分可用，其余的请求返回断路器的默认值。</li>\n</ul>\n<h4 id=\"什么是缓存穿透？怎么解决？\"><a href=\"#什么是缓存穿透？怎么解决？\" class=\"headerlink\" title=\"什么是缓存穿透？怎么解决？\"></a>什么是缓存穿透？怎么解决？</h4><p><strong>解释 1：</strong>缓存查询一个没有的 key，同时数据库也没有，如果黑客大量的使用这种方式，那么就会导致 DB 宕机。</p>\n<p><strong>解决方案：</strong>我们可以使用一个默认值来防止，例如，当访问一个不存在的 key，然后再去访问数据库，还是没有，那么就在缓存里放一个占位符，下次来的时候，检查这个占位符，如果发生时占位符，就不去数据库查询了，防止 DB 宕机。</p>\n<p><strong>解释 2：</strong>大量请求查询一个刚刚失效的 key，导致 DB 压力倍增，可能导致宕机，但实际上，查询的都是相同的数据。</p>\n<p><strong>解决方案：</strong>可以在这些请求代码加上双重检查锁。但是那个阶段的请求会变慢。不过总比 DB 宕机好。</p>\n<h4 id=\"什么是缓存并发竞争？怎么解决？\"><a href=\"#什么是缓存并发竞争？怎么解决？\" class=\"headerlink\" title=\"什么是缓存并发竞争？怎么解决？\"></a>什么是缓存并发竞争？怎么解决？</h4><p><strong>解释：</strong>多个客户端写一个 key，如果顺序错了，数据就不对了。但是顺序我们无法控制。</p>\n<p><strong>解决方案：</strong>使用分布式锁，例如 zk，同时加入数据的时间戳。同一时刻，只有抢到锁的客户端才能写入，同时，写入时，比较当前数据的时间戳和缓存中数据的时间戳。</p>\n<p>####什么是缓存和数据库双写不一致？怎么解决？</p>\n<p>解释：连续写数据库和缓存，但是操作期间，出现并发了，数据不一致了。</p>\n<p>通常，更新缓存和数据库有以下几种顺序：</p>\n<ul>\n<li>先更新数据库，再更新缓存。</li>\n<li>先删缓存，再更新数据库。</li>\n<li>先更新数据库，再删除缓存。</li>\n</ul>\n<p><em>三种方式的优劣来看一下：</em></p>\n<h4 id=\"先更新数据库，再更新缓存\"><a href=\"#先更新数据库，再更新缓存\" class=\"headerlink\" title=\"先更新数据库，再更新缓存\"></a>先更新数据库，再更新缓存</h4><p>这么做的问题是：当有 2 个请求同时更新数据，那么如果不使用分布式锁，将无法控制最后缓存的值到底是多少。也就是并发写的时候有问题。</p>\n<h4 id=\"先删缓存，Redis-面试常见问答再更新数据库\"><a href=\"#先删缓存，Redis-面试常见问答再更新数据库\" class=\"headerlink\" title=\"先删缓存，Redis 面试常见问答再更新数据库\"></a>先删缓存，Redis 面试常见问答再更新数据库</h4><p>这么做的问题：如果在删除缓存后，有客户端读数据，将可能读到旧数据，并有可能设置到缓存中，导致缓存中的数据一直是老数据。</p>\n<p>有 2 种解决方案：</p>\n<ul>\n<li>使用“双删”，即删更删，最后一步的删除作为异步操作，就是防止有客户端读取的时候设置了旧值。</li>\n<li>使用队列，当这个 key 不存在时，将其放入队列，串行执行，必须等到更新数据库完毕才能读取数据。</li>\n</ul>\n<p>总的来讲，比较麻烦。</p>\n<h4 id=\"先更新数据库，再删除缓存\"><a href=\"#先更新数据库，再删除缓存\" class=\"headerlink\" title=\"先更新数据库，再删除缓存\"></a>先更新数据库，再删除缓存</h4><p>这个实际是常用的方案，但是有很多人不知道，这里介绍一下，这个叫 Cache Aside Pattern，老外发明的。如果先更新数据库，再删除缓存，那么就会出现更新数据库之前有瞬间数据不是很及时。</p>\n<p>同时，如果在更新之前，缓存刚好失效了，读客户端有可能读到旧值，然后在写客户端删除结束后再次设置了旧值，非常巧合的情况。</p>\n<p>有 2 个前提条件：</p>\n<ul>\n<li>缓存在写之前的时候失效，同时，在写客户度删除操作结束后，放置旧数据 —— 也就是读比写慢。</li>\n<li>设置有的写操作还会锁表</li>\n</ul>\n<p>所以，这个很难出现，但是如果出现了怎么办？使用双删！！！记录更新期间有没有客户端读数据库，如果有，在更新完数据库之后，执行延迟删除。<br>还有一种可能，如果执行更新数据库，准备执行删除缓存时，服务挂了，执行删除失败怎么办？？？<br>这就坑了！！！不过可以通过订阅数据库的 binlog 来删除。</p>\n<h3 id=\"谈谈-Redis-的过期策略\"><a href=\"#谈谈-Redis-的过期策略\" class=\"headerlink\" title=\"谈谈 Redis 的过期策略\"></a>谈谈 Redis 的过期策略</h3><p>在日常开发中，我们使用 Redis 存储 key 时通常会设置一个过期时间，但是 Redis 是怎么删除过期的 key，而且 Redis 是单线程的，删除 key 会不会造成阻塞。要搞清楚这些，就要了解 Redis 的过期策略和内存淘汰机制。</p>\n<p><strong>Redis 采用的是定期删除 + 懒惰删除策略。</strong></p>\n<h4 id=\"定期删除策略\"><a href=\"#定期删除策略\" class=\"headerlink\" title=\"定期删除策略\"></a>定期删除策略</h4><p>Redis 会将每个设置了过期时间的 key 放入到一个独立的字典中，默认每 100ms 进行一次过期扫描：</p>\n<ol>\n<li>随机抽取 20 个 key</li>\n<li>删除这 20 个 key 中过期的 key</li>\n<li>如果过期的 key 比例超过 1&#x2F;4，就重复步骤 1，继续删除。</li>\n</ol>\n<p><strong>为什不扫描所有的 key？</strong></p>\n<p>Redis 是单线程，全部扫描岂不是卡死了。而且为了防止每次扫描过期的 key 比例都超过 1&#x2F;4，导致不停循环卡死线程，Redis 为每次扫描添加了上限时间，默认是 25ms。</p>\n<p>如果客户端将超时时间设置的比较短，比如 10ms，那么就会出现大量的链接因为超时而关闭，业务端就会出现很多异常。而且这时你还无法从 Redis 的 slowlog 中看到慢查询记录，因为慢查询指的是逻辑处理过程慢，不包含等待时间。</p>\n<p>如果在同一时间出现大面积 key 过期，Redis 循环多次扫描过期词典，直到过期的 key 比例小于 1&#x2F;4。这会导致卡顿，而且在高并发的情况下，可能会导致缓存雪崩。</p>\n<p><strong>为什么 Redis 为每次扫描添的上限时间是 25ms，还会出现上面的情况？</strong></p>\n<p>因为 Redis 是单线程，每个请求处理都需要排队，而且由于 Redis 每次扫描都是 25ms，也就是每个请求最多 25ms，100 个请求就是 2500ms。</p>\n<p>如果有大批量的 key 过期，要给过期时间设置一个随机范围，而不宜全部在同一时间过期，分散过期处理的压力。</p>\n<h4 id=\"从库的过期策略\"><a href=\"#从库的过期策略\" class=\"headerlink\" title=\"从库的过期策略\"></a>从库的过期策略</h4><p>从库不会进行过期扫描，从库对过期的处理是被动的。主库在 key 到期时，会在 AOF 文件里增加一条 del 指令，同步到所有的从库，从库通过执行这条 del 指令来删除过期的 key。</p>\n<p>因为指令同步是异步进行的，所以主库过期的 key 的 del 指令没有及时同步到从库的话，会出现主从数据的不一致，主库没有的数据在从库里还存在。</p>\n<h4 id=\"懒惰删除策略\"><a href=\"#懒惰删除策略\" class=\"headerlink\" title=\"懒惰删除策略\"></a>懒惰删除策略</h4><p><strong>Redis 为什么要懒惰删除(lazy free)？</strong></p>\n<p>删除指令 del 会直接释放对象的内存，大部分情况下，这个指令非常快，没有明显延迟。不过如果删除的 key 是一个非常大的对象，比如一个包含了千万元素的 hash，又或者在使用 FLUSHDB 和 FLUSHALL 删除包含大量键的数据库时，那么删除操作就会导致单线程卡顿。</p>\n<p>redis 4.0 引入了 lazyfree 的机制，它可以将删除键或数据库的操作放在后台线程里执行， 从而尽可能地避免服务器阻塞。</p>\n<h4 id=\"unlink\"><a href=\"#unlink\" class=\"headerlink\" title=\"unlink\"></a>unlink</h4><p>unlink 指令，它能对删除操作进行懒处理，丢给后台线程来异步回收内存。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> unlink key\nOK<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"flush\"><a href=\"#flush\" class=\"headerlink\" title=\"flush\"></a>flush</h4><p>flushdb 和 flushall 指令，用来清空数据库，这也是极其缓慢的操作。Redis 4.0 同样给这两个指令也带来了异步化，在指令后面增加 async 参数就可以将整棵大树连根拔起，扔给后台线程慢慢焚烧。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> flushall async\nOK<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"异步队列\"><a href=\"#异步队列\" class=\"headerlink\" title=\"异步队列\"></a>异步队列</h4><p>主线程将对象的引用从「大树」中摘除后，会将这个 key 的内存回收操作包装成一个任务，塞进异步任务队列，后台线程会从这个异步队列中取任务。任务队列被主线程和异步线程同时操作，所以必须是一个线程安全的队列。</p>\n<p>不是所有的 unlink 操作都会延后处理，如果对应 key 所占用的内存很小，延后处理就没有必要了，这时候 Redis 会将对应的 key 内存立即回收，跟 del 指令一样。</p>\n<h4 id=\"更多异步删除点\"><a href=\"#更多异步删除点\" class=\"headerlink\" title=\"更多异步删除点\"></a>更多异步删除点</h4><p>Redis 回收内存除了 del 指令和 flush 之外，还会存在于在 key 的过期、LRU 淘汰、rename 指令以及从库全量同步时接受完 rdb 文件后会立即进行的 flush 操作。</p>\n<p>Redis4.0 为这些删除点也带来了异步删除机制，打开这些点需要额外的配置选项。</p>\n<ul>\n<li>slave-lazy-flush 从库接受完 rdb 文件后的 flush 操作</li>\n<li>lazyfree-lazy-eviction 内存达到 maxmemory 时进行淘汰</li>\n<li>lazyfree-lazy-expire key 过期删除</li>\n<li>lazyfree-lazy-server-del rename 指令删除 destKey</li>\n</ul>\n<h4 id=\"内存淘汰机制\"><a href=\"#内存淘汰机制\" class=\"headerlink\" title=\"内存淘汰机制\"></a>内存淘汰机制</h4><p>Redis 的内存占用会越来越高。Redis 为了限制最大使用内存，提供了 redis.conf 中的<br>配置参数 maxmemory。当内存超出 maxmemory，<strong>Redis 提供了几种内存淘汰机制让用户选择，配置 maxmemory-policy：</strong></p>\n<ul>\n<li><strong>noeviction：</strong>当内存超出 maxmemory，写入请求会报错，但是删除和读请求可以继续。（使用这个策略，疯了吧）</li>\n<li><strong>allkeys-lru：</strong>当内存超出 maxmemory，在所有的 key 中，移除最少使用的 key。只把 Redis 既当缓存是使用这种策略。（推荐）。</li>\n<li><strong>allkeys-random：</strong>当内存超出 maxmemory，在所有的 key 中，随机移除某个 key。（应该没人用吧）</li>\n<li><strong>volatile-lru：</strong>当内存超出 maxmemory，在设置了过期时间 key 的字典中，移除最少使用的 key。把 Redis 既当缓存，又做持久化的时候使用这种策略。</li>\n<li><strong>volatile-random：</strong>当内存超出 maxmemory，在设置了过期时间 key 的字典中，随机移除某个 key。</li>\n<li><strong>volatile-ttl：</strong>当内存超出 maxmemory，在设置了过期时间 key 的字典中，优先移除 ttl 小的。</li>\n</ul>\n<h4 id=\"LRU-算法\"><a href=\"#LRU-算法\" class=\"headerlink\" title=\"LRU 算法\"></a>LRU 算法</h4><p>实现 LRU 算法除了需要 key&#x2F;value 字典外，还需要附加一个链表，链表中的元素按照一定的顺序进行排列。当空间满的时候，会踢掉链表尾部的元素。当字典的某个元素被访问时，它在链表中的位置会被移动到表头。所以链表的元素排列顺序就是元素最近被访问的时间顺序。</p>\n<p>使用 Python 的 OrderedDict(双向链表 + 字典) 来实现一个简单的 LRU 算法：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> OrderedDict\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">LRUDict</span><span class=\"token punctuation\">(</span>OrderedDict<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> capacity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>capacity <span class=\"token operator\">=</span> capacity\n        self<span class=\"token punctuation\">.</span>items <span class=\"token operator\">=</span> OrderedDict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__setitem__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        old_value <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> old_value <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value\n        <span class=\"token keyword\">elif</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>capacity<span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span>popitem<span class=\"token punctuation\">(</span>last<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__getitem__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        value <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> value <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value\n        <span class=\"token keyword\">return</span> value\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__repr__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">repr</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">)</span>\n\n\nd <span class=\"token operator\">=</span> LRUDict<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    d<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i\n<span class=\"token keyword\">print</span> d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"近似-LRU-算法\"><a href=\"#近似-LRU-算法\" class=\"headerlink\" title=\"近似 LRU 算法\"></a>近似 LRU 算法</h4><p>Redis 使用的并不是完全 LRU 算法。不使用 LRU 算法，是为了节省内存，Redis 采用的是随机 LRU 算法，Redis 为每一个 key 增加了一个 24 bit 的字段，用来记录这个 key 最后一次被访问的时间戳。</p>\n<p>注意 Redis 的 LRU 淘汰策略是懒惰处理，也就是不会主动执行淘汰策略，当 Redis 执行写操作时，发现内存超出 maxmemory，就会执行 LRU 淘汰算法。这个算法就是随机采样出 5(默认值)个 key，然后移除最旧的 key，如果移除后内存还是超出 maxmemory，那就继续随机采样淘汰，直到内存低于 maxmemory 为止。</p>\n<p>如何采样就是看 maxmemory-policy 的配置，如果是 allkeys 就是从所有的 key 字典中随机，如果是 volatile 就从带过期时间的 key 字典中随机。每次采样多少个 key 看的是 maxmemory_samples 的配置，默认为 5。</p>\n<h4 id=\"LFU\"><a href=\"#LFU\" class=\"headerlink\" title=\"LFU\"></a>LFU</h4><p>Redis 4.0 里引入了一个新的淘汰策略 —— LFU（Least Frequently Used） 模式，作者认为它比 LRU 更加优秀。</p>\n<p>LFU 表示按最近的访问频率进行淘汰，它比 LRU 更加精准地表示了一个 key 被访问的热度。</p>\n<p>如果一个 key 长时间不被访问，只是刚刚偶然被用户访问了一下，那么在使用 LRU 算法下它是不容易被淘汰的，因为 LRU 算法认为当前这个 key 是很热的。而 LFU 是需要追踪最近一段时间的访问频率，如果某个 key 只是偶然被访问一次是不足以变得很热的，它需要在近期一段时间内被访问很多次才有机会被认为很热。</p>\n<p><strong>Redis 对象的热度</strong></p>\n<p>Redis 的所有对象结构头中都有一个 24bit 的字段，这个字段用来记录对象的热度。</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token operator\">//</span> redis 的对象头\ntypedef struct <span class=\"token function\">redisObject</span> <span class=\"token punctuation\">&#123;</span>\n    unsigned type<span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">//</span> 对象类型如 zset<span class=\"token operator\">/</span>set<span class=\"token operator\">/</span>hash 等等\n    unsigned encoding<span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">//</span> 对象编码如 ziplist<span class=\"token operator\">/</span>intset<span class=\"token operator\">/</span>skiplist 等等\n    unsigned lru<span class=\"token punctuation\">:</span><span class=\"token number\">24</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">//</span> 对象的「热度」\n    int refcount<span class=\"token punctuation\">;</span> <span class=\"token operator\">//</span> 引用计数\n    void <span class=\"token operator\">*</span>ptr<span class=\"token punctuation\">;</span> <span class=\"token operator\">//</span> 对象的 body\n<span class=\"token punctuation\">&#125;</span> robj<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>LRU 模式</strong></p>\n<p>在 LRU 模式下，lru 字段存储的是 Redis 时钟 server.lruclock，Redis 时钟是一个 24bit 的整数，默认是 Unix 时间戳对 2^24 取模的结果，大约 97 天清零一次。当某个 key 被访问一次，它的对象头的 lru 字段值就会被更新为 server.lruclock。</p>\n<p><strong>LFU 模式</strong></p>\n<p>在 LFU 模式下，lru 字段 24 个 bit 用来存储两个值，分别是 ldt(last decrement time) 和 logc(logistic counter)。</p>\n<p>logc 是 8 个 bit，用来存储访问频次，因为 8 个 bit 能表示的最大整数值为 255，存储频次肯定远远不够，所以这 8 个 bit 存储的是频次的对数值，并且这个值还会随时间衰减。如果它的值比较小，那么就很容易被回收。为了确保新创建的对象不被回收，新对象的这 8 个 bit 会初始化为一个大于零的值，默认是 LFU_INIT_VAL&#x3D;5。</p>\n<p>ldt 是 16 个位，用来存储上一次 logc 的更新时间，因为只有 16 位，所以精度不可能很高。它取的是分钟时间戳对 2^16 进行取模，大约每隔 45 天就会折返。</p>\n<p>同 LRU 模式一样，我们也可以使用这个逻辑计算出对象的空闲时间，只不过精度是分钟级别的。图中的 server.unixtime 是当前 redis 记录的系统时间戳，和 server.lruclock 一样，它也是每毫秒更新一次。</p>\n"},{"title":"OpenID Connect Core 1.0","date":"2023-10-25T16:00:00.000Z","updated":"2025-09-24T06:00:08.748Z","keywords":null,"copyright":false,"_content":"\n### 1. 介绍\n\nOpenID Connect 1.0 is a simple identity layer on top of the OAuth 2.0 [[RFC6749\\]](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) protocol. It enables Clients to verify the identity of the End-User based on the authentication performed by an Authorization Server, as well as to obtain basic profile information about the End-User in an interoperable and REST-like manner.\n\nThe OpenID Connect Core 1.0 specification defines the core OpenID Connect functionality: authentication built on top of OAuth 2.0 and the use of Claims to communicate information about the End-User. It also describes the security and privacy considerations for using OpenID Connect.\n\nAs background, the [OAuth 2.0 Authorization Framework](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749] and [OAuth 2.0 Bearer Token Usage](https://openid.net/specs/openid-connect-core-1_0.html#RFC6750) [RFC6750] specifications provide a general framework for third-party applications to obtain and use limited access to HTTP resources. They define mechanisms to obtain and use Access Tokens to access resources but do not define standard methods to provide identity information. Notably, without profiling OAuth 2.0, it is incapable of providing information about the authentication of an End-User. Readers are expected to be familiar with these specifications.\n\nOpenID Connect implements authentication as an extension to the OAuth 2.0 authorization process. Use of this extension is requested by Clients by including the `openid` scope value in the Authorization Request. Information about the authentication performed is returned in a [JSON Web Token (JWT)](https://openid.net/specs/openid-connect-core-1_0.html#JWT) [JWT] called an ID Token (see [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken)). OAuth 2.0 Authentication Servers implementing OpenID Connect are also referred to as OpenID Providers (OPs). OAuth 2.0 Clients using OpenID Connect are also referred to as Relying Parties (RPs).\n\nThis specification assumes that the Relying Party has already obtained configuration information about the OpenID Provider, including its Authorization Endpoint and Token Endpoint locations. This information is normally obtained via Discovery, as described in [OpenID Connect Discovery 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Discovery) [OpenID.Discovery], or may be obtained via other mechanisms.\n\nLikewise, this specification assumes that the Relying Party has already obtained sufficient credentials and provided information needed to use the OpenID Provider. This is normally done via Dynamic Registration, as described in [OpenID Connect Dynamic Client Registration 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration) [OpenID.Registration], or may be obtained via other mechanisms.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 1.1. 需求符号和约定\n\nThe key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC 2119](https://openid.net/specs/openid-connect-core-1_0.html#RFC2119) [RFC2119].\n\nIn the .txt version of this document, values are quoted to indicate that they are to be taken literally. When using these values in protocol messages, the quotes MUST NOT be used as part of the value. In the HTML version of this document, values to be taken literally are indicated by the use of `this fixed-width font`.\n\nAll uses of [JSON Web Signature (JWS)](https://openid.net/specs/openid-connect-core-1_0.html#JWS) [JWS] and [JSON Web Encryption (JWE)](https://openid.net/specs/openid-connect-core-1_0.html#JWE) [JWE] data structures in this specification utilize the JWS Compact Serialization or the JWE Compact Serialization; the JWS JSON Serialization and the JWE JSON Serialization are not used.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 1.2. 术语\n\nThis specification uses the terms \"Access Token\", \"Authorization Code\", \"Authorization Endpoint\", \"Authorization Grant\", \"Authorization Server\", \"Client\", \"Client Authentication\", \"Client Identifier\", \"Client Secret\", \"Grant Type\", \"Protected Resource\", \"Redirection URI\", \"Refresh Token\", \"Resource Owner\", \"Resource Server\", \"Response Type\", and \"Token Endpoint\" defined by [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749], the terms \"Claim Name\", \"Claim Value\", \"JSON Web Token (JWT)\", \"JWT Claims Set\", and \"Nested JWT\" defined by [JSON Web Token (JWT)](https://openid.net/specs/openid-connect-core-1_0.html#JWT) [JWT], the terms \"Header Parameter\" and \"JOSE Header\" defined by [JSON Web Signature (JWS)](https://openid.net/specs/openid-connect-core-1_0.html#JWS) [JWS], the term \"User Agent\" defined by [RFC 2616](https://openid.net/specs/openid-connect-core-1_0.html#RFC2616) [RFC2616], and the term \"Response Mode\" defined by [OAuth 2.0 Multiple Response Type Encoding Practices](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses) [OAuth.Responses].\n\nThis specification also defines the following terms:\n\n> - Authentication\n>\n>   Process used to achieve sufficient confidence in the binding between the Entity and the presented Identity.\n>\n> - Authentication Request\n>\n>   OAuth 2.0 Authorization Request using extension parameters and scopes defined by OpenID Connect to request that the End-User be authenticated by the Authorization Server, which is an OpenID Connect Provider, to the Client, which is an OpenID Connect Relying Party.\n>\n> - Authentication Context\n>\n>   Information that the Relying Party can require before it makes an entitlement decision with respect to an authentication response. Such context can include, but is not limited to, the actual authentication method used or level of assurance such as [ISO/IEC 29115](https://openid.net/specs/openid-connect-core-1_0.html#ISO29115) [ISO29115] entity authentication assurance level.\n>\n> - Authentication Context Class\n>\n>   Set of authentication methods or procedures that are considered to be equivalent to each other in a particular context.\n>\n> - Authentication Context Class Reference\n>\n>   Identifier for an Authentication Context Class.\n>\n> - Authorization Code Flow\n>\n>   OAuth 2.0 flow in which an Authorization Code is returned from the Authorization Endpoint and all tokens are returned from the Token Endpoint.\n>\n> - Authorization Request\n>\n>   OAuth 2.0 Authorization Request as defined by [[RFC6749\\]](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749).\n>\n> - Claim\n>\n>   Piece of information asserted about an Entity.\n>\n> - Claim Type\n>\n>   Syntax used for representing a Claim Value. This specification defines Normal, Aggregated, and Distributed Claim Types.\n>\n> - Claims Provider\n>\n>   Server that can return Claims about an Entity.\n>\n> - Credential\n>\n>   Data presented as evidence of the right to use an identity or other resources.\n>\n> - End-User\n>\n>   Human participant.\n>\n> - Entity\n>\n>   Something that has a separate and distinct existence and that can be identified in a context. An End-User is one example of an Entity.\n>\n> - Essential Claim\n>\n>   Claim specified by the Client as being necessary to ensure a smooth authorization experience for the specific task requested by the End-User.\n>\n> - Hybrid Flow\n>\n>   OAuth 2.0 flow in which an Authorization Code is returned from the Authorization Endpoint, some tokens are returned from the Authorization Endpoint, and others are returned from the Token Endpoint.\n>\n> - ID Token\n>\n>   [JSON Web Token (JWT)](https://openid.net/specs/openid-connect-core-1_0.html#JWT) [JWT] that contains Claims about the Authentication event. It MAY contain other Claims.\n>\n> - Identifier\n>\n>   Value that uniquely characterizes an Entity in a specific context.\n>\n> - Identity\n>\n>   Set of attributes related to an Entity.\n>\n> - Implicit Flow\n>\n>   OAuth 2.0 flow in which all tokens are returned from the Authorization Endpoint and neither the Token Endpoint nor an Authorization Code are used.\n>\n> - Issuer\n>\n>   Entity that issues a set of Claims.\n>\n> - Issuer Identifier\n>\n>   Verifiable Identifier for an Issuer. An Issuer Identifier is a case sensitive URL using the `https` scheme that contains scheme, host, and optionally, port number and path components and no query or fragment components.\n>\n> - Message\n>\n>   Request or a response between an OpenID Relying Party and an OpenID Provider.\n>\n> - OpenID Provider (OP)\n>\n>   OAuth 2.0 Authorization Server that is capable of Authenticating the End-User and providing Claims to a Relying Party about the Authentication event and the End-User.\n>\n> - Request Object\n>\n>   JWT that contains a set of request parameters as its Claims.\n>\n> - Request URI\n>\n>   URL that references a resource containing a Request Object. The Request URI contents MUST be retrievable by the Authorization Server.\n>\n> - Pairwise Pseudonymous Identifier (PPID)\n>\n>   Identifier that identifies the Entity to a Relying Party that cannot be correlated with the Entity's PPID at another Relying Party.\n>\n> - Personally Identifiable Information (PII)\n>\n>   Information that (a) can be used to identify the natural person to whom such information relates, or (b) is or might be directly or indirectly linked to a natural person to whom such information relates.\n>\n> - Relying Party (RP)\n>\n>   OAuth 2.0 Client application requiring End-User Authentication and Claims from an OpenID Provider.\n>\n> - Sector Identifier\n>\n>   Host component of a URL used by the Relying Party's organization that is an input to the computation of pairwise Subject Identifiers for that Relying Party.\n>\n> - Self-Issued OpenID Provider\n>\n>   Personal, self-hosted OpenID Provider that issues self-signed ID Tokens.\n>\n> - Subject Identifier\n>\n>   Locally unique and never reassigned identifier within the Issuer for the End-User, which is intended to be consumed by the Client.\n>\n> - UserInfo Endpoint\n>\n>   Protected Resource that, when presented with an Access Token by the Client, returns authorized information about the End-User represented by the corresponding Authorization Grant. The UserInfo Endpoint URL MUST use the `https` scheme and MAY contain port, path, and query parameter components.\n>\n> - Validation\n>\n>   Process intended to establish the soundness or correctness of a construct.\n>\n> - Verification\n>\n>   Process intended to test or prove the truth or accuracy of a fact or value.\n>\n> - Voluntary Claim\n>\n>   Claim specified by the Client as being useful but not Essential for the specific task requested by the End-User.\n\n\n\nIMPORTANT NOTE TO READERS: The terminology definitions in this section are a normative portion of this specification, imposing requirements upon implementations. All the capitalized words in the text of this specification, such as \"Issuer Identifier\", reference these defined terms. Whenever the reader encounters them, their definitions found in this section must be followed.\n\nFor more background on some of the terminology used, see [Internet Security Glossary, Version 2](https://openid.net/specs/openid-connect-core-1_0.html#RFC4949) [RFC4949], [ISO/IEC 29115 Entity Authentication Assurance](https://openid.net/specs/openid-connect-core-1_0.html#ISO29115) [ISO29115], and [ITU-T X.1252](https://openid.net/specs/openid-connect-core-1_0.html#X.1252) [X.1252].\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 1.3. 概述\n\nThe OpenID Connect protocol, in abstract, follows the following steps.\n\n\n\n1. The RP (Client) sends a request to the OpenID Provider (OP).\n2. The OP authenticates the End-User and obtains authorization.\n3. The OP responds with an ID Token and usually an Access Token.\n4. The RP can send a request with the Access Token to the UserInfo Endpoint.\n5. The UserInfo Endpoint returns Claims about the End-User.\n\n\n\nThese steps are illustrated in the following diagram:\n\n```\n+--------+                                   +--------+\n|        |                                   |        |\n|        |---------(1) AuthN Request-------->|        |\n|        |                                   |        |\n|        |  +--------+                       |        |\n|        |  |        |                       |        |\n|        |  |  End-  |<--(2) AuthN & AuthZ-->|        |\n|        |  |  User  |                       |        |\n|   RP   |  |        |                       |   OP   |\n|        |  +--------+                       |        |\n|        |                                   |        |\n|        |<--------(3) AuthN Response--------|        |\n|        |                                   |        |\n|        |---------(4) UserInfo Request----->|        |\n|        |                                   |        |\n|        |<--------(5) UserInfo Response-----|        |\n|        |                                   |        |\n+--------+                                   +--------+\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 2. ID Token\n\nThe primary extension that OpenID Connect makes to OAuth 2.0 to enable End-Users to be Authenticated is the ID Token data structure. The ID Token is a security token that contains Claims about the Authentication of an End-User by an Authorization Server when using a Client, and potentially other requested Claims. The ID Token is represented as a [JSON Web Token (JWT)](https://openid.net/specs/openid-connect-core-1_0.html#JWT) [JWT].\n\nThe following Claims are used within the ID Token for all OAuth 2.0 flows used by OpenID Connect:\n\n\n\n> - iss\n>\n>   REQUIRED. Issuer Identifier for the Issuer of the response. The `iss` value is a case sensitive URL using the `https` scheme that contains scheme, host, and optionally, port number and path components and no query or fragment components.\n>\n> - sub\n>\n>   REQUIRED. Subject Identifier. A locally unique and never reassigned identifier within the Issuer for the End-User, which is intended to be consumed by the Client, e.g., `24400320` or `AItOawmwtWwcT0k51BayewNvutrJUqsvl6qs7A4`. It MUST NOT exceed 255 ASCII characters in length. The `sub` value is a case sensitive string.\n>\n> - aud\n>\n>   REQUIRED. Audience(s) that this ID Token is intended for. It MUST contain the OAuth 2.0 `client_id` of the Relying Party as an audience value. It MAY also contain identifiers for other audiences. In the general case, the `aud` value is an array of case sensitive strings. In the common special case when there is one audience, the `aud` value MAY be a single case sensitive string.\n>\n> - exp\n>\n>   REQUIRED. Expiration time on or after which the ID Token MUST NOT be accepted for processing. The processing of this parameter requires that the current date/time MUST be before the expiration date/time listed in the value. Implementers MAY provide for some small leeway, usually no more than a few minutes, to account for clock skew. Its value is a JSON number representing the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the date/time. See [RFC 3339](https://openid.net/specs/openid-connect-core-1_0.html#RFC3339) [RFC3339] for details regarding date/times in general and UTC in particular.\n>\n> - iat\n>\n>   REQUIRED. Time at which the JWT was issued. Its value is a JSON number representing the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the date/time.\n>\n> - auth_time\n>\n>   Time when the End-User authentication occurred. Its value is a JSON number representing the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the date/time. When a `max_age` request is made or when `auth_time` is requested as an Essential Claim, then this Claim is REQUIRED; otherwise, its inclusion is OPTIONAL. (The `auth_time` Claim semantically corresponds to the OpenID 2.0 [PAPE](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.PAPE) [OpenID.PAPE] `auth_time` response parameter.)\n>\n> - nonce\n>\n>   String value used to associate a Client session with an ID Token, and to mitigate replay attacks. The value is passed through unmodified from the Authentication Request to the ID Token. If present in the ID Token, Clients MUST verify that the `nonce` Claim Value is equal to the value of the `nonce` parameter sent in the Authentication Request. If present in the Authentication Request, Authorization Servers MUST include a `nonce` Claim in the ID Token with the Claim Value being the nonce value sent in the Authentication Request. Authorization Servers SHOULD perform no other processing on `nonce` values used. The `nonce` value is a case sensitive string.\n>\n> - acr\n>\n>   OPTIONAL. Authentication Context Class Reference. String specifying an Authentication Context Class Reference value that identifies the Authentication Context Class that the authentication performed satisfied. The value \"0\" indicates the End-User authentication did not meet the requirements of [ISO/IEC 29115](https://openid.net/specs/openid-connect-core-1_0.html#ISO29115) [ISO29115] level 1. Authentication using a long-lived browser cookie, for instance, is one example where the use of \"level 0\" is appropriate. Authentications with level 0 SHOULD NOT be used to authorize access to any resource of any monetary value. (This corresponds to the OpenID 2.0 [PAPE](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.PAPE) [OpenID.PAPE] `nist_auth_level` 0.) An absolute URI or an [RFC 6711](https://openid.net/specs/openid-connect-core-1_0.html#RFC6711) [RFC6711] registered name SHOULD be used as the `acr` value; registered names MUST NOT be used with a different meaning than that which is registered. Parties using this claim will need to agree upon the meanings of the values used, which may be context-specific. The `acr` value is a case sensitive string.\n>\n> - amr\n>\n>   OPTIONAL. Authentication Methods References. JSON array of strings that are identifiers for authentication methods used in the authentication. For instance, values might indicate that both password and OTP authentication methods were used. The definition of particular values to be used in the `amr` Claim is beyond the scope of this specification. Parties using this claim will need to agree upon the meanings of the values used, which may be context-specific. The `amr` value is an array of case sensitive strings.\n>\n> - azp\n>\n>   OPTIONAL. Authorized party - the party to which the ID Token was issued. If present, it MUST contain the OAuth 2.0 Client ID of this party. This Claim is only needed when the ID Token has a single audience value and that audience is different than the authorized party. It MAY be included even when the authorized party is the same as the sole audience. The `azp` value is a case sensitive string containing a StringOrURI value.\n\n\n\nID Tokens MAY contain other Claims. Any Claims used that are not understood MUST be ignored. See Sections [3.1.3.6](https://openid.net/specs/openid-connect-core-1_0.html#CodeIDToken), [3.3.2.11](https://openid.net/specs/openid-connect-core-1_0.html#HybridIDToken), [5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims), and [7.4](https://openid.net/specs/openid-connect-core-1_0.html#SelfIssuedResponse) for additional Claims defined by this specification.\n\nID Tokens MUST be signed using [JWS](https://openid.net/specs/openid-connect-core-1_0.html#JWS) [JWS] and optionally both signed and then encrypted using [JWS](https://openid.net/specs/openid-connect-core-1_0.html#JWS) [JWS] and [JWE](https://openid.net/specs/openid-connect-core-1_0.html#JWE) [JWE] respectively, thereby providing authentication, integrity, non-repudiation, and optionally, confidentiality, per [Section 16.14](https://openid.net/specs/openid-connect-core-1_0.html#SigningOrder). If the ID Token is encrypted, it MUST be signed then encrypted, with the result being a Nested JWT, as defined in [[JWT\\]](https://openid.net/specs/openid-connect-core-1_0.html#JWT). ID Tokens MUST NOT use `none` as the `alg` value unless the Response Type used returns no ID Token from the Authorization Endpoint (such as when using the Authorization Code Flow) and the Client explicitly requested the use of `none` at Registration time.\n\nID Tokens SHOULD NOT use the JWS or JWE `x5u`, `x5c`, `jku`, or `jwk` Header Parameter fields. Instead, references to keys used are communicated in advance using Discovery and Registration parameters, per [Section 10](https://openid.net/specs/openid-connect-core-1_0.html#SigEnc).\n\nThe following is a non-normative example of the set of Claims (the JWT Claims Set) in an ID Token:\n\n```\n  {\n   \"iss\": \"https://server.example.com\",\n   \"sub\": \"24400320\",\n   \"aud\": \"s6BhdRkqt3\",\n   \"nonce\": \"n-0S6_WzA2Mj\",\n   \"exp\": 1311281970,\n   \"iat\": 1311280970,\n   \"auth_time\": 1311280969,\n   \"acr\": \"urn:mace:incommon:iap:silver\"\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3. 身份验证\n\n\nOpenID Connect执行身份验证，用于登录终端用户或确定终端用户已经登录。OpenID Connect以安全的方式将服务器执行的身份验证结果返回给客户端，以便客户端可以依赖它。因此，在这种情况下，客户端被称为Relying Party（RP）。\n\nThe Authentication result is returned in an ID Token, as defined in [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken). It has Claims expressing such information as the Issuer, the Subject Identifier, when the authentication expires, etc.\n\nAuthentication can follow one of three paths: the Authorization Code Flow (`response_type=code`), the Implicit Flow (`response_type=id_token token` or `response_type=id_token`), or the Hybrid Flow (using other Response Type values defined in [OAuth 2.0 Multiple Response Type Encoding Practices](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses) [OAuth.Responses]). The flows determine how the ID Token and Access Token are returned to the Client.\n\nThe characteristics of the three flows are summarized in the following non-normative table. The table is intended to provide some guidance on which flow to choose in particular contexts.\n\n\n\n------\n\n| Property                                        | Authorization Code Flow | Implicit Flow | Hybrid Flow |\n| ----------------------------------------------- | ----------------------- | ------------- | ----------- |\n| All tokens returned from Authorization Endpoint | no                      | yes           | no          |\n| All tokens returned from Token Endpoint         | yes                     | no            | no          |\n| Tokens not revealed to User Agent               | yes                     | no            | no          |\n| Client can be authenticated                     | yes                     | no            | yes         |\n| Refresh Token possible                          | yes                     | no            | yes         |\n| Communication in one round trip                 | no                      | yes           | no          |\n| Most communication server-to-server             | yes                     | no            | varies      |\n\n\n\n **OpenID Connect Authentication Flows**  \n\n------\n\nThe flow used is determined by the `response_type` value contained in the Authorization Request. These `response_type` values select these flows:\n\n\n\n------\n\n| \"response_type\" value | Flow                    |\n| --------------------- | ----------------------- |\n| `code`                | Authorization Code Flow |\n| `id_token`            | Implicit Flow           |\n| `id_token token`      | Implicit Flow           |\n| `code id_token`       | Hybrid Flow             |\n| `code token`          | Hybrid Flow             |\n| `code id_token token` | Hybrid Flow             |\n\n\n\n **OpenID Connect \"response_type\" Values**  \n\n------\n\nAll but the `code` Response Type value, which is defined by [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749], are defined in the [OAuth 2.0 Multiple Response Type Encoding Practices](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses) [OAuth.Responses] specification. NOTE: While OAuth 2.0 also defines the `token` Response Type value for the Implicit Flow, OpenID Connect does not use this Response Type, since no ID Token would be returned.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1. 使用授权码流（Authorization Code Flow）进行身份验证\n\n\nThis section describes how to perform authentication using the Authorization Code Flow. When using the Authorization Code Flow, all tokens are returned from the Token Endpoint.\n\nThe Authorization Code Flow returns an Authorization Code to the Client, which can then exchange it for an ID Token and an Access Token directly. This provides the benefit of not exposing any tokens to the User Agent and possibly other malicious applications with access to the User Agent. The Authorization Server can also authenticate the Client before exchanging the Authorization Code for an Access Token. The Authorization Code flow is suitable for Clients that can securely maintain a Client Secret between themselves and the Authorization Server.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.1. 授权码流（Authorization Code Flow）的步骤\n\nThe Authorization Code Flow goes through the following steps.\n\n1. Client prepares an Authentication Request containing the desired request parameters.\n2. Client sends the request to the Authorization Server.\n3. Authorization Server Authenticates the End-User.\n4. Authorization Server obtains End-User Consent/Authorization.\n5. Authorization Server sends the End-User back to the Client with an Authorization Code.\n6. Client requests a response using the Authorization Code at the Token Endpoint.\n7. Client receives a response that contains an ID Token and Access Token in the response body.\n8. Client validates the ID token and retrieves the End-User's Subject Identifier.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.2. 授权端点\n\nThe Authorization Endpoint performs Authentication of the End-User. This is done by sending the User Agent to the Authorization Server's Authorization Endpoint for Authentication and Authorization, using request parameters defined by OAuth 2.0 and additional parameters and parameter values defined by OpenID Connect.\n\nCommunication with the Authorization Endpoint MUST utilize TLS. See [Section 16.17](https://openid.net/specs/openid-connect-core-1_0.html#TLSRequirements) for more information on using TLS.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.2.1. 身份验证请求\n\n\nAn Authentication Request is an OAuth 2.0 Authorization Request that requests that the End-User be authenticated by the Authorization Server.\n\nAuthorization Servers MUST support the use of the HTTP `GET` and `POST` methods defined in [RFC 2616](https://openid.net/specs/openid-connect-core-1_0.html#RFC2616) [RFC2616] at the Authorization Endpoint. Clients MAY use the HTTP `GET` or `POST` methods to send the Authorization Request to the Authorization Server. If using the HTTP `GET` method, the request parameters are serialized using URI Query String Serialization, per [Section 13.1](https://openid.net/specs/openid-connect-core-1_0.html#QuerySerialization). If using the HTTP `POST` method, the request parameters are serialized using Form Serialization, per [Section 13.2](https://openid.net/specs/openid-connect-core-1_0.html#FormSerialization).\n\nOpenID Connect uses the following OAuth 2.0 request parameters with the Authorization Code Flow:\n\n\n\n> - scope\n>\n>   REQUIRED. OpenID Connect requests MUST contain the `openid` scope value. If the `openid` scope value is not present, the behavior is entirely unspecified. Other scope values MAY be present. Scope values used that are not understood by an implementation SHOULD be ignored. See Sections [5.4](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims) and [11](https://openid.net/specs/openid-connect-core-1_0.html#OfflineAccess) for additional scope values defined by this specification.\n>\n> - response_type\n>\n>   REQUIRED. OAuth 2.0 Response Type value that determines the authorization processing flow to be used, including what parameters are returned from the endpoints used. When using the Authorization Code Flow, this value is `code`.\n>\n> - client_id\n>\n>   REQUIRED. OAuth 2.0 Client Identifier valid at the Authorization Server.\n>\n> - redirect_uri\n>\n>   REQUIRED. Redirection URI to which the response will be sent. This URI MUST exactly match one of the Redirection URI values for the Client pre-registered at the OpenID Provider, with the matching performed as described in Section 6.2.1 of [[RFC3986\\]](https://openid.net/specs/openid-connect-core-1_0.html#RFC3986) (Simple String Comparison). When using this flow, the Redirection URI SHOULD use the `https` scheme; however, it MAY use the `http` scheme, provided that the Client Type is `confidential`, as defined in Section 2.1 of OAuth 2.0, and provided the OP allows the use of `http` Redirection URIs in this case. The Redirection URI MAY use an alternate scheme, such as one that is intended to identify a callback into a native application.\n>\n> - state\n>\n>   RECOMMENDED. Opaque value used to maintain state between the request and the callback. Typically, Cross-Site Request Forgery (CSRF, XSRF) mitigation is done by cryptographically binding the value of this parameter with a browser cookie.\n\n\n\nOpenID Connect also uses the following OAuth 2.0 request parameter, which is defined in [OAuth 2.0 Multiple Response Type Encoding Practices](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses) [OAuth.Responses]:\n\n\n\n> - response_mode\n>\n>   OPTIONAL. Informs the Authorization Server of the mechanism to be used for returning parameters from the Authorization Endpoint. This use of this parameter is NOT RECOMMENDED when the Response Mode that would be requested is the default mode specified for the Response Type.\n\n\n\nThis specification also defines the following request parameters:\n\n\n\n> - nonce\n>\n>   OPTIONAL. String value used to associate a Client session with an ID Token, and to mitigate replay attacks. The value is passed through unmodified from the Authentication Request to the ID Token. Sufficient entropy MUST be present in the `nonce` values used to prevent attackers from guessing values. For implementation notes, see [Section 15.5.2](https://openid.net/specs/openid-connect-core-1_0.html#NonceNotes).\n>\n> - display\n>\n>   OPTIONAL. ASCII string value that specifies how the Authorization Server displays the authentication and consent user interface pages to the End-User. The defined values are:pageThe Authorization Server SHOULD display the authentication and consent UI consistent with a full User Agent page view. If the display parameter is not specified, this is the default display mode.popupThe Authorization Server SHOULD display the authentication and consent UI consistent with a popup User Agent window. The popup User Agent window should be of an appropriate size for a login-focused dialog and should not obscure the entire window that it is popping up over.touchThe Authorization Server SHOULD display the authentication and consent UI consistent with a device that leverages a touch interface.wapThe Authorization Server SHOULD display the authentication and consent UI consistent with a \"feature phone\" type display.The Authorization Server MAY also attempt to detect the capabilities of the User Agent and present an appropriate display.\n>\n> - prompt\n>\n>   OPTIONAL. Space delimited, case sensitive list of ASCII string values that specifies whether the Authorization Server prompts the End-User for reauthentication and consent. The defined values are:noneThe Authorization Server MUST NOT display any authentication or consent user interface pages. An error is returned if an End-User is not already authenticated or the Client does not have pre-configured consent for the requested Claims or does not fulfill other conditions for processing the request. The error code will typically be `login_required`, `interaction_required`, or another code defined in [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError). This can be used as a method to check for existing authentication and/or consent.loginThe Authorization Server SHOULD prompt the End-User for reauthentication. If it cannot reauthenticate the End-User, it MUST return an error, typically `login_required`.consentThe Authorization Server SHOULD prompt the End-User for consent before returning information to the Client. If it cannot obtain consent, it MUST return an error, typically `consent_required`.select_accountThe Authorization Server SHOULD prompt the End-User to select a user account. This enables an End-User who has multiple accounts at the Authorization Server to select amongst the multiple accounts that they might have current sessions for. If it cannot obtain an account selection choice made by the End-User, it MUST return an error, typically `account_selection_required`.The `prompt` parameter can be used by the Client to make sure that the End-User is still present for the current session or to bring attention to the request. If this parameter contains `none` with any other value, an error is returned.\n>\n> - max_age\n>\n>   OPTIONAL. Maximum Authentication Age. Specifies the allowable elapsed time in seconds since the last time the End-User was actively authenticated by the OP. If the elapsed time is greater than this value, the OP MUST attempt to actively re-authenticate the End-User. (The `max_age` request parameter corresponds to the OpenID 2.0 [PAPE](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.PAPE) [OpenID.PAPE] `max_auth_age` request parameter.) When `max_age` is used, the ID Token returned MUST include an `auth_time` Claim Value.\n>\n> - ui_locales\n>\n>   OPTIONAL. End-User's preferred languages and scripts for the user interface, represented as a space-separated list of [BCP47](https://openid.net/specs/openid-connect-core-1_0.html#RFC5646) [RFC5646] language tag values, ordered by preference. For instance, the value \"fr-CA fr en\" represents a preference for French as spoken in Canada, then French (without a region designation), followed by English (without a region designation). An error SHOULD NOT result if some or all of the requested locales are not supported by the OpenID Provider.\n>\n> - id_token_hint\n>\n>   OPTIONAL. ID Token previously issued by the Authorization Server being passed as a hint about the End-User's current or past authenticated session with the Client. If the End-User identified by the ID Token is logged in or is logged in by the request, then the Authorization Server returns a positive response; otherwise, it SHOULD return an error, such as `login_required`. When possible, an `id_token_hint` SHOULD be present when `prompt=none` is used and an `invalid_request` error MAY be returned if it is not; however, the server SHOULD respond successfully when possible, even if it is not present. The Authorization Server need not be listed as an audience of the ID Token when it is used as an `id_token_hint` value.\n>\n> - \n>\n>   If the ID Token received by the RP from the OP is encrypted, to use it as an `id_token_hint`, the Client MUST decrypt the signed ID Token contained within the encrypted ID Token. The Client MAY re-encrypt the signed ID token to the Authentication Server using a key that enables the server to decrypt the ID Token, and use the re-encrypted ID token as the `id_token_hint` value.\n>\n> - login_hint\n>\n>   OPTIONAL. Hint to the Authorization Server about the login identifier the End-User might use to log in (if necessary). This hint can be used by an RP if it first asks the End-User for their e-mail address (or other identifier) and then wants to pass that value as a hint to the discovered authorization service. It is RECOMMENDED that the hint value match the value used for discovery. This value MAY also be a phone number in the format specified for the `phone_number` Claim. The use of this parameter is left to the OP's discretion.\n>\n> - acr_values\n>\n>   OPTIONAL. Requested Authentication Context Class Reference values. Space-separated string that specifies the `acr` values that the Authorization Server is being requested to use for processing this Authentication Request, with the values appearing in order of preference. The Authentication Context Class satisfied by the authentication performed is returned as the `acr` Claim Value, as specified in [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken). The `acr` Claim is requested as a Voluntary Claim by this parameter.\n\n\n\nOther parameters MAY be sent. See Sections [3.2.2](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitAuthorizationEndpoint), [3.3.2](https://openid.net/specs/openid-connect-core-1_0.html#HybridAuthorizationEndpoint), [5.2](https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts), [5.5](https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter), [6](https://openid.net/specs/openid-connect-core-1_0.html#JWTRequests), and [7.2.1](https://openid.net/specs/openid-connect-core-1_0.html#RegistrationParameter) for additional Authorization Request parameters and parameter values defined by this specification.\n\nThe following is a non-normative example HTTP 302 redirect response by the Client, which triggers the User Agent to make an Authentication Request to the Authorization Endpoint (with line wraps within values for display purposes only):\n\n```\n  HTTP/1.1 302 Found\n  Location: https://server.example.com/authorize?\n    response_type=code\n    &scope=openid%20profile%20email\n    &client_id=s6BhdRkqt3\n    &state=af0ifjsldkj\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb\n```\n\nThe following is the non-normative example request that would be sent by the User Agent to the Authorization Server in response to the HTTP 302 redirect response by the Client above (with line wraps within values for display purposes only):\n\n```\n  GET /authorize?\n    response_type=code\n    &scope=openid%20profile%20email\n    &client_id=s6BhdRkqt3\n    &state=af0ifjsldkj\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb HTTP/1.1\n  Host: server.example.com\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.2.2. Authentication Request Validation\n\nThe Authorization Server MUST validate the request received as follows:\n\n\n\n1. The Authorization Server MUST validate all the OAuth 2.0 parameters according to the OAuth 2.0 specification.\n2. Verify that a `scope` parameter is present and contains the `openid` scope value. (If no `openid` scope value is present, the request may still be a valid OAuth 2.0 request, but is not an OpenID Connect request.)\n3. The Authorization Server MUST verify that all the REQUIRED parameters are present and their usage conforms to this specification.\n4. If the `sub` (subject) Claim is requested with a specific value for the ID Token, the Authorization Server MUST only send a positive response if the End-User identified by that `sub` value has an active session with the Authorization Server or has been Authenticated as a result of the request. The Authorization Server MUST NOT reply with an ID Token or Access Token for a different user, even if they have an active session with the Authorization Server. Such a request can be made either using an `id_token_hint` parameter or by requesting a specific Claim Value as described in [Section 5.5.1](https://openid.net/specs/openid-connect-core-1_0.html#IndividualClaimsRequests), if the `claims` parameter is supported by the implementation.\n\n\n\nAs specified in [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749], Authorization Servers SHOULD ignore unrecognized request parameters.\n\nIf the Authorization Server encounters any error, it MUST return an error response, per [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.2.3. Authorization Server Authenticates End-User\n\nIf the request is valid, the Authorization Server attempts to Authenticate the End-User or determines whether the End-User is Authenticated, depending upon the request parameter values used. The methods used by the Authorization Server to Authenticate the End-User (e.g. username and password, session cookies, etc.) are beyond the scope of this specification. An Authentication user interface MAY be displayed by the Authorization Server, depending upon the request parameter values used and the authentication methods used.\n\nThe Authorization Server MUST attempt to Authenticate the End-User in the following cases:\n\n- The End-User is not already Authenticated.\n- The Authentication Request contains the `prompt` parameter with the value `login`. In this case, the Authorization Server MUST reauthenticate the End-User even if the End-User is already authenticated.\n\n\n\nThe Authorization Server MUST NOT interact with the End-User in the following case:\n\n- The Authentication Request contains the `prompt` parameter with the value `none`. In this case, the Authorization Server MUST return an error if an End-User is not already Authenticated or could not be silently Authenticated.\n\n\n\nWhen interacting with the End-User, the Authorization Server MUST employ appropriate measures against Cross-Site Request Forgery and Clickjacking as, described in Sections 10.12 and 10.13 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749].\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.2.4. Authorization Server Obtains End-User Consent/Authorization\n\nOnce the End-User is authenticated, the Authorization Server MUST obtain an authorization decision before releasing information to the Relying Party. When permitted by the request parameters used, this MAY be done through an interactive dialogue with the End-User that makes it clear what is being consented to or by establishing consent via conditions for processing the request or other means (for example, via previous administrative consent). Sections [2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken) and [5.3](https://openid.net/specs/openid-connect-core-1_0.html#UserInfo) describe information release mechanisms.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.2.5. Successful Authentication Response\n\nAn Authentication Response is an OAuth 2.0 Authorization Response message returned from the OP's Authorization Endpoint in response to the Authorization Request message sent by the RP.\n\nWhen using the Authorization Code Flow, the Authorization Response MUST return the parameters defined in Section 4.1.2 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749] by adding them as query parameters to the `redirect_uri` specified in the Authorization Request using the `application/x-www-form-urlencoded` format, unless a different Response Mode was specified.\n\nThe following is a non-normative example successful response using this flow (with line wraps within values for display purposes only):\n\n```\n  HTTP/1.1 302 Found\n  Location: https://client.example.org/cb?\n    code=SplxlOBeZQQYbYS6WxSbIA\n    &state=af0ifjsldkj\n```\n\nFor implementation notes on the contents of the Authorization Code, see [Section 15.5.1](https://openid.net/specs/openid-connect-core-1_0.html#CodeNotes).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.2.6. Authentication Error Response\n\nAn Authentication Error Response is an OAuth 2.0 Authorization Error Response message returned from the OP's Authorization Endpoint in response to the Authorization Request message sent by the RP.\n\nIf the End-User denies the request or the End-User authentication fails, the OP (Authorization Server) informs the RP (Client) by using the Error Response parameters defined in Section 4.1.2.1 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749]. (HTTP errors unrelated to RFC 6749 are returned to the User Agent using the appropriate HTTP status code.)\n\nUnless the Redirection URI is invalid, the Authorization Server returns the Client to the Redirection URI specified in the Authorization Request with the appropriate error and state parameters. Other parameters SHOULD NOT be returned.\n\nIn addition to the error codes defined in Section 4.1.2.1 of OAuth 2.0, this specification also defines the following error codes:\n\n\n\n> - interaction_required\n>\n>   The Authorization Server requires End-User interaction of some form to proceed. This error MAY be returned when the `prompt` parameter value in the Authentication Request is `none`, but the Authentication Request cannot be completed without displaying a user interface for End-User interaction.\n>\n> - login_required\n>\n>   The Authorization Server requires End-User authentication. This error MAY be returned when the `prompt` parameter value in the Authentication Request is `none`, but the Authentication Request cannot be completed without displaying a user interface for End-User authentication.\n>\n> - account_selection_required\n>\n>   The End-User is REQUIRED to select a session at the Authorization Server. The End-User MAY be authenticated at the Authorization Server with different associated accounts, but the End-User did not select a session. This error MAY be returned when the `prompt` parameter value in the Authentication Request is `none`, but the Authentication Request cannot be completed without displaying a user interface to prompt for a session to use.\n>\n> - consent_required\n>\n>   The Authorization Server requires End-User consent. This error MAY be returned when the `prompt` parameter value in the Authentication Request is `none`, but the Authentication Request cannot be completed without displaying a user interface for End-User consent.\n>\n> - invalid_request_uri\n>\n>   The `request_uri` in the Authorization Request returns an error or contains invalid data.\n>\n> - invalid_request_object\n>\n>   The `request` parameter contains an invalid Request Object.\n>\n> - request_not_supported\n>\n>   The OP does not support use of the `request` parameter defined in [Section 6](https://openid.net/specs/openid-connect-core-1_0.html#JWTRequests).\n>\n> - request_uri_not_supported\n>\n>   The OP does not support use of the `request_uri` parameter defined in [Section 6](https://openid.net/specs/openid-connect-core-1_0.html#JWTRequests).\n>\n> - registration_not_supported\n>\n>   The OP does not support use of the `registration` parameter defined in [Section 7.2.1](https://openid.net/specs/openid-connect-core-1_0.html#RegistrationParameter).\n\n\n\nThe error response parameters are the following:\n\n> - error\n>\n>   REQUIRED. Error code.\n>\n> - error_description\n>\n>   OPTIONAL. Human-readable ASCII encoded text description of the error.\n>\n> - error_uri\n>\n>   OPTIONAL. URI of a web page that includes additional information about the error.\n>\n> - state\n>\n>   OAuth 2.0 state value. REQUIRED if the Authorization Request included the `state` parameter. Set to the value received from the Client.\n\n\n\nWhen using the Authorization Code Flow, the error response parameters are added to the query component of the Redirection URI, unless a different Response Mode was specified.\n\n\n\nThe following is a non-normative example error response using this flow (with line wraps within values for display purposes only):\n\n```\n  HTTP/1.1 302 Found\n  Location: https://client.example.org/cb?\n    error=invalid_request\n    &error_description=\n      Unsupported%20response_type%20value\n    &state=af0ifjsldkj\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.2.7. Authentication Response Validation\n\nWhen using the Authorization Code Flow, the Client MUST validate the response according to RFC 6749, especially Sections 4.1.2 and 10.12.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.3. Token Endpoint\n\nTo obtain an Access Token, an ID Token, and optionally a Refresh Token, the RP (Client) sends a Token Request to the Token Endpoint to obtain a Token Response, as described in Section 3.2 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749], when using the Authorization Code Flow.\n\nCommunication with the Token Endpoint MUST utilize TLS. See [Section 16.17](https://openid.net/specs/openid-connect-core-1_0.html#TLSRequirements) for more information on using TLS.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.3.1. Token Request\n\nA Client makes a Token Request by presenting its Authorization Grant (in the form of an Authorization Code) to the Token Endpoint using the `grant_type` value `authorization_code`, as described in Section 4.1.3 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749]. If the Client is a Confidential Client, then it MUST authenticate to the Token Endpoint using the authentication method registered for its `client_id`, as described in [Section 9](https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication).\n\nThe Client sends the parameters to the Token Endpoint using the HTTP `POST` method and the Form Serialization, per [Section 13.2](https://openid.net/specs/openid-connect-core-1_0.html#FormSerialization), as described in Section 4.1.3 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749].\n\nThe following is a non-normative example of a Token Request (with line wraps within values for display purposes only):\n\n```\n  POST /token HTTP/1.1\n  Host: server.example.com\n  Content-Type: application/x-www-form-urlencoded\n  Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW\n\n  grant_type=authorization_code&code=SplxlOBeZQQYbYS6WxSbIA\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.3.2. Token Request Validation\n\nThe Authorization Server MUST validate the Token Request as follows:\n\n\n\n- Authenticate the Client if it was issued Client Credentials or if it uses another Client Authentication method, per [Section 9](https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication).\n- Ensure the Authorization Code was issued to the authenticated Client.\n- Verify that the Authorization Code is valid.\n- If possible, verify that the Authorization Code has not been previously used.\n- Ensure that the `redirect_uri` parameter value is identical to the `redirect_uri` parameter value that was included in the initial Authorization Request. If the `redirect_uri` parameter value is not present when there is only one registered `redirect_uri` value, the Authorization Server MAY return an error (since the Client should have included the parameter) or MAY proceed without an error (since OAuth 2.0 permits the parameter to be omitted in this case).\n- Verify that the Authorization Code used was issued in response to an OpenID Connect Authentication Request (so that an ID Token will be returned from the Token Endpoint).\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.3.3. Successful Token Response\n\nAfter receiving and validating a valid and authorized Token Request from the Client, the Authorization Server returns a successful response that includes an ID Token and an Access Token. The parameters in the successful response are defined in Section 4.1.4 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749]. The response uses the `application/json` media type.\n\nThe OAuth 2.0 `token_type` response parameter value MUST be `Bearer`, as specified in [OAuth 2.0 Bearer Token Usage](https://openid.net/specs/openid-connect-core-1_0.html#RFC6750) [RFC6750], unless another Token Type has been negotiated with the Client. Servers SHOULD support the `Bearer` Token Type; use of other Token Types is outside the scope of this specification.\n\nIn addition to the response parameters specified by OAuth 2.0, the following parameters MUST be included in the response:\n\n\n\n> - id_token\n>\n>   ID Token value associated with the authenticated session.\n\n\n\nAll Token Responses that contain tokens, secrets, or other sensitive information MUST include the following HTTP response header fields and values:\n\n\n\n------\n\n| Header Name   | Header Value |\n| ------------- | ------------ |\n| Cache-Control | no-store     |\n| Pragma        | no-cache     |\n\n\n\n **HTTP Response Headers and Values**  \n\n------\n\nThe following is a non-normative example of a successful Token Response. The ID Token signature in the example can be verified with the key at [Appendix A.7](https://openid.net/specs/openid-connect-core-1_0.html#ExampleRSAKey).\n\n```\n  HTTP/1.1 200 OK\n  Content-Type: application/json\n  Cache-Control: no-store\n  Pragma: no-cache\n\n  {\n   \"access_token\": \"SlAV32hkKG\",\n   \"token_type\": \"Bearer\",\n   \"refresh_token\": \"8xLOxBtZp8\",\n   \"expires_in\": 3600,\n   \"id_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IjFlOWdkazcifQ.ewogImlzc\n     yI6ICJodHRwOi8vc2VydmVyLmV4YW1wbGUuY29tIiwKICJzdWIiOiAiMjQ4Mjg5\n     NzYxMDAxIiwKICJhdWQiOiAiczZCaGRSa3F0MyIsCiAibm9uY2UiOiAibi0wUzZ\n     fV3pBMk1qIiwKICJleHAiOiAxMzExMjgxOTcwLAogImlhdCI6IDEzMTEyODA5Nz\n     AKfQ.ggW8hZ1EuVLuxNuuIJKX_V8a_OMXzR0EHR9R6jgdqrOOF4daGU96Sr_P6q\n     Jp6IcmD3HP99Obi1PRs-cwh3LO-p146waJ8IhehcwL7F09JdijmBqkvPeB2T9CJ\n     NqeGpe-gccMg4vfKjkM8FcGvnzZUN4_KSP0aAp1tOJ1zZwgjxqGByKHiOtX7Tpd\n     QyHE5lcMiKPXfEIQILVq0pc_E2DzL7emopWoaoZTF_m0_N0YzFC6g6EJbOEoRoS\n     K5hoDalrcvRYLSrQAZZKflyuVCyixEoV9GfNQC3_osjzw2PAithfubEEBLuVVk4\n     XUVrWOLrLl0nx7RkKU8NXNHq-rvKMzqg\"\n  }\n```\n\nAs specified in [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749], Clients SHOULD ignore unrecognized response parameters.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.3.4. Token Error Response\n\nIf the Token Request is invalid or unauthorized, the Authorization Server constructs the error response. The parameters of the Token Error Response are defined as in Section 5.2 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749]. The HTTP response body uses the `application/json` media type with HTTP response code of 400.\n\nThe following is a non-normative example Token Error Response:\n\n```\n  HTTP/1.1 400 Bad Request\n  Content-Type: application/json\n  Cache-Control: no-store\n  Pragma: no-cache\n\n  {\n   \"error\": \"invalid_request\"\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.3.5. Token Response Validation\n\nThe Client MUST validate the Token Response as follows:\n\n1. Follow the validation rules in RFC 6749, especially those in Sections 5.1 and 10.12.\n2. Follow the ID Token validation rules in [Section 3.1.3.7](https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation).\n3. Follow the Access Token validation rules in [Section 3.1.3.8](https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowTokenValidation).\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.3.6. ID Token\n\nThe contents of the ID Token are as described in [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken). When using the Authorization Code Flow, these additional requirements for the following ID Token Claims apply:\n\n\n\n> - at_hash\n>\n>   OPTIONAL. Access Token hash value. Its value is the base64url encoding of the left-most half of the hash of the octets of the ASCII representation of the `access_token` value, where the hash algorithm used is the hash algorithm used in the `alg` Header Parameter of the ID Token's JOSE Header. For instance, if the `alg` is `RS256`, hash the `access_token` value with SHA-256, then take the left-most 128 bits and base64url encode them. The `at_hash` value is a case sensitive string.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.3.7. ID Token Validation\n\nClients MUST validate the ID Token in the Token Response in the following manner:\n\n\n\n1. If the ID Token is encrypted, decrypt it using the keys and algorithms that the Client specified during Registration that the OP was to use to encrypt the ID Token. If encryption was negotiated with the OP at Registration time and the ID Token is not encrypted, the RP SHOULD reject it.\n2. The Issuer Identifier for the OpenID Provider (which is typically obtained during Discovery) MUST exactly match the value of the `iss` (issuer) Claim.\n3. The Client MUST validate that the `aud` (audience) Claim contains its `client_id` value registered at the Issuer identified by the `iss` (issuer) Claim as an audience. The `aud` (audience) Claim MAY contain an array with more than one element. The ID Token MUST be rejected if the ID Token does not list the Client as a valid audience, or if it contains additional audiences not trusted by the Client.\n4. If the ID Token contains multiple audiences, the Client SHOULD verify that an `azp` Claim is present.\n5. If an `azp` (authorized party) Claim is present, the Client SHOULD verify that its `client_id` is the Claim Value.\n6. If the ID Token is received via direct communication between the Client and the Token Endpoint (which it is in this flow), the TLS server validation MAY be used to validate the issuer in place of checking the token signature. The Client MUST validate the signature of all other ID Tokens according to [JWS](https://openid.net/specs/openid-connect-core-1_0.html#JWS) [JWS] using the algorithm specified in the JWT `alg` Header Parameter. The Client MUST use the keys provided by the Issuer.\n7. The `alg` value SHOULD be the default of `RS256` or the algorithm sent by the Client in the `id_token_signed_response_alg` parameter during Registration.\n8. If the JWT `alg` Header Parameter uses a MAC based algorithm such as `HS256`, `HS384`, or `HS512`, the octets of the UTF-8 representation of the `client_secret` corresponding to the `client_id` contained in the `aud` (audience) Claim are used as the key to validate the signature. For MAC based algorithms, the behavior is unspecified if the `aud` is multi-valued or if an `azp` value is present that is different than the `aud` value.\n9. The current time MUST be before the time represented by the `exp` Claim.\n10. The `iat` Claim can be used to reject tokens that were issued too far away from the current time, limiting the amount of time that nonces need to be stored to prevent attacks. The acceptable range is Client specific.\n11. If a nonce value was sent in the Authentication Request, a `nonce` Claim MUST be present and its value checked to verify that it is the same value as the one that was sent in the Authentication Request. The Client SHOULD check the `nonce` value for replay attacks. The precise method for detecting replay attacks is Client specific.\n12. If the `acr` Claim was requested, the Client SHOULD check that the asserted Claim Value is appropriate. The meaning and processing of `acr` Claim Values is out of scope for this specification.\n13. If the `auth_time` Claim was requested, either through a specific request for this Claim or by using the `max_age` parameter, the Client SHOULD check the `auth_time` Claim value and request re-authentication if it determines too much time has elapsed since the last End-User authentication.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.3.8. Access Token Validation\n\nWhen using the Authorization Code Flow, if the ID Token contains an `at_hash` Claim, the Client MAY use it to validate the Access Token in the same manner as for the Implicit Flow, as defined in [Section 3.2.2.9](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitTokenValidation), but using the ID Token and Access Token returned from the Token Endpoint.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2. Authentication using the Implicit Flow\n\nThis section describes how to perform authentication using the Implicit Flow. When using the Implicit Flow, all tokens are returned from the Authorization Endpoint; the Token Endpoint is not used.\n\nThe Implicit Flow is mainly used by Clients implemented in a browser using a scripting language. The Access Token and ID Token are returned directly to the Client, which may expose them to the End-User and applications that have access to the End-User's User Agent. The Authorization Server does not perform Client Authentication.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2.1. Implicit Flow Steps\n\nThe Implicit Flow follows the following steps:\n\n\n\n1. Client prepares an Authentication Request containing the desired request parameters.\n2. Client sends the request to the Authorization Server.\n3. Authorization Server Authenticates the End-User.\n4. Authorization Server obtains End-User Consent/Authorization.\n5. Authorization Server sends the End-User back to the Client with an ID Token and, if requested, an Access Token.\n6. Client validates the ID token and retrieves the End-User's Subject Identifier.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2.2. Authorization Endpoint\n\nWhen using the Implicit Flow, the Authorization Endpoint is used in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint), with the exception of the differences specified in this section.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2.2.1. Authentication Request\n\nAuthentication Requests are made as defined in [Section 3.1.2.1](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest), except that these Authentication Request parameters are used as follows:\n\n\n\n> - response_type\n>\n>   REQUIRED. OAuth 2.0 Response Type value that determines the authorization processing flow to be used, including what parameters are returned from the endpoints used. When using the Implicit Flow, this value is `id_token token` or `id_token`. The meanings of both of these values are defined in [OAuth 2.0 Multiple Response Type Encoding Practices](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses) [OAuth.Responses]. No Access Token is returned when the value is `id_token`.\n>\n> - \n>\n>   NOTE: While OAuth 2.0 also defines the `token` Response Type value for the Implicit Flow, OpenID Connect does not use this Response Type, since no ID Token would be returned.\n>\n> - redirect_uri\n>\n>   REQUIRED. Redirection URI to which the response will be sent. This URI MUST exactly match one of the Redirection URI values for the Client pre-registered at the OpenID Provider, with the matching performed as described in Section 6.2.1 of [[RFC3986\\]](https://openid.net/specs/openid-connect-core-1_0.html#RFC3986) (Simple String Comparison). When using this flow, the Redirection URI MUST NOT use the `http` scheme unless the Client is a native application, in which case it MAY use the `http:` scheme with `localhost` as the hostname.\n>\n> - nonce\n>\n>   REQUIRED. String value used to associate a Client session with an ID Token, and to mitigate replay attacks. The value is passed through unmodified from the Authentication Request to the ID Token. Sufficient entropy MUST be present in the `nonce` values used to prevent attackers from guessing values. For implementation notes, see [Section 15.5.2](https://openid.net/specs/openid-connect-core-1_0.html#NonceNotes).\n\n\n\nThe following is a non-normative example request using the Implicit Flow that would be sent by the User Agent to the Authorization Server in response to a corresponding HTTP 302 redirect response by the Client (with line wraps within values for display purposes only):\n\n```\n  GET /authorize?\n    response_type=id_token%20token\n    &client_id=s6BhdRkqt3\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb\n    &scope=openid%20profile\n    &state=af0ifjsldkj\n    &nonce=n-0S6_WzA2Mj HTTP/1.1\n  Host: server.example.com\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2.2.2. Authentication Request Validation\n\nWhen using the Implicit Flow, the Authentication Request is validated in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.2.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequestValidation).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2.2.3. Authorization Server Authenticates End-User\n\nWhen using the Implicit Flow, End-User Authentication is performed in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.2.3](https://openid.net/specs/openid-connect-core-1_0.html#Authenticates).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2.2.4. Authorization Server Obtains End-User Consent/Authorization\n\nWhen using the Implicit Flow, End-User Consent is obtained in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.2.4](https://openid.net/specs/openid-connect-core-1_0.html#Consent).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2.2.5. Successful Authentication Response\n\nWhen using the Implicit Flow, Authentication Responses are made in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.2.5](https://openid.net/specs/openid-connect-core-1_0.html#AuthResponse), with the exception of the differences specified in this section.\n\nWhen using the Implicit Flow, all response parameters are added to the fragment component of the Redirection URI, as specified in [OAuth 2.0 Multiple Response Type Encoding Practices](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses) [OAuth.Responses], unless a different Response Mode was specified.\n\nThese parameters are returned from the Authorization Endpoint:\n\n\n\n> - access_token\n>\n>   OAuth 2.0 Access Token. This is returned unless the `response_type` value used is `id_token`.\n>\n> - token_type\n>\n>   OAuth 2.0 Token Type value. The value MUST be `Bearer` or another `token_type` value that the Client has negotiated with the Authorization Server. Clients implementing this profile MUST support the [OAuth 2.0 Bearer Token Usage](https://openid.net/specs/openid-connect-core-1_0.html#RFC6750) [RFC6750] specification. This profile only describes the use of bearer tokens. This is returned in the same cases as `access_token` is.\n>\n> - id_token\n>\n>   REQUIRED. ID Token.\n>\n> - state\n>\n>   OAuth 2.0 state value. REQUIRED if the `state` parameter is present in the Authorization Request. Clients MUST verify that the `state` value is equal to the value of `state` parameter in the Authorization Request.\n>\n> - expires_in\n>\n>   OPTIONAL. Expiration time of the Access Token in seconds since the response was generated.\n\n\n\nPer Section 4.2.2 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749], no `code` result is returned when using the Implicit Flow.\n\nThe following is a non-normative example of a successful response using the Implicit Flow (with line wraps for the display purposes only):\n\n```\n  HTTP/1.1 302 Found\n  Location: https://client.example.org/cb#\n    access_token=SlAV32hkKG\n    &token_type=bearer\n    &id_token=eyJ0 ... NiJ9.eyJ1c ... I6IjIifX0.DeWt4Qu ... ZXso\n    &expires_in=3600\n    &state=af0ifjsldkj\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2.2.6. Authentication Error Response\n\nWhen using the Implicit Flow, Authorization Error Responses are made in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError), with the exception of the differences specified in this section.\n\nIf the End-User denies the request or the End-User authentication fails, the Authorization Server MUST return the error Authorization Response in the fragment component of the Redirection URI, as defined in 4.2.2.1 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749] and [OAuth 2.0 Multiple Response Type Encoding Practices](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses) [OAuth.Responses], unless a different Response Mode was specified.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2.2.7. Redirect URI Fragment Handling\n\nSince response parameters are returned in the Redirection URI fragment value, the Client needs to have the User Agent parse the fragment encoded values and pass them to on to the Client's processing logic for consumption. See [Section 15.5.3](https://openid.net/specs/openid-connect-core-1_0.html#FragmentNotes) for implementation notes on URI fragment handling.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2.2.8. Authentication Response Validation\n\nWhen using the Implicit Flow, the Client MUST validate the response as follows:\n\n1. Verify that the response conforms to Section 5 of [[OAuth.Responses\\]](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses).\n2. Follow the validation rules in RFC 6749, especially those in Sections 4.2.2 and 10.12.\n3. Follow the ID Token validation rules in [Section 3.2.2.11](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitIDTValidation).\n4. Follow the Access Token validation rules in [Section 3.2.2.9](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitTokenValidation), unless the `response_type` value used is `id_token`.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2.2.9. Access Token Validation\n\nTo validate an Access Token issued from the Authorization Endpoint with an ID Token, the Client SHOULD do the following:\n\n\n\n1. Hash the octets of the ASCII representation of the `access_token` with the hash algorithm specified in [JWA](https://openid.net/specs/openid-connect-core-1_0.html#JWA) [JWA] for the `alg` Header Parameter of the ID Token's JOSE Header. For instance, if the `alg` is `RS256`, the hash algorithm used is SHA-256.\n2. Take the left-most half of the hash and base64url encode it.\n3. The value of `at_hash` in the ID Token MUST match the value produced in the previous step.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2.2.10. ID Token\n\nThe contents of the ID Token are as described in [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken). When using the Implicit Flow, these additional requirements for the following ID Token Claims apply:\n\n\n\n> - nonce\n>\n>   Use of the `nonce` Claim is REQUIRED for this flow.\n>\n> - at_hash\n>\n>   Access Token hash value. Its value is the base64url encoding of the left-most half of the hash of the octets of the ASCII representation of the `access_token` value, where the hash algorithm used is the hash algorithm used in the `alg` Header Parameter of the ID Token's JOSE Header. For instance, if the `alg` is `RS256`, hash the `access_token` value with SHA-256, then take the left-most 128 bits and base64url encode them. The `at_hash` value is a case sensitive string.\n>\n> - \n>\n>   If the ID Token is issued from the Authorization Endpoint with an `access_token` value, which is the case for the `response_type` value `id_token token`, this is REQUIRED; it MAY NOT be used when no Access Token is issued, which is the case for the `response_type` value `id_token`.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2.2.11. ID Token Validation\n\nWhen using the Implicit Flow, the contents of the ID Token MUST be validated in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.3.7](https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation), with the exception of the differences specified in this section.\n\n\n\n1. The Client MUST validate the signature of the ID Token according to [JWS](https://openid.net/specs/openid-connect-core-1_0.html#JWS) [JWS] using the algorithm specified in the `alg` Header Parameter of the JOSE Header.\n2. The value of the `nonce` Claim MUST be checked to verify that it is the same value as the one that was sent in the Authentication Request. The Client SHOULD check the `nonce` value for replay attacks. The precise method for detecting replay attacks is Client specific.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3. Authentication using the Hybrid Flow\n\nThis section describes how to perform authentication using the Hybrid Flow. When using the Hybrid Flow, some tokens are returned from the Authorization Endpoint and others are returned from the Token Endpoint. The mechanisms for returning tokens in the Hybrid Flow are specified in [OAuth 2.0 Multiple Response Type Encoding Practices](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses) [OAuth.Responses].\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.1. Hybrid Flow Steps\n\nThe Hybrid Flow follows the following steps:\n\n\n\n1. Client prepares an Authentication Request containing the desired request parameters.\n2. Client sends the request to the Authorization Server.\n3. Authorization Server Authenticates the End-User.\n4. Authorization Server obtains End-User Consent/Authorization.\n5. Authorization Server sends the End-User back to the Client with an Authorization Code and, depending on the Response Type, one or more additional parameters.\n6. Client requests a response using the Authorization Code at the Token Endpoint.\n7. Client receives a response that contains an ID Token and Access Token in the response body.\n8. Client validates the ID Token and retrieves the End-User's Subject Identifier.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.2. Authorization Endpoint\n\nWhen using the Hybrid Flow, the Authorization Endpoint is used in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint), with the exception of the differences specified in this section.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.2.1. Authentication Request\n\nAuthentication Requests are made as defined in [Section 3.1.2.1](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest), except that these Authentication Request parameters are used as follows:\n\n\n\n> - response_type\n>\n>   REQUIRED. OAuth 2.0 Response Type value that determines the authorization processing flow to be used, including what parameters are returned from the endpoints used. When using the Hybrid Flow, this value is `code id_token`, `code token`, or `code id_token token`. The meanings of these values are defined in [OAuth 2.0 Multiple Response Type Encoding Practices](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses) [OAuth.Responses].\n\n\n\nThe following is a non-normative example request using the Hybrid Flow that would be sent by the User Agent to the Authorization Server in response to a corresponding HTTP 302 redirect response by the Client (with line wraps within values for display purposes only):\n\n```\n  GET /authorize?\n    response_type=code%20id_token\n    &client_id=s6BhdRkqt3\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb\n    &scope=openid%20profile%20email\n    &nonce=n-0S6_WzA2Mj\n    &state=af0ifjsldkj HTTP/1.1\n  Host: server.example.com\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.2.2. Authentication Request Validation\n\nWhen using the Hybrid Flow, the Authentication Request is validated in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.2.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequestValidation).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.2.3. Authorization Server Authenticates End-User\n\nWhen using the Hybrid Flow, End-User Authentication is performed in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.2.3](https://openid.net/specs/openid-connect-core-1_0.html#Authenticates).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.2.4. Authorization Server Obtains End-User Consent/Authorization\n\nWhen using the Hybrid Flow, End-User Consent is obtained in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.2.4](https://openid.net/specs/openid-connect-core-1_0.html#Consent).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.2.5. Successful Authentication Response\n\nWhen using the Hybrid Flow, Authentication Responses are made in the same manner as for the Implicit Flow, as defined in [Section 3.2.2.5](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitAuthResponse), with the exception of the differences specified in this section.\n\nThese Authorization Endpoint results are used in the following manner:\n\n\n\n> - access_token\n>\n>   OAuth 2.0 Access Token. This is returned when the `response_type` value used is `code token`, or `code id_token token`. (A `token_type` value is also returned in the same cases.)\n>\n> - id_token\n>\n>   ID Token. This is returned when the `response_type` value used is `code id_token` or `code id_token token`.\n>\n> - code\n>\n>   Authorization Code. This is always returned when using the Hybrid Flow.\n\n\n\nThe following is a non-normative example of a successful response using the Hybrid Flow (with line wraps for the display purposes only):\n\n```\n  HTTP/1.1 302 Found\n  Location: https://client.example.org/cb#\n    code=SplxlOBeZQQYbYS6WxSbIA\n    &id_token=eyJ0 ... NiJ9.eyJ1c ... I6IjIifX0.DeWt4Qu ... ZXso\n    &state=af0ifjsldkj\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.2.6. Authentication Error Response\n\nWhen using the Hybrid Flow, Authorization Error Responses are made in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError), with the exception of the differences specified in this section.\n\nIf the End-User denies the request or the End-User authentication fails, the Authorization Server MUST return the error Authorization Response in the fragment component of the Redirection URI, as defined in 4.2.2.1 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749] and [OAuth 2.0 Multiple Response Type Encoding Practices](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses) [OAuth.Responses], unless a different Response Mode was specified.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.2.7. Redirect URI Fragment Handling\n\nWhen using the Hybrid Flow, the same requirements for Redirection URI fragment parameter handling apply as do for the Implicit Flow, as defined in [Section 3.2.2.7](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitCallback). Also see [Section 15.5.3](https://openid.net/specs/openid-connect-core-1_0.html#FragmentNotes) for implementation notes on URI fragment handling.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.2.8. Authentication Response Validation\n\nWhen using the Hybrid Flow, the Client MUST validate the response as follows:\n\n1. Verify that the response conforms to Section 5 of [[OAuth.Responses\\]](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses).\n2. Follow the validation rules in RFC 6749, especially those in Sections 4.2.2 and 10.12.\n3. Follow the ID Token validation rules in [Section 3.3.2.12](https://openid.net/specs/openid-connect-core-1_0.html#HybridIDTValidation) when the `response_type` value used is `code id_token` or `code id_token token`.\n4. Follow the Access Token validation rules in [Section 3.3.2.9](https://openid.net/specs/openid-connect-core-1_0.html#HybridTokenValidation) when the `response_type` value used is `code token` or `code id_token token`.\n5. Follow the Authorization Code validation rules in [Section 3.3.2.10](https://openid.net/specs/openid-connect-core-1_0.html#CodeValidation) when the `response_type` value used is `code id_token` or `code id_token token`.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.2.9. Access Token Validation\n\nWhen using the Hybrid Flow, Access Tokens returned from the Authorization Endpoint are validated in the same manner as for the Implicit Flow, as defined in [Section 3.2.2.9](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitTokenValidation).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.2.10. Authorization Code Validation\n\nTo validate an Authorization Code issued from the Authorization Endpoint with an ID Token, the Client SHOULD do the following:\n\n\n\n1. Hash the octets of the ASCII representation of the `code` with the hash algorithm specified in [JWA](https://openid.net/specs/openid-connect-core-1_0.html#JWA) [JWA] for the `alg` Header Parameter of the ID Token's JOSE Header. For instance, if the `alg` is `RS256`, the hash algorithm used is SHA-256.\n2. Take the left-most half of the hash and base64url encode it.\n3. The value of `c_hash` in the ID Token MUST match the value produced in the previous step if `c_hash` is present in the ID Token.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.2.11. ID Token\n\nThe contents of the ID Token are as described in [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken). When using the Hybrid Flow, these additional requirements for the following ID Token Claims apply to an ID Token returned from the Authorization Endpoint:\n\n\n\n> - nonce\n>\n>   Use of the `nonce` Claim is REQUIRED for this flow.\n>\n> - at_hash\n>\n>   Access Token hash value. Its value is the base64url encoding of the left-most half of the hash of the octets of the ASCII representation of the `access_token` value, where the hash algorithm used is the hash algorithm used in the `alg` Header Parameter of the ID Token's JOSE Header. For instance, if the `alg` is `RS256`, hash the `access_token` value with SHA-256, then take the left-most 128 bits and base64url encode them. The `at_hash` value is a case sensitive string.\n>\n> - \n>\n>   If the ID Token is issued from the Authorization Endpoint with an `access_token` value, which is the case for the `response_type` value `code id_token token`, this is REQUIRED; otherwise, its inclusion is OPTIONAL.\n>\n> - c_hash\n>\n>   Code hash value. Its value is the base64url encoding of the left-most half of the hash of the octets of the ASCII representation of the `code` value, where the hash algorithm used is the hash algorithm used in the `alg` Header Parameter of the ID Token's JOSE Header. For instance, if the `alg` is `HS512`, hash the `code` value with SHA-512, then take the left-most 256 bits and base64url encode them. The `c_hash` value is a case sensitive string.\n>\n> - \n>\n>   If the ID Token is issued from the Authorization Endpoint with a `code`, which is the case for the `response_type` values `code id_token` and `code id_token token`, this is REQUIRED; otherwise, its inclusion is OPTIONAL.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.2.12. ID Token Validation\n\nWhen using the Hybrid Flow, the contents of an ID Token returned from the Authorization Endpoint MUST be validated in the same manner as for the Implicit Flow, as defined in [Section 3.2.2.11](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitIDTValidation).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.3. Token Endpoint\n\nWhen using the Hybrid Flow, the Token Endpoint is used in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.3](https://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint), with the exception of the differences specified in this section.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.3.1. Token Request\n\nWhen using the Hybrid Flow, Token Requests are made in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.3.1](https://openid.net/specs/openid-connect-core-1_0.html#TokenRequest).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.3.2. Token Request Validation\n\nWhen using the Hybrid Flow, Token Requests are validated in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.3.2](https://openid.net/specs/openid-connect-core-1_0.html#TokenRequestValidation).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.3.3. Successful Token Response\n\nWhen using the Hybrid Flow, Token Responses are made in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.3.3](https://openid.net/specs/openid-connect-core-1_0.html#TokenResponse).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.3.4. Token Error Response\n\nWhen using the Hybrid Flow, Token Error Responses are made in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.3.4](https://openid.net/specs/openid-connect-core-1_0.html#TokenErrorResponse).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.3.5. Token Response Validation\n\nWhen using the Hybrid Flow, Token Responses are validated in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.3.5](https://openid.net/specs/openid-connect-core-1_0.html#TokenResponseValidation).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.3.6. ID Token\n\nWhen using the Hybrid Flow, the contents of an ID Token returned from the Token Endpoint are the same as for an ID Token returned from the Authorization Endpoint, as defined in [Section 3.3.2.11](https://openid.net/specs/openid-connect-core-1_0.html#HybridIDToken), with the exception of the differences specified in this section.\n\nIf an ID Token is returned from both the Authorization Endpoint and from the Token Endpoint, which is the case for the `response_type` values `code id_token` and `code id_token token`, the `iss` and `sub` Claim Values MUST be identical in both ID Tokens. All Claims about the Authentication event present in either SHOULD be present in both. If either ID Token contains Claims about the End-User, any that are present in both SHOULD have the same values in both. Note that the OP MAY choose to return fewer Claims about the End-User from the Authorization Endpoint, for instance, for privacy reasons. The `at_hash` and `c_hash` Claims MAY be omitted from the ID Token returned from the Token Endpoint even when these Claims are present in the ID Token returned from the Authorization Endpoint, because the ID Token and Access Token values returned from the Token Endpoint are already cryptographically bound together by the TLS encryption performed by the Token Endpoint.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.3.7. ID Token Validation\n\nWhen using the Hybrid Flow, the contents of an ID Token returned from the Token Endpoint MUST be validated in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.3.7](https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.3.8. Access Token\n\nIf an Access Token is returned from both the Authorization Endpoint and from the Token Endpoint, which is the case for the `response_type` values `code token` and `code id_token token`, their values MAY be the same or they MAY be different. Note that different Access Tokens might be returned be due to the different security characteristics of the two endpoints and the lifetimes and the access to resources granted by them might also be different.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.3.9. Access Token Validation\n\nWhen using the Hybrid Flow, the Access Token returned from the Token Endpoint is validated in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.3.8](https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowTokenValidation).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 4. Initiating Login from a Third Party\n\nIn some cases, the login flow is initiated by an OpenID Provider or another party, rather than the Relying Party. In this case, the initiator redirects to the RP at its login initiation endpoint, which requests that the RP send an Authentication Request to a specified OP. This login initiation endpoint can be a deep link at the RP, rather than a default landing page. RPs supporting [OpenID Connect Dynamic Client Registration 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration) [OpenID.Registration] register this endpoint value using the `initiate_login_uri` Registration parameter.\n\nThe party initiating the login request does so by redirecting to the login initiation endpoint at the RP, passing the following parameters:\n\n\n\n> - iss\n>\n>   REQUIRED. Issuer Identifier for the OP that the RP is to send the Authentication Request to. Its value MUST be a URL using the `https` scheme.\n>\n> - login_hint\n>\n>   OPTIONAL. Hint to the Authorization Server about the login identifier the End-User might use to log in. If the client receives a value for this string-valued parameter, it MUST include it in the Authentication Request as the `login_hint` parameter value.\n>\n> - target_link_uri\n>\n>   OPTIONAL. URL that the RP is requested to redirect to after authentication. RPs MUST verify the value of the `target_link_uri` to prevent being used as an open redirector to external sites.\n\n\n\nThe parameters can either be passed as query parameters using the HTTP `GET` method or be passed as HTML form values that are auto-submitted in the User Agent, and thus are transmitted via the HTTP `POST` method.\n\nOther parameters MAY be sent, if defined by extensions. Any parameters used that are not understood MUST be ignored by the Client.\n\nClients SHOULD employ frame busting and other techniques to prevent End-Users from being logged in by third party sites without their knowledge through attacks such as Clickjacking. Refer to Section 4.4.1.9 of [[RFC6819\\]](https://openid.net/specs/openid-connect-core-1_0.html#RFC6819) for more details.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5. Claims\n\nThis section specifies how the Client can obtain Claims about the End-User and the Authentication event. It also defines a standard set of basic profile Claims. Pre-defined sets of Claims can be requested using specific scope values or individual Claims can be requested using the `claims` request parameter. The Claims can come directly from the OpenID Provider or from distributed sources as well.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.1. Standard Claims\n\nThis specification defines a set of standard Claims. They can be requested to be returned either in the UserInfo Response, per [Section 5.3.2](https://openid.net/specs/openid-connect-core-1_0.html#UserInfoResponse), or in the ID Token, per [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken).\n\n\n\n------\n\n\n\n| Member                | Type        | Description                                                  |\n| --------------------- | ----------- | ------------------------------------------------------------ |\n| sub                   | string      | Subject - Identifier for the End-User at the Issuer.         |\n| name                  | string      | End-User's full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User's locale and preferences. |\n| given_name            | string      | Given name(s) or first name(s) of the End-User. Note that in some cultures, people can have multiple given names; all can be present, with the names being separated by space characters. |\n| family_name           | string      | Surname(s) or last name(s) of the End-User. Note that in some cultures, people can have multiple family names or no family name; all can be present, with the names being separated by space characters. |\n| middle_name           | string      | Middle name(s) of the End-User. Note that in some cultures, people can have multiple middle names; all can be present, with the names being separated by space characters. Also note that in some cultures, middle names are not used. |\n| nickname              | string      | Casual name of the End-User that may or may not be the same as the `given_name`. For instance, a `nickname` value of `Mike` might be returned alongside a `given_name` value of `Michael`. |\n| preferred_username    | string      | Shorthand name by which the End-User wishes to be referred to at the RP, such as `janedoe` or `j.doe`. This value MAY be any valid JSON string including special characters such as `@`, `/`, or whitespace. The RP MUST NOT rely upon this value being unique, as discussed in [Section 5.7](https://openid.net/specs/openid-connect-core-1_0.html#ClaimStability). |\n| profile               | string      | URL of the End-User's profile page. The contents of this Web page SHOULD be about the End-User. |\n| picture               | string      | URL of the End-User's profile picture. This URL MUST refer to an image file (for example, a PNG, JPEG, or GIF image file), rather than to a Web page containing an image. Note that this URL SHOULD specifically reference a profile photo of the End-User suitable for displaying when describing the End-User, rather than an arbitrary photo taken by the End-User. |\n| website               | string      | URL of the End-User's Web page or blog. This Web page SHOULD contain information published by the End-User or an organization that the End-User is affiliated with. |\n| email                 | string      | End-User's preferred e-mail address. Its value MUST conform to the [RFC 5322](https://openid.net/specs/openid-connect-core-1_0.html#RFC5322) [RFC5322] addr-spec syntax. The RP MUST NOT rely upon this value being unique, as discussed in [Section 5.7](https://openid.net/specs/openid-connect-core-1_0.html#ClaimStability). |\n| email_verified        | boolean     | True if the End-User's e-mail address has been verified; otherwise false. When this Claim Value is `true`, this means that the OP took affirmative steps to ensure that this e-mail address was controlled by the End-User at the time the verification was performed. The means by which an e-mail address is verified is context-specific, and dependent upon the trust framework or contractual agreements within which the parties are operating. |\n| gender                | string      | End-User's gender. Values defined by this specification are `female` and `male`. Other values MAY be used when neither of the defined values are applicable. |\n| birthdate             | string      | End-User's birthday, represented as an [ISO 8601:2004](https://openid.net/specs/openid-connect-core-1_0.html#ISO8601-2004) [ISO8601‑2004] `YYYY-MM-DD` format. The year MAY be `0000`, indicating that it is omitted. To represent only the year, `YYYY` format is allowed. Note that depending on the underlying platform's date related function, providing just year can result in varying month and day, so the implementers need to take this factor into account to correctly process the dates. |\n| zoneinfo              | string      | String from zoneinfo [[zoneinfo\\]](https://openid.net/specs/openid-connect-core-1_0.html#zoneinfo) time zone database representing the End-User's time zone. For example, `Europe/Paris` or `America/Los_Angeles`. |\n| locale                | string      | End-User's locale, represented as a [BCP47](https://openid.net/specs/openid-connect-core-1_0.html#RFC5646) [RFC5646] language tag. This is typically an [ISO 639-1 Alpha-2](https://openid.net/specs/openid-connect-core-1_0.html#ISO639-1) [ISO639‑1] language code in lowercase and an [ISO 3166-1 Alpha-2](https://openid.net/specs/openid-connect-core-1_0.html#ISO3166-1) [ISO3166‑1] country code in uppercase, separated by a dash. For example, `en-US` or `fr-CA`. As a compatibility note, some implementations have used an underscore as the separator rather than a dash, for example, `en_US`; Relying Parties MAY choose to accept this locale syntax as well. |\n| phone_number          | string      | End-User's preferred telephone number. [E.164](https://openid.net/specs/openid-connect-core-1_0.html#E.164) [E.164] is RECOMMENDED as the format of this Claim, for example, `+1 (425) 555-1212` or `+56 (2) 687 2400`. If the phone number contains an extension, it is RECOMMENDED that the extension be represented using the [RFC 3966](https://openid.net/specs/openid-connect-core-1_0.html#RFC3966) [RFC3966] extension syntax, for example, `+1 (604) 555-1234;ext=5678`. |\n| phone_number_verified | boolean     | True if the End-User's phone number has been verified; otherwise false. When this Claim Value is `true`, this means that the OP took affirmative steps to ensure that this phone number was controlled by the End-User at the time the verification was performed. The means by which a phone number is verified is context-specific, and dependent upon the trust framework or contractual agreements within which the parties are operating. When true, the `phone_number` Claim MUST be in E.164 format and any extensions MUST be represented in RFC 3966 format. |\n| address               | JSON object | End-User's preferred postal address. The value of the `address` member is a JSON [[RFC4627\\]](https://openid.net/specs/openid-connect-core-1_0.html#RFC4627) structure containing some or all of the members defined in [Section 5.1.1](https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim). |\n| updated_at            | number      | Time the End-User's information was last updated. Its value is a JSON number representing the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the date/time. |\n\n\n\n **Table 1: Registered Member Definitions**  \n\n------\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.1.1. Address Claim\n\nThe Address Claim represents a physical mailing address. Implementations MAY return only a subset of the fields of an `address`, depending upon the information available and the End-User's privacy preferences. For example, the `country` and `region` might be returned without returning more fine-grained address information.\n\nImplementations MAY return just the full address as a single string in the formatted sub-field, or they MAY return just the individual component fields using the other sub-fields, or they MAY return both. If both variants are returned, they SHOULD be describing the same address, with the formatted address indicating how the component fields are combined.\n\n\n\n> - formatted\n>\n>   Full mailing address, formatted for display or use on a mailing label. This field MAY contain multiple lines, separated by newlines. Newlines can be represented either as a carriage return/line feed pair (\"\\r\\n\") or as a single line feed character (\"\\n\").\n>\n> - street_address\n>\n>   Full street address component, which MAY include house number, street name, Post Office Box, and multi-line extended street address information. This field MAY contain multiple lines, separated by newlines. Newlines can be represented either as a carriage return/line feed pair (\"\\r\\n\") or as a single line feed character (\"\\n\").\n>\n> - locality\n>\n>   City or locality component.\n>\n> - region\n>\n>   State, province, prefecture, or region component.\n>\n> - postal_code\n>\n>   Zip code or postal code component.\n>\n> - country\n>\n>   Country name component.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.1.2. Additional Claims\n\nWhile this specification defines only a small set of Claims as standard Claims, other Claims MAY be used in conjunction with the standard Claims. When using such Claims, it is RECOMMENDED that collision-resistant names be used for the Claim Names, as described in the [JSON Web Token (JWT)](https://openid.net/specs/openid-connect-core-1_0.html#JWT) [JWT] specification. Alternatively, Private Claim Names can be safely used when naming conflicts are unlikely to arise, as described in the JWT specification. Or, if specific additional Claims will have broad and general applicability, they can be registered with Registered Claim Names, per the JWT specification.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.2. Claims Languages and Scripts\n\nHuman-readable Claim Values and Claim Values that reference human-readable values MAY be represented in multiple languages and scripts. To specify the languages and scripts, [BCP47](https://openid.net/specs/openid-connect-core-1_0.html#RFC5646) [RFC5646] language tags are added to member names, delimited by a `#` character. For example, `family_name#ja-Kana-JP` expresses the Family Name in Katakana in Japanese, which is commonly used to index and represent the phonetics of the Kanji representation of the same represented as `family_name#ja-Hani-JP`. As another example, both `website` and `website#de` Claim Values might be returned, referencing a Web site in an unspecified language and a Web site in German.\n\nSince Claim Names are case sensitive, it is strongly RECOMMENDED that language tag values used in Claim Names be spelled using the character case with which they are registered in the [IANA Language Subtag Registry](https://openid.net/specs/openid-connect-core-1_0.html#IANA.Language) [IANA.Language]. In particular, normally language names are spelled with lowercase characters, region names are spelled with uppercase characters, and scripts are spelled with mixed case characters. However, since BCP47 language tag values are case insensitive, implementations SHOULD interpret the language tag values supplied in a case insensitive manner.\n\nPer the recommendations in BCP47, language tag values for Claims SHOULD only be as specific as necessary. For instance, using `fr` might be sufficient in many contexts, rather than `fr-CA` or `fr-FR`. Where possible, OPs SHOULD try to match requested Claim locales with Claims it has. For instance, if the Client asks for a Claim with a `de` (German) language tag and the OP has a value tagged with `de-CH` (Swiss German) and no generic German value, it would be appropriate for the OP to return the Swiss German value to the Client. (This intentionally moves as much of the complexity of language tag matching to the OP as possible, to simplify Clients.)\n\nOpenID Connect defines the following Authorization Request parameter to enable specify the preferred languages and scripts to be used for the returned Claims:\n\n> - claims_locales\n>\n>   OPTIONAL. End-User's preferred languages and scripts for Claims being returned, represented as a space-separated list of [BCP47](https://openid.net/specs/openid-connect-core-1_0.html#RFC5646) [RFC5646] language tag values, ordered by preference. An error SHOULD NOT result if some or all of the requested locales are not supported by the OpenID Provider.\n\n\n\nWhen the OP determines, either through the `claims_locales` parameter, or by other means, that the End-User and Client are requesting Claims in only one set of languages and scripts, it is RECOMMENDED that OPs return Claims without language tags when they employ this language and script. It is also RECOMMENDED that Clients be written in a manner that they can handle and utilize Claims using language tags.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.3. UserInfo Endpoint\n\nThe UserInfo Endpoint is an OAuth 2.0 Protected Resource that returns Claims about the authenticated End-User. To obtain the requested Claims about the End-User, the Client makes a request to the UserInfo Endpoint using an Access Token obtained through OpenID Connect Authentication. These Claims are normally represented by a JSON object that contains a collection of name and value pairs for the Claims.\n\nCommunication with the UserInfo Endpoint MUST utilize TLS. See [Section 16.17](https://openid.net/specs/openid-connect-core-1_0.html#TLSRequirements) for more information on using TLS.\n\nThe UserInfo Endpoint MUST support the use of the HTTP `GET` and HTTP `POST` methods defined in [RFC 2616](https://openid.net/specs/openid-connect-core-1_0.html#RFC2616) [RFC2616].\n\nThe UserInfo Endpoint MUST accept Access Tokens as [OAuth 2.0 Bearer Token Usage](https://openid.net/specs/openid-connect-core-1_0.html#RFC6750) [RFC6750].\n\nThe UserInfo Endpoint SHOULD support the use of [Cross Origin Resource Sharing (CORS)](https://openid.net/specs/openid-connect-core-1_0.html#CORS) [CORS] and or other methods as appropriate to enable Java Script Clients to access the endpoint.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.3.1. UserInfo Request\n\nThe Client sends the UserInfo Request using either HTTP `GET` or HTTP `POST`. The Access Token obtained from an OpenID Connect Authentication Request MUST be sent as a Bearer Token, per Section 2 of [OAuth 2.0 Bearer Token Usage](https://openid.net/specs/openid-connect-core-1_0.html#RFC6750) [RFC6750].\n\nIt is RECOMMENDED that the request use the HTTP `GET` method and the Access Token be sent using the `Authorization` header field.\n\nThe following is a non-normative example of a UserInfo Request:\n\n```\n  GET /userinfo HTTP/1.1\n  Host: server.example.com\n  Authorization: Bearer SlAV32hkKG\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.3.2. Successful UserInfo Response\n\nThe UserInfo Claims MUST be returned as the members of a JSON object unless a signed or encrypted response was requested during Client Registration. The Claims defined in [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) can be returned, as can additional Claims not specified there.\n\nFor privacy reasons, OpenID Providers MAY elect to not return values for some requested Claims.\n\nIf a Claim is not returned, that Claim Name SHOULD be omitted from the JSON object representing the Claims; it SHOULD NOT be present with a null or empty string value.\n\nThe `sub` (subject) Claim MUST always be returned in the UserInfo Response.\n\nNOTE: Due to the possibility of token substitution attacks (see [Section 16.11](https://openid.net/specs/openid-connect-core-1_0.html#TokenSubstitution)), the UserInfo Response is not guaranteed to be about the End-User identified by the `sub` (subject) element of the ID Token. The `sub` Claim in the UserInfo Response MUST be verified to exactly match the `sub` Claim in the ID Token; if they do not match, the UserInfo Response values MUST NOT be used.\n\nUpon receipt of the UserInfo Request, the UserInfo Endpoint MUST return the JSON Serialization of the UserInfo Response as in [Section 13.3](https://openid.net/specs/openid-connect-core-1_0.html#JSONSerialization) in the HTTP response body unless a different format was specified during Registration [[OpenID.Registration\\]](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration). The UserInfo Endpoint MUST return a content-type header to indicate which format is being returned. The content-type of the HTTP response MUST be `application/json` if the response body is a text JSON object; the response body SHOULD be encoded using UTF-8.\n\nIf the UserInfo Response is signed and/or encrypted, then the Claims are returned in a JWT and the content-type MUST be `application/jwt`. The response MAY be encrypted without also being signed. If both signing and encryption are requested, the response MUST be signed then encrypted, with the result being a Nested JWT, as defined in [[JWT\\]](https://openid.net/specs/openid-connect-core-1_0.html#JWT).\n\nIf signed, the UserInfo Response SHOULD contain the Claims `iss` (issuer) and `aud` (audience) as members. The `iss` value SHOULD be the OP's Issuer Identifier URL. The `aud` value SHOULD be or include the RP's Client ID value.\n\nThe following is a non-normative example of a UserInfo Response:\n\n```\n  HTTP/1.1 200 OK\n  Content-Type: application/json\n\n  {\n   \"sub\": \"248289761001\",\n   \"name\": \"Jane Doe\",\n   \"given_name\": \"Jane\",\n   \"family_name\": \"Doe\",\n   \"preferred_username\": \"j.doe\",\n   \"email\": \"janedoe@example.com\",\n   \"picture\": \"http://example.com/janedoe/me.jpg\"\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.3.3. UserInfo Error Response\n\nWhen an error condition occurs, the UserInfo Endpoint returns an Error Response as defined in Section 3 of [OAuth 2.0 Bearer Token Usage](https://openid.net/specs/openid-connect-core-1_0.html#RFC6750) [RFC6750]. (HTTP errors unrelated to RFC 6750 are returned to the User Agent using the appropriate HTTP status code.)\n\nThe following is a non-normative example of a UserInfo Error Response:\n\n```\n  HTTP/1.1 401 Unauthorized\n  WWW-Authenticate: error=\"invalid_token\",\n    error_description=\"The Access Token expired\"\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.3.4. UserInfo Response Validation\n\nThe Client MUST validate the UserInfo Response as follows:\n\n\n\n1. Verify that the OP that responded was the intended OP through a TLS server certificate check, per [RFC 6125](https://openid.net/specs/openid-connect-core-1_0.html#RFC6125) [RFC6125].\n2. If the Client has provided a `userinfo_encrypted_response_alg` parameter during Registration, decrypt the UserInfo Response using the keys specified during Registration.\n3. If the response was signed, the Client SHOULD validate the signature according to [JWS](https://openid.net/specs/openid-connect-core-1_0.html#JWS) [JWS].\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.4. Requesting Claims using Scope Values\n\nOpenID Connect Clients use `scope` values, as defined in Section 3.3 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749], to specify what access privileges are being requested for Access Tokens. The scopes associated with Access Tokens determine what resources will be available when they are used to access OAuth 2.0 protected endpoints. Protected Resource endpoints MAY perform different actions and return different information based on the scope values and other parameters used when requesting the presented Access Token.\n\nFor OpenID Connect, scopes can be used to request that specific sets of information be made available as Claim Values.\n\nClaims requested by the following scopes are treated by Authorization Servers as Voluntary Claims.\n\nOpenID Connect defines the following `scope` values that are used to request Claims:\n\n\n\n> - profile\n>\n>   OPTIONAL. This scope value requests access to the End-User's default profile Claims, which are: `name`, `family_name`, `given_name`, `middle_name`, `nickname`, `preferred_username`, `profile`, `picture`, `website`, `gender`, `birthdate`, `zoneinfo`, `locale`, and `updated_at`.\n>\n> - email\n>\n>   OPTIONAL. This scope value requests access to the `email` and `email_verified` Claims.\n>\n> - address\n>\n>   OPTIONAL. This scope value requests access to the `address` Claim.\n>\n> - phone\n>\n>   OPTIONAL. This scope value requests access to the `phone_number` and `phone_number_verified` Claims.\n\n\n\nMultiple scope values MAY be used by creating a space delimited, case sensitive list of ASCII scope values.\n\nThe Claims requested by the `profile`, `email`, `address`, and `phone` scope values are returned from the UserInfo Endpoint, as described in [Section 5.3.2](https://openid.net/specs/openid-connect-core-1_0.html#UserInfoResponse), when a `response_type` value is used that results in an Access Token being issued. However, when no Access Token is issued (which is the case for the `response_type` value `id_token`), the resulting Claims are returned in the ID Token.\n\nIn some cases, the End-User will be given the option to have the OpenID Provider decline to provide some or all information requested by RPs. To minimize the amount of information that the End-User is being asked to disclose, an RP can elect to only request a subset of the information available from the UserInfo Endpoint.\n\n\n\nThe following is a non-normative example of an unencoded `scope` request:\n\n```\n  scope=openid profile email phone\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.5. Requesting Claims using the \"claims\" Request Parameter\n\nOpenID Connect defines the following Authorization Request parameter to enable requesting individual Claims and specifying parameters that apply to the requested Claims:\n\n> - claims\n>\n>   OPTIONAL. This parameter is used to request that specific Claims be returned. The value is a JSON object listing the requested Claims.\n\n\n\nThe `claims` Authentication Request parameter requests that specific Claims be returned from the UserInfo Endpoint and/or in the ID Token. It is represented as a JSON object containing lists of Claims being requested from these locations. Properties of the Claims being requested MAY also be specified.\n\nSupport for the `claims` parameter is OPTIONAL. Should an OP not support this parameter and an RP uses it, the OP SHOULD return a set of Claims to the RP that it believes would be useful to the RP and the End-User using whatever heuristics it believes are appropriate. The `claims_parameter_supported` Discovery result indicates whether the OP supports this parameter.\n\nThe `claims` parameter value is represented in an OAuth 2.0 request as UTF-8 encoded JSON (which ends up being form-urlencoded when passed as an OAuth parameter). When used in a Request Object value, per [Section 6.1](https://openid.net/specs/openid-connect-core-1_0.html#RequestObject), the JSON is used as the value of the `claims` member.\n\nThe top-level members of the Claims request JSON object are:\n\n> - userinfo\n>\n>   OPTIONAL. Requests that the listed individual Claims be returned from the UserInfo Endpoint. If present, the listed Claims are being requested to be added to any Claims that are being requested using `scope` values. If not present, the Claims being requested from the UserInfo Endpoint are only those requested using `scope` values.\n>\n> - \n>\n>   When the `userinfo` member is used, the request MUST also use a `response_type` value that results in an Access Token being issued to the Client for use at the UserInfo Endpoint.\n>\n> - id_token\n>\n>   OPTIONAL. Requests that the listed individual Claims be returned in the ID Token. If present, the listed Claims are being requested to be added to the default Claims in the ID Token. If not present, the default ID Token Claims are requested, as per the ID Token definition in [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken) and per the additional per-flow ID Token requirements in Sections [3.1.3.6](https://openid.net/specs/openid-connect-core-1_0.html#CodeIDToken), [3.2.2.10](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitIDToken), [3.3.2.11](https://openid.net/specs/openid-connect-core-1_0.html#HybridIDToken), and [3.3.3.6](https://openid.net/specs/openid-connect-core-1_0.html#HybridIDToken2).\n\nOther members MAY be present. Any members used that are not understood MUST be ignored.\n\n\n\nAn example Claims request is as follows:\n\n```\n  {\n   \"userinfo\":\n    {\n     \"given_name\": {\"essential\": true},\n     \"nickname\": null,\n     \"email\": {\"essential\": true},\n     \"email_verified\": {\"essential\": true},\n     \"picture\": null,\n     \"http://example.info/claims/groups\": null\n    },\n   \"id_token\":\n    {\n     \"auth_time\": {\"essential\": true},\n     \"acr\": {\"values\": [\"urn:mace:incommon:iap:silver\"] }\n    }\n  }\n```\n\nNote that a Claim that is not in the standard set defined in [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims), the (example) `http://example.info/claims/groups` Claim, is being requested. Using the `claims` parameter is the only way to request Claims outside the standard set. It is also the only way to request specific combinations of the standard Claims that cannot be specified using scope values.\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.5.1. Individual Claims Requests\n\nThe `userinfo` and `id_token` members of the `claims` request both are JSON objects with the names of the individual Claims being requested as the member names. The member values MUST be one of the following:\n\n> - null\n>\n>   Indicates that this Claim is being requested in the default manner. In particular, this is a Voluntary Claim. For instance, the Claim request:`  \"given_name\": null `requests the `given_name` Claim in the default manner.\n>\n> - JSON Object\n>\n>   Used to provide additional information about the Claim being requested. This specification defines the following members:essentialOPTIONAL. Indicates whether the Claim being requested is an Essential Claim. If the value is `true`, this indicates that the Claim is an Essential Claim. For instance, the Claim request:`  \"auth_time\": {\"essential\": true} `can be used to specify that it is Essential to return an `auth_time` Claim Value.If the value is `false`, it indicates that it is a Voluntary Claim. The default is `false`.By requesting Claims as Essential Claims, the RP indicates to the End-User that releasing these Claims will ensure a smooth authorization for the specific task requested by the End-User. Note that even if the Claims are not available because the End-User did not authorize their release or they are not present, the Authorization Server MUST NOT generate an error when Claims are not returned, whether they are Essential or Voluntary, unless otherwise specified in the description of the specific claim.valueOPTIONAL. Requests that the Claim be returned with a particular value. For instance the Claim request:`  \"sub\": {\"value\": \"248289761001\"} `can be used to specify that the request apply to the End-User with Subject Identifier `248289761001`.The value of the `value` member MUST be a valid value for the Claim being requested. Definitions of individual Claims can include requirements on how and whether the `value` qualifier is to be used when requesting that Claim.valuesOPTIONAL. Requests that the Claim be returned with one of a set of values, with the values appearing in order of preference. For instance the Claim request:`  \"acr\": {\"essential\": true,          \"values\": [\"urn:mace:incommon:iap:silver\",                     \"urn:mace:incommon:iap:bronze\"]} `specifies that it is Essential that the `acr` Claim be returned with either the value `urn:mace:incommon:iap:silver` or `urn:mace:incommon:iap:bronze`.The values in the `values` member array MUST be valid values for the Claim being requested. Definitions of individual Claims can include requirements on how and whether the `values` qualifier is to be used when requesting that Claim.Other members MAY be defined to provide additional information about the requested Claims. Any members used that are not understood MUST be ignored.\n\n\n\nNote that when the `claims` request parameter is supported, the scope values that request Claims, as defined in [Section 5.4](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims), are effectively shorthand methods for requesting sets of individual Claims. For example, using the scope value `openid email` and a `response_type` that returns an Access Token is equivalent to using the scope value `openid` and the following request for individual Claims.\n\nEquivalent of using the `email` scope value:\n\n```\n  {\n   \"userinfo\":\n    {\n     \"email\": null,\n     \"email_verified\": null\n    }\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.5.1.1. Requesting the \"acr\" Claim\n\nIf the `acr` Claim is requested as an Essential Claim for the ID Token with a `values` parameter requesting specific Authentication Context Class Reference values and the implementation supports the `claims` parameter, the Authorization Server MUST return an `acr` Claim Value that matches one of the requested values. The Authorization Server MAY ask the End-User to re-authenticate with additional factors to meet this requirement. If this is an Essential Claim and the requirement cannot be met, then the Authorization Server MUST treat that outcome as a failed authentication attempt.\n\nNote that the RP MAY request the `acr` Claim as a Voluntary Claim by using the `acr_values` request parameter or by not including \"essential\": true in an individual `acr` Claim request. If the Claim is not Essential and a requested value cannot be provided, the Authorization Server SHOULD return the session's current `acr` as the value of the `acr` Claim. If the Claim is not Essential, the Authorization Server is not required to provide this Claim in its response.\n\nIf the client requests the `acr` Claim using both the `acr_values` request parameter and an individual `acr` Claim request for the ID Token listing specific requested values, the resulting behavior is unspecified.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.5.2. Languages and Scripts for Individual Claims\n\nAs described in [Section 5.2](https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts), human-readable Claim Values and Claim Values that reference human-readable values MAY be represented in multiple languages and scripts. Within a request for individual Claims, requested languages and scripts for particular Claims MAY be requested by including Claim Names that contain `#`-separated [BCP47](https://openid.net/specs/openid-connect-core-1_0.html#RFC5646) [RFC5646] language tags in the Claims request, using the Claim Name syntax specified in [Section 5.2](https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts). For example, a Family Name in Katakana in Japanese can be requested using the Claim Name `family_name#ja-Kana-JP` and a Kanji representation of the Family Name in Japanese can be requested using the Claim Name `family_name#ja-Hani-JP`. A German-language Web site can be requested with the Claim Name `website#de`.\n\nIf an OP receives a request for human-readable Claims in a language and script that it doesn't have, any versions of those Claims returned that don't use the requested language and script SHOULD use a language tag in the Claim Name.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.6. Claim Types\n\nThree representations of Claim Values are defined by this specification:\n\n\n\n> - Normal Claims\n>\n>   Claims that are directly asserted by the OpenID Provider.\n>\n> - Aggregated Claims\n>\n>   Claims that are asserted by a Claims Provider other than the OpenID Provider but are returned by OpenID Provider.\n>\n> - Distributed Claims\n>\n>   Claims that are asserted by a Claims Provider other than the OpenID Provider but are returned as references by the OpenID Provider.\n\n\n\nNormal Claims MUST be supported. Support for Aggregated Claims and Distributed Claims is OPTIONAL.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.6.1. Normal Claims\n\nNormal Claims are represented as members in a JSON object. The Claim Name is the member name and the Claim Value is the member value.\n\nThe following is a non-normative response containing Normal Claims:\n\n```\n  {\n   \"name\": \"Jane Doe\",\n   \"given_name\": \"Jane\",\n   \"family_name\": \"Doe\",\n   \"email\": \"janedoe@example.com\",\n   \"picture\": \"http://example.com/janedoe/me.jpg\"\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.6.2. Aggregated and Distributed Claims\n\nAggregated and distributed Claims are represented by using special `_claim_names` and `_claim_sources` members of the JSON object containing the Claims.\n\n\n\n> - _claim_names\n>\n>   JSON object whose member names are the Claim Names for the Aggregated and Distributed Claims. The member values are references to the member names in the `_claim_sources` member from which the actual Claim Values can be retrieved.\n>\n> - _claim_sources\n>\n>   JSON object whose member names are referenced by the member values of the `_claim_names` member. The member values contain sets of Aggregated Claims or reference locations for Distributed Claims. The member values can have one of the following formats depending on whether it is providing Aggregated or Distributed Claims:Aggregated ClaimsJSON object that MUST contain the `JWT` member whose value is a [JWT](https://openid.net/specs/openid-connect-core-1_0.html#JWT) [JWT] that MUST contain all the Claims in the `_claim_names` object that references the corresponding `_claim_sources` member. Other members MAY be present. Any members used that are not understood MUST be ignored.JWTREQUIRED. JWT containing Claim Values.The JWT SHOULD NOT contain a `sub` (subject) Claim unless its value is an identifier for the End-User at the Claims Provider (and not for the OpenID Provider or another party); this typically means that a `sub` Claim SHOULD NOT be provided.Distributed ClaimsJSON object that contains the following members and values:endpointREQUIRED. OAuth 2.0 resource endpoint from which the associated Claim can be retrieved. The endpoint URL MUST return the Claim as a JWT.access_tokenOPTIONAL. Access Token enabling retrieval of the Claims from the endpoint URL by using the [OAuth 2.0 Bearer Token Usage](https://openid.net/specs/openid-connect-core-1_0.html#RFC6750) [RFC6750] protocol. Claims SHOULD be requested using the Authorization Request header field and Claims Providers MUST support this method. If the Access Token is not available, RPs MAY need to retrieve the Access Token out of band or use an Access Token that was pre-negotiated between the Claims Provider and RP, or the Claims Provider MAY reauthenticate the End-User and/or reauthorize the RP.A `sub` (subject) Claim SHOULD NOT be returned from the Claims Provider unless its value is an identifier for the End-User at the Claims Provider (and not for the OpenID Provider or another party); this typically means that a `sub` Claim SHOULD NOT be provided.\n\n\n\nIn general, it is up to the OP when it is appropriate to use Aggregated Claims and Distributed Claims. In some cases, information about when to use what Claim Types might be negotiated out of band between RPs and OPs.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.6.2.1. Example of Aggregated Claims\n\nIn this non-normative example, Claims from Claims Provider A are combined with other Claims held by the OpenID provider, with the Claims from Claims Provider A being returned as Aggregated Claims.\n\n\n\nIn this example, these Claims about Jane Doe have been issued by Claims Provider A:\n\n```\n  {\n   \"address\": {\n     \"street_address\": \"1234 Hollywood Blvd.\",\n     \"locality\": \"Los Angeles\",\n     \"region\": \"CA\",\n     \"postal_code\": \"90210\",\n     \"country\": \"US\"},\n   \"phone_number\": \"+1 (310) 123-4567\"\n  }\n```\n\nClaims Provider A signs the JSON Claims, representing them in a signed JWT: jwt_header.jwt_part2.jwt_part3. It is this JWT that is used by the OpenID Provider.\n\n\n\nIn this example, this JWT containing Jane Doe's Aggregated Claims from Claims Provider A is combined with other Normal Claims, and returned as the following set of Claims:\n\n```\n  {\n   \"name\": \"Jane Doe\",\n   \"given_name\": \"Jane\",\n   \"family_name\": \"Doe\",\n   \"birthdate\": \"0000-03-22\",\n   \"eye_color\": \"blue\",\n   \"email\": \"janedoe@example.com\",\n   \"_claim_names\": {\n     \"address\": \"src1\",\n     \"phone_number\": \"src1\"\n   },\n   \"_claim_sources\": {\n     \"src1\": {\"JWT\": \"jwt_header.jwt_part2.jwt_part3\"}\n   }\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.6.2.2. Example of Distributed Claims\n\nIn this non-normative example, the OpenID Provider combines Normal Claims that it holds with references to Claims held by two different Claims Providers, B and C, incorporating references to some of the Claims held by B and C as Distributed Claims.\n\n\n\nIn this example, these Claims about Jane Doe are held by Claims Provider B (Jane Doe's bank):\n\n```\n  {\n   \"shipping_address\": {\n     \"street_address\": \"1234 Hollywood Blvd.\",\n     \"locality\": \"Los Angeles\",\n     \"region\": \"CA\",\n     \"postal_code\": \"90210\",\n     \"country\": \"US\"},\n   \"payment_info\": \"Some_Card 1234 5678 9012 3456\",\n   \"phone_number\": \"+1 (310) 123-4567\"\n  }\n```\n\n\n\nAlso in this example, this Claim about Jane Doe is held by Claims Provider C (a credit agency):\n\n```\n  {\n   \"credit_score\": 650\n  }\n```\n\n\n\nThe OpenID Provider returns Jane Doe's Claims along with references to the Distributed Claims from Claims Provider B and Claims Provider C by sending the Access Tokens and URLs of locations from which the Distributed Claims can be retrieved:\n\n```\n  {\n   \"name\": \"Jane Doe\",\n   \"given_name\": \"Jane\",\n   \"family_name\": \"Doe\",\n   \"email\": \"janedoe@example.com\",\n   \"birthdate\": \"0000-03-22\",\n   \"eye_color\": \"blue\",\n   \"_claim_names\": {\n     \"payment_info\": \"src1\",\n     \"shipping_address\": \"src1\",\n     \"credit_score\": \"src2\"\n    },\n   \"_claim_sources\": {\n     \"src1\": {\"endpoint\":\n                \"https://bank.example.com/claim_source\"},\n     \"src2\": {\"endpoint\":\n                \"https://creditagency.example.com/claims_here\",\n              \"access_token\": \"ksj3n283dke\"}\n   }\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.7. Claim Stability and Uniqueness\n\nThe `sub` (subject) and `iss` (issuer) Claims, used together, are the only Claims that an RP can rely upon as a stable identifier for the End-User, since the `sub` Claim MUST be locally unique and never reassigned within the Issuer for a particular End-User, as described in [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken). Therefore, the only guaranteed unique identifier for a given End-User is the combination of the `iss` Claim and the `sub` Claim.\n\nAll other Claims carry no such guarantees across different issuers in terms of stability over time or uniqueness across users, and Issuers are permitted to apply local restrictions and policies. For instance, an Issuer MAY re-use an `email` Claim Value across different End-Users at different points in time, and the claimed `email` address for a given End-User MAY change over time. Therefore, other Claims such as `email`, `phone_number`, and `preferred_username` and MUST NOT be used as unique identifiers for the End-User.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 6. Passing Request Parameters as JWTs\n\nOpenID Connect defines the following Authorization Request parameters to enable Authentication Requests to be signed and optionally encrypted:\n\n> - request\n>\n>   OPTIONAL. This parameter enables OpenID Connect requests to be passed in a single, self-contained parameter and to be optionally signed and/or encrypted. The parameter value is a Request Object value, as specified in [Section 6.1](https://openid.net/specs/openid-connect-core-1_0.html#RequestObject). It represents the request as a JWT whose Claims are the request parameters.\n>\n> - request_uri\n>\n>   OPTIONAL. This parameter enables OpenID Connect requests to be passed by reference, rather than by value. The `request_uri` value is a URL using the `https` scheme referencing a resource containing a Request Object value, which is a JWT containing the request parameters.\n\n\n\nRequests using these parameters are represented as JWTs, which are respectively passed by value or by reference. The ability to pass requests by reference is particularly useful for large requests. If one of these parameters is used, the other MUST NOT be used in the same request.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 6.1. Passing a Request Object by Value\n\nThe `request` Authorization Request parameter enables OpenID Connect requests to be passed in a single, self-contained parameter and to be optionally signed and/or encrypted. It represents the request as a JWT whose Claims are the request parameters specified in [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint). This JWT is called a Request Object.\n\nSupport for the `request` parameter is OPTIONAL. The `request_parameter_supported` Discovery result indicates whether the OP supports this parameter. Should an OP not support this parameter and an RP uses it, the OP MUST return the `request_not_supported` error.\n\nWhen the `request` parameter is used, the OpenID Connect request parameter values contained in the JWT supersede those passed using the OAuth 2.0 request syntax. However, parameters MAY also be passed using the OAuth 2.0 request syntax even when a Request Object is used; this would typically be done to enable a cached, pre-signed (and possibly pre-encrypted) Request Object value to be used containing the fixed request parameters, while parameters that can vary with each request, such as `state` and `nonce`, are passed as OAuth 2.0 parameters.\n\nSo that the request is a valid OAuth 2.0 Authorization Request, values for the `response_type` and `client_id` parameters MUST be included using the OAuth 2.0 request syntax, since they are REQUIRED by OAuth 2.0. The values for these parameters MUST match those in the Request Object, if present.\n\nEven if a `scope` parameter is present in the Request Object value, a `scope` parameter MUST always be passed using the OAuth 2.0 request syntax containing the `openid` scope value to indicate to the underlying OAuth 2.0 logic that this is an OpenID Connect request.\n\nThe Request Object MAY be signed or unsigned (plaintext). When it is plaintext, this is indicated by use of the `none` algorithm [[JWA\\]](https://openid.net/specs/openid-connect-core-1_0.html#JWA) in the JOSE Header. If signed, the Request Object SHOULD contain the Claims `iss` (issuer) and `aud` (audience) as members. The `iss` value SHOULD be the Client ID of the RP, unless it was signed by a different party than the RP. The `aud` value SHOULD be or include the OP's Issuer Identifier URL.\n\nThe Request Object MAY also be encrypted using [JWE](https://openid.net/specs/openid-connect-core-1_0.html#JWE) [JWE] and MAY be encrypted without also being signed. If both signing and encryption are performed, it MUST be signed then encrypted, with the result being a Nested JWT, as defined in [[JWT\\]](https://openid.net/specs/openid-connect-core-1_0.html#JWT).\n\n`request` and `request_uri` parameters MUST NOT be included in Request Objects.\n\n\n\nThe following is a non-normative example of the Claims in a Request Object before base64url encoding and signing:\n\n```\n  {\n   \"iss\": \"s6BhdRkqt3\",\n   \"aud\": \"https://server.example.com\",\n   \"response_type\": \"code id_token\",\n   \"client_id\": \"s6BhdRkqt3\",\n   \"redirect_uri\": \"https://client.example.org/cb\",\n   \"scope\": \"openid\",\n   \"state\": \"af0ifjsldkj\",\n   \"nonce\": \"n-0S6_WzA2Mj\",\n   \"max_age\": 86400,\n   \"claims\":\n    {\n     \"userinfo\":\n      {\n       \"given_name\": {\"essential\": true},\n       \"nickname\": null,\n       \"email\": {\"essential\": true},\n       \"email_verified\": {\"essential\": true},\n       \"picture\": null\n      },\n     \"id_token\":\n      {\n       \"gender\": null,\n       \"birthdate\": {\"essential\": true},\n       \"acr\": {\"values\": [\"urn:mace:incommon:iap:silver\"]}\n      }\n    }\n  }\n```\n\nSigning it with the `RS256` algorithm results in this Request Object value (with line wraps within values for display purposes only):\n\n```\n  eyJhbGciOiJSUzI1NiIsImtpZCI6ImsyYmRjIn0.ew0KICJpc3MiOiAiczZCaGRSa3\n  F0MyIsDQogImF1ZCI6ICJodHRwczovL3NlcnZlci5leGFtcGxlLmNvbSIsDQogInJl\n  c3BvbnNlX3R5cGUiOiAiY29kZSBpZF90b2tlbiIsDQogImNsaWVudF9pZCI6ICJzNk\n  JoZFJrcXQzIiwNCiAicmVkaXJlY3RfdXJpIjogImh0dHBzOi8vY2xpZW50LmV4YW1w\n  bGUub3JnL2NiIiwNCiAic2NvcGUiOiAib3BlbmlkIiwNCiAic3RhdGUiOiAiYWYwaW\n  Zqc2xka2oiLA0KICJub25jZSI6ICJuLTBTNl9XekEyTWoiLA0KICJtYXhfYWdlIjog\n  ODY0MDAsDQogImNsYWltcyI6IA0KICB7DQogICAidXNlcmluZm8iOiANCiAgICB7DQ\n  ogICAgICJnaXZlbl9uYW1lIjogeyJlc3NlbnRpYWwiOiB0cnVlfSwNCiAgICAgIm5p\n  Y2tuYW1lIjogbnVsbCwNCiAgICAgImVtYWlsIjogeyJlc3NlbnRpYWwiOiB0cnVlfS\n  wNCiAgICAgImVtYWlsX3ZlcmlmaWVkIjogeyJlc3NlbnRpYWwiOiB0cnVlfSwNCiAg\n  ICAgInBpY3R1cmUiOiBudWxsDQogICAgfSwNCiAgICJpZF90b2tlbiI6IA0KICAgIH\n  sNCiAgICAgImdlbmRlciI6IG51bGwsDQogICAgICJiaXJ0aGRhdGUiOiB7ImVzc2Vu\n  dGlhbCI6IHRydWV9LA0KICAgICAiYWNyIjogeyJ2YWx1ZXMiOiBbInVybjptYWNlOm\n  luY29tbW9uOmlhcDpzaWx2ZXIiXX0NCiAgICB9DQogIH0NCn0.nwwnNsk1-Zkbmnvs\n  F6zTHm8CHERFMGQPhos-EJcaH4Hh-sMgk8ePrGhw_trPYs8KQxsn6R9Emo_wHwajyF\n  KzuMXZFSZ3p6Mb8dkxtVyjoy2GIzvuJT_u7PkY2t8QU9hjBcHs68PkgjDVTrG1uRTx\n  0GxFbuPbj96tVuj11pTnmFCUR6IEOXKYr7iGOCRB3btfJhM0_AKQUfqKnRlrRscc8K\n  ol-cSLWoYE9l5QqholImzjT_cMnNIznW9E7CDyWXTsO70xnB4SkG6pXfLSjLLlxmPG\n  iyon_-Te111V8uE83IlzCYIb_NMXvtTIVc1jpspnTSD7xMbpL-2QgwUsAlMGzw\n```\n\nThe following RSA public key, represented in JWK format, can be used to validate the Request Object signature in this and subsequent Request Object examples (with line wraps within values for display purposes only):\n\n```\n  {\n   \"kty\":\"RSA\",\n   \"kid\":\"k2bdc\",\n   \"n\":\"y9Lqv4fCp6Ei-u2-ZCKq83YvbFEk6JMs_pSj76eMkddWRuWX2aBKGHAtKlE5P\n        7_vn__PCKZWePt3vGkB6ePgzAFu08NmKemwE5bQI0e6kIChtt_6KzT5OaaXDF\n        I6qCLJmk51Cc4VYFaxgqevMncYrzaW_50mZ1yGSFIQzLYP8bijAHGVjdEFgZa\n        ZEN9lsn_GdWLaJpHrB3ROlS50E45wxrlg9xMncVb8qDPuXZarvghLL0HzOuYR\n        adBJVoWZowDNTpKpk2RklZ7QaBO7XDv3uR7s_sf2g-bAjSYxYUGsqkNA9b3xV\n        W53am_UZZ3tZbFTIh557JICWKHlWj5uzeJXaw\",\n   \"e\":\"AQAB\"\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 6.1.1. Request using the \"request\" Request Parameter\n\nThe Client sends the Authorization Request to the Authorization Endpoint.\n\n\n\nThe following is a non-normative example of an Authorization Request using the `request` parameter (with line wraps within values for display purposes only):\n\n```\n  https://server.example.com/authorize?\n    response_type=code%20id_token\n    &client_id=s6BhdRkqt3\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb\n    &scope=openid\n    &state=af0ifjsldkj\n    &nonce=n-0S6_WzA2Mj\n    &request=eyJhbGciOiJSUzI1NiIsImtpZCI6ImsyYmRjIn0.ew0KICJpc3MiOiA\n    iczZCaGRSa3F0MyIsDQogImF1ZCI6ICJodHRwczovL3NlcnZlci5leGFtcGxlLmN\n    vbSIsDQogInJlc3BvbnNlX3R5cGUiOiAiY29kZSBpZF90b2tlbiIsDQogImNsaWV\n    udF9pZCI6ICJzNkJoZFJrcXQzIiwNCiAicmVkaXJlY3RfdXJpIjogImh0dHBzOi8\n    vY2xpZW50LmV4YW1wbGUub3JnL2NiIiwNCiAic2NvcGUiOiAib3BlbmlkIiwNCiA\n    ic3RhdGUiOiAiYWYwaWZqc2xka2oiLA0KICJub25jZSI6ICJuLTBTNl9XekEyTWo\n    iLA0KICJtYXhfYWdlIjogODY0MDAsDQogImNsYWltcyI6IA0KICB7DQogICAidXN\n    lcmluZm8iOiANCiAgICB7DQogICAgICJnaXZlbl9uYW1lIjogeyJlc3NlbnRpYWw\n    iOiB0cnVlfSwNCiAgICAgIm5pY2tuYW1lIjogbnVsbCwNCiAgICAgImVtYWlsIjo\n    geyJlc3NlbnRpYWwiOiB0cnVlfSwNCiAgICAgImVtYWlsX3ZlcmlmaWVkIjogeyJ\n    lc3NlbnRpYWwiOiB0cnVlfSwNCiAgICAgInBpY3R1cmUiOiBudWxsDQogICAgfSw\n    NCiAgICJpZF90b2tlbiI6IA0KICAgIHsNCiAgICAgImdlbmRlciI6IG51bGwsDQo\n    gICAgICJiaXJ0aGRhdGUiOiB7ImVzc2VudGlhbCI6IHRydWV9LA0KICAgICAiYWN\n    yIjogeyJ2YWx1ZXMiOiBbInVybjptYWNlOmluY29tbW9uOmlhcDpzaWx2ZXIiXX0\n    NCiAgICB9DQogIH0NCn0.nwwnNsk1-ZkbmnvsF6zTHm8CHERFMGQPhos-EJcaH4H\n    h-sMgk8ePrGhw_trPYs8KQxsn6R9Emo_wHwajyFKzuMXZFSZ3p6Mb8dkxtVyjoy2\n    GIzvuJT_u7PkY2t8QU9hjBcHs68PkgjDVTrG1uRTx0GxFbuPbj96tVuj11pTnmFC\n    UR6IEOXKYr7iGOCRB3btfJhM0_AKQUfqKnRlrRscc8Kol-cSLWoYE9l5QqholImz\n    jT_cMnNIznW9E7CDyWXTsO70xnB4SkG6pXfLSjLLlxmPGiyon_-Te111V8uE83Il\n    zCYIb_NMXvtTIVc1jpspnTSD7xMbpL-2QgwUsAlMGzw\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 6.2. Passing a Request Object by Reference\n\nThe `request_uri` Authorization Request parameter enables OpenID Connect requests to be passed by reference, rather than by value. This parameter is used identically to the `request` parameter, other than that the Request Object value is retrieved from the resource at the specified URL, rather than passed by value.\n\nThe `request_uri_parameter_supported` Discovery result indicates whether the OP supports this parameter. Should an OP not support this parameter and an RP uses it, the OP MUST return the `request_uri_not_supported` error.\n\nWhen the `request_uri` parameter is used, the OpenID Connect request parameter values contained in the referenced JWT supersede those passed using the OAuth 2.0 request syntax. However, parameters MAY also be passed using the OAuth 2.0 request syntax even when a `request_uri` is used; this would typically be done to enable a cached, pre-signed (and possibly pre-encrypted) Request Object value to be used containing the fixed request parameters, while parameters that can vary with each request, such as `state` and `nonce`, are passed as OAuth 2.0 parameters.\n\nSo that the request is a valid OAuth 2.0 Authorization Request, values for the `response_type` and `client_id` parameters MUST be included using the OAuth 2.0 request syntax, since they are REQUIRED by OAuth 2.0. The values for these parameters MUST match those in the Request Object, if present.\n\nEven if a `scope` parameter is present in the referenced Request Object, a `scope` parameter MUST always be passed using the OAuth 2.0 request syntax containing the `openid` scope value to indicate to the underlying OAuth 2.0 logic that this is an OpenID Connect request.\n\nServers MAY cache the contents of the resources referenced by Request URIs. If the contents of the referenced resource could ever change, the URI SHOULD include the base64url encoded SHA-256 hash of the referenced resource contents as the fragment component of the URI. If the fragment value used for a URI changes, that signals the server that any cached value for that URI with the old fragment value is no longer valid.\n\nNote that Clients MAY pre-register `request_uri` values using the `request_uris` parameter defined in Section 2.1 of the [OpenID Connect Dynamic Client Registration 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration) [OpenID.Registration] specification. OPs can require that `request_uri` values used be pre-registered with the `require_request_uri_registration` discovery parameter.\n\nThe entire Request URI MUST NOT exceed 512 ASCII characters.\n\nThe contents of the resource referenced by the URL MUST be a Request Object. The scheme used in the `request_uri` value MUST be `https`, unless the target Request Object is signed in a way that is verifiable by the Authorization Server. The `request_uri` value MUST be reachable by the Authorization Server, and SHOULD be reachable by the Client.\n\n\n\nThe following is a non-normative example of the contents of a Request Object resource that can be referenced by a `request_uri` (with line wraps within values for display purposes only):\n\n```\n  eyJhbGciOiJSUzI1NiIsImtpZCI6ImsyYmRjIn0.ew0KICJpc3MiOiAiczZCaGRSa3\n  F0MyIsDQogImF1ZCI6ICJodHRwczovL3NlcnZlci5leGFtcGxlLmNvbSIsDQogInJl\n  c3BvbnNlX3R5cGUiOiAiY29kZSBpZF90b2tlbiIsDQogImNsaWVudF9pZCI6ICJzNk\n  JoZFJrcXQzIiwNCiAicmVkaXJlY3RfdXJpIjogImh0dHBzOi8vY2xpZW50LmV4YW1w\n  bGUub3JnL2NiIiwNCiAic2NvcGUiOiAib3BlbmlkIiwNCiAic3RhdGUiOiAiYWYwaW\n  Zqc2xka2oiLA0KICJub25jZSI6ICJuLTBTNl9XekEyTWoiLA0KICJtYXhfYWdlIjog\n  ODY0MDAsDQogImNsYWltcyI6IA0KICB7DQogICAidXNlcmluZm8iOiANCiAgICB7DQ\n  ogICAgICJnaXZlbl9uYW1lIjogeyJlc3NlbnRpYWwiOiB0cnVlfSwNCiAgICAgIm5p\n  Y2tuYW1lIjogbnVsbCwNCiAgICAgImVtYWlsIjogeyJlc3NlbnRpYWwiOiB0cnVlfS\n  wNCiAgICAgImVtYWlsX3ZlcmlmaWVkIjogeyJlc3NlbnRpYWwiOiB0cnVlfSwNCiAg\n  ICAgInBpY3R1cmUiOiBudWxsDQogICAgfSwNCiAgICJpZF90b2tlbiI6IA0KICAgIH\n  sNCiAgICAgImdlbmRlciI6IG51bGwsDQogICAgICJiaXJ0aGRhdGUiOiB7ImVzc2Vu\n  dGlhbCI6IHRydWV9LA0KICAgICAiYWNyIjogeyJ2YWx1ZXMiOiBbInVybjptYWNlOm\n  luY29tbW9uOmlhcDpzaWx2ZXIiXX0NCiAgICB9DQogIH0NCn0.nwwnNsk1-Zkbmnvs\n  F6zTHm8CHERFMGQPhos-EJcaH4Hh-sMgk8ePrGhw_trPYs8KQxsn6R9Emo_wHwajyF\n  KzuMXZFSZ3p6Mb8dkxtVyjoy2GIzvuJT_u7PkY2t8QU9hjBcHs68PkgjDVTrG1uRTx\n  0GxFbuPbj96tVuj11pTnmFCUR6IEOXKYr7iGOCRB3btfJhM0_AKQUfqKnRlrRscc8K\n  ol-cSLWoYE9l5QqholImzjT_cMnNIznW9E7CDyWXTsO70xnB4SkG6pXfLSjLLlxmPG\n  iyon_-Te111V8uE83IlzCYIb_NMXvtTIVc1jpspnTSD7xMbpL-2QgwUsAlMGzw\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 6.2.1. URL Referencing the Request Object\n\nThe Client stores the Request Object resource either locally or remotely at a URL the Server can access. This URL is the Request URI, `request_uri`.\n\nIf the Request Object includes requested values for Claims, it MUST NOT be revealed to anybody but the Authorization Server. As such, the `request_uri` MUST have appropriate entropy for its lifetime. It is RECOMMENDED that it be removed if it is known that it will not be used again or after a reasonable timeout unless access control measures are taken.\n\nThe following is a non-normative example of a Request URI value (with line wraps within values for display purposes only):\n\n```\n  https://client.example.org/request.jwt#\n    GkurKxf5T0Y-mnPFCHqWOMiZi4VS138cQO_V7PZHAdM\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 6.2.2. Request using the \"request_uri\" Request Parameter\n\nThe Client sends the Authorization Request to the Authorization Endpoint.\n\nThe following is a non-normative example of an Authorization Request using the `request_uri` parameter (with line wraps within values for display purposes only):\n\n```\n  https://server.example.com/authorize?\n    response_type=code%20id_token\n    &client_id=s6BhdRkqt3\n    &request_uri=https%3A%2F%2Fclient.example.org%2Frequest.jwt\n    %23GkurKxf5T0Y-mnPFCHqWOMiZi4VS138cQO_V7PZHAdM\n    &state=af0ifjsldkj&nonce=n-0S6_WzA2Mj\n    &scope=openid\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 6.2.3. Authorization Server Fetches Request Object\n\nUpon receipt of the Request, the Authorization Server MUST send an HTTP `GET` request to the `request_uri` to retrieve the referenced Request Object, unless it is already cached, and parse it to recreate the Authorization Request parameters.\n\nNote that the RP SHOULD use a unique URI for each request utilizing distinct parameters, or otherwise prevent the Authorization Server from caching the `request_uri`.\n\nThe following is a non-normative example of this fetch process:\n\n```\n  GET /request.jwt HTTP/1.1\n  Host: client.example.org\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 6.2.4. \"request_uri\" Rationale\n\nThere are several reasons that one might choose to use the `request_uri` parameter:\n\n\n\n1. The set of request parameters can become large, and can exceed browser URI size limitations. Passing the request parameters by reference can solve this problem.\n2. Passing a `request_uri` value, rather than a complete request by value, can reduce request latency.\n3. Most requests for Claims from an RP are constant. The `request_uri` is a way of creating and sometimes also signing and encrypting a constant set of request parameters in advance. (The `request_uri` value becomes an \"artifact\" representing a particular fixed set of request parameters.)\n4. Pre-registering a fixed set of request parameters at Registration time enables OPs to cache and pre-validate the request parameters at Registration time, meaning they need not be retrieved at request time.\n5. Pre-registering a fixed set of request parameters at Registration time enables OPs to vet the contents of the request from consumer protection and other points of views, either itself or by utilizing a third party.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 6.3. Validating JWT-Based Requests\n\nWhen the `request` or `request_uri` Authorization Request parameters are used, additional steps must be performed to validate the Authentication Request beyond those specified in Sections [3.1.2.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequestValidation), [3.2.2.2](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitValidation), or [3.3.2.2](https://openid.net/specs/openid-connect-core-1_0.html#HybridValidation). These steps are to validate the JWT containing the Request Object and to validate the Request Object itself.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 6.3.1. Encrypted Request Object\n\nIf the Authorization Server has advertised JWE encryption algorithms in the `request_object_encryption_alg_values_supported` and `request_object_encryption_enc_values_supported` elements of its Discovery document [[OpenID.Discovery\\]](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Discovery), or has supplied encryption algorithms by other means, these are used by the Client to encrypt the JWT.\n\nThe Authorization Server MUST decrypt the JWT in accordance with the [JSON Web Encryption](https://openid.net/specs/openid-connect-core-1_0.html#JWE) [JWE] specification. The result MAY be either a signed or unsigned (plaintext) Request Object. In the former case, signature validation MUST be performed as defined in [Section 6.3.2](https://openid.net/specs/openid-connect-core-1_0.html#SignedRequestObject).\n\nThe Authorization Server MUST return an error if decryption fails.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 6.3.2. Signed Request Object\n\nTo perform Signature Validation, the `alg` Header Parameter in the JOSE Header MUST match the value of the `request_object_signing_alg` set during Client Registration [[OpenID.Registration\\]](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration) or a value that was pre-registered by other means. The signature MUST be validated against the appropriate key for that `client_id` and algorithm.\n\nThe Authorization Server MUST return an error if signature validation fails.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 6.3.3. Request Parameter Assembly and Validation\n\nThe Authorization Server MUST assemble the set of Authorization Request parameters to be used from the Request Object value and the OAuth 2.0 Authorization Request parameters (minus the `request` or `request_uri` parameters). If the same parameter exists both in the Request Object and the OAuth Authorization Request parameters, the parameter in the Request Object is used. Using the assembled set of Authorization Request parameters, the Authorization Server then validates the request the normal manner for the flow being used, as specified in Sections [3.1.2.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequestValidation), [3.2.2.2](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitValidation), or [3.3.2.2](https://openid.net/specs/openid-connect-core-1_0.html#HybridValidation).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 7. Self-Issued OpenID Provider\n\nOpenID Connect supports Self-Issued OpenID Providers - personal, self-hosted OPs that issue self-signed ID Tokens. Self-Issued OPs use the special Issuer Identifier `https://self-issued.me`.\n\nThe messages used to communicate with Self-Issued OPs are mostly the same as those used to communicate with other OPs. Specifications for the few additional parameters used and for the values of some parameters in the Self-Issued case are defined in this section.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 7.1. Self-Issued OpenID Provider Discovery\n\nIf the input identifier for the discovery process contains the domain self-issued.me, dynamic discovery is not performed. Instead, then the following static configuration values are used:\n\n\n\n```\n  {\n   \"authorization_endpoint\":\n     \"openid:\",\n   \"issuer\":\n     \"https://self-issued.me\",\n   \"scopes_supported\":\n     [\"openid\", \"profile\", \"email\", \"address\", \"phone\"],\n   \"response_types_supported\":\n     [\"id_token\"],\n   \"subject_types_supported\":\n     [\"pairwise\"],\n   \"id_token_signing_alg_values_supported\":\n     [\"RS256\"],\n   \"request_object_signing_alg_values_supported\":\n     [\"none\", \"RS256\"]\n  }\n```\n\n\n\nNOTE: The OpenID Foundation plans to host the OpenID Provider site `https://self-issued.me/`, including its WebFinger service, so that performing discovery on it returns the above static discovery information, enabling RPs to not need any special processing for discovery of the Self-Issued OP. This site will be hosted on an experimental basis. Production implementations should not take a dependency upon it without a subsequent commitment by the OpenID Foundation to host the site in a manner intended for production use.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 7.2. Self-Issued OpenID Provider Registration\n\nWhen using a Self-Issued OP, registration is not required. The Client can proceed without registration as if it had registered with the OP and obtained the following Client Registration Response:\n\n\n\n> - client_id\n>\n>   `redirect_uri` value of the Client.\n>\n> - client_secret_expires_at\n>\n>   0\n\n\n\nNOTE: The OpenID Foundation plans to host the (stateless) endpoint `https://self-issued.me/registration/1.0/` that returns the response above, enabling RPs to not need any special processing for registration with the Self-Issued OP. This site will be hosted on an experimental basis. Production implementations should not take a dependency upon it without a subsequent commitment by the OpenID Foundation to host the site in a manner intended for production use.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 7.2.1. Providing Information with the \"registration\" Request Parameter\n\nOpenID Connect defines the following Authorization Request parameter to enable Clients to provide additional registration information to Self-Issued OpenID Providers:\n\n> - registration\n>\n>   OPTIONAL. This parameter is used by the Client to provide information about itself to a Self-Issued OP that would normally be provided to an OP during Dynamic Client Registration. The value is a JSON object containing Client metadata values, as defined in Section 2.1 of the [OpenID Connect Dynamic Client Registration 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration) [OpenID.Registration] specification. The `registration` parameter SHOULD NOT be used when the OP is not a Self-Issued OP.\n\n\n\nNone of this information is REQUIRED by Self-Issued OPs, so the use of this parameter is OPTIONAL.\n\nThe `registration` parameter value is represented in an OAuth 2.0 request as a UTF-8 encoded JSON object (which ends up being form-urlencoded when passed as an OAuth parameter). When used in a Request Object value, per [Section 6.1](https://openid.net/specs/openid-connect-core-1_0.html#RequestObject), the JSON object is used as the value of the `registration` member.\n\nThe Registration parameters that would typically be used in requests to Self-Issued OPs are `policy_uri`, `tos_uri`, and `logo_uri`. If the Client uses more than one Redirection URI, the `redirect_uris` parameter would be used to register them. Finally, if the Client is requesting encrypted responses, it would typically use the `jwks_uri`, `id_token_encrypted_response_alg` and `id_token_encrypted_response_enc` parameters.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 7.3. Self-Issued OpenID Provider Request\n\nThe Client sends the Authentication Request to the Authorization Endpoint with the following parameters:\n\n\n\n> - scope\n>\n>   REQUIRED. `scope` parameter value, as specified in [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint).\n>\n> - response_type\n>\n>   REQUIRED. Constant string value `id_token`.\n>\n> - client_id\n>\n>   REQUIRED. Client ID value for the Client, which in this case contains the `redirect_uri` value of the Client. Since the Client's `redirect_uri` URI value is communicated as the Client ID, a `redirect_uri` parameter is NOT REQUIRED to also be included in the request.\n>\n> - id_token_hint\n>\n>   OPTIONAL. `id_token_hint` parameter value, as specified in [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint). If the ID Token is encrypted to the Self-Issued OP, the `sub` (subject) of the signed ID Token MUST be sent as the `kid` (Key ID) of the JWE. Encrypting content to Self-Issued OPs is currently only supported when the OP's JWK key type is `RSA` and the encryption algorithm used is `RSA1_5`.\n>\n> - claims\n>\n>   OPTIONAL. `claims` parameter value, as specified in [Section 5.5](https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter).\n>\n> - registration\n>\n>   OPTIONAL. This parameter is used by the Client to provide information about itself to a Self-Issued OP that would normally be provided to an OP during Dynamic Client Registration, as specified in [Section 7.2.1](https://openid.net/specs/openid-connect-core-1_0.html#RegistrationParameter).\n>\n> - request\n>\n>   OPTIONAL. Request Object value, as specified in [Section 6.1](https://openid.net/specs/openid-connect-core-1_0.html#RequestObject). The Request Object MAY be encrypted to the Self-Issued OP by the Client. In this case, the `sub` (subject) of a previously issued ID Token for this Client MUST be sent as the `kid` (Key ID) of the JWE. Encrypting content to Self-Issued OPs is currently only supported when the OP's JWK key type is `RSA` and the encryption algorithm used is `RSA1_5`.\n\n\n\nOther parameters MAY be sent. Note that all Claims are returned in the ID Token.\n\nThe entire URL MUST NOT exceed 2048 ASCII characters.\n\nThe following is a non-normative example HTTP 302 redirect response by the Client, which triggers the User Agent to make an Authentication Request to the Self-Issued OpenID Provider (with line wraps within values for display purposes only):\n\n```\n  HTTP/1.1 302 Found\n  Location: openid://?\n    response_type=id_token\n    &client_id=https%3A%2F%2Fclient.example.org%2Fcb\n    &scope=openid%20profile\n    &state=af0ifjsldkj\n    &nonce=n-0S6_WzA2Mj\n    &registration=%7B%22logo_uri%22%3A%22https%3A%2F%2F\n      client.example.org%2Flogo.png%22%7D\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 7.4. Self-Issued OpenID Provider Response\n\nOpenID Connect defines the following Claim for use in Self-Issued OpenID Provider Responses:\n\n> - sub_jwk\n>\n>   REQUIRED. Public key used to check the signature of an ID Token issued by a Self-Issued OpenID Provider, as specified in [Section 7](https://openid.net/specs/openid-connect-core-1_0.html#SelfIssued). The key is a bare key in JWK [[JWK\\]](https://openid.net/specs/openid-connect-core-1_0.html#JWK) format (not an X.509 certificate value). The `sub_jwk` value is a JSON object. Use of the `sub_jwk` Claim is NOT RECOMMENDED when the OP is not Self-Issued.\n\n\n\nThe Self-Issued OpenID Provider response is the same as the normal Implicit Flow response with the following refinements. Since it is an Implicit Flow response, the response parameters will be returned in the URL fragment component, unless a different Response Mode was specified.\n\n\n\n1. The `iss` (issuer) Claim Value is `https://self-issued.me`.\n2. A `sub_jwk` Claim is present, with its value being the public key used to check the signature of the ID Token.\n3. The `sub` (subject) Claim value is the base64url encoded representation of the thumbprint of the key in the `sub_jwk` Claim. This thumbprint value is computed as the SHA-256 hash of the octets of the UTF-8 representation of a JWK constructed containing only the REQUIRED members to represent the key, with the member names sorted into lexicographic order, and with no white space or line breaks. For instance, when the `kty` value is `RSA`, the member names `e`, `kty`, and `n` are the ones present in the constructed JWK used in the thumbprint computation and appear in that order; when the `kty` value is `EC`, the member names `crv`, `kty`, `x`, and `y` are present in that order. Note that this thumbprint calculation is the same as that defined in the JWK Thumbprint [[JWK.Thumbprint\\]](https://openid.net/specs/openid-connect-core-1_0.html#JWK.Thumbprint) specification.\n4. No Access Token is returned for accessing a UserInfo Endpoint, so all Claims returned MUST be in the ID Token.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 7.5. Self-Issued ID Token Validation\n\nTo validate the ID Token received, the Client MUST do the following:\n\n\n\n1. The Client MUST validate that the value of the `iss` (issuer) Claim is `https://self-isued.me`. If `iss` contains a different value, the ID Token is not Self-Issued, and instead it MUST be validated according to [Section 3.1.3.7](https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation).\n2. The Client MUST validate that the `aud` (audience) Claim contains the value of the `redirect_uri` that the Client sent in the Authentication Request as an audience.\n3. The Client MUST validate the signature of the ID Token according to [JWS](https://openid.net/specs/openid-connect-core-1_0.html#JWS) [JWS] using the algorithm specified in the `alg` Header Parameter of the JOSE Header, using the key in the `sub_jwk` Claim; the key is a bare key in JWK format (not an X.509 certificate value).\n4. The `alg` value SHOULD be the default of `RS256`. It MAY also be `ES256`.\n5. The Client MUST validate that the `sub` Claim value is the base64url encoded representation of the thumbprint of the key in the `sub_jwk` Claim, as specified in [Section 7.4](https://openid.net/specs/openid-connect-core-1_0.html#SelfIssuedResponse).\n6. The current time MUST be before the time represented by the `exp` Claim (possibly allowing for some small leeway to account for clock skew).\n7. The `iat` Claim can be used to reject tokens that were issued too far away from the current time, limiting the amount of time that nonces need to be stored to prevent attacks. The acceptable range is Client specific.\n8. If a nonce value was sent in the Authentication Request, a `nonce` Claim MUST be present and its value checked to verify that it is the same value as the one that was sent in the Authentication Request. The Client SHOULD check the `nonce` value for replay attacks. The precise method for detecting replay attacks is Client specific.\n\n\n\nThe following is a non-normative example of a base64url decoded Self-Issued ID Token (with line wraps within values for display purposes only):\n\n```\n  {\n   \"iss\": \"https://self-issued.me\",\n   \"sub\": \"NzbLsXh8uDCcd-6MNwXF4W_7noWXFZAfHkxZsRGC9Xs\",\n   \"aud\": \"https://client.example.org/cb\",\n   \"nonce\": \"n-0S6_WzA2Mj\",\n   \"exp\": 1311281970,\n   \"iat\": 1311280970,\n   \"sub_jwk\": {\n     \"kty\":\"RSA\",\n     \"n\": \"0vx7agoebGcQSuuPiLJXZptN9nndrQmbXEps2aiAFbWhM78LhWx\n     4cbbfAAtVT86zwu1RK7aPFFxuhDR1L6tSoc_BJECPebWKRXjBZCiFV4n3oknjhMs\n     tn64tZ_2W-5JsGY4Hc5n9yBXArwl93lqt7_RN5w6Cf0h4QyQ5v-65YGjQR0_FDW2\n     QvzqY368QQMicAtaSqzs8KJZgnYb9c7d0zgdAZHzu6qMQvRL5hajrn1n91CbOpbI\n     SD08qNLyrdkt-bFTWhAI4vMQFh6WeZu0fM4lFd2NcRwr3XPksINHaQ-G_xBniIqb\n     w0Ls1jF44-csFCur-kEgU8awapJzKnqDKgw\",\n     \"e\":\"AQAB\"\n    }\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 8. Subject Identifier Types\n\nA Subject Identifier is a locally unique and never reassigned identifier within the Issuer for the End-User, which is intended to be consumed by the Client. Two Subject Identifier types are defined by this specification:\n\n> - public\n>\n>   This provides the same `sub` (subject) value to all Clients. It is the default if the provider has no `subject_types_supported` element in its discovery document.\n>\n> - pairwise\n>\n>   This provides a different `sub` value to each Client, so as not to enable Clients to correlate the End-User's activities without permission.\n\n\n\nThe OpenID Provider's Discovery document SHOULD list its supported Subject Identifier types in the `subject_types_supported` element. If there is more than one type listed in the array, the Client MAY elect to provide its preferred identifier type using the `subject_type` parameter during Registration.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 8.1. Pairwise Identifier Algorithm\n\nWhen pairwise Subject Identifiers are used, the OpenID Provider MUST calculate a unique `sub` (subject) value for each Sector Identifier. The Subject Identifier value MUST NOT be reversible by any party other than the OpenID Provider.\n\nProviders that use pairwise `sub` values and support [Dynamic Client Registration](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration) [OpenID.Registration] SHOULD use the `sector_identifier_uri` parameter. It provides a way for a group of websites under common administrative control to have consistent pairwise `sub` values independent of the individual domain names. It also provides a way for Clients to change `redirect_uri` domains without having to reregister all of their users.\n\nIf the Client has not provided a value for `sector_identifier_uri` in [Dynamic Client Registration](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration) [OpenID.Registration], the Sector Identifier used for pairwise identifier calculation is the host component of the registered `redirect_uri`. If there are multiple hostnames in the registered `redirect_uris`, the Client MUST register a `sector_identifier_uri`.\n\nWhen a `sector_identifier_uri` is provided, the host component of that URL is used as the Sector Identifier for the pairwise identifier calculation. The value of the `sector_identifier_uri` MUST be a URL using the `https` scheme that points to a JSON file containing an array of `redirect_uri` values. The values of the registered `redirect_uris` MUST be included in the elements of the array.\n\nAny algorithm with the following properties can be used by OpenID Providers to calculate pairwise Subject Identifiers:\n\n- The Subject Identifier value MUST NOT be reversible by any party other than the OpenID Provider.\n- Distinct Sector Identifier values MUST result in distinct Subject Identifier values.\n- The algorithm MUST be deterministic.\n\n\n\nThree example methods are:\n\n1. The Sector Identifier can be concatenated with a local account ID and a salt value that is kept secret by the Provider. The concatenated string is then hashed using an appropriate algorithm.\n\n   Calculate `sub` = SHA-256 ( sector_identifier || local_account_id || salt ).\n\n   \n\n2. The Sector Identifier can be concatenated with a local account ID and a salt value that is kept secret by the Provider. The concatenated string is then encrypted using an appropriate algorithm.\n\n   Calculate `sub` = AES-128 ( sector_identifier || local_account_id || salt ).\n\n   \n\n3. The Issuer creates a Globally Unique Identifier (GUID) for the pair of Sector Identifier and local account ID and stores this value.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 9. Client Authentication\n\nThis section defines a set of Client Authentication methods that are used by Clients to authenticate to the Authorization Server when using the Token Endpoint. During Client Registration, the RP (Client) MAY register a Client Authentication method. If no method is registered, the default method is `client_secret_basic`.\n\nThese Client Authentication methods are:\n\n\n\n> - client_secret_basic\n>\n>   Clients that have received a `client_secret` value from the Authorization Server authenticate with the Authorization Server in accordance with Section 2.3.1 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749] using the HTTP Basic authentication scheme.\n>\n> - client_secret_post\n>\n>   Clients that have received a `client_secret` value from the Authorization Server, authenticate with the Authorization Server in accordance with Section 2.3.1 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749] by including the Client Credentials in the request body.\n>\n> - client_secret_jwt\n>\n>   Clients that have received a `client_secret` value from the Authorization Server create a JWT using an HMAC SHA algorithm, such as HMAC SHA-256. The HMAC (Hash-based Message Authentication Code) is calculated using the octets of the UTF-8 representation of the `client_secret` as the shared key.\n>\n> - \n>\n>   The Client authenticates in accordance with [JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.JWT) [OAuth.JWT] and [Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions) [OAuth.Assertions]. The JWT MUST contain the following REQUIRED Claim Values and MAY contain the following OPTIONAL Claim Values:\n>\n> - \n>\n>   issREQUIRED. Issuer. This MUST contain the `client_id` of the OAuth Client.subREQUIRED. Subject. This MUST contain the `client_id` of the OAuth Client.audREQUIRED. Audience. The `aud` (audience) Claim. Value that identifies the Authorization Server as an intended audience. The Authorization Server MUST verify that it is an intended audience for the token. The Audience SHOULD be the URL of the Authorization Server's Token Endpoint.jtiREQUIRED. JWT ID. A unique identifier for the token, which can be used to prevent reuse of the token. These tokens MUST only be used once, unless conditions for reuse were negotiated between the parties; any such negotiation is beyond the scope of this specification.expREQUIRED. Expiration time on or after which the ID Token MUST NOT be accepted for processing.iatOPTIONAL. Time at which the JWT was issued.\n>\n> - \n>\n>   The JWT MAY contain other Claims. Any Claims used that are not understood MUST be ignored.\n>\n> - \n>\n>   The authentication token MUST be sent as the value of the [[OAuth.Assertions\\]](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions) `client_assertion` parameter.\n>\n> - \n>\n>   The value of the [[OAuth.Assertions\\]](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions) `client_assertion_type` parameter MUST be \"urn:ietf:params:oauth:client-assertion-type:jwt-bearer\", per [[OAuth.JWT\\]](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.JWT).\n>\n> - private_key_jwt\n>\n>   Clients that have registered a public key sign a JWT using that key. The Client authenticates in accordance with [JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.JWT) [OAuth.JWT] and [Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions) [OAuth.Assertions]. The JWT MUST contain the following REQUIRED Claim Values and MAY contain the following OPTIONAL Claim Values:\n>\n> - \n>\n>   issREQUIRED. Issuer. This MUST contain the `client_id` of the OAuth Client.subREQUIRED. Subject. This MUST contain the `client_id` of the OAuth Client.audREQUIRED. Audience. The `aud` (audience) Claim. Value that identifies the Authorization Server as an intended audience. The Authorization Server MUST verify that it is an intended audience for the token. The Audience SHOULD be the URL of the Authorization Server's Token Endpoint.jtiREQUIRED. JWT ID. A unique identifier for the token, which can be used to prevent reuse of the token. These tokens MUST only be used once, unless conditions for reuse were negotiated between the parties; any such negotiation is beyond the scope of this specification.expREQUIRED. Expiration time on or after which the ID Token MUST NOT be accepted for processing.iatOPTIONAL. Time at which the JWT was issued.\n>\n> - \n>\n>   The JWT MAY contain other Claims. Any Claims used that are not understood MUST be ignored.\n>\n> - \n>\n>   The authentication token MUST be sent as the value of the [[OAuth.Assertions\\]](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions) `client_assertion` parameter.\n>\n> - \n>\n>   The value of the [[OAuth.Assertions\\]](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions) `client_assertion_type` parameter MUST be \"urn:ietf:params:oauth:client-assertion-type:jwt-bearer\", per [[OAuth.JWT\\]](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.JWT).\n>\n> - \n>\n>   For example (with line wraps within values for display purposes only):`  POST /token HTTP/1.1  Host: server.example.com  Content-Type: application/x-www-form-urlencoded   grant_type=authorization_code&    code=i1WsRn1uB1&    client_id=s6BhdRkqt3&    client_assertion_type=    urn%3Aietf%3Aparams%3Aoauth%3Aclient-assertion-type%3Ajwt-bearer&    client_assertion=PHNhbWxwOl ... ZT `\n>\n> - none\n>\n>   The Client does not authenticate itself at the Token Endpoint, either because it uses only the Implicit Flow (and so does not use the Token Endpoint) or because it is a Public Client with no Client Secret or other authentication mechanism.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 10. Signatures and Encryption\n\nDepending on the transport through which the messages are sent, the integrity of the message might not be guaranteed and the originator of the message might not be authenticated. To mitigate these risks, ID Token, UserInfo Response, Request Object, and Client Authentication JWT values can utilize [JSON Web Signature (JWS)](https://openid.net/specs/openid-connect-core-1_0.html#JWS) [JWS] to sign their contents. To achieve message confidentiality, these values can also use [JSON Web Encryption (JWE)](https://openid.net/specs/openid-connect-core-1_0.html#JWE) [JWE] to encrypt their contents.\n\nWhen the message is both signed and encrypted, it MUST be signed first and then encrypted, per [Section 16.14](https://openid.net/specs/openid-connect-core-1_0.html#SigningOrder), with the result being a Nested JWT, as specified in [[JWT\\]](https://openid.net/specs/openid-connect-core-1_0.html#JWT). Note that all JWE encryption methods perform integrity checking.\n\nThe OP advertises its supported signing and encryption algorithms in its Discovery document, or may supply this information by other means. The RP declares its required signing and encryption algorithms in its Dynamic Registration request, or may communicate this information by other means.\n\nThe OP advertises its public keys via its Discovery document, or may supply this information by other means. The RP declares its public keys via its Dynamic Registration request, or may communicate this information by other means.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 10.1. Signing\n\nThe signing party MUST select a signature algorithm based on the algorithms supported by the recipient.\n\n\n\n> - Asymmetric Signatures\n>\n>   When using RSA or ECDSA Signatures, the `alg` Header Parameter value of the JOSE Header MUST be set to an appropriate algorithm as defined in [JSON Web Algorithms](https://openid.net/specs/openid-connect-core-1_0.html#JWA) [JWA]. The private key used to sign the content MUST be associated with a public key used for signature verification published by the sender in its JWK Set document. If there are multiple keys in the referenced JWK Set document, a `kid` value MUST be provided in the JOSE Header. The key usage of the respective keys MUST support signing.\n>\n> - Symmetric Signatures\n>\n>   When using MAC-based signatures, the `alg` Header Parameter value of the JOSE Header MUST be set to a MAC algorithm, as defined in [JSON Web Algorithms](https://openid.net/specs/openid-connect-core-1_0.html#JWA) [JWA]. The MAC key used is the octets of the UTF-8 representation of the `client_secret` value. See [Section 16.19](https://openid.net/specs/openid-connect-core-1_0.html#SymmetricKeyEntropy) for a discussion of entropy requirements for `client_secret` values. Symmetric signatures MUST NOT be used by public (non-confidential) Clients because of their inability to keep secrets.\n\n\n\nSee [Section 16.20](https://openid.net/specs/openid-connect-core-1_0.html#NeedForSignedRequests) for Security Considerations about the need for signed requests.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 10.1.1. Rotation of Asymmetric Signing Keys\n\nRotation of signing keys can be accomplished with the following approach. The signer publishes its keys in a JWK Set at its `jwks_uri` location and includes the `kid` of the signing key in the JOSE Header of each message to indicate to the verifier which key is to be used to validate the signature. Keys can be rolled over by periodically adding new keys to the JWK Set at the `jwks_uri` location. The signer can begin using a new key at its discretion and signals the change to the verifier using the `kid` value. The verifier knows to go back to the `jwks_uri` location to re-retrieve the keys when it sees an unfamiliar `kid` value. The JWK Set document at the `jwks_uri` SHOULD retain recently decommissioned signing keys for a reasonable period of time to facilitate a smooth transition.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 10.2. Encryption\n\nThe encrypting party MUST select an encryption algorithm based on the algorithms supported by the recipient.\n\n\n\n> - Asymmetric Encryption: RSA\n>\n>   The public key to which the content was encrypted MUST be a public key used for encryption published by the recipient in its JWK Set document. If there are multiple keys in the referenced JWK Set document, a `kid` value MUST be provided in the JOSE Header. Use the supported RSA encryption algorithm to encrypt a random Content Encryption Key to be used for encrypting the signed JWT. The key usage of the respective keys MUST include encryption.\n>\n> - Asymmetric Encryption: Elliptic Curve\n>\n>   Create an ephemeral Elliptic Curve public key for the `epk` element of the JOSE Header. The other public key used for the key agreement computation MUST be a public key published by the recipient in its JWK Set document. If there are multiple keys in the referenced JWK Set document, a `kid` value MUST be provided in the JOSE Header. Use the ECDH-ES algorithm to agree upon a Content Encryption Key to be used for encrypting the signed JWT. The key usage of the respective keys MUST support encryption.\n>\n> - Symmetric Encryption\n>\n>   The symmetric encryption key is derived from the `client_secret` value by using a left truncated SHA-2 hash of the octets of the UTF-8 representation of the `client_secret`. For keys of 256 or fewer bits, SHA-256 is used; for keys of 257-384 bits, SHA-384 is used; for keys of 385-512 bits, SHA-512 is used. The hash value MUST be left truncated to the appropriate bit length for the AES key wrapping or direct encryption algorithm used, for instance, truncating the SHA-256 hash to 128 bits for `A128KW`. If a symmetric key with greater than 512 bits is needed, a different method of deriving the key from the `client_secret` would have to be defined by an extension. Symmetric encryption MUST NOT be used by public (non-confidential) Clients because of their inability to keep secrets.\n\n\n\nSee [Section 16.21](https://openid.net/specs/openid-connect-core-1_0.html#NeedForEncryptedRequests) for Security Considerations about the need for encrypted requests.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 10.2.1. Rotation of Asymmetric Encryption Keys\n\nRotating encryption keys necessarily uses a different process than the one for signing keys because the encrypting party starts the process and thus cannot rely on a change in `kid` as a signal that keys need to change. The encrypting party still uses the `kid` Header Parameter in the JWE to tell the decrypting party which private key to use to decrypt, however, the encrypting party needs to first select the most appropriate key from those provided in the JWK Set at the recipient's `jwks_uri` location.\n\nTo rotate keys, the decrypting party can publish new keys at its `jwks_uri` location and remove from the JWK Set those that are being decommissioned. The `jwks_uri` SHOULD include a `Cache-Control` header in the response that contains a `max-age` directive, as defined in [RFC 2616](https://openid.net/specs/openid-connect-core-1_0.html#RFC2616) [RFC2616], which enables the encrypting party to safely cache the JWK Set and not have to re-retrieve the document for every encryption event. The decrypting party SHOULD remove decommissioned keys from the JWK Set referenced by `jwks_uri` but retain them internally for some reasonable period of time, coordinated with the cache duration, to facilitate a smooth transition between keys by allowing the encrypting party some time to obtain the new keys. The cache duration SHOULD also be coordinated with the issuance of new signing keys, as described in [Section 10.1.1](https://openid.net/specs/openid-connect-core-1_0.html#RotateSigKeys).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 11. Offline Access\n\nOpenID Connect defines the following `scope` value to request offline access:\n\n> - offline_access\n>\n>   OPTIONAL. This scope value requests that an OAuth 2.0 Refresh Token be issued that can be used to obtain an Access Token that grants access to the End-User's UserInfo Endpoint even when the End-User is not present (not logged in).\n\n\n\nWhen offline access is requested, a `prompt` parameter value of `consent` MUST be used unless other conditions for processing the request permitting offline access to the requested resources are in place. The OP MUST always obtain consent to returning a Refresh Token that enables offline access to the requested resources. A previously saved user consent is not always sufficient to grant offline access.\n\nUpon receipt of a scope parameter containing the `offline_access` value, the Authorization Server:\n\n- MUST ensure that the prompt parameter contains `consent` unless other conditions for processing the request permitting offline access to the requested resources are in place; unless one or both of these conditions are fulfilled, then it MUST ignore the `offline_access` request,\n- MUST ignore the `offline_access` request unless the Client is using a `response_type` value that would result in an Authorization Code being returned,\n- MUST explicitly receive or have consent for all Clients when the registered `application_type` is `web`,\n- SHOULD explicitly receive or have consent for all Clients when the registered `application_type` is `native`.\n\nThe use of Refresh Tokens is not exclusive to the `offline_access` use case. The Authorization Server MAY grant Refresh Tokens in other contexts that are beyond the scope of this specification.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 12. Using Refresh Tokens\n\nA request to the Token Endpoint can also use a Refresh Token by using the `grant_type` value `refresh_token`, as described in Section 6 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749]. This section defines the behaviors for OpenID Connect Authorization Servers when Refresh Tokens are used.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 12.1. Refresh Request\n\nTo refresh an Access Token, the Client MUST authenticate to the Token Endpoint using the authentication method registered for its `client_id`, as documented in [Section 9](https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication). The Client sends the parameters via HTTP `POST` to the Token Endpoint using Form Serialization, per [Section 13.2](https://openid.net/specs/openid-connect-core-1_0.html#FormSerialization).\n\nThe following is a non-normative example of a Refresh Request (with line wraps within values for display purposes only):\n\n```\n  POST /token HTTP/1.1\n  Host: server.example.com\n  Content-Type: application/x-www-form-urlencoded\n\n  client_id=s6BhdRkqt3\n    &client_secret=some_secret12345\n    &grant_type=refresh_token\n    &refresh_token=8xLOxBtZp8\n    &scope=openid%20profile\n```\n\nThe Authorization Server MUST validate the Refresh Token, MUST verify that it was issued to the Client, and must verify that the Client successfully authenticated it has a Client Authentication method.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 12.2. Successful Refresh Response\n\nUpon successful validation of the Refresh Token, the response body is the Token Response of [Section 3.1.3.3](https://openid.net/specs/openid-connect-core-1_0.html#TokenResponse) except that it might not contain an `id_token`.\n\nIf an ID Token is returned as a result of a token refresh request, the following requirements apply:\n\n- its `iss` Claim Value MUST be the same as in the ID Token issued when the original authentication occurred,\n- its `sub` Claim Value MUST be the same as in the ID Token issued when the original authentication occurred,\n- its `iat` Claim MUST represent the time that the new ID Token is issued,\n- its `aud` Claim Value MUST be the same as in the ID Token issued when the original authentication occurred,\n- if the ID Token contains an `auth_time` Claim, its value MUST represent the time of the original authentication - not the time that the new ID token is issued,\n- its `azp` Claim Value MUST be the same as in the ID Token issued when the original authentication occurred; if no `azp` Claim was present in the original ID Token, one MUST NOT be present in the new ID Token, and\n- otherwise, the same rules apply as apply when issuing an ID Token at the time of the original authentication.\n\n\n\nThe following is a non-normative example of a Refresh Response:\n\n```\n  HTTP/1.1 200 OK\n  Content-Type: application/json\n  Cache-Control: no-store\n  Pragma: no-cache\n\n  {\n   \"access_token\": \"TlBN45jURg\",\n   \"token_type\": \"Bearer\",\n   \"refresh_token\": \"9yNOxJtZa5\",\n   \"expires_in\": 3600\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 12.3. Refresh Error Response\n\nIf the Refresh Request is invalid or unauthorized, the Authorization Server returns the Token Error Response as defined in Section 5.2 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749].\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 13. Serializations\n\nMessages are serialized using one of the following methods:\n\n1. Query String Serialization\n2. Form Serialization\n3. JSON Serialization\n\nThis section describes the syntax of these serialization methods; other sections describe when they can and must be used. Note that not all methods can be used for all messages.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 13.1. Query String Serialization\n\nIn order to serialize the parameters using the Query String Serialization, the Client constructs the string by adding the parameters and values to the query component of a URL using the `application/x-www-form-urlencoded` format as defined by [[W3C.REC‑html401‑19991224\\]](https://openid.net/specs/openid-connect-core-1_0.html#W3C.REC-html401-19991224). Query String Serialization is typically used in HTTP `GET` requests. The same serialization method is also used when adding parameters to the fragment component of a URL.\n\nThe following is a non-normative example of this serialization (with line wraps within values for display purposes only):\n\n```\n  GET /authorize?\n    response_type=code\n    &scope=openid\n    &client_id=s6BhdRkqt3\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb HTTP/1.1\n  Host: server.example.com\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 13.2. Form Serialization\n\nParameters and their values are Form Serialized by adding the parameter names and values to the entity body of the HTTP request using the `application/x-www-form-urlencoded` format as defined by [[W3C.REC‑html401‑19991224\\]](https://openid.net/specs/openid-connect-core-1_0.html#W3C.REC-html401-19991224). Form Serialization is typically used in HTTP `POST` requests.\n\nThe following is a non-normative example of this serialization (with line wraps within values for display purposes only):\n\n```\n  POST /authorize HTTP/1.1\n  Host: server.example.com\n  Content-Type: application/x-www-form-urlencoded\n\n  response_type=code\n    &scope=openid\n    &client_id=s6BhdRkqt3\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 13.3. JSON Serialization\n\nThe parameters are serialized into a JSON object structure by adding each parameter at the highest structure level. Parameter names and string values are represented as JSON strings. Numerical values are represented as JSON numbers. Boolean values are represented as JSON booleans. Omitted parameters and parameters with no value SHOULD be omitted from the object and not represented by a JSON `null` value, unless otherwise specified. A parameter MAY have a JSON object or a JSON array as its value.\n\nThe following is a non-normative example of this serialization:\n\n```\n  {\n   \"access_token\": \"SlAV32hkKG\",\n   \"token_type\": \"Bearer\",\n   \"expires_in\": 3600,\n   \"refresh_token\": \"8xLOxBtZp8\"\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 14. String Operations\n\nProcessing some OpenID Connect messages requires comparing values in the messages to known values. For example, the Claim Names returned by the UserInfo Endpoint might be compared to specific Claim Names such as `sub`. Comparing Unicode strings, however, has significant security implications.\n\nTherefore, comparisons between JSON strings and other Unicode strings MUST be performed as specified below:\n\n1. Remove any JSON applied escaping to produce an array of Unicode code points.\n2. Unicode Normalization [[USA15\\]](https://openid.net/specs/openid-connect-core-1_0.html#USA15) MUST NOT be applied at any point to either the JSON string or to the string it is to be compared against.\n3. Comparisons between the two strings MUST be performed as a Unicode code point to code point equality comparison.\n\n\n\nIn several places, this specification uses space delimited lists of strings. In all such cases, a single ASCII space character (0x20) MUST be used as the delimiter.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 15. Implementation Considerations\n\nThis specification defines features used by both Relying Parties and OpenID Providers. It is expected that some OpenID Providers will require static, out-of-band configuration of RPs using them, whereas others will support dynamic usage by RPs without a pre-established relationship between them. For that reason, the mandatory-to-implement features for OPs are listed below in two groups: the first for all OPs and the second for \"Dynamic\" OpenID Providers.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 15.1. Mandatory to Implement Features for All OpenID Providers\n\nAll OpenID Providers MUST implement the following features defined in this specification. This list augments the set of features that are already listed elsewhere as being \"REQUIRED\" or are described with a \"MUST\", and so is not, by itself, a comprehensive set of implementation requirements for OPs.\n\n\n\n> - Signing ID Tokens with RSA SHA-256\n>\n>   OPs MUST support signing ID Tokens with the RSA SHA-256 algorithm (an `alg` value of `RS256`), unless the OP only supports returning ID Tokens from the Token Endpoint (as is the case for the Authorization Code Flow) and only allows Clients to register specifying `none` as the requested ID Token signing algorithm.\n>\n> - Prompt Parameter\n>\n>   OPs MUST support the `prompt` parameter, as defined in [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint), including the specified user interface behaviors such as `none` and `login`.\n>\n> - Display Parameter\n>\n>   OPs MUST support the `display` parameter, as defined in [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint). (Note that the minimum level of support required for this parameter is simply that its use must not result in an error.)\n>\n> - Preferred Locales\n>\n>   OPs MUST support requests for preferred languages and scripts for the user interface and for Claims via the `ui_locales` and `claims_locales` request parameters, as defined in [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint). (Note that the minimum level of support required for these parameters is simply to have their use not result in errors.)\n>\n> - Authentication Time\n>\n>   OPs MUST support returning the time at which the End-User authenticated via the `auth_time` Claim, when requested, as defined in [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken).\n>\n> - Maximum Authentication Age\n>\n>   OPs MUST support enforcing a maximum authentication age via the `max_age` parameter, as defined in [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint).\n>\n> - Authentication Context Class Reference\n>\n>   OPs MUST support requests for specific Authentication Context Class Reference values via the `acr_values` parameter, as defined in [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint). (Note that the minimum level of support required for this parameter is simply to have its use not result in an error.)\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 15.2. Mandatory to Implement Features for Dynamic OpenID Providers\n\nIn addition to the features listed above, OpenID Providers supporting dynamic establishment of relationships with RPs that they do not have a pre-configured relationship with MUST also implement the following features defined in this and related specifications.\n\n\n\n> - Response Types\n>\n>   These OpenID Providers MUST support the `id_token` Response Type and all that are not Self-Issued OPs MUST also support the `code` and `id_token token` Response Types.\n>\n> - Discovery\n>\n>   These OPs MUST support Discovery, as defined in [OpenID Connect Discovery 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Discovery) [OpenID.Discovery].\n>\n> - Dynamic Registration\n>\n>   These OPs MUST support Dynamic Client Registration, as defined in [OpenID Connect Dynamic Client Registration 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration) [OpenID.Registration].\n>\n> - UserInfo Endpoint\n>\n>   All dynamic OPs that issue Access Tokens MUST support the UserInfo Endpoint, as defined in [Section 5.3](https://openid.net/specs/openid-connect-core-1_0.html#UserInfo). (Self-Issued OPs do not issue Access Tokens.)\n>\n> - Public Keys Published as Bare Keys\n>\n>   These OPs MUST publish their public keys as bare JWK keys (which MAY also be accompanied by X.509 representations of those keys).\n>\n> - Request URI\n>\n>   These OPs MUST support requests made using a Request Object value that is retrieved from a Request URI that is provided with the `request_uri` parameter, as defined in [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint).\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 15.3. Discovery and Registration\n\nSome OpenID Connect installations can use a pre-configured set of OpenID Providers and/or Relying Parties. In those cases, it might not be necessary to support dynamic discovery of information about identities or services or dynamic registration of Clients.\n\nHowever, if installations choose to support unanticipated interactions between Relying Parties and OpenID Providers that do not have pre-configured relationships, they SHOULD accomplish this by implementing the facilities defined in the [OpenID Connect Discovery 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Discovery) [OpenID.Discovery] and [OpenID Connect Dynamic Client Registration 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration) [OpenID.Registration] specifications.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 15.4. Mandatory to Implement Features for Relying Parties\n\nIn general, it is up to Relying Parties which features they use when interacting with OpenID Providers. However, some choices are dictated by the nature of their OAuth Client, such as whether it is a Confidential Client, capable of keeping secrets, in which case the Authorization Code Flow may be appropriate, or whether it is a Public Client, for instance, a User Agent Based Application or a statically registered Native Application, in which case the Implicit Flow may be appropriate.\n\nWhen using OpenID Connect features, those listed as being \"REQUIRED\" or are described with a \"MUST\" are mandatory to implement, when used by a Relying Party. Likewise, those features that are described as \"OPTIONAL\" need not be used or supported unless they provide value in the particular application context. Finally, when interacting with OpenID Providers that support Discovery, the OP's Discovery document can be used to dynamically determine which OP features are available for use by the RP.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 15.5. Implementation Notes\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 15.5.1. Authorization Code Implementation Notes\n\nWhen using the Authorization Code or Hybrid flows, an ID Token is returned from the Token Endpoint in response to a Token Request using an Authorization Code. Some implementations may choose to encode state about the ID Token to be returned in the Authorization Code value. Others may use the Authorization Code value as an index into a database storing this state.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 15.5.2. Nonce Implementation Notes\n\nThe `nonce` parameter value needs to include per-session state and be unguessable to attackers. One method to achieve this for Web Server Clients is to store a cryptographically random value as an HttpOnly session cookie and use a cryptographic hash of the value as the `nonce` parameter. In that case, the `nonce` in the returned ID Token is compared to the hash of the session cookie to detect ID Token replay by third parties. A related method applicable to JavaScript Clients is to store the cryptographically random value in HTML5 local storage and use a cryptographic hash of this value.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 15.5.3. Redirect URI Fragment Handling Implementation Notes\n\nWhen response parameters are returned in the Redirection URI fragment value, the Client needs to have the User Agent parse the fragment encoded values and pass them to on to the Client's processing logic for consumption. User Agents that have direct access to cryptographic APIs may be able to be self-contained, for instance, with all Client code being written in JavaScript.\n\nHowever, if the Client does not run entirely in the User Agent, one way to achieve this is to post them to a Web Server Client for validation.\n\nThe following is an example of a JavaScript file that a Client might host at its `redirect_uri`. This is loaded by the redirect from the Authorization Server. The fragment component is parsed and then sent by `POST` to a URI that will validate and use the information received.\n\nFollowing is a non-normative example of a Redirect URI response:\n\n```\n  GET /cb HTTP/1.1\n  Host: client.example.org\n\n  HTTP/1.1 200 OK\n  Content-Type: text/html\n\n  <script type=\"text/javascript\">\n\n  // First, parse the query string\n  var params = {}, postBody = location.hash.substring(1),\n      regex = /([^&=]+)=([^&]*)/g, m;\n  while (m = regex.exec(postBody)) {\n    params[decodeURIComponent(m[1])] = decodeURIComponent(m[2]);\n  }\n\n  // And send the token over to the server\n  var req = new XMLHttpRequest();\n  // using POST so query isn't logged\n  req.open('POST', 'https://' + window.location.host +\n                   '/catch_response', true);\n  req.setRequestHeader('Content-Type',\n                       'application/x-www-form-urlencoded');\n\n  req.onreadystatechange = function (e) {\n    if (req.readyState == 4) {\n      if (req.status == 200) {\n  // If the response from the POST is 200 OK, perform a redirect\n        window.location = 'https://'\n          + window.location.host + '/redirect_after_login'\n      }\n  // if the OAuth response is invalid, generate an error message\n      else if (req.status == 400) {\n        alert('There was an error processing the token')\n      } else {\n        alert('Something other than 200 was returned')\n      }\n    }\n  };\n  req.send(postBody);\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 15.6. Compatibility Notes\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 15.6.1. Pre-Final IETF Specifications\n\nImplementers should be aware that this specification uses several IETF specifications that are not yet final specifications. Those specifications are:\n\n- [JSON Web Token (JWT) draft -25](https://openid.net/specs/openid-connect-core-1_0.html#JWT) [JWT]\n- [JSON Web Signature (JWS) draft -31](https://openid.net/specs/openid-connect-core-1_0.html#JWS) [JWS]\n- [JSON Web Encryption (JWE) draft -31](https://openid.net/specs/openid-connect-core-1_0.html#JWE) [JWE]\n- [JSON Web Key (JWK) draft -31](https://openid.net/specs/openid-connect-core-1_0.html#JWK) [JWK]\n- [JSON Web Algorithms draft -31](https://openid.net/specs/openid-connect-core-1_0.html#JWA) [JWA]\n- [Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants draft -17](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions) [OAuth.Assertions]\n- [JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants draft -10](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.JWT) [OAuth.JWT]\n\n\n\nWhile every effort will be made to prevent breaking changes to these specifications, should they occur, OpenID Connect implementations should continue to use the specifically referenced draft versions above in preference to the final versions, unless using a possible future OpenID Connect profile or specification that updates some or all of these references.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 15.6.2. Google \"iss\" Value\n\nImplementers may want to be aware that, as of the time of this writing, Google's deployed OpenID Connect implementation issues ID Tokens that omit the required `https://` scheme prefix from the `iss` (issuer) Claim Value. Relying Party implementations wishing to work with Google will therefore need to have code to work around this, until such time as their implementation is updated. Any such workaround code should be written in a manner that will not break at such point Google adds the missing prefix to their issuer values.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 15.7. Related Specifications and Implementer's Guides\n\nThese related OPTIONAL specifications MAY be used in combination with this specification to provide additional functionality:\n\n- [OpenID Connect Discovery 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Discovery) [OpenID.Discovery] - Defines how Relying Parties dynamically discover information about OpenID Providers\n- [OpenID Connect Dynamic Client Registration 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration) [OpenID.Registration] - Defines how Relying Parties dynamically register with OpenID Providers\n- [OpenID Connect Session Management 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Session) [OpenID.Session] - Defines how to manage OpenID Connect sessions, including logout functionality\n- [OAuth 2.0 Form Post Response Mode](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Post) [OAuth.Post] - Defines how to return OAuth 2.0 Authorization Response parameters (including OpenID Connect Authentication Response parameters) using HTML form values that are auto-submitted by the User Agent using HTTP `POST`\n\n\n\nThese implementer's guides are intended to serve as self-contained references for implementers of basic Web-based Relying Parties:\n\n- [OpenID Connect Basic Client Implementer's Guide 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Basic) [OpenID.Basic] - Implementer's guide containing a subset of this specification that is intended for use by basic Web-based Relying Parties using the OAuth Authorization Code Flow\n- [OpenID Connect Implicit Client Implementer's Guide 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Implicit) [OpenID.Implicit] - Implementer's guide containing a subset of this specification that is intended for use by basic Web-based Relying Parties using the OAuth Implicit Flow\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16. Security Considerations\n\nThis specification references the security considerations defined in Section 10 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749], and Section 5 of [OAuth 2.0 Bearer Token Usage](https://openid.net/specs/openid-connect-core-1_0.html#RFC6750) [RFC6750]. Furthermore, the [OAuth 2.0 Threat Model and Security Considerations](https://openid.net/specs/openid-connect-core-1_0.html#RFC6819) [RFC6819] specification provides an extensive list of threats and controls that apply to this specification as well, given that it is based upon OAuth 2.0. [ISO/IEC 29115](https://openid.net/specs/openid-connect-core-1_0.html#ISO29115) [ISO29115] also provides threats and controls that implementers need to take into account. Implementers are highly advised to read these references in detail and apply the countermeasures described therein.\n\nIn addition, the following list of attack vectors and remedies are also considered.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.1. Request Disclosure\n\nIf appropriate measures are not taken, a request might be disclosed to an attacker, posing security and privacy threats.\n\nIn addition to what is stated in Section 5.1.1 of [[RFC6819\\]](https://openid.net/specs/openid-connect-core-1_0.html#RFC6819), this standard provides a way to provide the confidentiality of the request end to end through the use of `request` or `request_uri` parameters, where the content of the `request` is an encrypted JWT with the appropriate key and cipher. This protects even against a compromised User Agent in the case of indirect request.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.2. Server Masquerading\n\nA malicious Server might masquerade as the legitimate server using various means. To detect such an attack, the Client needs to authenticate the server.\n\nIn addition to what is stated in Section 5.1.2 of [[RFC6819\\]](https://openid.net/specs/openid-connect-core-1_0.html#RFC6819), this standard provides a way to authenticate the Server through either the use of Signed or Encrypted JWTs with an appropriate key and cipher.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.3. Token Manufacture/Modification\n\nAn Attacker might generate a bogus token or modify the token contents (such as Claims values or the signature) of an existing parseable token, causing the RP to grant inappropriate access to the Client. For example, an Attacker might modify the parseable token to extend the validity period; a Client might modify the parseable token to have access to information that they should not be able to view.\n\nThere are two ways to mitigate this attack:\n\n\n\n1. The token can be digitally signed by the OP. The Relying Party SHOULD validate the digital signature to verify that it was issued by a legitimate OP.\n2. The token can be sent over a protected channel such as TLS. See [Section 16.17](https://openid.net/specs/openid-connect-core-1_0.html#TLSRequirements) for more information on using TLS. In this specification, the token is always sent over a TLS protected channel. Note however, that this measure is only a defense against third party attackers and is not applicable to the case where the Client is the attacker.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.4. Access Token Disclosure\n\nAccess Tokens are credentials used to access Protected Resources, as defined in Section 1.4 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749]. Access Tokens represent an End-User's authorization and MUST NOT be exposed to unauthorized parties.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.5. Server Response Disclosure\n\nThe server response might contain authentication data and Claims that include sensitive Client information. Disclosure of the response contents can make the Client vulnerable to other types of attacks.\n\nThe server response disclosure can be mitigated in the following two ways:\n\n1. Using the `code` Response Type. The response is sent over a TLS protected channel, where the Client is authenticated by the `client_id` and `client_secret`.\n2. For other Response Types, the signed response can be encrypted with the Client's public key or a shared secret as an encrypted JWT with an appropriate key and cipher.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.6. Server Response Repudiation\n\nA response might be repudiated by the server if the proper mechanisms are not in place. For example, if a Server does not digitally sign a response, the Server can claim that it was not generated through the services of the Server.\n\nTo mitigate this threat, the response MAY be digitally signed by the Server using a key that supports non-repudiation. The Client SHOULD validate the digital signature to verify that it was issued by a legitimate Server and its integrity is intact.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.7. Request Repudiation\n\nSince it is possible for a compromised or malicious Client to send a request to the wrong party, a Client that was authenticated using only a bearer token can repudiate any transaction.\n\nTo mitigate this threat, the Server MAY require that the request be digitally signed by the Client using a key that supports non-repudiation. The Server SHOULD validate the digital signature to verify that it was issued by a legitimate Client and the integrity is intact.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.8. Access Token Redirect\n\nAn Attacker uses the Access Token generated for one resource to obtain access to a second resource.\n\nTo mitigate this threat, the Access Token SHOULD be audience and scope restricted. One way of implementing it is to include the identifier of the resource for whom it was generated as audience. The resource verifies that incoming tokens include its identifier as the audience of the token.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.9. Token Reuse\n\nAn Attacker attempts to use a one-time use token such as an Authorization Code that has already been used once with the intended Resource. To mitigate this threat, the token SHOULD include a timestamp and a short validity lifetime. The Relying Party then checks the timestamp and lifetime values to ensure that the token is currently valid.\n\nAlternatively, the server MAY record the state of the use of the token and check the status for each request.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.10. Eavesdropping or Leaking Authorization Codes (Secondary Authenticator Capture)\n\nIn addition to the attack patterns described in Section 4.4.1.1 of [[RFC6819\\]](https://openid.net/specs/openid-connect-core-1_0.html#RFC6819), an Authorization Code can be captured in the User Agent where the TLS session is terminated if the User Agent is infected by malware. However, capturing it is not useful as long as either Client Authentication or an encrypted response is used.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.11. Token Substitution\n\nToken Substitution is a class of attacks in which a malicious user swaps various tokens, including swapping an Authorization Code for a legitimate user with another token that the attacker has. One means of accomplishing this is for the attacker to copy a token out one session and use it in an HTTP message for a different session, which is easy to do when the token is available to the browser; this is known as the \"cut and paste\" attack.\n\nThe Implicit Flow of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749] is not designed to mitigate this risk. In Section 10.16, it normatively requires that any use of the authorization process as a form of delegated End-User authentication to the Client MUST NOT use the Implicit Flow without employing additional security mechanisms that enable the Client to determine whether the ID Token and Access Token were issued for its use.\n\nIn OpenID Connect, this is mitigated through mechanisms provided through the ID Token. The ID Token is a signed security token that provides Claims such as `iss` (issuer), `sub` (subject), `aud` (audience), `azp` (authorized party), `at_hash` (access token hash), and `c_hash` (code hash). Using the ID Token, the Client is capable of detecting the Token Substitution Attack.\n\nThe `c_hash` in the ID Token enables Clients to prevent Authorization Code substitution. The `at_hash` in the ID Token enables Clients to prevent Access Token substitution.\n\nAlso, a malicious user may attempt to impersonate a more privileged user by subverting the communication channel between the Authorization Endpoint and Client, or the Token Endpoint and Client, for example by swapping the Authorization Code or reordering the messages, to convince the Token Endpoint that the attacker's authorization grant corresponds to a grant sent on behalf of a more privileged user.\n\nFor the HTTP binding defined by this specification, the responses to Token Requests are bound to the corresponding requests by message order in HTTP, as both the response containing the token and requests are protected by TLS, which will detect and prevent packet reordering.\n\nWhen designing another binding of this specification to a protocol incapable of strongly binding Token Endpoint requests to responses, additional mechanisms to address this issue MUST be utilized. One such mechanism could be to include an ID Token with a `c_hash` Claim in the token request and response.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.12. Timing Attack\n\nA timing attack enables the attacker to obtain an unnecessary large amount of information through the elapsed time differences in the code paths taken by successful and unsuccessful decryption operations or successful and unsuccessful signature validation of a message. It can be used to reduce the effective key length of the cipher used.\n\nImplementations SHOULD NOT terminate the validation process at the instant of the finding an error but SHOULD continue running until all the octets have been processed to avoid this attack.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.13. Other Crypto Related Attacks\n\nThere are various crypto related attacks possible depending on the method used for encryption and signature / integrity checking. Implementers need to consult the Security Considerations for the [JWT](https://openid.net/specs/openid-connect-core-1_0.html#JWT) [JWT] specification and specifications that it references to avoid the vulnerabilities identified in these specifications.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.14. Signing and Encryption Order\n\nSignatures over encrypted text are not considered valid in many jurisdictions. Therefore, for integrity and non-repudiation, this specification requires signing the plain text JSON Claims, when signing is performed. If both signing and encryption are desired, it is performed on the JWS containing the signed Claims, with the result being a Nested JWT, as specified in [[JWT\\]](https://openid.net/specs/openid-connect-core-1_0.html#JWT). Note that since all JWE encryption algorithms provide integrity protection, there is no need to separately sign the encrypted content.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.15. Issuer Identifier\n\nOpenID Connect supports multiple Issuers per Host and Port combination. The issuer returned by discovery MUST exactly match the value of `iss` in the ID Token.\n\nOpenID Connect treats the path component of any Issuer URI as being part of the Issuer Identifier. For instance, the subject \"1234\" with an Issuer Identifier of \"https://example.com\" is not equivalent to the subject \"1234\" with an Issuer Identifier of \"https://example.com/sales\".\n\nIt is RECOMMENDED that only a single Issuer per host be used. However, if a host supports multiple tenants, multiple Issuers for that host may be needed.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.16. Implicit Flow Threats\n\nIn the Implicit Flow, the Access Token is returned in the fragment component of the Client's `redirect_uri` through HTTPS, thus it is protected between the OP and the User Agent, and between the User Agent and the RP. The only place it can be captured is the User Agent where the TLS session is terminated, which is possible if the User Agent is infected by malware or under the control of a malicious party.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.17. TLS Requirements\n\nImplementations MUST support TLS. Which version(s) ought to be implemented will vary over time, and depend on the widespread deployment and known security vulnerabilities at the time of implementation. At the time of this writing, TLS version 1.2 [[RFC5246\\]](https://openid.net/specs/openid-connect-core-1_0.html#RFC5246) is the most recent version, but has very limited actual deployment, and might not be readily available in implementation toolkits. TLS version 1.0 [[RFC2246\\]](https://openid.net/specs/openid-connect-core-1_0.html#RFC2246) is the most widely deployed version, and will give the broadest interoperability.\n\nTo protect against information disclosure and tampering, confidentiality protection MUST be applied using TLS with a ciphersuite that provides confidentiality and integrity protection.\n\nWhenever TLS is used, a TLS server certificate check MUST be performed, per [RFC 6125](https://openid.net/specs/openid-connect-core-1_0.html#RFC6125) [RFC6125].\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.18. Lifetimes of Access Tokens and Refresh Tokens\n\nAccess Tokens might not be revocable by the Authorization Server. Access Token lifetimes SHOULD therefore be kept to single use or very short lifetimes.\n\nIf ongoing access to the UserInfo Endpoint or other Protected Resources is required, a Refresh Token can be used. The Client can then exchange the Refresh Token at the Token Endpoint for a fresh short-lived Access Token that can be used to access the resource.\n\nThe Authorization Server SHOULD clearly identify long-term grants to the User during Authorization. The Authorization Server SHOULD provide a mechanism for the End-User to revoke Access Tokens and Refresh Tokens granted to a Client.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.19. Symmetric Key Entropy\n\nIn [Section 10.1](https://openid.net/specs/openid-connect-core-1_0.html#Signing) and [Section 10.2](https://openid.net/specs/openid-connect-core-1_0.html#Encryption), keys are derived from the `client_secret` value. Thus, when used with symmetric signing or encryption operations, `client_secret` values MUST contain sufficient entropy to generate cryptographically strong keys. Also, `client_secret` values MUST also contain at least the minimum of number of octets required for MAC keys for the particular algorithm used. So for instance, for `HS256`, the `client_secret` value MUST contain at least 32 octets (and almost certainly SHOULD contain more, since `client_secret` values are likely to use a restricted alphabet).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.20. Need for Signed Requests\n\nIn some situations, Clients might need to use signed requests to ensure that the desired request parameters are delivered to the OP without having been tampered with. For instance, the `max_age` and `acr_values` provide more assurance about the nature of the authentication performed when delivered in signed requests.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.21. Need for Encrypted Requests\n\nIn some situations, knowing the contents of an OpenID Connect request can, in and of itself, reveal sensitive information about the End-User. For instance, knowing that the Client is requesting a particular Claim or that it is requesting that a particular authentication method be used can reveal sensitive information about the End-User. OpenID Connect enables requests to be encrypted to the OpenID Provider to prevent such potentially sensitive information from being revealed.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 17. Privacy Considerations\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 17.1. Personally Identifiable Information\n\nThe UserInfo Response typically contains Personally Identifiable Information (PII). As such, End-User consent for the release of the information for the specified purpose should be obtained at or prior to the authorization time in accordance with relevant regulations. The purpose of use is typically registered in association with the `redirect_uris`.\n\nOnly necessary UserInfo data should be stored at the Client and the Client SHOULD associate the received data with the purpose of use statement.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 17.2. Data Access Monitoring\n\nThe Resource Server SHOULD make End-Users' UserInfo access logs available to them so that they can monitor who accessed their data.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 17.3. Correlation\n\nTo protect the End-User from a possible correlation among Clients, the use of a Pairwise Pseudonymous Identifier (PPID) as the `sub` (subject) SHOULD be considered.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 17.4. Offline Access\n\nOffline access enables access to Claims when the user is not present, posing greater privacy risk than the Claims transfer when the user is present. Therefore, it is prudent to obtain explicit consent for offline access to resources. This specification mandates the use of the `prompt` parameter to obtain consent unless it is already known that the request complies with the conditions for processing the request in each jurisdiction.\n\nWhen an Access Token is returned via the User Agent using the Implicit Flow or Hybrid Flow, there is a greater risk of it being exposed to an attacker, who could later use it to access the UserInfo endpoint. If the Access Token does not enable offline access and the server can differentiate whether the Client request has been made offline or online, the risk will be substantially reduced. Therefore, this specification mandates ignoring the offline access request when the Access Token is transmitted through the User Agent. Note that differentiating between online and offline access from the server can be difficult especially for native clients. The server may well have to rely on heuristics. Also, the risk of exposure for the Access Token delivered through the User Agent for the Response Types of `code token` and `token` is the same. Thus, the implementations should be prepared to detect whether the Access Token was issued through the User Agent or directly from the Token Endpoint and deny offline access if the token was issued through the User Agent.\n\nNote that although these provisions require an explicit consent dialogue through the `prompt` parameter, the mere fact that the user pressed an \"accept\" button etc., might not constitute a valid consent. Developers should be aware that for the act of consent to be valid, typically, the impact of the terms have to be understood by the End-User, the consent must be freely given and not forced (i.e., other options have to be available), and the terms must fair and equitable. In general, it is advisable for the service to follow the required privacy principles in each jurisdiction and rely on other conditions for processing the request than simply explicit consent, as online self-service \"explicit consent\" often does not form a valid consent in some jurisdictions.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 18. IANA Considerations\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 18.1. JSON Web Token Claims Registration\n\nThis specification registers the Claims defined in [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) and [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken) in the IANA JSON Web Token Claims registry defined in [[JWT\\]](https://openid.net/specs/openid-connect-core-1_0.html#JWT).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 18.1.1. Registry Contents\n\n\n\n- Claim Name: `name`\n- Claim Description: Full name\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `given_name`\n- Claim Description: Given name(s) or first name(s)\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `family_name`\n- Claim Description: Surname(s) or last name(s)\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `middle_name`\n- Claim Description: Middle name(s)\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `nickname`\n- Claim Description: Casual name\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `preferred_username`\n- Claim Description: Shorthand name by which the End-User wishes to be referred to\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `profile`\n- Claim Description: Profile page URL\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `picture`\n- Claim Description: Profile picture URL\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `website`\n- Claim Description: Web page or blog URL\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `email`\n- Claim Description: Preferred e-mail address\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `email_verified`\n- Claim Description: True if the e-mail address has been verified; otherwise false\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `gender`\n- Claim Description: Gender\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `birthdate`\n- Claim Description: Birthday\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `zoneinfo`\n- Claim Description: Time zone\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `locale`\n- Claim Description: Locale\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `phone_number`\n- Claim Description: Preferred telephone number\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `phone_number_verified`\n- Claim Description: True if the phone number has been verified; otherwise false\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `address`\n- Claim Description: Preferred postal address\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `updated_at`\n- Claim Description: Time the information was last updated\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `azp`\n- Claim Description: Authorized party - the party to which the ID Token was issued\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken) of this document\n\n\n\n\n\n- Claim Name: `nonce`\n- Claim Description: Value used to associate a Client session with an ID Token\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken) of this document\n\n\n\n\n\n- Claim Name: `auth_time`\n- Claim Description: Time when the authentication occurred\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken) of this document\n\n\n\n\n\n- Claim Name: `at_hash`\n- Claim Description: Access Token hash value\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken) of this document\n\n\n\n\n\n- Claim Name: `c_hash`\n- Claim Description: Code hash value\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 3.3.2.11](https://openid.net/specs/openid-connect-core-1_0.html#HybridIDToken) of this document\n\n\n\n\n\n- Claim Name: `acr`\n- Claim Description: Authentication Context Class Reference\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken) of this document\n\n\n\n\n\n- Claim Name: `amr`\n- Claim Description: Authentication Methods References\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken) of this document\n\n\n\n\n\n- Claim Name: `sub_jwk`\n- Claim Description: Public key used to check the signature of an ID Token\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 7.4](https://openid.net/specs/openid-connect-core-1_0.html#SelfIssuedResponse) of this document\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 18.2. OAuth Parameters Registration\n\nThis specification registers the following parameters in the IANA OAuth Parameters registry defined in [RFC 6749](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749].\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 18.2.1. Registry Contents\n\n\n\n- Parameter name: `nonce`\n- Parameter usage location: Authorization Request\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint) of this document\n- Related information: None\n\n\n\n\n\n- Parameter name: `display`\n- Parameter usage location: Authorization Request\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint) of this document\n- Related information: None\n\n\n\n\n\n- Parameter name: `prompt`\n- Parameter usage location: Authorization Request\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint) of this document\n- Related information: None\n\n\n\n\n\n- Parameter name: `max_age`\n- Parameter usage location: Authorization Request\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint) of this document\n- Related information: None\n\n\n\n\n\n- Parameter name: `ui_locales`\n- Parameter usage location: Authorization Request\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint) of this document\n- Related information: None\n\n\n\n\n\n- Parameter name: `claims_locales`\n- Parameter usage location: Authorization Request\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 5.2](https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts) of this document\n- Related information: None\n\n\n\n\n\n- Parameter name: `id_token_hint`\n- Parameter usage location: Authorization Request\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint) of this document\n- Related information: None\n\n\n\n\n\n- Parameter name: `login_hint`\n- Parameter usage location: Authorization Request\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint) of this document\n- Related information: None\n\n\n\n\n\n- Parameter name: `acr_values`\n- Parameter usage location: Authorization Request\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint) of this document\n- Related information: None\n\n\n\n\n\n- Parameter name: `claims`\n- Parameter usage location: Authorization Request\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 5.5](https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter) of this document\n- Related information: None\n\n\n\n\n\n- Parameter name: `registration`\n- Parameter usage location: Authorization Request\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 7.2.1](https://openid.net/specs/openid-connect-core-1_0.html#RegistrationParameter) of this document\n- Related information: None\n\n\n\n\n\n- Parameter name: `request`\n- Parameter usage location: Authorization Request\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 6](https://openid.net/specs/openid-connect-core-1_0.html#JWTRequests) of this document\n- Related information: None\n\n\n\n\n\n- Parameter name: `request_uri`\n- Parameter usage location: Authorization Request\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 6](https://openid.net/specs/openid-connect-core-1_0.html#JWTRequests) of this document\n- Related information: None\n\n\n\n\n\n- Parameter name: `id_token`\n- Parameter usage location: Authorization Response, Access Token Response\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.3.3](https://openid.net/specs/openid-connect-core-1_0.html#TokenResponse) of this document\n- Related information: None\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 18.3. OAuth Extensions Error Registration\n\nThis specification registers the following errors in the IANA OAuth Extensions Error registry defined in [RFC 6749](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749].\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 18.3.1. Registry Contents\n\n\n\n- Error name: `interaction_required`\n- Error usage location: Authorization Endpoint\n- Related protocol extension: OpenID Connect\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError) of this document\n\n\n\n\n\n- Error name: `login_required`\n- Error usage location: Authorization Endpoint\n- Related protocol extension: OpenID Connect\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError) of this document\n\n\n\n\n\n- Error name: `account_selection_required`\n- Error usage location: Authorization Endpoint\n- Related protocol extension: OpenID Connect\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError) of this document\n\n\n\n\n\n- Error name: `consent_required`\n- Error usage location: Authorization Endpoint\n- Related protocol extension: OpenID Connect\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError) of this document\n\n\n\n\n\n- Error name: `invalid_request_uri`\n- Error usage location: Authorization Endpoint\n- Related protocol extension: OpenID Connect\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError) of this document\n\n\n\n\n\n- Error name: `invalid_request_object`\n- Error usage location: Authorization Endpoint\n- Related protocol extension: OpenID Connect\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError) of this document\n\n\n\n\n\n- Error name: `request_not_supported`\n- Error usage location: Authorization Endpoint\n- Related protocol extension: OpenID Connect\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError) of this document\n\n\n\n\n\n- Error name: `request_uri_not_supported`\n- Error usage location: Authorization Endpoint\n- Related protocol extension: OpenID Connect\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError) of this document\n\n\n\n\n\n- Error name: `registration_not_supported`\n- Error usage location: Authorization Endpoint\n- Related protocol extension: OpenID Connect\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError) of this document\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 19. References\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n### 19.1. Normative References\n\n| [CORS]                     | Opera Software ASA, “[Cross-Origin Resource Sharing](http://www.w3.org/TR/access-control/),” July 2010. |\n| -------------------------- | ------------------------------------------------------------ |\n| [E.164]                    | International Telecommunication Union, “[E.164: The international public telecommunication numbering plan](http://www.itu.int/rec/T-REC-E.164-201011-I/en),” 2010. |\n| [IANA.Language]            | Internet Assigned Numbers Authority (IANA), “[Language Subtag Registry](http://www.iana.org/assignments/language-subtag-registry),” 2005. |\n| [ISO29115]                 | International Organization for Standardization, “[ISO/IEC 29115:2013 -- Information technology - Security techniques - Entity authentication assurance framework](http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=45138),” ISO/IEC 29115, March 2013. |\n| [ISO3166-1]                | International Organization for Standardization, “[ISO 3166-1:1997. Codes for the representation of names of countries and their subdivisions -- Part 1: Country codes](http://www.w3.org/WAI/ER/IG/ert/iso639.htm),” 1997. |\n| [ISO639-1]                 | International Organization for Standardization, “ISO 639-1:2002. Codes for the representation of names of languages -- Part 1: Alpha-2 code,” 2002. |\n| [ISO8601-2004]             | International Organization for Standardization, “ISO 8601:2004. Data elements and interchange formats - Information interchange - Representation of dates and times,” 2004. |\n| [JWA]                      | Jones, M., “[JSON Web Algorithms (JWA)](http://tools.ietf.org/html/draft-ietf-jose-json-web-algorithms),” draft-ietf-jose-json-web-algorithms (work in progress), July 2014 ([HTML](http://tools.ietf.org/html/draft-ietf-jose-json-web-algorithms-31)). |\n| [JWE]                      | Jones, M., Rescorla, E., and J. Hildebrand, “[JSON Web Encryption (JWE)](http://tools.ietf.org/html/draft-ietf-jose-json-web-encryption),” draft-ietf-jose-json-web-encryption (work in progress), July 2014 ([HTML](http://tools.ietf.org/html/draft-ietf-jose-json-web-encryption-31)). |\n| [JWK]                      | Jones, M., “[JSON Web Key (JWK)](http://tools.ietf.org/html/draft-ietf-jose-json-web-key),” draft-ietf-jose-json-web-key (work in progress), July 2014 ([HTML](http://tools.ietf.org/html/draft-ietf-jose-json-web-key-31)). |\n| [JWS]                      | Jones, M., Bradley, J., and N. Sakimura, “[JSON Web Signature (JWS)](http://tools.ietf.org/html/draft-ietf-jose-json-web-signature),” draft-ietf-jose-json-web-signature (work in progress), July 2014 ([HTML](http://tools.ietf.org/html/draft-ietf-jose-json-web-signature-31)). |\n| [JWT]                      | Jones, M., Bradley, J., and N. Sakimura, “[JSON Web Token (JWT)](http://tools.ietf.org/html/draft-ietf-oauth-json-web-token),” draft-ietf-oauth-json-web-token (work in progress), July 2014 ([HTML](http://tools.ietf.org/html/draft-ietf-oauth-json-web-token-25)). |\n| [OAuth.Assertions]         | Campbell, B., Mortimore, C., Jones, M., and Y. Goland, “[Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants](http://tools.ietf.org/html/draft-ietf-oauth-assertions),” draft-ietf-oauth-assertions (work in progress), July 2014 ([HTML](http://tools.ietf.org/html/draft-ietf-oauth-assertions-17)). |\n| [OAuth.JWT]                | Jones, M., Campbell, B., and C. Mortimore, “[JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants](http://tools.ietf.org/html/draft-ietf-oauth-jwt-bearer),” draft-ietf-oauth-jwt-bearer (work in progress), July 2014 ([HTML](http://tools.ietf.org/html/draft-ietf-oauth-jwt-bearer-10)). |\n| [OAuth.Responses]          | de Medeiros, B., Ed., Scurtescu, M., Tarjan, P., and M. Jones, “[OAuth 2.0 Multiple Response Type Encoding Practices](http://openid.net/specs/oauth-v2-multiple-response-types-1_0.html),” February 2014. |\n| [OpenID.Discovery]         | Sakimura, N., Bradley, J., Jones, M., and E. Jay, “[OpenID Connect Discovery 1.0](http://openid.net/specs/openid-connect-discovery-1_0.html),” November 2014. |\n| [OpenID.Registration]      | Sakimura, N., Bradley, J., and M. Jones, “[OpenID Connect Dynamic Client Registration 1.0](http://openid.net/specs/openid-connect-registration-1_0.html),” November 2014. |\n| [RFC2119]                  | [Bradner, S.](mailto:sob@harvard.edu), “[Key words for use in RFCs to Indicate Requirement Levels](http://tools.ietf.org/html/rfc2119),” BCP 14, RFC 2119, March 1997 ([TXT](http://www.rfc-editor.org/rfc/rfc2119.txt), [HTML](http://xml.resource.org/public/rfc/html/rfc2119.html), [XML](http://xml.resource.org/public/rfc/xml/rfc2119.xml)). |\n| [RFC2246]                  | [Dierks, T.](mailto:tdierks@certicom.com) and [C. Allen](mailto:callen@certicom.com), “[The TLS Protocol Version 1.0](http://tools.ietf.org/html/rfc2246),” RFC 2246, January 1999 ([TXT](http://www.rfc-editor.org/rfc/rfc2246.txt)). |\n| [RFC2616]                  | [Fielding, R.](mailto:fielding@ics.uci.edu), [Gettys, J.](mailto:jg@w3.org), [Mogul, J.](mailto:mogul@wrl.dec.com), [Frystyk, H.](mailto:frystyk@w3.org), [Masinter, L.](mailto:masinter@parc.xerox.com), [Leach, P.](mailto:paulle@microsoft.com), and [T. Berners-Lee](mailto:timbl@w3.org), “[Hypertext Transfer Protocol -- HTTP/1.1](http://tools.ietf.org/html/rfc2616),” RFC 2616, June 1999 ([TXT](http://www.rfc-editor.org/rfc/rfc2616.txt), [PS](http://www.rfc-editor.org/rfc/rfc2616.ps), [PDF](http://www.rfc-editor.org/rfc/rfc2616.pdf), [HTML](http://xml.resource.org/public/rfc/html/rfc2616.html), [XML](http://xml.resource.org/public/rfc/xml/rfc2616.xml)). |\n| [RFC3339]                  | [Klyne, G., Ed.](mailto:GK@ACM.ORG) and [C. Newman](mailto:chris.newman@sun.com), “[Date and Time on the Internet: Timestamps](http://tools.ietf.org/html/rfc3339),” RFC 3339, July 2002 ([TXT](http://www.rfc-editor.org/rfc/rfc3339.txt), [HTML](http://xml.resource.org/public/rfc/html/rfc3339.html), [XML](http://xml.resource.org/public/rfc/xml/rfc3339.xml)). |\n| [RFC3966]                  | Schulzrinne, H., “[The tel URI for Telephone Numbers](http://tools.ietf.org/html/rfc3966),” RFC 3966, December 2004 ([TXT](http://www.rfc-editor.org/rfc/rfc3966.txt)). |\n| [RFC3986]                  | [Berners-Lee, T.](mailto:timbl@w3.org), [Fielding, R.](mailto:fielding@gbiv.com), and [L. Masinter](mailto:LMM@acm.org), “[Uniform Resource Identifier (URI): Generic Syntax](http://tools.ietf.org/html/rfc3986),” STD 66, RFC 3986, January 2005 ([TXT](http://www.rfc-editor.org/rfc/rfc3986.txt), [HTML](http://xml.resource.org/public/rfc/html/rfc3986.html), [XML](http://xml.resource.org/public/rfc/xml/rfc3986.xml)). |\n| [RFC4627]                  | Crockford, D., “[The application/json Media Type for JavaScript Object Notation (JSON)](http://tools.ietf.org/html/rfc4627),” RFC 4627, July 2006 ([TXT](http://www.rfc-editor.org/rfc/rfc4627.txt)). |\n| [RFC5246]                  | Dierks, T. and E. Rescorla, “[The Transport Layer Security (TLS) Protocol Version 1.2](http://tools.ietf.org/html/rfc5246),” RFC 5246, August 2008 ([TXT](http://www.rfc-editor.org/rfc/rfc5246.txt)). |\n| [RFC5322]                  | [Resnick, P., Ed.](mailto:presnick@qualcomm.com), “[Internet Message Format](http://tools.ietf.org/html/rfc5322),” RFC 5322, October 2008 ([TXT](http://www.rfc-editor.org/rfc/rfc5322.txt), [HTML](http://xml.resource.org/public/rfc/html/rfc5322.html), [XML](http://xml.resource.org/public/rfc/xml/rfc5322.xml)). |\n| [RFC5646]                  | Phillips, A. and M. Davis, “[Tags for Identifying Languages](http://tools.ietf.org/html/rfc5646),” BCP 47, RFC 5646, September 2009 ([TXT](http://www.rfc-editor.org/rfc/rfc5646.txt)). |\n| [RFC6125]                  | Saint-Andre, P. and J. Hodges, “[Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)](http://tools.ietf.org/html/rfc6125),” RFC 6125, March 2011 ([TXT](http://www.rfc-editor.org/rfc/rfc6125.txt)). |\n| [RFC6711]                  | Johansson, L., “[An IANA Registry for Level of Assurance (LoA) Profiles](http://tools.ietf.org/html/rfc6711),” RFC 6711, August 2012 ([TXT](http://www.rfc-editor.org/rfc/rfc6711.txt)). |\n| [RFC6749]                  | Hardt, D., “[The OAuth 2.0 Authorization Framework](http://tools.ietf.org/html/rfc6749),” RFC 6749, October 2012 ([TXT](http://www.rfc-editor.org/rfc/rfc6749.txt)). |\n| [RFC6750]                  | Jones, M. and D. Hardt, “[The OAuth 2.0 Authorization Framework: Bearer Token Usage](http://tools.ietf.org/html/rfc6750),” RFC 6750, October 2012 ([TXT](http://www.rfc-editor.org/rfc/rfc6750.txt)). |\n| [RFC6819]                  | Lodderstedt, T., McGloin, M., and P. Hunt, “[OAuth 2.0 Threat Model and Security Considerations](http://tools.ietf.org/html/rfc6819),” RFC 6819, January 2013 ([TXT](http://www.rfc-editor.org/rfc/rfc6819.txt)). |\n| [USA15]                    | [Davis, M.](mailto:markdavis@google.com), [Whistler, K.](mailto:ken@unicode.org), and M. Dürst, “Unicode Normalization Forms,” Unicode Standard Annex 15, 09 2009. |\n| [W3C.REC-html401-19991224] | Raggett, D., Hors, A., and I. Jacobs, “[HTML 4.01 Specification](http://www.w3.org/TR/1999/REC-html401-19991224),” World Wide Web Consortium Recommendation REC-html401-19991224, December 1999 ([HTML](http://www.w3.org/TR/1999/REC-html401-19991224)). |\n| [zoneinfo]                 | Public Domain, “[The tz database](http://www.twinsun.com/tz/tz-link.htm),” June 2011. |\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n### 19.2. Informative References\n\n| [JWK.Thumbprint]  | [Jones, M.](mailto:mbj@microsoft.com), “[JSON Web Key (JWK) Thumbprint](http://tools.ietf.org/html/draft-jones-jose-jwk-thumbprint),” draft-jones-jose-jwk-thumbprint (work in progress), July 2014 ([HTML](http://tools.ietf.org/html/draft-jones-jose-jwk-thumbprint-01)). |\n| ----------------- | ------------------------------------------------------------ |\n| [OAuth.Post]      | Jones, M. and B. Campbell, “[OAuth 2.0 Form Post Response Mode](http://openid.net/specs/oauth-v2-form-post-response-mode-1_0.html),” February 2014. |\n| [OpenID.2.0]      | OpenID Foundation, “OpenID Authentication 2.0,” December 2007 ([TXT](http://openid.net/specs/openid-authentication-2_0.txt), [HTML](http://openid.net/specs/openid-authentication-2_0.html)). |\n| [OpenID.Basic]    | Sakimura, N., Bradley, J., Jones, M., de Medeiros, B., and C. Mortimore, “[OpenID Connect Basic Client Implementer's Guide 1.0](http://openid.net/specs/openid-connect-basic-1_0.html),” November 2014. |\n| [OpenID.Implicit] | Sakimura, N., Bradley, J., Jones, M., de Medeiros, B., and C. Mortimore, “[OpenID Connect Implicit Client Implementer's Guide 1.0](http://openid.net/specs/openid-connect-implicit-1_0.html),” November 2014. |\n| [OpenID.PAPE]     | [Recordon, D.](mailto:david@sixapart.com), [Jones, M.](mailto:mbj@microsoft.com), [Bufu, J., Ed.](mailto:johnny.bufu@gmail.com), [Daugherty, J., Ed.](mailto:cygnus@janrain.com), and [N. Sakimura](mailto:n-sakimura@nri.co.jp), “OpenID Provider Authentication Policy Extension 1.0,” December 2008 ([TXT](http://openid.net/specs/openid-provider-authentication-policy-extension-1_0.txt), [HTML](http://openid.net/specs/openid-provider-authentication-policy-extension-1_0.html)). |\n| [OpenID.Session]  | Sakimura, N., Bradley, J., Jones, M., de Medeiros, B., Mortimore, C., and E. Jay, “[OpenID Connect Session Management 1.0](http://openid.net/specs/openid-connect-session-1_0.html),” November 2014. |\n| [RFC4949]         | Shirey, R., “[Internet Security Glossary, Version 2](http://tools.ietf.org/html/rfc4949),” RFC 4949, August 2007 ([TXT](http://www.rfc-editor.org/rfc/rfc4949.txt)). |\n| [X.1252]          | International Telecommunication Union, “[ITU-T Recommendation X.1252 -- Cyberspace security -- Identity management -- Baseline identity management terms and definitions](http://www.itu.int/rec/dologin_pub.asp?lang=e&id=T-REC-X.1252-201004-I!!PDF-E&type=items),” ITU-T X.1252, November 2010. |\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### Appendix A. Authorization Examples\n\nThe following are non-normative examples of Authorization Requests with different `response_type` values and their responses (with line wraps within values for display purposes only):\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### A.1. Example using response_type=code\n\n```\n  GET /authorize?\n    response_type=code\n    &client_id=s6BhdRkqt3\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb\n    &scope=openid%20profile%20email\n    &nonce=n-0S6_WzA2Mj\n    &state=af0ifjsldkj HTTP/1.1\n  Host: server.example.com\n\n  HTTP/1.1 302 Found\n  Location: https://client.example.org/cb?\n    code=Qcb0Orv1zh30vL1MPRsbm-diHiMwcLyZvn1arpZv-Jxf_11jnpEX3Tgfvk\n    &state=af0ifjsldkj\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### A.2. Example using response_type=id_token\n\n```\n  GET /authorize?\n    response_type=id_token\n    &client_id=s6BhdRkqt3\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb\n    &scope=openid%20profile%20email\n    &nonce=n-0S6_WzA2Mj\n    &state=af0ifjsldkj HTTP/1.1\n  Host: server.example.com\n\n  HTTP/1.1 302 Found\n  Location: https://client.example.org/cb#\n    id_token=eyJraWQiOiIxZTlnZGs3IiwiYWxnIjoiUlMyNTYifQ.ewogImlz\n    cyI6ICJodHRwOi8vc2VydmVyLmV4YW1wbGUuY29tIiwKICJzdWIiOiAiMjQ4\n    Mjg5NzYxMDAxIiwKICJhdWQiOiAiczZCaGRSa3F0MyIsCiAibm9uY2UiOiAi\n    bi0wUzZfV3pBMk1qIiwKICJleHAiOiAxMzExMjgxOTcwLAogImlhdCI6IDEz\n    MTEyODA5NzAsCiAibmFtZSI6ICJKYW5lIERvZSIsCiAiZ2l2ZW5fbmFtZSI6\n    ICJKYW5lIiwKICJmYW1pbHlfbmFtZSI6ICJEb2UiLAogImdlbmRlciI6ICJm\n    ZW1hbGUiLAogImJpcnRoZGF0ZSI6ICIwMDAwLTEwLTMxIiwKICJlbWFpbCI6\n    ICJqYW5lZG9lQGV4YW1wbGUuY29tIiwKICJwaWN0dXJlIjogImh0dHA6Ly9l\n    eGFtcGxlLmNvbS9qYW5lZG9lL21lLmpwZyIKfQ.rHQjEmBqn9Jre0OLykYNn\n    spA10Qql2rvx4FsD00jwlB0Sym4NzpgvPKsDjn_wMkHxcp6CilPcoKrWHcip\n    R2iAjzLvDNAReF97zoJqq880ZD1bwY82JDauCXELVR9O6_B0w3K-E7yM2mac\n    AAgNCUwtik6SjoSUZRcf-O5lygIyLENx882p6MtmwaL1hd6qn5RZOQ0TLrOY\n    u0532g9Exxcm-ChymrB4xLykpDj3lUivJt63eEGGN6DH5K6o33TcxkIjNrCD\n    4XB1CKKumZvCedgHHF3IAK4dVEDSUoGlH9z4pP_eWYNXvqQOjGs-rDaQzUHl\n    6cQQWNiDpWOl_lxXjQEvQ\n    &state=af0ifjsldkj\n```\n\nThe value of the `id_token` parameter is the ID Token, which is a signed JWT, containing three base64url encoded segments separated by period ('.') characters. The first segment represents the JOSE Header. Base64url decoding it will result in the following set of Header Parameters:\n\n```\n  {\"kid\":\"1e9gdk7\",\"alg\":\"RS256\"}\n```\n\nThe `alg` value represents the algorithm that was used to sign the JWT, in this case `RS256`, representing RSASSA-PKCS-v1_5 using SHA-256. The `kid` value is a key identifier used in identifying the key to be used to verify the signature. If the `kid` value is unknown to the RP, it needs to retrieve the contents of the OP's JWK Set again to obtain the OP's current set of keys.\n\nThe second segment represents the Claims in the ID Token. Verifying and decoding the ID Token will yield the following Claims:\n\n```\n  {\n   \"iss\": \"http://server.example.com\",\n   \"sub\": \"248289761001\",\n   \"aud\": \"s6BhdRkqt3\",\n   \"nonce\": \"n-0S6_WzA2Mj\",\n   \"exp\": 1311281970,\n   \"iat\": 1311280970,\n   \"name\": \"Jane Doe\",\n   \"given_name\": \"Jane\",\n   \"family_name\": \"Doe\",\n   \"gender\": \"female\",\n   \"birthdate\": \"0000-10-31\",\n   \"email\": \"janedoe@example.com\",\n   \"picture\": \"http://example.com/janedoe/me.jpg\"\n  }\n```\n\nThe third segment represents the ID Token signature, which is verified as described in [[JWS\\]](https://openid.net/specs/openid-connect-core-1_0.html#JWS).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### A.3. Example using response_type=id_token token\n\n```\n  GET /authorize?\n    response_type=id_token%20token\n    &client_id=s6BhdRkqt3\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb\n    &scope=openid%20profile%20email\n    &nonce=n-0S6_WzA2Mj\n    &state=af0ifjsldkj HTTP/1.1\n  Host: server.example.com\n\n  HTTP/1.1 302 Found\n  Location: https://client.example.org/cb#\n    access_token=jHkWEdUXMU1BwAsC4vtUsZwnNvTIxEl0z9K3vx5KF0Y\n    &token_type=Bearer\n    &id_token=eyJraWQiOiIxZTlnZGs3IiwiYWxnIjoiUlMyNTYifQ.ewogIml\n    zcyI6ICJodHRwOi8vc2VydmVyLmV4YW1wbGUuY29tIiwKICJzdWIiOiAiMjQ\n    4Mjg5NzYxMDAxIiwKICJhdWQiOiAiczZCaGRSa3F0MyIsCiAibm9uY2UiOiA\n    ibi0wUzZfV3pBMk1qIiwKICJleHAiOiAxMzExMjgxOTcwLAogImlhdCI6IDE\n    zMTEyODA5NzAsCiAiYXRfaGFzaCI6ICI3N1FtVVB0alBmeld0RjJBbnBLOVJ\n    RIgp9.F9gRev0Dt2tKcrBkHy72cmRqnLdzw9FLCCSebV7mWs7o_sv2O5s6zM\n    ky2kmhHTVx9HmdvNnx9GaZ8XMYRFeYk8L5NZ7aYlA5W56nsG1iWOou_-gji0\n    ibWIuuf4Owaho3YSoi7EvsTuLFz6tq-dLyz0dKABMDsiCmJ5wqkPUDTE3QTX\n    jzbUmOzUDli-gCh5QPuZAq0cNW3pf_2n4zpvTYtbmj12cVcxGIMZby7TMWES\n    RjQ9_o3jvhVNcCGcE0KAQXejhA1ocJhNEvQNqMFGlBb6_0RxxKjDZ-Oa329e\n    GDidOvvp0h5hoES4a8IuGKS7NOcpp-aFwp0qVMDLI-Xnm-Pg\n    &state=af0ifjsldkj\n```\n\nVerifying and decoding the ID Token will yield the following Claims:\n\n```\n  {\n   \"iss\": \"http://server.example.com\",\n   \"sub\": \"248289761001\",\n   \"aud\": \"s6BhdRkqt3\",\n   \"nonce\": \"n-0S6_WzA2Mj\",\n   \"exp\": 1311281970,\n   \"iat\": 1311280970,\n   \"at_hash\": \"77QmUPtjPfzWtF2AnpK9RQ\"\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### A.4. Example using response_type=code id_token\n\n```\n  GET /authorize?\n    response_type=code%20id_token\n    &client_id=s6BhdRkqt3\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb\n    &scope=openid%20profile%20email\n    &nonce=n-0S6_WzA2Mj\n    &state=af0ifjsldkj HTTP/1.1\n  Host: server.example.com\n\n  HTTP/1.1 302 Found\n  Location: https://client.example.org/cb#\n    code=Qcb0Orv1zh30vL1MPRsbm-diHiMwcLyZvn1arpZv-Jxf_11jnpEX3Tgfvk\n    &id_token=eyJraWQiOiIxZTlnZGs3IiwiYWxnIjoiUlMyNTYifQ.ewogIml\n    zcyI6ICJodHRwOi8vc2VydmVyLmV4YW1wbGUuY29tIiwKICJzdWIiOiAiMjQ\n    4Mjg5NzYxMDAxIiwKICJhdWQiOiAiczZCaGRSa3F0MyIsCiAibm9uY2UiOiA\n    ibi0wUzZfV3pBMk1qIiwKICJleHAiOiAxMzExMjgxOTcwLAogImlhdCI6IDE\n    zMTEyODA5NzAsCiAiY19oYXNoIjogIkxEa3RLZG9RYWszUGswY25YeENsdEE\n    iCn0.XW6uhdrkBgcGx6zVIrCiROpWURs-4goO1sKA4m9jhJIImiGg5muPUcN\n    egx6sSv43c5DSn37sxCRrDZZm4ZPBKKgtYASMcE20SDgvYJdJS0cyuFw7Ijp\n    _7WnIjcrl6B5cmoM6ylCvsLMwkoQAxVublMwH10oAxjzD6NEFsu9nipkszWh\n    sPePf_rM4eMpkmCbTzume-fzZIi5VjdWGGEmzTg32h3jiex-r5WTHbj-u5HL\n    7u_KP3rmbdYNzlzd1xWRYTUs4E8nOTgzAUwvwXkIQhOh5TPcSMBYy6X3E7-_\n    gr9Ue6n4ND7hTFhtjYs3cjNKIA08qm5cpVYFMFMG6PkhzLQ\n    &state=af0ifjsldkj\n```\n\nVerifying and decoding the ID Token will yield the following Claims:\n\n```\n  {\n   \"iss\": \"http://server.example.com\",\n   \"sub\": \"248289761001\",\n   \"aud\": \"s6BhdRkqt3\",\n   \"nonce\": \"n-0S6_WzA2Mj\",\n   \"exp\": 1311281970,\n   \"iat\": 1311280970,\n   \"c_hash\": \"LDktKdoQak3Pk0cnXxCltA\"\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### A.5. Example using response_type=code token\n\n```\n  GET /authorize?\n    response_type=code%20token\n    &client_id=s6BhdRkqt3\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb\n    &scope=openid%20profile%20email\n    &nonce=n-0S6_WzA2Mj\n    &state=af0ifjsldkj HTTP/1.1\n  Host: server.example.com\n\n  HTTP/1.1 302 Found\n  Location: https://client.example.org/cb#\n    code=Qcb0Orv1zh30vL1MPRsbm-diHiMwcLyZvn1arpZv-Jxf_11jnpEX3Tgfvk\n    &access_token=jHkWEdUXMU1BwAsC4vtUsZwnNvTIxEl0z9K3vx5KF0Y\n    &token_type=Bearer\n    &state=af0ifjsldkj\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### A.6. Example using response_type=code id_token token\n\n```\n  GET /authorize?\n    response_type=code%20id_token%20token\n    &client_id=s6BhdRkqt3\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb\n    &scope=openid%20profile%20email\n    &nonce=n-0S6_WzA2Mj\n    &state=af0ifjsldkj HTTP/1.1\n  Host: server.example.com\n\n  HTTP/1.1 302 Found\n  Location: https://client.example.org/cb#\n    code=Qcb0Orv1zh30vL1MPRsbm-diHiMwcLyZvn1arpZv-Jxf_11jnpEX3Tgfvk\n    &access_token=jHkWEdUXMU1BwAsC4vtUsZwnNvTIxEl0z9K3vx5KF0Y\n    &token_type=Bearer\n    &id_token=eyJraWQiOiIxZTlnZGs3IiwiYWxnIjoiUlMyNTYifQ.ewogIml\n    zcyI6ICJodHRwOi8vc2VydmVyLmV4YW1wbGUuY29tIiwKICJzdWIiOiAiMjQ\n    4Mjg5NzYxMDAxIiwKICJhdWQiOiAiczZCaGRSa3F0MyIsCiAibm9uY2UiOiA\n    ibi0wUzZfV3pBMk1qIiwKICJleHAiOiAxMzExMjgxOTcwLAogImlhdCI6IDE\n    zMTEyODA5NzAsCiAiY19oYXNoIjogIkxEa3RLZG9RYWszUGswY25YeENsdEE\n    iCn0.XW6uhdrkBgcGx6zVIrCiROpWURs-4goO1sKA4m9jhJIImiGg5muPUcN\n    egx6sSv43c5DSn37sxCRrDZZm4ZPBKKgtYASMcE20SDgvYJdJS0cyuFw7Ijp\n    _7WnIjcrl6B5cmoM6ylCvsLMwkoQAxVublMwH10oAxjzD6NEFsu9nipkszWh\n    sPePf_rM4eMpkmCbTzume-fzZIi5VjdWGGEmzTg32h3jiex-r5WTHbj-u5HL\n    7u_KP3rmbdYNzlzd1xWRYTUs4E8nOTgzAUwvwXkIQhOh5TPcSMBYy6X3E7-_\n    gr9Ue6n4ND7hTFhtjYs3cjNKIA08qm5cpVYFMFMG6PkhzLQ\n    &state=af0ifjsldkj\n```\n\nVerifying and decoding the ID Token will yield the following Claims:\n\n```\n  {\n   \"iss\": \"http://server.example.com\",\n   \"sub\": \"248289761001\",\n   \"aud\": \"s6BhdRkqt3\",\n   \"nonce\": \"n-0S6_WzA2Mj\",\n   \"exp\": 1311281970,\n   \"iat\": 1311280970,\n   \"at_hash\": \"77QmUPtjPfzWtF2AnpK9RQ\",\n   \"c_hash\": \"LDktKdoQak3Pk0cnXxCltA\"\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### A.7. RSA Key Used in Examples\n\nThe following RSA public key, represented in JWK format, can be used to validate the ID Token signatures in the above examples (with line wraps within values for display purposes only):\n\n```\n  {\n   \"kty\":\"RSA\",\n   \"kid\":\"1e9gdk7\",\n   \"n\":\"w7Zdfmece8iaB0kiTY8pCtiBtzbptJmP28nSWwtdjRu0f2GFpajvWE4VhfJA\n        jEsOcwYzay7XGN0b-X84BfC8hmCTOj2b2eHT7NsZegFPKRUQzJ9wW8ipn_aD\n        JWMGDuB1XyqT1E7DYqjUCEOD1b4FLpy_xPn6oV_TYOfQ9fZdbE5HGxJUzeku\n        GcOKqOQ8M7wfYHhHHLxGpQVgL0apWuP2gDDOdTtpuld4D2LK1MZK99s9gaSj\n        RHE8JDb1Z4IGhEcEyzkxswVdPndUWzfvWBBWXWxtSUvQGBRkuy1BHOa4sP6F\n        KjWEeeF7gm7UMs2Nm2QUgNZw6xvEDGaLk4KASdIxRQ\",\n   \"e\":\"AQAB\"\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### Appendix B. Acknowledgements\n\nAs a successor version of OpenID, this specification heavily relies on ideas explored in [OpenID Authentication 2.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.2.0) [OpenID.2.0]. Please refer to Appendix C of OpenID Authentication 2.0 for the full list of the contributors for that specification.\n\nIn addition, the OpenID Community would like to thank the following people for their contributions to this specification:\n\n\n\n> Naveen Agarwal (naa@google.com), Google\n>\n> Amanda Anganes (aanganes@mitre.org), MITRE\n>\n> Casper Biering (cb@peercraft.com), Peercraft\n>\n> John Bradley (ve7jtb@ve7jtb.com), Ping Identity\n>\n> Tim Bray (tbray@textuality.com), Google\n>\n> Johnny Bufu (jbufu@janrain.com), Janrain\n>\n> Brian Campbell (bcampbell@pingidentity.com), Ping Identity\n>\n> Blaine Cook (romeda@gmail.com), Independent\n>\n> Breno de Medeiros (breno@google.com), Google\n>\n> Pamela Dingle (pdingle@pingidentity.com), Ping Identity\n>\n> Vladimir Dzhuvinov (vladimir@nimbusds.com), Nimbus Directory Services\n>\n> George Fletcher (george.fletcher@corp.aol.com), AOL\n>\n> Roland Hedberg (roland.hedberg@adm.umu.se), University of Umea\n>\n> Ryo Ito (ryo.ito@mixi.co.jp), mixi, Inc.\n>\n> Edmund Jay (ejay@mgi1.com), Illumila\n>\n> Michael B. Jones (mbj@microsoft.com), Microsoft\n>\n> Torsten Lodderstedt (t.lodderstedt@telekom.de), Deutsche Telekom\n>\n> Nov Matake (nov@matake.jp), Independent\n>\n> Chuck Mortimore (cmortimore@salesforce.com), Salesforce\n>\n> Anthony Nadalin (tonynad@microsoft.com), Microsoft\n>\n> Hideki Nara (hdknr@ic-tact.co.jp), Tact Communications\n>\n> Axel Nennker (axel.nennker@telekom.de), Deutsche Telekom\n>\n> David Recordon (dr@fb.com), Facebook\n>\n> Justin Richer (jricher@mitre.org), MITRE\n>\n> Nat Sakimura (n-sakimura@nri.co.jp), Nomura Research Institute, Ltd.\n>\n> Luke Shepard (lshepard@fb.com), Facebook\n>\n> Andreas Åkre Solberg (andreas.solberg@uninett.no), UNINET\n>\n> Paul Tarjan (pt@fb.com), Facebook\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### Appendix C. Notices\n\nCopyright (c) 2014 The OpenID Foundation.\n\nThe OpenID Foundation (OIDF) grants to any Contributor, developer, implementer, or other interested party a non-exclusive, royalty free, worldwide copyright license to reproduce, prepare derivative works from, distribute, perform and display, this Implementers Draft or Final Specification solely for the purposes of (i) developing specifications, and (ii) implementing Implementers Drafts and Final Specifications based on such documents, provided that attribution be made to the OIDF as the source of the material, but that such attribution does not indicate an endorsement by the OIDF.\n\nThe technology described in this specification was made available from contributions from various sources, including members of the OpenID Foundation and others. Although the OpenID Foundation has taken steps to help ensure that the technology is available for distribution, it takes no position regarding the validity or scope of any intellectual property or other rights that might be claimed to pertain to the implementation or use of the technology described in this specification or the extent to which any license under such rights might or might not be available; neither does it represent that it has made any independent effort to identify any such rights. The OpenID Foundation and the contributors to this specification make no (and hereby expressly disclaim any) warranties (express, implied, or otherwise), including implied warranties of merchantability, non-infringement, fitness for a particular purpose, or title, related to this specification, and the entire risk as to implementing this specification is assumed by the implementer. The OpenID Intellectual Property Rights policy requires contributors to offer a patent promise not to assert certain patent claims against other contributors and against implementers. The OpenID Foundation invites any interested party to bring to its attention any copyrights, patents, patent applications, or other proprietary rights that may cover technology that may be required to practice this specification.","source":"_posts/openid/OpenID.md","raw":"---\ntitle: OpenID Connect Core 1.0\ndate: 2023-10-26\nupdated:\ntags:\n  - openid\ncategories: 标准化文档\nkeywords:\ncopyright: false\n---\n\n### 1. 介绍\n\nOpenID Connect 1.0 is a simple identity layer on top of the OAuth 2.0 [[RFC6749\\]](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) protocol. It enables Clients to verify the identity of the End-User based on the authentication performed by an Authorization Server, as well as to obtain basic profile information about the End-User in an interoperable and REST-like manner.\n\nThe OpenID Connect Core 1.0 specification defines the core OpenID Connect functionality: authentication built on top of OAuth 2.0 and the use of Claims to communicate information about the End-User. It also describes the security and privacy considerations for using OpenID Connect.\n\nAs background, the [OAuth 2.0 Authorization Framework](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749] and [OAuth 2.0 Bearer Token Usage](https://openid.net/specs/openid-connect-core-1_0.html#RFC6750) [RFC6750] specifications provide a general framework for third-party applications to obtain and use limited access to HTTP resources. They define mechanisms to obtain and use Access Tokens to access resources but do not define standard methods to provide identity information. Notably, without profiling OAuth 2.0, it is incapable of providing information about the authentication of an End-User. Readers are expected to be familiar with these specifications.\n\nOpenID Connect implements authentication as an extension to the OAuth 2.0 authorization process. Use of this extension is requested by Clients by including the `openid` scope value in the Authorization Request. Information about the authentication performed is returned in a [JSON Web Token (JWT)](https://openid.net/specs/openid-connect-core-1_0.html#JWT) [JWT] called an ID Token (see [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken)). OAuth 2.0 Authentication Servers implementing OpenID Connect are also referred to as OpenID Providers (OPs). OAuth 2.0 Clients using OpenID Connect are also referred to as Relying Parties (RPs).\n\nThis specification assumes that the Relying Party has already obtained configuration information about the OpenID Provider, including its Authorization Endpoint and Token Endpoint locations. This information is normally obtained via Discovery, as described in [OpenID Connect Discovery 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Discovery) [OpenID.Discovery], or may be obtained via other mechanisms.\n\nLikewise, this specification assumes that the Relying Party has already obtained sufficient credentials and provided information needed to use the OpenID Provider. This is normally done via Dynamic Registration, as described in [OpenID Connect Dynamic Client Registration 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration) [OpenID.Registration], or may be obtained via other mechanisms.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 1.1. 需求符号和约定\n\nThe key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC 2119](https://openid.net/specs/openid-connect-core-1_0.html#RFC2119) [RFC2119].\n\nIn the .txt version of this document, values are quoted to indicate that they are to be taken literally. When using these values in protocol messages, the quotes MUST NOT be used as part of the value. In the HTML version of this document, values to be taken literally are indicated by the use of `this fixed-width font`.\n\nAll uses of [JSON Web Signature (JWS)](https://openid.net/specs/openid-connect-core-1_0.html#JWS) [JWS] and [JSON Web Encryption (JWE)](https://openid.net/specs/openid-connect-core-1_0.html#JWE) [JWE] data structures in this specification utilize the JWS Compact Serialization or the JWE Compact Serialization; the JWS JSON Serialization and the JWE JSON Serialization are not used.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 1.2. 术语\n\nThis specification uses the terms \"Access Token\", \"Authorization Code\", \"Authorization Endpoint\", \"Authorization Grant\", \"Authorization Server\", \"Client\", \"Client Authentication\", \"Client Identifier\", \"Client Secret\", \"Grant Type\", \"Protected Resource\", \"Redirection URI\", \"Refresh Token\", \"Resource Owner\", \"Resource Server\", \"Response Type\", and \"Token Endpoint\" defined by [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749], the terms \"Claim Name\", \"Claim Value\", \"JSON Web Token (JWT)\", \"JWT Claims Set\", and \"Nested JWT\" defined by [JSON Web Token (JWT)](https://openid.net/specs/openid-connect-core-1_0.html#JWT) [JWT], the terms \"Header Parameter\" and \"JOSE Header\" defined by [JSON Web Signature (JWS)](https://openid.net/specs/openid-connect-core-1_0.html#JWS) [JWS], the term \"User Agent\" defined by [RFC 2616](https://openid.net/specs/openid-connect-core-1_0.html#RFC2616) [RFC2616], and the term \"Response Mode\" defined by [OAuth 2.0 Multiple Response Type Encoding Practices](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses) [OAuth.Responses].\n\nThis specification also defines the following terms:\n\n> - Authentication\n>\n>   Process used to achieve sufficient confidence in the binding between the Entity and the presented Identity.\n>\n> - Authentication Request\n>\n>   OAuth 2.0 Authorization Request using extension parameters and scopes defined by OpenID Connect to request that the End-User be authenticated by the Authorization Server, which is an OpenID Connect Provider, to the Client, which is an OpenID Connect Relying Party.\n>\n> - Authentication Context\n>\n>   Information that the Relying Party can require before it makes an entitlement decision with respect to an authentication response. Such context can include, but is not limited to, the actual authentication method used or level of assurance such as [ISO/IEC 29115](https://openid.net/specs/openid-connect-core-1_0.html#ISO29115) [ISO29115] entity authentication assurance level.\n>\n> - Authentication Context Class\n>\n>   Set of authentication methods or procedures that are considered to be equivalent to each other in a particular context.\n>\n> - Authentication Context Class Reference\n>\n>   Identifier for an Authentication Context Class.\n>\n> - Authorization Code Flow\n>\n>   OAuth 2.0 flow in which an Authorization Code is returned from the Authorization Endpoint and all tokens are returned from the Token Endpoint.\n>\n> - Authorization Request\n>\n>   OAuth 2.0 Authorization Request as defined by [[RFC6749\\]](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749).\n>\n> - Claim\n>\n>   Piece of information asserted about an Entity.\n>\n> - Claim Type\n>\n>   Syntax used for representing a Claim Value. This specification defines Normal, Aggregated, and Distributed Claim Types.\n>\n> - Claims Provider\n>\n>   Server that can return Claims about an Entity.\n>\n> - Credential\n>\n>   Data presented as evidence of the right to use an identity or other resources.\n>\n> - End-User\n>\n>   Human participant.\n>\n> - Entity\n>\n>   Something that has a separate and distinct existence and that can be identified in a context. An End-User is one example of an Entity.\n>\n> - Essential Claim\n>\n>   Claim specified by the Client as being necessary to ensure a smooth authorization experience for the specific task requested by the End-User.\n>\n> - Hybrid Flow\n>\n>   OAuth 2.0 flow in which an Authorization Code is returned from the Authorization Endpoint, some tokens are returned from the Authorization Endpoint, and others are returned from the Token Endpoint.\n>\n> - ID Token\n>\n>   [JSON Web Token (JWT)](https://openid.net/specs/openid-connect-core-1_0.html#JWT) [JWT] that contains Claims about the Authentication event. It MAY contain other Claims.\n>\n> - Identifier\n>\n>   Value that uniquely characterizes an Entity in a specific context.\n>\n> - Identity\n>\n>   Set of attributes related to an Entity.\n>\n> - Implicit Flow\n>\n>   OAuth 2.0 flow in which all tokens are returned from the Authorization Endpoint and neither the Token Endpoint nor an Authorization Code are used.\n>\n> - Issuer\n>\n>   Entity that issues a set of Claims.\n>\n> - Issuer Identifier\n>\n>   Verifiable Identifier for an Issuer. An Issuer Identifier is a case sensitive URL using the `https` scheme that contains scheme, host, and optionally, port number and path components and no query or fragment components.\n>\n> - Message\n>\n>   Request or a response between an OpenID Relying Party and an OpenID Provider.\n>\n> - OpenID Provider (OP)\n>\n>   OAuth 2.0 Authorization Server that is capable of Authenticating the End-User and providing Claims to a Relying Party about the Authentication event and the End-User.\n>\n> - Request Object\n>\n>   JWT that contains a set of request parameters as its Claims.\n>\n> - Request URI\n>\n>   URL that references a resource containing a Request Object. The Request URI contents MUST be retrievable by the Authorization Server.\n>\n> - Pairwise Pseudonymous Identifier (PPID)\n>\n>   Identifier that identifies the Entity to a Relying Party that cannot be correlated with the Entity's PPID at another Relying Party.\n>\n> - Personally Identifiable Information (PII)\n>\n>   Information that (a) can be used to identify the natural person to whom such information relates, or (b) is or might be directly or indirectly linked to a natural person to whom such information relates.\n>\n> - Relying Party (RP)\n>\n>   OAuth 2.0 Client application requiring End-User Authentication and Claims from an OpenID Provider.\n>\n> - Sector Identifier\n>\n>   Host component of a URL used by the Relying Party's organization that is an input to the computation of pairwise Subject Identifiers for that Relying Party.\n>\n> - Self-Issued OpenID Provider\n>\n>   Personal, self-hosted OpenID Provider that issues self-signed ID Tokens.\n>\n> - Subject Identifier\n>\n>   Locally unique and never reassigned identifier within the Issuer for the End-User, which is intended to be consumed by the Client.\n>\n> - UserInfo Endpoint\n>\n>   Protected Resource that, when presented with an Access Token by the Client, returns authorized information about the End-User represented by the corresponding Authorization Grant. The UserInfo Endpoint URL MUST use the `https` scheme and MAY contain port, path, and query parameter components.\n>\n> - Validation\n>\n>   Process intended to establish the soundness or correctness of a construct.\n>\n> - Verification\n>\n>   Process intended to test or prove the truth or accuracy of a fact or value.\n>\n> - Voluntary Claim\n>\n>   Claim specified by the Client as being useful but not Essential for the specific task requested by the End-User.\n\n\n\nIMPORTANT NOTE TO READERS: The terminology definitions in this section are a normative portion of this specification, imposing requirements upon implementations. All the capitalized words in the text of this specification, such as \"Issuer Identifier\", reference these defined terms. Whenever the reader encounters them, their definitions found in this section must be followed.\n\nFor more background on some of the terminology used, see [Internet Security Glossary, Version 2](https://openid.net/specs/openid-connect-core-1_0.html#RFC4949) [RFC4949], [ISO/IEC 29115 Entity Authentication Assurance](https://openid.net/specs/openid-connect-core-1_0.html#ISO29115) [ISO29115], and [ITU-T X.1252](https://openid.net/specs/openid-connect-core-1_0.html#X.1252) [X.1252].\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 1.3. 概述\n\nThe OpenID Connect protocol, in abstract, follows the following steps.\n\n\n\n1. The RP (Client) sends a request to the OpenID Provider (OP).\n2. The OP authenticates the End-User and obtains authorization.\n3. The OP responds with an ID Token and usually an Access Token.\n4. The RP can send a request with the Access Token to the UserInfo Endpoint.\n5. The UserInfo Endpoint returns Claims about the End-User.\n\n\n\nThese steps are illustrated in the following diagram:\n\n```\n+--------+                                   +--------+\n|        |                                   |        |\n|        |---------(1) AuthN Request-------->|        |\n|        |                                   |        |\n|        |  +--------+                       |        |\n|        |  |        |                       |        |\n|        |  |  End-  |<--(2) AuthN & AuthZ-->|        |\n|        |  |  User  |                       |        |\n|   RP   |  |        |                       |   OP   |\n|        |  +--------+                       |        |\n|        |                                   |        |\n|        |<--------(3) AuthN Response--------|        |\n|        |                                   |        |\n|        |---------(4) UserInfo Request----->|        |\n|        |                                   |        |\n|        |<--------(5) UserInfo Response-----|        |\n|        |                                   |        |\n+--------+                                   +--------+\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 2. ID Token\n\nThe primary extension that OpenID Connect makes to OAuth 2.0 to enable End-Users to be Authenticated is the ID Token data structure. The ID Token is a security token that contains Claims about the Authentication of an End-User by an Authorization Server when using a Client, and potentially other requested Claims. The ID Token is represented as a [JSON Web Token (JWT)](https://openid.net/specs/openid-connect-core-1_0.html#JWT) [JWT].\n\nThe following Claims are used within the ID Token for all OAuth 2.0 flows used by OpenID Connect:\n\n\n\n> - iss\n>\n>   REQUIRED. Issuer Identifier for the Issuer of the response. The `iss` value is a case sensitive URL using the `https` scheme that contains scheme, host, and optionally, port number and path components and no query or fragment components.\n>\n> - sub\n>\n>   REQUIRED. Subject Identifier. A locally unique and never reassigned identifier within the Issuer for the End-User, which is intended to be consumed by the Client, e.g., `24400320` or `AItOawmwtWwcT0k51BayewNvutrJUqsvl6qs7A4`. It MUST NOT exceed 255 ASCII characters in length. The `sub` value is a case sensitive string.\n>\n> - aud\n>\n>   REQUIRED. Audience(s) that this ID Token is intended for. It MUST contain the OAuth 2.0 `client_id` of the Relying Party as an audience value. It MAY also contain identifiers for other audiences. In the general case, the `aud` value is an array of case sensitive strings. In the common special case when there is one audience, the `aud` value MAY be a single case sensitive string.\n>\n> - exp\n>\n>   REQUIRED. Expiration time on or after which the ID Token MUST NOT be accepted for processing. The processing of this parameter requires that the current date/time MUST be before the expiration date/time listed in the value. Implementers MAY provide for some small leeway, usually no more than a few minutes, to account for clock skew. Its value is a JSON number representing the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the date/time. See [RFC 3339](https://openid.net/specs/openid-connect-core-1_0.html#RFC3339) [RFC3339] for details regarding date/times in general and UTC in particular.\n>\n> - iat\n>\n>   REQUIRED. Time at which the JWT was issued. Its value is a JSON number representing the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the date/time.\n>\n> - auth_time\n>\n>   Time when the End-User authentication occurred. Its value is a JSON number representing the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the date/time. When a `max_age` request is made or when `auth_time` is requested as an Essential Claim, then this Claim is REQUIRED; otherwise, its inclusion is OPTIONAL. (The `auth_time` Claim semantically corresponds to the OpenID 2.0 [PAPE](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.PAPE) [OpenID.PAPE] `auth_time` response parameter.)\n>\n> - nonce\n>\n>   String value used to associate a Client session with an ID Token, and to mitigate replay attacks. The value is passed through unmodified from the Authentication Request to the ID Token. If present in the ID Token, Clients MUST verify that the `nonce` Claim Value is equal to the value of the `nonce` parameter sent in the Authentication Request. If present in the Authentication Request, Authorization Servers MUST include a `nonce` Claim in the ID Token with the Claim Value being the nonce value sent in the Authentication Request. Authorization Servers SHOULD perform no other processing on `nonce` values used. The `nonce` value is a case sensitive string.\n>\n> - acr\n>\n>   OPTIONAL. Authentication Context Class Reference. String specifying an Authentication Context Class Reference value that identifies the Authentication Context Class that the authentication performed satisfied. The value \"0\" indicates the End-User authentication did not meet the requirements of [ISO/IEC 29115](https://openid.net/specs/openid-connect-core-1_0.html#ISO29115) [ISO29115] level 1. Authentication using a long-lived browser cookie, for instance, is one example where the use of \"level 0\" is appropriate. Authentications with level 0 SHOULD NOT be used to authorize access to any resource of any monetary value. (This corresponds to the OpenID 2.0 [PAPE](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.PAPE) [OpenID.PAPE] `nist_auth_level` 0.) An absolute URI or an [RFC 6711](https://openid.net/specs/openid-connect-core-1_0.html#RFC6711) [RFC6711] registered name SHOULD be used as the `acr` value; registered names MUST NOT be used with a different meaning than that which is registered. Parties using this claim will need to agree upon the meanings of the values used, which may be context-specific. The `acr` value is a case sensitive string.\n>\n> - amr\n>\n>   OPTIONAL. Authentication Methods References. JSON array of strings that are identifiers for authentication methods used in the authentication. For instance, values might indicate that both password and OTP authentication methods were used. The definition of particular values to be used in the `amr` Claim is beyond the scope of this specification. Parties using this claim will need to agree upon the meanings of the values used, which may be context-specific. The `amr` value is an array of case sensitive strings.\n>\n> - azp\n>\n>   OPTIONAL. Authorized party - the party to which the ID Token was issued. If present, it MUST contain the OAuth 2.0 Client ID of this party. This Claim is only needed when the ID Token has a single audience value and that audience is different than the authorized party. It MAY be included even when the authorized party is the same as the sole audience. The `azp` value is a case sensitive string containing a StringOrURI value.\n\n\n\nID Tokens MAY contain other Claims. Any Claims used that are not understood MUST be ignored. See Sections [3.1.3.6](https://openid.net/specs/openid-connect-core-1_0.html#CodeIDToken), [3.3.2.11](https://openid.net/specs/openid-connect-core-1_0.html#HybridIDToken), [5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims), and [7.4](https://openid.net/specs/openid-connect-core-1_0.html#SelfIssuedResponse) for additional Claims defined by this specification.\n\nID Tokens MUST be signed using [JWS](https://openid.net/specs/openid-connect-core-1_0.html#JWS) [JWS] and optionally both signed and then encrypted using [JWS](https://openid.net/specs/openid-connect-core-1_0.html#JWS) [JWS] and [JWE](https://openid.net/specs/openid-connect-core-1_0.html#JWE) [JWE] respectively, thereby providing authentication, integrity, non-repudiation, and optionally, confidentiality, per [Section 16.14](https://openid.net/specs/openid-connect-core-1_0.html#SigningOrder). If the ID Token is encrypted, it MUST be signed then encrypted, with the result being a Nested JWT, as defined in [[JWT\\]](https://openid.net/specs/openid-connect-core-1_0.html#JWT). ID Tokens MUST NOT use `none` as the `alg` value unless the Response Type used returns no ID Token from the Authorization Endpoint (such as when using the Authorization Code Flow) and the Client explicitly requested the use of `none` at Registration time.\n\nID Tokens SHOULD NOT use the JWS or JWE `x5u`, `x5c`, `jku`, or `jwk` Header Parameter fields. Instead, references to keys used are communicated in advance using Discovery and Registration parameters, per [Section 10](https://openid.net/specs/openid-connect-core-1_0.html#SigEnc).\n\nThe following is a non-normative example of the set of Claims (the JWT Claims Set) in an ID Token:\n\n```\n  {\n   \"iss\": \"https://server.example.com\",\n   \"sub\": \"24400320\",\n   \"aud\": \"s6BhdRkqt3\",\n   \"nonce\": \"n-0S6_WzA2Mj\",\n   \"exp\": 1311281970,\n   \"iat\": 1311280970,\n   \"auth_time\": 1311280969,\n   \"acr\": \"urn:mace:incommon:iap:silver\"\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3. 身份验证\n\n\nOpenID Connect执行身份验证，用于登录终端用户或确定终端用户已经登录。OpenID Connect以安全的方式将服务器执行的身份验证结果返回给客户端，以便客户端可以依赖它。因此，在这种情况下，客户端被称为Relying Party（RP）。\n\nThe Authentication result is returned in an ID Token, as defined in [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken). It has Claims expressing such information as the Issuer, the Subject Identifier, when the authentication expires, etc.\n\nAuthentication can follow one of three paths: the Authorization Code Flow (`response_type=code`), the Implicit Flow (`response_type=id_token token` or `response_type=id_token`), or the Hybrid Flow (using other Response Type values defined in [OAuth 2.0 Multiple Response Type Encoding Practices](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses) [OAuth.Responses]). The flows determine how the ID Token and Access Token are returned to the Client.\n\nThe characteristics of the three flows are summarized in the following non-normative table. The table is intended to provide some guidance on which flow to choose in particular contexts.\n\n\n\n------\n\n| Property                                        | Authorization Code Flow | Implicit Flow | Hybrid Flow |\n| ----------------------------------------------- | ----------------------- | ------------- | ----------- |\n| All tokens returned from Authorization Endpoint | no                      | yes           | no          |\n| All tokens returned from Token Endpoint         | yes                     | no            | no          |\n| Tokens not revealed to User Agent               | yes                     | no            | no          |\n| Client can be authenticated                     | yes                     | no            | yes         |\n| Refresh Token possible                          | yes                     | no            | yes         |\n| Communication in one round trip                 | no                      | yes           | no          |\n| Most communication server-to-server             | yes                     | no            | varies      |\n\n\n\n **OpenID Connect Authentication Flows**  \n\n------\n\nThe flow used is determined by the `response_type` value contained in the Authorization Request. These `response_type` values select these flows:\n\n\n\n------\n\n| \"response_type\" value | Flow                    |\n| --------------------- | ----------------------- |\n| `code`                | Authorization Code Flow |\n| `id_token`            | Implicit Flow           |\n| `id_token token`      | Implicit Flow           |\n| `code id_token`       | Hybrid Flow             |\n| `code token`          | Hybrid Flow             |\n| `code id_token token` | Hybrid Flow             |\n\n\n\n **OpenID Connect \"response_type\" Values**  \n\n------\n\nAll but the `code` Response Type value, which is defined by [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749], are defined in the [OAuth 2.0 Multiple Response Type Encoding Practices](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses) [OAuth.Responses] specification. NOTE: While OAuth 2.0 also defines the `token` Response Type value for the Implicit Flow, OpenID Connect does not use this Response Type, since no ID Token would be returned.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1. 使用授权码流（Authorization Code Flow）进行身份验证\n\n\nThis section describes how to perform authentication using the Authorization Code Flow. When using the Authorization Code Flow, all tokens are returned from the Token Endpoint.\n\nThe Authorization Code Flow returns an Authorization Code to the Client, which can then exchange it for an ID Token and an Access Token directly. This provides the benefit of not exposing any tokens to the User Agent and possibly other malicious applications with access to the User Agent. The Authorization Server can also authenticate the Client before exchanging the Authorization Code for an Access Token. The Authorization Code flow is suitable for Clients that can securely maintain a Client Secret between themselves and the Authorization Server.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.1. 授权码流（Authorization Code Flow）的步骤\n\nThe Authorization Code Flow goes through the following steps.\n\n1. Client prepares an Authentication Request containing the desired request parameters.\n2. Client sends the request to the Authorization Server.\n3. Authorization Server Authenticates the End-User.\n4. Authorization Server obtains End-User Consent/Authorization.\n5. Authorization Server sends the End-User back to the Client with an Authorization Code.\n6. Client requests a response using the Authorization Code at the Token Endpoint.\n7. Client receives a response that contains an ID Token and Access Token in the response body.\n8. Client validates the ID token and retrieves the End-User's Subject Identifier.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.2. 授权端点\n\nThe Authorization Endpoint performs Authentication of the End-User. This is done by sending the User Agent to the Authorization Server's Authorization Endpoint for Authentication and Authorization, using request parameters defined by OAuth 2.0 and additional parameters and parameter values defined by OpenID Connect.\n\nCommunication with the Authorization Endpoint MUST utilize TLS. See [Section 16.17](https://openid.net/specs/openid-connect-core-1_0.html#TLSRequirements) for more information on using TLS.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.2.1. 身份验证请求\n\n\nAn Authentication Request is an OAuth 2.0 Authorization Request that requests that the End-User be authenticated by the Authorization Server.\n\nAuthorization Servers MUST support the use of the HTTP `GET` and `POST` methods defined in [RFC 2616](https://openid.net/specs/openid-connect-core-1_0.html#RFC2616) [RFC2616] at the Authorization Endpoint. Clients MAY use the HTTP `GET` or `POST` methods to send the Authorization Request to the Authorization Server. If using the HTTP `GET` method, the request parameters are serialized using URI Query String Serialization, per [Section 13.1](https://openid.net/specs/openid-connect-core-1_0.html#QuerySerialization). If using the HTTP `POST` method, the request parameters are serialized using Form Serialization, per [Section 13.2](https://openid.net/specs/openid-connect-core-1_0.html#FormSerialization).\n\nOpenID Connect uses the following OAuth 2.0 request parameters with the Authorization Code Flow:\n\n\n\n> - scope\n>\n>   REQUIRED. OpenID Connect requests MUST contain the `openid` scope value. If the `openid` scope value is not present, the behavior is entirely unspecified. Other scope values MAY be present. Scope values used that are not understood by an implementation SHOULD be ignored. See Sections [5.4](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims) and [11](https://openid.net/specs/openid-connect-core-1_0.html#OfflineAccess) for additional scope values defined by this specification.\n>\n> - response_type\n>\n>   REQUIRED. OAuth 2.0 Response Type value that determines the authorization processing flow to be used, including what parameters are returned from the endpoints used. When using the Authorization Code Flow, this value is `code`.\n>\n> - client_id\n>\n>   REQUIRED. OAuth 2.0 Client Identifier valid at the Authorization Server.\n>\n> - redirect_uri\n>\n>   REQUIRED. Redirection URI to which the response will be sent. This URI MUST exactly match one of the Redirection URI values for the Client pre-registered at the OpenID Provider, with the matching performed as described in Section 6.2.1 of [[RFC3986\\]](https://openid.net/specs/openid-connect-core-1_0.html#RFC3986) (Simple String Comparison). When using this flow, the Redirection URI SHOULD use the `https` scheme; however, it MAY use the `http` scheme, provided that the Client Type is `confidential`, as defined in Section 2.1 of OAuth 2.0, and provided the OP allows the use of `http` Redirection URIs in this case. The Redirection URI MAY use an alternate scheme, such as one that is intended to identify a callback into a native application.\n>\n> - state\n>\n>   RECOMMENDED. Opaque value used to maintain state between the request and the callback. Typically, Cross-Site Request Forgery (CSRF, XSRF) mitigation is done by cryptographically binding the value of this parameter with a browser cookie.\n\n\n\nOpenID Connect also uses the following OAuth 2.0 request parameter, which is defined in [OAuth 2.0 Multiple Response Type Encoding Practices](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses) [OAuth.Responses]:\n\n\n\n> - response_mode\n>\n>   OPTIONAL. Informs the Authorization Server of the mechanism to be used for returning parameters from the Authorization Endpoint. This use of this parameter is NOT RECOMMENDED when the Response Mode that would be requested is the default mode specified for the Response Type.\n\n\n\nThis specification also defines the following request parameters:\n\n\n\n> - nonce\n>\n>   OPTIONAL. String value used to associate a Client session with an ID Token, and to mitigate replay attacks. The value is passed through unmodified from the Authentication Request to the ID Token. Sufficient entropy MUST be present in the `nonce` values used to prevent attackers from guessing values. For implementation notes, see [Section 15.5.2](https://openid.net/specs/openid-connect-core-1_0.html#NonceNotes).\n>\n> - display\n>\n>   OPTIONAL. ASCII string value that specifies how the Authorization Server displays the authentication and consent user interface pages to the End-User. The defined values are:pageThe Authorization Server SHOULD display the authentication and consent UI consistent with a full User Agent page view. If the display parameter is not specified, this is the default display mode.popupThe Authorization Server SHOULD display the authentication and consent UI consistent with a popup User Agent window. The popup User Agent window should be of an appropriate size for a login-focused dialog and should not obscure the entire window that it is popping up over.touchThe Authorization Server SHOULD display the authentication and consent UI consistent with a device that leverages a touch interface.wapThe Authorization Server SHOULD display the authentication and consent UI consistent with a \"feature phone\" type display.The Authorization Server MAY also attempt to detect the capabilities of the User Agent and present an appropriate display.\n>\n> - prompt\n>\n>   OPTIONAL. Space delimited, case sensitive list of ASCII string values that specifies whether the Authorization Server prompts the End-User for reauthentication and consent. The defined values are:noneThe Authorization Server MUST NOT display any authentication or consent user interface pages. An error is returned if an End-User is not already authenticated or the Client does not have pre-configured consent for the requested Claims or does not fulfill other conditions for processing the request. The error code will typically be `login_required`, `interaction_required`, or another code defined in [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError). This can be used as a method to check for existing authentication and/or consent.loginThe Authorization Server SHOULD prompt the End-User for reauthentication. If it cannot reauthenticate the End-User, it MUST return an error, typically `login_required`.consentThe Authorization Server SHOULD prompt the End-User for consent before returning information to the Client. If it cannot obtain consent, it MUST return an error, typically `consent_required`.select_accountThe Authorization Server SHOULD prompt the End-User to select a user account. This enables an End-User who has multiple accounts at the Authorization Server to select amongst the multiple accounts that they might have current sessions for. If it cannot obtain an account selection choice made by the End-User, it MUST return an error, typically `account_selection_required`.The `prompt` parameter can be used by the Client to make sure that the End-User is still present for the current session or to bring attention to the request. If this parameter contains `none` with any other value, an error is returned.\n>\n> - max_age\n>\n>   OPTIONAL. Maximum Authentication Age. Specifies the allowable elapsed time in seconds since the last time the End-User was actively authenticated by the OP. If the elapsed time is greater than this value, the OP MUST attempt to actively re-authenticate the End-User. (The `max_age` request parameter corresponds to the OpenID 2.0 [PAPE](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.PAPE) [OpenID.PAPE] `max_auth_age` request parameter.) When `max_age` is used, the ID Token returned MUST include an `auth_time` Claim Value.\n>\n> - ui_locales\n>\n>   OPTIONAL. End-User's preferred languages and scripts for the user interface, represented as a space-separated list of [BCP47](https://openid.net/specs/openid-connect-core-1_0.html#RFC5646) [RFC5646] language tag values, ordered by preference. For instance, the value \"fr-CA fr en\" represents a preference for French as spoken in Canada, then French (without a region designation), followed by English (without a region designation). An error SHOULD NOT result if some or all of the requested locales are not supported by the OpenID Provider.\n>\n> - id_token_hint\n>\n>   OPTIONAL. ID Token previously issued by the Authorization Server being passed as a hint about the End-User's current or past authenticated session with the Client. If the End-User identified by the ID Token is logged in or is logged in by the request, then the Authorization Server returns a positive response; otherwise, it SHOULD return an error, such as `login_required`. When possible, an `id_token_hint` SHOULD be present when `prompt=none` is used and an `invalid_request` error MAY be returned if it is not; however, the server SHOULD respond successfully when possible, even if it is not present. The Authorization Server need not be listed as an audience of the ID Token when it is used as an `id_token_hint` value.\n>\n> - \n>\n>   If the ID Token received by the RP from the OP is encrypted, to use it as an `id_token_hint`, the Client MUST decrypt the signed ID Token contained within the encrypted ID Token. The Client MAY re-encrypt the signed ID token to the Authentication Server using a key that enables the server to decrypt the ID Token, and use the re-encrypted ID token as the `id_token_hint` value.\n>\n> - login_hint\n>\n>   OPTIONAL. Hint to the Authorization Server about the login identifier the End-User might use to log in (if necessary). This hint can be used by an RP if it first asks the End-User for their e-mail address (or other identifier) and then wants to pass that value as a hint to the discovered authorization service. It is RECOMMENDED that the hint value match the value used for discovery. This value MAY also be a phone number in the format specified for the `phone_number` Claim. The use of this parameter is left to the OP's discretion.\n>\n> - acr_values\n>\n>   OPTIONAL. Requested Authentication Context Class Reference values. Space-separated string that specifies the `acr` values that the Authorization Server is being requested to use for processing this Authentication Request, with the values appearing in order of preference. The Authentication Context Class satisfied by the authentication performed is returned as the `acr` Claim Value, as specified in [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken). The `acr` Claim is requested as a Voluntary Claim by this parameter.\n\n\n\nOther parameters MAY be sent. See Sections [3.2.2](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitAuthorizationEndpoint), [3.3.2](https://openid.net/specs/openid-connect-core-1_0.html#HybridAuthorizationEndpoint), [5.2](https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts), [5.5](https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter), [6](https://openid.net/specs/openid-connect-core-1_0.html#JWTRequests), and [7.2.1](https://openid.net/specs/openid-connect-core-1_0.html#RegistrationParameter) for additional Authorization Request parameters and parameter values defined by this specification.\n\nThe following is a non-normative example HTTP 302 redirect response by the Client, which triggers the User Agent to make an Authentication Request to the Authorization Endpoint (with line wraps within values for display purposes only):\n\n```\n  HTTP/1.1 302 Found\n  Location: https://server.example.com/authorize?\n    response_type=code\n    &scope=openid%20profile%20email\n    &client_id=s6BhdRkqt3\n    &state=af0ifjsldkj\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb\n```\n\nThe following is the non-normative example request that would be sent by the User Agent to the Authorization Server in response to the HTTP 302 redirect response by the Client above (with line wraps within values for display purposes only):\n\n```\n  GET /authorize?\n    response_type=code\n    &scope=openid%20profile%20email\n    &client_id=s6BhdRkqt3\n    &state=af0ifjsldkj\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb HTTP/1.1\n  Host: server.example.com\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.2.2. Authentication Request Validation\n\nThe Authorization Server MUST validate the request received as follows:\n\n\n\n1. The Authorization Server MUST validate all the OAuth 2.0 parameters according to the OAuth 2.0 specification.\n2. Verify that a `scope` parameter is present and contains the `openid` scope value. (If no `openid` scope value is present, the request may still be a valid OAuth 2.0 request, but is not an OpenID Connect request.)\n3. The Authorization Server MUST verify that all the REQUIRED parameters are present and their usage conforms to this specification.\n4. If the `sub` (subject) Claim is requested with a specific value for the ID Token, the Authorization Server MUST only send a positive response if the End-User identified by that `sub` value has an active session with the Authorization Server or has been Authenticated as a result of the request. The Authorization Server MUST NOT reply with an ID Token or Access Token for a different user, even if they have an active session with the Authorization Server. Such a request can be made either using an `id_token_hint` parameter or by requesting a specific Claim Value as described in [Section 5.5.1](https://openid.net/specs/openid-connect-core-1_0.html#IndividualClaimsRequests), if the `claims` parameter is supported by the implementation.\n\n\n\nAs specified in [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749], Authorization Servers SHOULD ignore unrecognized request parameters.\n\nIf the Authorization Server encounters any error, it MUST return an error response, per [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.2.3. Authorization Server Authenticates End-User\n\nIf the request is valid, the Authorization Server attempts to Authenticate the End-User or determines whether the End-User is Authenticated, depending upon the request parameter values used. The methods used by the Authorization Server to Authenticate the End-User (e.g. username and password, session cookies, etc.) are beyond the scope of this specification. An Authentication user interface MAY be displayed by the Authorization Server, depending upon the request parameter values used and the authentication methods used.\n\nThe Authorization Server MUST attempt to Authenticate the End-User in the following cases:\n\n- The End-User is not already Authenticated.\n- The Authentication Request contains the `prompt` parameter with the value `login`. In this case, the Authorization Server MUST reauthenticate the End-User even if the End-User is already authenticated.\n\n\n\nThe Authorization Server MUST NOT interact with the End-User in the following case:\n\n- The Authentication Request contains the `prompt` parameter with the value `none`. In this case, the Authorization Server MUST return an error if an End-User is not already Authenticated or could not be silently Authenticated.\n\n\n\nWhen interacting with the End-User, the Authorization Server MUST employ appropriate measures against Cross-Site Request Forgery and Clickjacking as, described in Sections 10.12 and 10.13 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749].\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.2.4. Authorization Server Obtains End-User Consent/Authorization\n\nOnce the End-User is authenticated, the Authorization Server MUST obtain an authorization decision before releasing information to the Relying Party. When permitted by the request parameters used, this MAY be done through an interactive dialogue with the End-User that makes it clear what is being consented to or by establishing consent via conditions for processing the request or other means (for example, via previous administrative consent). Sections [2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken) and [5.3](https://openid.net/specs/openid-connect-core-1_0.html#UserInfo) describe information release mechanisms.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.2.5. Successful Authentication Response\n\nAn Authentication Response is an OAuth 2.0 Authorization Response message returned from the OP's Authorization Endpoint in response to the Authorization Request message sent by the RP.\n\nWhen using the Authorization Code Flow, the Authorization Response MUST return the parameters defined in Section 4.1.2 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749] by adding them as query parameters to the `redirect_uri` specified in the Authorization Request using the `application/x-www-form-urlencoded` format, unless a different Response Mode was specified.\n\nThe following is a non-normative example successful response using this flow (with line wraps within values for display purposes only):\n\n```\n  HTTP/1.1 302 Found\n  Location: https://client.example.org/cb?\n    code=SplxlOBeZQQYbYS6WxSbIA\n    &state=af0ifjsldkj\n```\n\nFor implementation notes on the contents of the Authorization Code, see [Section 15.5.1](https://openid.net/specs/openid-connect-core-1_0.html#CodeNotes).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.2.6. Authentication Error Response\n\nAn Authentication Error Response is an OAuth 2.0 Authorization Error Response message returned from the OP's Authorization Endpoint in response to the Authorization Request message sent by the RP.\n\nIf the End-User denies the request or the End-User authentication fails, the OP (Authorization Server) informs the RP (Client) by using the Error Response parameters defined in Section 4.1.2.1 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749]. (HTTP errors unrelated to RFC 6749 are returned to the User Agent using the appropriate HTTP status code.)\n\nUnless the Redirection URI is invalid, the Authorization Server returns the Client to the Redirection URI specified in the Authorization Request with the appropriate error and state parameters. Other parameters SHOULD NOT be returned.\n\nIn addition to the error codes defined in Section 4.1.2.1 of OAuth 2.0, this specification also defines the following error codes:\n\n\n\n> - interaction_required\n>\n>   The Authorization Server requires End-User interaction of some form to proceed. This error MAY be returned when the `prompt` parameter value in the Authentication Request is `none`, but the Authentication Request cannot be completed without displaying a user interface for End-User interaction.\n>\n> - login_required\n>\n>   The Authorization Server requires End-User authentication. This error MAY be returned when the `prompt` parameter value in the Authentication Request is `none`, but the Authentication Request cannot be completed without displaying a user interface for End-User authentication.\n>\n> - account_selection_required\n>\n>   The End-User is REQUIRED to select a session at the Authorization Server. The End-User MAY be authenticated at the Authorization Server with different associated accounts, but the End-User did not select a session. This error MAY be returned when the `prompt` parameter value in the Authentication Request is `none`, but the Authentication Request cannot be completed without displaying a user interface to prompt for a session to use.\n>\n> - consent_required\n>\n>   The Authorization Server requires End-User consent. This error MAY be returned when the `prompt` parameter value in the Authentication Request is `none`, but the Authentication Request cannot be completed without displaying a user interface for End-User consent.\n>\n> - invalid_request_uri\n>\n>   The `request_uri` in the Authorization Request returns an error or contains invalid data.\n>\n> - invalid_request_object\n>\n>   The `request` parameter contains an invalid Request Object.\n>\n> - request_not_supported\n>\n>   The OP does not support use of the `request` parameter defined in [Section 6](https://openid.net/specs/openid-connect-core-1_0.html#JWTRequests).\n>\n> - request_uri_not_supported\n>\n>   The OP does not support use of the `request_uri` parameter defined in [Section 6](https://openid.net/specs/openid-connect-core-1_0.html#JWTRequests).\n>\n> - registration_not_supported\n>\n>   The OP does not support use of the `registration` parameter defined in [Section 7.2.1](https://openid.net/specs/openid-connect-core-1_0.html#RegistrationParameter).\n\n\n\nThe error response parameters are the following:\n\n> - error\n>\n>   REQUIRED. Error code.\n>\n> - error_description\n>\n>   OPTIONAL. Human-readable ASCII encoded text description of the error.\n>\n> - error_uri\n>\n>   OPTIONAL. URI of a web page that includes additional information about the error.\n>\n> - state\n>\n>   OAuth 2.0 state value. REQUIRED if the Authorization Request included the `state` parameter. Set to the value received from the Client.\n\n\n\nWhen using the Authorization Code Flow, the error response parameters are added to the query component of the Redirection URI, unless a different Response Mode was specified.\n\n\n\nThe following is a non-normative example error response using this flow (with line wraps within values for display purposes only):\n\n```\n  HTTP/1.1 302 Found\n  Location: https://client.example.org/cb?\n    error=invalid_request\n    &error_description=\n      Unsupported%20response_type%20value\n    &state=af0ifjsldkj\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.2.7. Authentication Response Validation\n\nWhen using the Authorization Code Flow, the Client MUST validate the response according to RFC 6749, especially Sections 4.1.2 and 10.12.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.3. Token Endpoint\n\nTo obtain an Access Token, an ID Token, and optionally a Refresh Token, the RP (Client) sends a Token Request to the Token Endpoint to obtain a Token Response, as described in Section 3.2 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749], when using the Authorization Code Flow.\n\nCommunication with the Token Endpoint MUST utilize TLS. See [Section 16.17](https://openid.net/specs/openid-connect-core-1_0.html#TLSRequirements) for more information on using TLS.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.3.1. Token Request\n\nA Client makes a Token Request by presenting its Authorization Grant (in the form of an Authorization Code) to the Token Endpoint using the `grant_type` value `authorization_code`, as described in Section 4.1.3 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749]. If the Client is a Confidential Client, then it MUST authenticate to the Token Endpoint using the authentication method registered for its `client_id`, as described in [Section 9](https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication).\n\nThe Client sends the parameters to the Token Endpoint using the HTTP `POST` method and the Form Serialization, per [Section 13.2](https://openid.net/specs/openid-connect-core-1_0.html#FormSerialization), as described in Section 4.1.3 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749].\n\nThe following is a non-normative example of a Token Request (with line wraps within values for display purposes only):\n\n```\n  POST /token HTTP/1.1\n  Host: server.example.com\n  Content-Type: application/x-www-form-urlencoded\n  Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW\n\n  grant_type=authorization_code&code=SplxlOBeZQQYbYS6WxSbIA\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.3.2. Token Request Validation\n\nThe Authorization Server MUST validate the Token Request as follows:\n\n\n\n- Authenticate the Client if it was issued Client Credentials or if it uses another Client Authentication method, per [Section 9](https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication).\n- Ensure the Authorization Code was issued to the authenticated Client.\n- Verify that the Authorization Code is valid.\n- If possible, verify that the Authorization Code has not been previously used.\n- Ensure that the `redirect_uri` parameter value is identical to the `redirect_uri` parameter value that was included in the initial Authorization Request. If the `redirect_uri` parameter value is not present when there is only one registered `redirect_uri` value, the Authorization Server MAY return an error (since the Client should have included the parameter) or MAY proceed without an error (since OAuth 2.0 permits the parameter to be omitted in this case).\n- Verify that the Authorization Code used was issued in response to an OpenID Connect Authentication Request (so that an ID Token will be returned from the Token Endpoint).\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.3.3. Successful Token Response\n\nAfter receiving and validating a valid and authorized Token Request from the Client, the Authorization Server returns a successful response that includes an ID Token and an Access Token. The parameters in the successful response are defined in Section 4.1.4 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749]. The response uses the `application/json` media type.\n\nThe OAuth 2.0 `token_type` response parameter value MUST be `Bearer`, as specified in [OAuth 2.0 Bearer Token Usage](https://openid.net/specs/openid-connect-core-1_0.html#RFC6750) [RFC6750], unless another Token Type has been negotiated with the Client. Servers SHOULD support the `Bearer` Token Type; use of other Token Types is outside the scope of this specification.\n\nIn addition to the response parameters specified by OAuth 2.0, the following parameters MUST be included in the response:\n\n\n\n> - id_token\n>\n>   ID Token value associated with the authenticated session.\n\n\n\nAll Token Responses that contain tokens, secrets, or other sensitive information MUST include the following HTTP response header fields and values:\n\n\n\n------\n\n| Header Name   | Header Value |\n| ------------- | ------------ |\n| Cache-Control | no-store     |\n| Pragma        | no-cache     |\n\n\n\n **HTTP Response Headers and Values**  \n\n------\n\nThe following is a non-normative example of a successful Token Response. The ID Token signature in the example can be verified with the key at [Appendix A.7](https://openid.net/specs/openid-connect-core-1_0.html#ExampleRSAKey).\n\n```\n  HTTP/1.1 200 OK\n  Content-Type: application/json\n  Cache-Control: no-store\n  Pragma: no-cache\n\n  {\n   \"access_token\": \"SlAV32hkKG\",\n   \"token_type\": \"Bearer\",\n   \"refresh_token\": \"8xLOxBtZp8\",\n   \"expires_in\": 3600,\n   \"id_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IjFlOWdkazcifQ.ewogImlzc\n     yI6ICJodHRwOi8vc2VydmVyLmV4YW1wbGUuY29tIiwKICJzdWIiOiAiMjQ4Mjg5\n     NzYxMDAxIiwKICJhdWQiOiAiczZCaGRSa3F0MyIsCiAibm9uY2UiOiAibi0wUzZ\n     fV3pBMk1qIiwKICJleHAiOiAxMzExMjgxOTcwLAogImlhdCI6IDEzMTEyODA5Nz\n     AKfQ.ggW8hZ1EuVLuxNuuIJKX_V8a_OMXzR0EHR9R6jgdqrOOF4daGU96Sr_P6q\n     Jp6IcmD3HP99Obi1PRs-cwh3LO-p146waJ8IhehcwL7F09JdijmBqkvPeB2T9CJ\n     NqeGpe-gccMg4vfKjkM8FcGvnzZUN4_KSP0aAp1tOJ1zZwgjxqGByKHiOtX7Tpd\n     QyHE5lcMiKPXfEIQILVq0pc_E2DzL7emopWoaoZTF_m0_N0YzFC6g6EJbOEoRoS\n     K5hoDalrcvRYLSrQAZZKflyuVCyixEoV9GfNQC3_osjzw2PAithfubEEBLuVVk4\n     XUVrWOLrLl0nx7RkKU8NXNHq-rvKMzqg\"\n  }\n```\n\nAs specified in [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749], Clients SHOULD ignore unrecognized response parameters.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.3.4. Token Error Response\n\nIf the Token Request is invalid or unauthorized, the Authorization Server constructs the error response. The parameters of the Token Error Response are defined as in Section 5.2 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749]. The HTTP response body uses the `application/json` media type with HTTP response code of 400.\n\nThe following is a non-normative example Token Error Response:\n\n```\n  HTTP/1.1 400 Bad Request\n  Content-Type: application/json\n  Cache-Control: no-store\n  Pragma: no-cache\n\n  {\n   \"error\": \"invalid_request\"\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.3.5. Token Response Validation\n\nThe Client MUST validate the Token Response as follows:\n\n1. Follow the validation rules in RFC 6749, especially those in Sections 5.1 and 10.12.\n2. Follow the ID Token validation rules in [Section 3.1.3.7](https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation).\n3. Follow the Access Token validation rules in [Section 3.1.3.8](https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowTokenValidation).\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.3.6. ID Token\n\nThe contents of the ID Token are as described in [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken). When using the Authorization Code Flow, these additional requirements for the following ID Token Claims apply:\n\n\n\n> - at_hash\n>\n>   OPTIONAL. Access Token hash value. Its value is the base64url encoding of the left-most half of the hash of the octets of the ASCII representation of the `access_token` value, where the hash algorithm used is the hash algorithm used in the `alg` Header Parameter of the ID Token's JOSE Header. For instance, if the `alg` is `RS256`, hash the `access_token` value with SHA-256, then take the left-most 128 bits and base64url encode them. The `at_hash` value is a case sensitive string.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.3.7. ID Token Validation\n\nClients MUST validate the ID Token in the Token Response in the following manner:\n\n\n\n1. If the ID Token is encrypted, decrypt it using the keys and algorithms that the Client specified during Registration that the OP was to use to encrypt the ID Token. If encryption was negotiated with the OP at Registration time and the ID Token is not encrypted, the RP SHOULD reject it.\n2. The Issuer Identifier for the OpenID Provider (which is typically obtained during Discovery) MUST exactly match the value of the `iss` (issuer) Claim.\n3. The Client MUST validate that the `aud` (audience) Claim contains its `client_id` value registered at the Issuer identified by the `iss` (issuer) Claim as an audience. The `aud` (audience) Claim MAY contain an array with more than one element. The ID Token MUST be rejected if the ID Token does not list the Client as a valid audience, or if it contains additional audiences not trusted by the Client.\n4. If the ID Token contains multiple audiences, the Client SHOULD verify that an `azp` Claim is present.\n5. If an `azp` (authorized party) Claim is present, the Client SHOULD verify that its `client_id` is the Claim Value.\n6. If the ID Token is received via direct communication between the Client and the Token Endpoint (which it is in this flow), the TLS server validation MAY be used to validate the issuer in place of checking the token signature. The Client MUST validate the signature of all other ID Tokens according to [JWS](https://openid.net/specs/openid-connect-core-1_0.html#JWS) [JWS] using the algorithm specified in the JWT `alg` Header Parameter. The Client MUST use the keys provided by the Issuer.\n7. The `alg` value SHOULD be the default of `RS256` or the algorithm sent by the Client in the `id_token_signed_response_alg` parameter during Registration.\n8. If the JWT `alg` Header Parameter uses a MAC based algorithm such as `HS256`, `HS384`, or `HS512`, the octets of the UTF-8 representation of the `client_secret` corresponding to the `client_id` contained in the `aud` (audience) Claim are used as the key to validate the signature. For MAC based algorithms, the behavior is unspecified if the `aud` is multi-valued or if an `azp` value is present that is different than the `aud` value.\n9. The current time MUST be before the time represented by the `exp` Claim.\n10. The `iat` Claim can be used to reject tokens that were issued too far away from the current time, limiting the amount of time that nonces need to be stored to prevent attacks. The acceptable range is Client specific.\n11. If a nonce value was sent in the Authentication Request, a `nonce` Claim MUST be present and its value checked to verify that it is the same value as the one that was sent in the Authentication Request. The Client SHOULD check the `nonce` value for replay attacks. The precise method for detecting replay attacks is Client specific.\n12. If the `acr` Claim was requested, the Client SHOULD check that the asserted Claim Value is appropriate. The meaning and processing of `acr` Claim Values is out of scope for this specification.\n13. If the `auth_time` Claim was requested, either through a specific request for this Claim or by using the `max_age` parameter, the Client SHOULD check the `auth_time` Claim value and request re-authentication if it determines too much time has elapsed since the last End-User authentication.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.1.3.8. Access Token Validation\n\nWhen using the Authorization Code Flow, if the ID Token contains an `at_hash` Claim, the Client MAY use it to validate the Access Token in the same manner as for the Implicit Flow, as defined in [Section 3.2.2.9](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitTokenValidation), but using the ID Token and Access Token returned from the Token Endpoint.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2. Authentication using the Implicit Flow\n\nThis section describes how to perform authentication using the Implicit Flow. When using the Implicit Flow, all tokens are returned from the Authorization Endpoint; the Token Endpoint is not used.\n\nThe Implicit Flow is mainly used by Clients implemented in a browser using a scripting language. The Access Token and ID Token are returned directly to the Client, which may expose them to the End-User and applications that have access to the End-User's User Agent. The Authorization Server does not perform Client Authentication.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2.1. Implicit Flow Steps\n\nThe Implicit Flow follows the following steps:\n\n\n\n1. Client prepares an Authentication Request containing the desired request parameters.\n2. Client sends the request to the Authorization Server.\n3. Authorization Server Authenticates the End-User.\n4. Authorization Server obtains End-User Consent/Authorization.\n5. Authorization Server sends the End-User back to the Client with an ID Token and, if requested, an Access Token.\n6. Client validates the ID token and retrieves the End-User's Subject Identifier.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2.2. Authorization Endpoint\n\nWhen using the Implicit Flow, the Authorization Endpoint is used in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint), with the exception of the differences specified in this section.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2.2.1. Authentication Request\n\nAuthentication Requests are made as defined in [Section 3.1.2.1](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest), except that these Authentication Request parameters are used as follows:\n\n\n\n> - response_type\n>\n>   REQUIRED. OAuth 2.0 Response Type value that determines the authorization processing flow to be used, including what parameters are returned from the endpoints used. When using the Implicit Flow, this value is `id_token token` or `id_token`. The meanings of both of these values are defined in [OAuth 2.0 Multiple Response Type Encoding Practices](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses) [OAuth.Responses]. No Access Token is returned when the value is `id_token`.\n>\n> - \n>\n>   NOTE: While OAuth 2.0 also defines the `token` Response Type value for the Implicit Flow, OpenID Connect does not use this Response Type, since no ID Token would be returned.\n>\n> - redirect_uri\n>\n>   REQUIRED. Redirection URI to which the response will be sent. This URI MUST exactly match one of the Redirection URI values for the Client pre-registered at the OpenID Provider, with the matching performed as described in Section 6.2.1 of [[RFC3986\\]](https://openid.net/specs/openid-connect-core-1_0.html#RFC3986) (Simple String Comparison). When using this flow, the Redirection URI MUST NOT use the `http` scheme unless the Client is a native application, in which case it MAY use the `http:` scheme with `localhost` as the hostname.\n>\n> - nonce\n>\n>   REQUIRED. String value used to associate a Client session with an ID Token, and to mitigate replay attacks. The value is passed through unmodified from the Authentication Request to the ID Token. Sufficient entropy MUST be present in the `nonce` values used to prevent attackers from guessing values. For implementation notes, see [Section 15.5.2](https://openid.net/specs/openid-connect-core-1_0.html#NonceNotes).\n\n\n\nThe following is a non-normative example request using the Implicit Flow that would be sent by the User Agent to the Authorization Server in response to a corresponding HTTP 302 redirect response by the Client (with line wraps within values for display purposes only):\n\n```\n  GET /authorize?\n    response_type=id_token%20token\n    &client_id=s6BhdRkqt3\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb\n    &scope=openid%20profile\n    &state=af0ifjsldkj\n    &nonce=n-0S6_WzA2Mj HTTP/1.1\n  Host: server.example.com\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2.2.2. Authentication Request Validation\n\nWhen using the Implicit Flow, the Authentication Request is validated in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.2.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequestValidation).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2.2.3. Authorization Server Authenticates End-User\n\nWhen using the Implicit Flow, End-User Authentication is performed in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.2.3](https://openid.net/specs/openid-connect-core-1_0.html#Authenticates).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2.2.4. Authorization Server Obtains End-User Consent/Authorization\n\nWhen using the Implicit Flow, End-User Consent is obtained in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.2.4](https://openid.net/specs/openid-connect-core-1_0.html#Consent).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2.2.5. Successful Authentication Response\n\nWhen using the Implicit Flow, Authentication Responses are made in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.2.5](https://openid.net/specs/openid-connect-core-1_0.html#AuthResponse), with the exception of the differences specified in this section.\n\nWhen using the Implicit Flow, all response parameters are added to the fragment component of the Redirection URI, as specified in [OAuth 2.0 Multiple Response Type Encoding Practices](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses) [OAuth.Responses], unless a different Response Mode was specified.\n\nThese parameters are returned from the Authorization Endpoint:\n\n\n\n> - access_token\n>\n>   OAuth 2.0 Access Token. This is returned unless the `response_type` value used is `id_token`.\n>\n> - token_type\n>\n>   OAuth 2.0 Token Type value. The value MUST be `Bearer` or another `token_type` value that the Client has negotiated with the Authorization Server. Clients implementing this profile MUST support the [OAuth 2.0 Bearer Token Usage](https://openid.net/specs/openid-connect-core-1_0.html#RFC6750) [RFC6750] specification. This profile only describes the use of bearer tokens. This is returned in the same cases as `access_token` is.\n>\n> - id_token\n>\n>   REQUIRED. ID Token.\n>\n> - state\n>\n>   OAuth 2.0 state value. REQUIRED if the `state` parameter is present in the Authorization Request. Clients MUST verify that the `state` value is equal to the value of `state` parameter in the Authorization Request.\n>\n> - expires_in\n>\n>   OPTIONAL. Expiration time of the Access Token in seconds since the response was generated.\n\n\n\nPer Section 4.2.2 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749], no `code` result is returned when using the Implicit Flow.\n\nThe following is a non-normative example of a successful response using the Implicit Flow (with line wraps for the display purposes only):\n\n```\n  HTTP/1.1 302 Found\n  Location: https://client.example.org/cb#\n    access_token=SlAV32hkKG\n    &token_type=bearer\n    &id_token=eyJ0 ... NiJ9.eyJ1c ... I6IjIifX0.DeWt4Qu ... ZXso\n    &expires_in=3600\n    &state=af0ifjsldkj\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2.2.6. Authentication Error Response\n\nWhen using the Implicit Flow, Authorization Error Responses are made in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError), with the exception of the differences specified in this section.\n\nIf the End-User denies the request or the End-User authentication fails, the Authorization Server MUST return the error Authorization Response in the fragment component of the Redirection URI, as defined in 4.2.2.1 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749] and [OAuth 2.0 Multiple Response Type Encoding Practices](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses) [OAuth.Responses], unless a different Response Mode was specified.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2.2.7. Redirect URI Fragment Handling\n\nSince response parameters are returned in the Redirection URI fragment value, the Client needs to have the User Agent parse the fragment encoded values and pass them to on to the Client's processing logic for consumption. See [Section 15.5.3](https://openid.net/specs/openid-connect-core-1_0.html#FragmentNotes) for implementation notes on URI fragment handling.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2.2.8. Authentication Response Validation\n\nWhen using the Implicit Flow, the Client MUST validate the response as follows:\n\n1. Verify that the response conforms to Section 5 of [[OAuth.Responses\\]](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses).\n2. Follow the validation rules in RFC 6749, especially those in Sections 4.2.2 and 10.12.\n3. Follow the ID Token validation rules in [Section 3.2.2.11](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitIDTValidation).\n4. Follow the Access Token validation rules in [Section 3.2.2.9](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitTokenValidation), unless the `response_type` value used is `id_token`.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2.2.9. Access Token Validation\n\nTo validate an Access Token issued from the Authorization Endpoint with an ID Token, the Client SHOULD do the following:\n\n\n\n1. Hash the octets of the ASCII representation of the `access_token` with the hash algorithm specified in [JWA](https://openid.net/specs/openid-connect-core-1_0.html#JWA) [JWA] for the `alg` Header Parameter of the ID Token's JOSE Header. For instance, if the `alg` is `RS256`, the hash algorithm used is SHA-256.\n2. Take the left-most half of the hash and base64url encode it.\n3. The value of `at_hash` in the ID Token MUST match the value produced in the previous step.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2.2.10. ID Token\n\nThe contents of the ID Token are as described in [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken). When using the Implicit Flow, these additional requirements for the following ID Token Claims apply:\n\n\n\n> - nonce\n>\n>   Use of the `nonce` Claim is REQUIRED for this flow.\n>\n> - at_hash\n>\n>   Access Token hash value. Its value is the base64url encoding of the left-most half of the hash of the octets of the ASCII representation of the `access_token` value, where the hash algorithm used is the hash algorithm used in the `alg` Header Parameter of the ID Token's JOSE Header. For instance, if the `alg` is `RS256`, hash the `access_token` value with SHA-256, then take the left-most 128 bits and base64url encode them. The `at_hash` value is a case sensitive string.\n>\n> - \n>\n>   If the ID Token is issued from the Authorization Endpoint with an `access_token` value, which is the case for the `response_type` value `id_token token`, this is REQUIRED; it MAY NOT be used when no Access Token is issued, which is the case for the `response_type` value `id_token`.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.2.2.11. ID Token Validation\n\nWhen using the Implicit Flow, the contents of the ID Token MUST be validated in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.3.7](https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation), with the exception of the differences specified in this section.\n\n\n\n1. The Client MUST validate the signature of the ID Token according to [JWS](https://openid.net/specs/openid-connect-core-1_0.html#JWS) [JWS] using the algorithm specified in the `alg` Header Parameter of the JOSE Header.\n2. The value of the `nonce` Claim MUST be checked to verify that it is the same value as the one that was sent in the Authentication Request. The Client SHOULD check the `nonce` value for replay attacks. The precise method for detecting replay attacks is Client specific.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3. Authentication using the Hybrid Flow\n\nThis section describes how to perform authentication using the Hybrid Flow. When using the Hybrid Flow, some tokens are returned from the Authorization Endpoint and others are returned from the Token Endpoint. The mechanisms for returning tokens in the Hybrid Flow are specified in [OAuth 2.0 Multiple Response Type Encoding Practices](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses) [OAuth.Responses].\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.1. Hybrid Flow Steps\n\nThe Hybrid Flow follows the following steps:\n\n\n\n1. Client prepares an Authentication Request containing the desired request parameters.\n2. Client sends the request to the Authorization Server.\n3. Authorization Server Authenticates the End-User.\n4. Authorization Server obtains End-User Consent/Authorization.\n5. Authorization Server sends the End-User back to the Client with an Authorization Code and, depending on the Response Type, one or more additional parameters.\n6. Client requests a response using the Authorization Code at the Token Endpoint.\n7. Client receives a response that contains an ID Token and Access Token in the response body.\n8. Client validates the ID Token and retrieves the End-User's Subject Identifier.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.2. Authorization Endpoint\n\nWhen using the Hybrid Flow, the Authorization Endpoint is used in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint), with the exception of the differences specified in this section.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.2.1. Authentication Request\n\nAuthentication Requests are made as defined in [Section 3.1.2.1](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest), except that these Authentication Request parameters are used as follows:\n\n\n\n> - response_type\n>\n>   REQUIRED. OAuth 2.0 Response Type value that determines the authorization processing flow to be used, including what parameters are returned from the endpoints used. When using the Hybrid Flow, this value is `code id_token`, `code token`, or `code id_token token`. The meanings of these values are defined in [OAuth 2.0 Multiple Response Type Encoding Practices](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses) [OAuth.Responses].\n\n\n\nThe following is a non-normative example request using the Hybrid Flow that would be sent by the User Agent to the Authorization Server in response to a corresponding HTTP 302 redirect response by the Client (with line wraps within values for display purposes only):\n\n```\n  GET /authorize?\n    response_type=code%20id_token\n    &client_id=s6BhdRkqt3\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb\n    &scope=openid%20profile%20email\n    &nonce=n-0S6_WzA2Mj\n    &state=af0ifjsldkj HTTP/1.1\n  Host: server.example.com\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.2.2. Authentication Request Validation\n\nWhen using the Hybrid Flow, the Authentication Request is validated in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.2.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequestValidation).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.2.3. Authorization Server Authenticates End-User\n\nWhen using the Hybrid Flow, End-User Authentication is performed in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.2.3](https://openid.net/specs/openid-connect-core-1_0.html#Authenticates).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.2.4. Authorization Server Obtains End-User Consent/Authorization\n\nWhen using the Hybrid Flow, End-User Consent is obtained in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.2.4](https://openid.net/specs/openid-connect-core-1_0.html#Consent).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.2.5. Successful Authentication Response\n\nWhen using the Hybrid Flow, Authentication Responses are made in the same manner as for the Implicit Flow, as defined in [Section 3.2.2.5](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitAuthResponse), with the exception of the differences specified in this section.\n\nThese Authorization Endpoint results are used in the following manner:\n\n\n\n> - access_token\n>\n>   OAuth 2.0 Access Token. This is returned when the `response_type` value used is `code token`, or `code id_token token`. (A `token_type` value is also returned in the same cases.)\n>\n> - id_token\n>\n>   ID Token. This is returned when the `response_type` value used is `code id_token` or `code id_token token`.\n>\n> - code\n>\n>   Authorization Code. This is always returned when using the Hybrid Flow.\n\n\n\nThe following is a non-normative example of a successful response using the Hybrid Flow (with line wraps for the display purposes only):\n\n```\n  HTTP/1.1 302 Found\n  Location: https://client.example.org/cb#\n    code=SplxlOBeZQQYbYS6WxSbIA\n    &id_token=eyJ0 ... NiJ9.eyJ1c ... I6IjIifX0.DeWt4Qu ... ZXso\n    &state=af0ifjsldkj\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.2.6. Authentication Error Response\n\nWhen using the Hybrid Flow, Authorization Error Responses are made in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError), with the exception of the differences specified in this section.\n\nIf the End-User denies the request or the End-User authentication fails, the Authorization Server MUST return the error Authorization Response in the fragment component of the Redirection URI, as defined in 4.2.2.1 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749] and [OAuth 2.0 Multiple Response Type Encoding Practices](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses) [OAuth.Responses], unless a different Response Mode was specified.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.2.7. Redirect URI Fragment Handling\n\nWhen using the Hybrid Flow, the same requirements for Redirection URI fragment parameter handling apply as do for the Implicit Flow, as defined in [Section 3.2.2.7](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitCallback). Also see [Section 15.5.3](https://openid.net/specs/openid-connect-core-1_0.html#FragmentNotes) for implementation notes on URI fragment handling.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.2.8. Authentication Response Validation\n\nWhen using the Hybrid Flow, the Client MUST validate the response as follows:\n\n1. Verify that the response conforms to Section 5 of [[OAuth.Responses\\]](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses).\n2. Follow the validation rules in RFC 6749, especially those in Sections 4.2.2 and 10.12.\n3. Follow the ID Token validation rules in [Section 3.3.2.12](https://openid.net/specs/openid-connect-core-1_0.html#HybridIDTValidation) when the `response_type` value used is `code id_token` or `code id_token token`.\n4. Follow the Access Token validation rules in [Section 3.3.2.9](https://openid.net/specs/openid-connect-core-1_0.html#HybridTokenValidation) when the `response_type` value used is `code token` or `code id_token token`.\n5. Follow the Authorization Code validation rules in [Section 3.3.2.10](https://openid.net/specs/openid-connect-core-1_0.html#CodeValidation) when the `response_type` value used is `code id_token` or `code id_token token`.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.2.9. Access Token Validation\n\nWhen using the Hybrid Flow, Access Tokens returned from the Authorization Endpoint are validated in the same manner as for the Implicit Flow, as defined in [Section 3.2.2.9](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitTokenValidation).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.2.10. Authorization Code Validation\n\nTo validate an Authorization Code issued from the Authorization Endpoint with an ID Token, the Client SHOULD do the following:\n\n\n\n1. Hash the octets of the ASCII representation of the `code` with the hash algorithm specified in [JWA](https://openid.net/specs/openid-connect-core-1_0.html#JWA) [JWA] for the `alg` Header Parameter of the ID Token's JOSE Header. For instance, if the `alg` is `RS256`, the hash algorithm used is SHA-256.\n2. Take the left-most half of the hash and base64url encode it.\n3. The value of `c_hash` in the ID Token MUST match the value produced in the previous step if `c_hash` is present in the ID Token.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.2.11. ID Token\n\nThe contents of the ID Token are as described in [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken). When using the Hybrid Flow, these additional requirements for the following ID Token Claims apply to an ID Token returned from the Authorization Endpoint:\n\n\n\n> - nonce\n>\n>   Use of the `nonce` Claim is REQUIRED for this flow.\n>\n> - at_hash\n>\n>   Access Token hash value. Its value is the base64url encoding of the left-most half of the hash of the octets of the ASCII representation of the `access_token` value, where the hash algorithm used is the hash algorithm used in the `alg` Header Parameter of the ID Token's JOSE Header. For instance, if the `alg` is `RS256`, hash the `access_token` value with SHA-256, then take the left-most 128 bits and base64url encode them. The `at_hash` value is a case sensitive string.\n>\n> - \n>\n>   If the ID Token is issued from the Authorization Endpoint with an `access_token` value, which is the case for the `response_type` value `code id_token token`, this is REQUIRED; otherwise, its inclusion is OPTIONAL.\n>\n> - c_hash\n>\n>   Code hash value. Its value is the base64url encoding of the left-most half of the hash of the octets of the ASCII representation of the `code` value, where the hash algorithm used is the hash algorithm used in the `alg` Header Parameter of the ID Token's JOSE Header. For instance, if the `alg` is `HS512`, hash the `code` value with SHA-512, then take the left-most 256 bits and base64url encode them. The `c_hash` value is a case sensitive string.\n>\n> - \n>\n>   If the ID Token is issued from the Authorization Endpoint with a `code`, which is the case for the `response_type` values `code id_token` and `code id_token token`, this is REQUIRED; otherwise, its inclusion is OPTIONAL.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.2.12. ID Token Validation\n\nWhen using the Hybrid Flow, the contents of an ID Token returned from the Authorization Endpoint MUST be validated in the same manner as for the Implicit Flow, as defined in [Section 3.2.2.11](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitIDTValidation).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.3. Token Endpoint\n\nWhen using the Hybrid Flow, the Token Endpoint is used in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.3](https://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint), with the exception of the differences specified in this section.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.3.1. Token Request\n\nWhen using the Hybrid Flow, Token Requests are made in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.3.1](https://openid.net/specs/openid-connect-core-1_0.html#TokenRequest).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.3.2. Token Request Validation\n\nWhen using the Hybrid Flow, Token Requests are validated in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.3.2](https://openid.net/specs/openid-connect-core-1_0.html#TokenRequestValidation).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.3.3. Successful Token Response\n\nWhen using the Hybrid Flow, Token Responses are made in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.3.3](https://openid.net/specs/openid-connect-core-1_0.html#TokenResponse).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.3.4. Token Error Response\n\nWhen using the Hybrid Flow, Token Error Responses are made in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.3.4](https://openid.net/specs/openid-connect-core-1_0.html#TokenErrorResponse).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.3.5. Token Response Validation\n\nWhen using the Hybrid Flow, Token Responses are validated in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.3.5](https://openid.net/specs/openid-connect-core-1_0.html#TokenResponseValidation).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.3.6. ID Token\n\nWhen using the Hybrid Flow, the contents of an ID Token returned from the Token Endpoint are the same as for an ID Token returned from the Authorization Endpoint, as defined in [Section 3.3.2.11](https://openid.net/specs/openid-connect-core-1_0.html#HybridIDToken), with the exception of the differences specified in this section.\n\nIf an ID Token is returned from both the Authorization Endpoint and from the Token Endpoint, which is the case for the `response_type` values `code id_token` and `code id_token token`, the `iss` and `sub` Claim Values MUST be identical in both ID Tokens. All Claims about the Authentication event present in either SHOULD be present in both. If either ID Token contains Claims about the End-User, any that are present in both SHOULD have the same values in both. Note that the OP MAY choose to return fewer Claims about the End-User from the Authorization Endpoint, for instance, for privacy reasons. The `at_hash` and `c_hash` Claims MAY be omitted from the ID Token returned from the Token Endpoint even when these Claims are present in the ID Token returned from the Authorization Endpoint, because the ID Token and Access Token values returned from the Token Endpoint are already cryptographically bound together by the TLS encryption performed by the Token Endpoint.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.3.7. ID Token Validation\n\nWhen using the Hybrid Flow, the contents of an ID Token returned from the Token Endpoint MUST be validated in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.3.7](https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.3.8. Access Token\n\nIf an Access Token is returned from both the Authorization Endpoint and from the Token Endpoint, which is the case for the `response_type` values `code token` and `code id_token token`, their values MAY be the same or they MAY be different. Note that different Access Tokens might be returned be due to the different security characteristics of the two endpoints and the lifetimes and the access to resources granted by them might also be different.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 3.3.3.9. Access Token Validation\n\nWhen using the Hybrid Flow, the Access Token returned from the Token Endpoint is validated in the same manner as for the Authorization Code Flow, as defined in [Section 3.1.3.8](https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowTokenValidation).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 4. Initiating Login from a Third Party\n\nIn some cases, the login flow is initiated by an OpenID Provider or another party, rather than the Relying Party. In this case, the initiator redirects to the RP at its login initiation endpoint, which requests that the RP send an Authentication Request to a specified OP. This login initiation endpoint can be a deep link at the RP, rather than a default landing page. RPs supporting [OpenID Connect Dynamic Client Registration 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration) [OpenID.Registration] register this endpoint value using the `initiate_login_uri` Registration parameter.\n\nThe party initiating the login request does so by redirecting to the login initiation endpoint at the RP, passing the following parameters:\n\n\n\n> - iss\n>\n>   REQUIRED. Issuer Identifier for the OP that the RP is to send the Authentication Request to. Its value MUST be a URL using the `https` scheme.\n>\n> - login_hint\n>\n>   OPTIONAL. Hint to the Authorization Server about the login identifier the End-User might use to log in. If the client receives a value for this string-valued parameter, it MUST include it in the Authentication Request as the `login_hint` parameter value.\n>\n> - target_link_uri\n>\n>   OPTIONAL. URL that the RP is requested to redirect to after authentication. RPs MUST verify the value of the `target_link_uri` to prevent being used as an open redirector to external sites.\n\n\n\nThe parameters can either be passed as query parameters using the HTTP `GET` method or be passed as HTML form values that are auto-submitted in the User Agent, and thus are transmitted via the HTTP `POST` method.\n\nOther parameters MAY be sent, if defined by extensions. Any parameters used that are not understood MUST be ignored by the Client.\n\nClients SHOULD employ frame busting and other techniques to prevent End-Users from being logged in by third party sites without their knowledge through attacks such as Clickjacking. Refer to Section 4.4.1.9 of [[RFC6819\\]](https://openid.net/specs/openid-connect-core-1_0.html#RFC6819) for more details.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5. Claims\n\nThis section specifies how the Client can obtain Claims about the End-User and the Authentication event. It also defines a standard set of basic profile Claims. Pre-defined sets of Claims can be requested using specific scope values or individual Claims can be requested using the `claims` request parameter. The Claims can come directly from the OpenID Provider or from distributed sources as well.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.1. Standard Claims\n\nThis specification defines a set of standard Claims. They can be requested to be returned either in the UserInfo Response, per [Section 5.3.2](https://openid.net/specs/openid-connect-core-1_0.html#UserInfoResponse), or in the ID Token, per [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken).\n\n\n\n------\n\n\n\n| Member                | Type        | Description                                                  |\n| --------------------- | ----------- | ------------------------------------------------------------ |\n| sub                   | string      | Subject - Identifier for the End-User at the Issuer.         |\n| name                  | string      | End-User's full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User's locale and preferences. |\n| given_name            | string      | Given name(s) or first name(s) of the End-User. Note that in some cultures, people can have multiple given names; all can be present, with the names being separated by space characters. |\n| family_name           | string      | Surname(s) or last name(s) of the End-User. Note that in some cultures, people can have multiple family names or no family name; all can be present, with the names being separated by space characters. |\n| middle_name           | string      | Middle name(s) of the End-User. Note that in some cultures, people can have multiple middle names; all can be present, with the names being separated by space characters. Also note that in some cultures, middle names are not used. |\n| nickname              | string      | Casual name of the End-User that may or may not be the same as the `given_name`. For instance, a `nickname` value of `Mike` might be returned alongside a `given_name` value of `Michael`. |\n| preferred_username    | string      | Shorthand name by which the End-User wishes to be referred to at the RP, such as `janedoe` or `j.doe`. This value MAY be any valid JSON string including special characters such as `@`, `/`, or whitespace. The RP MUST NOT rely upon this value being unique, as discussed in [Section 5.7](https://openid.net/specs/openid-connect-core-1_0.html#ClaimStability). |\n| profile               | string      | URL of the End-User's profile page. The contents of this Web page SHOULD be about the End-User. |\n| picture               | string      | URL of the End-User's profile picture. This URL MUST refer to an image file (for example, a PNG, JPEG, or GIF image file), rather than to a Web page containing an image. Note that this URL SHOULD specifically reference a profile photo of the End-User suitable for displaying when describing the End-User, rather than an arbitrary photo taken by the End-User. |\n| website               | string      | URL of the End-User's Web page or blog. This Web page SHOULD contain information published by the End-User or an organization that the End-User is affiliated with. |\n| email                 | string      | End-User's preferred e-mail address. Its value MUST conform to the [RFC 5322](https://openid.net/specs/openid-connect-core-1_0.html#RFC5322) [RFC5322] addr-spec syntax. The RP MUST NOT rely upon this value being unique, as discussed in [Section 5.7](https://openid.net/specs/openid-connect-core-1_0.html#ClaimStability). |\n| email_verified        | boolean     | True if the End-User's e-mail address has been verified; otherwise false. When this Claim Value is `true`, this means that the OP took affirmative steps to ensure that this e-mail address was controlled by the End-User at the time the verification was performed. The means by which an e-mail address is verified is context-specific, and dependent upon the trust framework or contractual agreements within which the parties are operating. |\n| gender                | string      | End-User's gender. Values defined by this specification are `female` and `male`. Other values MAY be used when neither of the defined values are applicable. |\n| birthdate             | string      | End-User's birthday, represented as an [ISO 8601:2004](https://openid.net/specs/openid-connect-core-1_0.html#ISO8601-2004) [ISO8601‑2004] `YYYY-MM-DD` format. The year MAY be `0000`, indicating that it is omitted. To represent only the year, `YYYY` format is allowed. Note that depending on the underlying platform's date related function, providing just year can result in varying month and day, so the implementers need to take this factor into account to correctly process the dates. |\n| zoneinfo              | string      | String from zoneinfo [[zoneinfo\\]](https://openid.net/specs/openid-connect-core-1_0.html#zoneinfo) time zone database representing the End-User's time zone. For example, `Europe/Paris` or `America/Los_Angeles`. |\n| locale                | string      | End-User's locale, represented as a [BCP47](https://openid.net/specs/openid-connect-core-1_0.html#RFC5646) [RFC5646] language tag. This is typically an [ISO 639-1 Alpha-2](https://openid.net/specs/openid-connect-core-1_0.html#ISO639-1) [ISO639‑1] language code in lowercase and an [ISO 3166-1 Alpha-2](https://openid.net/specs/openid-connect-core-1_0.html#ISO3166-1) [ISO3166‑1] country code in uppercase, separated by a dash. For example, `en-US` or `fr-CA`. As a compatibility note, some implementations have used an underscore as the separator rather than a dash, for example, `en_US`; Relying Parties MAY choose to accept this locale syntax as well. |\n| phone_number          | string      | End-User's preferred telephone number. [E.164](https://openid.net/specs/openid-connect-core-1_0.html#E.164) [E.164] is RECOMMENDED as the format of this Claim, for example, `+1 (425) 555-1212` or `+56 (2) 687 2400`. If the phone number contains an extension, it is RECOMMENDED that the extension be represented using the [RFC 3966](https://openid.net/specs/openid-connect-core-1_0.html#RFC3966) [RFC3966] extension syntax, for example, `+1 (604) 555-1234;ext=5678`. |\n| phone_number_verified | boolean     | True if the End-User's phone number has been verified; otherwise false. When this Claim Value is `true`, this means that the OP took affirmative steps to ensure that this phone number was controlled by the End-User at the time the verification was performed. The means by which a phone number is verified is context-specific, and dependent upon the trust framework or contractual agreements within which the parties are operating. When true, the `phone_number` Claim MUST be in E.164 format and any extensions MUST be represented in RFC 3966 format. |\n| address               | JSON object | End-User's preferred postal address. The value of the `address` member is a JSON [[RFC4627\\]](https://openid.net/specs/openid-connect-core-1_0.html#RFC4627) structure containing some or all of the members defined in [Section 5.1.1](https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim). |\n| updated_at            | number      | Time the End-User's information was last updated. Its value is a JSON number representing the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the date/time. |\n\n\n\n **Table 1: Registered Member Definitions**  \n\n------\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.1.1. Address Claim\n\nThe Address Claim represents a physical mailing address. Implementations MAY return only a subset of the fields of an `address`, depending upon the information available and the End-User's privacy preferences. For example, the `country` and `region` might be returned without returning more fine-grained address information.\n\nImplementations MAY return just the full address as a single string in the formatted sub-field, or they MAY return just the individual component fields using the other sub-fields, or they MAY return both. If both variants are returned, they SHOULD be describing the same address, with the formatted address indicating how the component fields are combined.\n\n\n\n> - formatted\n>\n>   Full mailing address, formatted for display or use on a mailing label. This field MAY contain multiple lines, separated by newlines. Newlines can be represented either as a carriage return/line feed pair (\"\\r\\n\") or as a single line feed character (\"\\n\").\n>\n> - street_address\n>\n>   Full street address component, which MAY include house number, street name, Post Office Box, and multi-line extended street address information. This field MAY contain multiple lines, separated by newlines. Newlines can be represented either as a carriage return/line feed pair (\"\\r\\n\") or as a single line feed character (\"\\n\").\n>\n> - locality\n>\n>   City or locality component.\n>\n> - region\n>\n>   State, province, prefecture, or region component.\n>\n> - postal_code\n>\n>   Zip code or postal code component.\n>\n> - country\n>\n>   Country name component.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.1.2. Additional Claims\n\nWhile this specification defines only a small set of Claims as standard Claims, other Claims MAY be used in conjunction with the standard Claims. When using such Claims, it is RECOMMENDED that collision-resistant names be used for the Claim Names, as described in the [JSON Web Token (JWT)](https://openid.net/specs/openid-connect-core-1_0.html#JWT) [JWT] specification. Alternatively, Private Claim Names can be safely used when naming conflicts are unlikely to arise, as described in the JWT specification. Or, if specific additional Claims will have broad and general applicability, they can be registered with Registered Claim Names, per the JWT specification.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.2. Claims Languages and Scripts\n\nHuman-readable Claim Values and Claim Values that reference human-readable values MAY be represented in multiple languages and scripts. To specify the languages and scripts, [BCP47](https://openid.net/specs/openid-connect-core-1_0.html#RFC5646) [RFC5646] language tags are added to member names, delimited by a `#` character. For example, `family_name#ja-Kana-JP` expresses the Family Name in Katakana in Japanese, which is commonly used to index and represent the phonetics of the Kanji representation of the same represented as `family_name#ja-Hani-JP`. As another example, both `website` and `website#de` Claim Values might be returned, referencing a Web site in an unspecified language and a Web site in German.\n\nSince Claim Names are case sensitive, it is strongly RECOMMENDED that language tag values used in Claim Names be spelled using the character case with which they are registered in the [IANA Language Subtag Registry](https://openid.net/specs/openid-connect-core-1_0.html#IANA.Language) [IANA.Language]. In particular, normally language names are spelled with lowercase characters, region names are spelled with uppercase characters, and scripts are spelled with mixed case characters. However, since BCP47 language tag values are case insensitive, implementations SHOULD interpret the language tag values supplied in a case insensitive manner.\n\nPer the recommendations in BCP47, language tag values for Claims SHOULD only be as specific as necessary. For instance, using `fr` might be sufficient in many contexts, rather than `fr-CA` or `fr-FR`. Where possible, OPs SHOULD try to match requested Claim locales with Claims it has. For instance, if the Client asks for a Claim with a `de` (German) language tag and the OP has a value tagged with `de-CH` (Swiss German) and no generic German value, it would be appropriate for the OP to return the Swiss German value to the Client. (This intentionally moves as much of the complexity of language tag matching to the OP as possible, to simplify Clients.)\n\nOpenID Connect defines the following Authorization Request parameter to enable specify the preferred languages and scripts to be used for the returned Claims:\n\n> - claims_locales\n>\n>   OPTIONAL. End-User's preferred languages and scripts for Claims being returned, represented as a space-separated list of [BCP47](https://openid.net/specs/openid-connect-core-1_0.html#RFC5646) [RFC5646] language tag values, ordered by preference. An error SHOULD NOT result if some or all of the requested locales are not supported by the OpenID Provider.\n\n\n\nWhen the OP determines, either through the `claims_locales` parameter, or by other means, that the End-User and Client are requesting Claims in only one set of languages and scripts, it is RECOMMENDED that OPs return Claims without language tags when they employ this language and script. It is also RECOMMENDED that Clients be written in a manner that they can handle and utilize Claims using language tags.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.3. UserInfo Endpoint\n\nThe UserInfo Endpoint is an OAuth 2.0 Protected Resource that returns Claims about the authenticated End-User. To obtain the requested Claims about the End-User, the Client makes a request to the UserInfo Endpoint using an Access Token obtained through OpenID Connect Authentication. These Claims are normally represented by a JSON object that contains a collection of name and value pairs for the Claims.\n\nCommunication with the UserInfo Endpoint MUST utilize TLS. See [Section 16.17](https://openid.net/specs/openid-connect-core-1_0.html#TLSRequirements) for more information on using TLS.\n\nThe UserInfo Endpoint MUST support the use of the HTTP `GET` and HTTP `POST` methods defined in [RFC 2616](https://openid.net/specs/openid-connect-core-1_0.html#RFC2616) [RFC2616].\n\nThe UserInfo Endpoint MUST accept Access Tokens as [OAuth 2.0 Bearer Token Usage](https://openid.net/specs/openid-connect-core-1_0.html#RFC6750) [RFC6750].\n\nThe UserInfo Endpoint SHOULD support the use of [Cross Origin Resource Sharing (CORS)](https://openid.net/specs/openid-connect-core-1_0.html#CORS) [CORS] and or other methods as appropriate to enable Java Script Clients to access the endpoint.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.3.1. UserInfo Request\n\nThe Client sends the UserInfo Request using either HTTP `GET` or HTTP `POST`. The Access Token obtained from an OpenID Connect Authentication Request MUST be sent as a Bearer Token, per Section 2 of [OAuth 2.0 Bearer Token Usage](https://openid.net/specs/openid-connect-core-1_0.html#RFC6750) [RFC6750].\n\nIt is RECOMMENDED that the request use the HTTP `GET` method and the Access Token be sent using the `Authorization` header field.\n\nThe following is a non-normative example of a UserInfo Request:\n\n```\n  GET /userinfo HTTP/1.1\n  Host: server.example.com\n  Authorization: Bearer SlAV32hkKG\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.3.2. Successful UserInfo Response\n\nThe UserInfo Claims MUST be returned as the members of a JSON object unless a signed or encrypted response was requested during Client Registration. The Claims defined in [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) can be returned, as can additional Claims not specified there.\n\nFor privacy reasons, OpenID Providers MAY elect to not return values for some requested Claims.\n\nIf a Claim is not returned, that Claim Name SHOULD be omitted from the JSON object representing the Claims; it SHOULD NOT be present with a null or empty string value.\n\nThe `sub` (subject) Claim MUST always be returned in the UserInfo Response.\n\nNOTE: Due to the possibility of token substitution attacks (see [Section 16.11](https://openid.net/specs/openid-connect-core-1_0.html#TokenSubstitution)), the UserInfo Response is not guaranteed to be about the End-User identified by the `sub` (subject) element of the ID Token. The `sub` Claim in the UserInfo Response MUST be verified to exactly match the `sub` Claim in the ID Token; if they do not match, the UserInfo Response values MUST NOT be used.\n\nUpon receipt of the UserInfo Request, the UserInfo Endpoint MUST return the JSON Serialization of the UserInfo Response as in [Section 13.3](https://openid.net/specs/openid-connect-core-1_0.html#JSONSerialization) in the HTTP response body unless a different format was specified during Registration [[OpenID.Registration\\]](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration). The UserInfo Endpoint MUST return a content-type header to indicate which format is being returned. The content-type of the HTTP response MUST be `application/json` if the response body is a text JSON object; the response body SHOULD be encoded using UTF-8.\n\nIf the UserInfo Response is signed and/or encrypted, then the Claims are returned in a JWT and the content-type MUST be `application/jwt`. The response MAY be encrypted without also being signed. If both signing and encryption are requested, the response MUST be signed then encrypted, with the result being a Nested JWT, as defined in [[JWT\\]](https://openid.net/specs/openid-connect-core-1_0.html#JWT).\n\nIf signed, the UserInfo Response SHOULD contain the Claims `iss` (issuer) and `aud` (audience) as members. The `iss` value SHOULD be the OP's Issuer Identifier URL. The `aud` value SHOULD be or include the RP's Client ID value.\n\nThe following is a non-normative example of a UserInfo Response:\n\n```\n  HTTP/1.1 200 OK\n  Content-Type: application/json\n\n  {\n   \"sub\": \"248289761001\",\n   \"name\": \"Jane Doe\",\n   \"given_name\": \"Jane\",\n   \"family_name\": \"Doe\",\n   \"preferred_username\": \"j.doe\",\n   \"email\": \"janedoe@example.com\",\n   \"picture\": \"http://example.com/janedoe/me.jpg\"\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.3.3. UserInfo Error Response\n\nWhen an error condition occurs, the UserInfo Endpoint returns an Error Response as defined in Section 3 of [OAuth 2.0 Bearer Token Usage](https://openid.net/specs/openid-connect-core-1_0.html#RFC6750) [RFC6750]. (HTTP errors unrelated to RFC 6750 are returned to the User Agent using the appropriate HTTP status code.)\n\nThe following is a non-normative example of a UserInfo Error Response:\n\n```\n  HTTP/1.1 401 Unauthorized\n  WWW-Authenticate: error=\"invalid_token\",\n    error_description=\"The Access Token expired\"\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.3.4. UserInfo Response Validation\n\nThe Client MUST validate the UserInfo Response as follows:\n\n\n\n1. Verify that the OP that responded was the intended OP through a TLS server certificate check, per [RFC 6125](https://openid.net/specs/openid-connect-core-1_0.html#RFC6125) [RFC6125].\n2. If the Client has provided a `userinfo_encrypted_response_alg` parameter during Registration, decrypt the UserInfo Response using the keys specified during Registration.\n3. If the response was signed, the Client SHOULD validate the signature according to [JWS](https://openid.net/specs/openid-connect-core-1_0.html#JWS) [JWS].\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.4. Requesting Claims using Scope Values\n\nOpenID Connect Clients use `scope` values, as defined in Section 3.3 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749], to specify what access privileges are being requested for Access Tokens. The scopes associated with Access Tokens determine what resources will be available when they are used to access OAuth 2.0 protected endpoints. Protected Resource endpoints MAY perform different actions and return different information based on the scope values and other parameters used when requesting the presented Access Token.\n\nFor OpenID Connect, scopes can be used to request that specific sets of information be made available as Claim Values.\n\nClaims requested by the following scopes are treated by Authorization Servers as Voluntary Claims.\n\nOpenID Connect defines the following `scope` values that are used to request Claims:\n\n\n\n> - profile\n>\n>   OPTIONAL. This scope value requests access to the End-User's default profile Claims, which are: `name`, `family_name`, `given_name`, `middle_name`, `nickname`, `preferred_username`, `profile`, `picture`, `website`, `gender`, `birthdate`, `zoneinfo`, `locale`, and `updated_at`.\n>\n> - email\n>\n>   OPTIONAL. This scope value requests access to the `email` and `email_verified` Claims.\n>\n> - address\n>\n>   OPTIONAL. This scope value requests access to the `address` Claim.\n>\n> - phone\n>\n>   OPTIONAL. This scope value requests access to the `phone_number` and `phone_number_verified` Claims.\n\n\n\nMultiple scope values MAY be used by creating a space delimited, case sensitive list of ASCII scope values.\n\nThe Claims requested by the `profile`, `email`, `address`, and `phone` scope values are returned from the UserInfo Endpoint, as described in [Section 5.3.2](https://openid.net/specs/openid-connect-core-1_0.html#UserInfoResponse), when a `response_type` value is used that results in an Access Token being issued. However, when no Access Token is issued (which is the case for the `response_type` value `id_token`), the resulting Claims are returned in the ID Token.\n\nIn some cases, the End-User will be given the option to have the OpenID Provider decline to provide some or all information requested by RPs. To minimize the amount of information that the End-User is being asked to disclose, an RP can elect to only request a subset of the information available from the UserInfo Endpoint.\n\n\n\nThe following is a non-normative example of an unencoded `scope` request:\n\n```\n  scope=openid profile email phone\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.5. Requesting Claims using the \"claims\" Request Parameter\n\nOpenID Connect defines the following Authorization Request parameter to enable requesting individual Claims and specifying parameters that apply to the requested Claims:\n\n> - claims\n>\n>   OPTIONAL. This parameter is used to request that specific Claims be returned. The value is a JSON object listing the requested Claims.\n\n\n\nThe `claims` Authentication Request parameter requests that specific Claims be returned from the UserInfo Endpoint and/or in the ID Token. It is represented as a JSON object containing lists of Claims being requested from these locations. Properties of the Claims being requested MAY also be specified.\n\nSupport for the `claims` parameter is OPTIONAL. Should an OP not support this parameter and an RP uses it, the OP SHOULD return a set of Claims to the RP that it believes would be useful to the RP and the End-User using whatever heuristics it believes are appropriate. The `claims_parameter_supported` Discovery result indicates whether the OP supports this parameter.\n\nThe `claims` parameter value is represented in an OAuth 2.0 request as UTF-8 encoded JSON (which ends up being form-urlencoded when passed as an OAuth parameter). When used in a Request Object value, per [Section 6.1](https://openid.net/specs/openid-connect-core-1_0.html#RequestObject), the JSON is used as the value of the `claims` member.\n\nThe top-level members of the Claims request JSON object are:\n\n> - userinfo\n>\n>   OPTIONAL. Requests that the listed individual Claims be returned from the UserInfo Endpoint. If present, the listed Claims are being requested to be added to any Claims that are being requested using `scope` values. If not present, the Claims being requested from the UserInfo Endpoint are only those requested using `scope` values.\n>\n> - \n>\n>   When the `userinfo` member is used, the request MUST also use a `response_type` value that results in an Access Token being issued to the Client for use at the UserInfo Endpoint.\n>\n> - id_token\n>\n>   OPTIONAL. Requests that the listed individual Claims be returned in the ID Token. If present, the listed Claims are being requested to be added to the default Claims in the ID Token. If not present, the default ID Token Claims are requested, as per the ID Token definition in [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken) and per the additional per-flow ID Token requirements in Sections [3.1.3.6](https://openid.net/specs/openid-connect-core-1_0.html#CodeIDToken), [3.2.2.10](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitIDToken), [3.3.2.11](https://openid.net/specs/openid-connect-core-1_0.html#HybridIDToken), and [3.3.3.6](https://openid.net/specs/openid-connect-core-1_0.html#HybridIDToken2).\n\nOther members MAY be present. Any members used that are not understood MUST be ignored.\n\n\n\nAn example Claims request is as follows:\n\n```\n  {\n   \"userinfo\":\n    {\n     \"given_name\": {\"essential\": true},\n     \"nickname\": null,\n     \"email\": {\"essential\": true},\n     \"email_verified\": {\"essential\": true},\n     \"picture\": null,\n     \"http://example.info/claims/groups\": null\n    },\n   \"id_token\":\n    {\n     \"auth_time\": {\"essential\": true},\n     \"acr\": {\"values\": [\"urn:mace:incommon:iap:silver\"] }\n    }\n  }\n```\n\nNote that a Claim that is not in the standard set defined in [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims), the (example) `http://example.info/claims/groups` Claim, is being requested. Using the `claims` parameter is the only way to request Claims outside the standard set. It is also the only way to request specific combinations of the standard Claims that cannot be specified using scope values.\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.5.1. Individual Claims Requests\n\nThe `userinfo` and `id_token` members of the `claims` request both are JSON objects with the names of the individual Claims being requested as the member names. The member values MUST be one of the following:\n\n> - null\n>\n>   Indicates that this Claim is being requested in the default manner. In particular, this is a Voluntary Claim. For instance, the Claim request:`  \"given_name\": null `requests the `given_name` Claim in the default manner.\n>\n> - JSON Object\n>\n>   Used to provide additional information about the Claim being requested. This specification defines the following members:essentialOPTIONAL. Indicates whether the Claim being requested is an Essential Claim. If the value is `true`, this indicates that the Claim is an Essential Claim. For instance, the Claim request:`  \"auth_time\": {\"essential\": true} `can be used to specify that it is Essential to return an `auth_time` Claim Value.If the value is `false`, it indicates that it is a Voluntary Claim. The default is `false`.By requesting Claims as Essential Claims, the RP indicates to the End-User that releasing these Claims will ensure a smooth authorization for the specific task requested by the End-User. Note that even if the Claims are not available because the End-User did not authorize their release or they are not present, the Authorization Server MUST NOT generate an error when Claims are not returned, whether they are Essential or Voluntary, unless otherwise specified in the description of the specific claim.valueOPTIONAL. Requests that the Claim be returned with a particular value. For instance the Claim request:`  \"sub\": {\"value\": \"248289761001\"} `can be used to specify that the request apply to the End-User with Subject Identifier `248289761001`.The value of the `value` member MUST be a valid value for the Claim being requested. Definitions of individual Claims can include requirements on how and whether the `value` qualifier is to be used when requesting that Claim.valuesOPTIONAL. Requests that the Claim be returned with one of a set of values, with the values appearing in order of preference. For instance the Claim request:`  \"acr\": {\"essential\": true,          \"values\": [\"urn:mace:incommon:iap:silver\",                     \"urn:mace:incommon:iap:bronze\"]} `specifies that it is Essential that the `acr` Claim be returned with either the value `urn:mace:incommon:iap:silver` or `urn:mace:incommon:iap:bronze`.The values in the `values` member array MUST be valid values for the Claim being requested. Definitions of individual Claims can include requirements on how and whether the `values` qualifier is to be used when requesting that Claim.Other members MAY be defined to provide additional information about the requested Claims. Any members used that are not understood MUST be ignored.\n\n\n\nNote that when the `claims` request parameter is supported, the scope values that request Claims, as defined in [Section 5.4](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims), are effectively shorthand methods for requesting sets of individual Claims. For example, using the scope value `openid email` and a `response_type` that returns an Access Token is equivalent to using the scope value `openid` and the following request for individual Claims.\n\nEquivalent of using the `email` scope value:\n\n```\n  {\n   \"userinfo\":\n    {\n     \"email\": null,\n     \"email_verified\": null\n    }\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.5.1.1. Requesting the \"acr\" Claim\n\nIf the `acr` Claim is requested as an Essential Claim for the ID Token with a `values` parameter requesting specific Authentication Context Class Reference values and the implementation supports the `claims` parameter, the Authorization Server MUST return an `acr` Claim Value that matches one of the requested values. The Authorization Server MAY ask the End-User to re-authenticate with additional factors to meet this requirement. If this is an Essential Claim and the requirement cannot be met, then the Authorization Server MUST treat that outcome as a failed authentication attempt.\n\nNote that the RP MAY request the `acr` Claim as a Voluntary Claim by using the `acr_values` request parameter or by not including \"essential\": true in an individual `acr` Claim request. If the Claim is not Essential and a requested value cannot be provided, the Authorization Server SHOULD return the session's current `acr` as the value of the `acr` Claim. If the Claim is not Essential, the Authorization Server is not required to provide this Claim in its response.\n\nIf the client requests the `acr` Claim using both the `acr_values` request parameter and an individual `acr` Claim request for the ID Token listing specific requested values, the resulting behavior is unspecified.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.5.2. Languages and Scripts for Individual Claims\n\nAs described in [Section 5.2](https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts), human-readable Claim Values and Claim Values that reference human-readable values MAY be represented in multiple languages and scripts. Within a request for individual Claims, requested languages and scripts for particular Claims MAY be requested by including Claim Names that contain `#`-separated [BCP47](https://openid.net/specs/openid-connect-core-1_0.html#RFC5646) [RFC5646] language tags in the Claims request, using the Claim Name syntax specified in [Section 5.2](https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts). For example, a Family Name in Katakana in Japanese can be requested using the Claim Name `family_name#ja-Kana-JP` and a Kanji representation of the Family Name in Japanese can be requested using the Claim Name `family_name#ja-Hani-JP`. A German-language Web site can be requested with the Claim Name `website#de`.\n\nIf an OP receives a request for human-readable Claims in a language and script that it doesn't have, any versions of those Claims returned that don't use the requested language and script SHOULD use a language tag in the Claim Name.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.6. Claim Types\n\nThree representations of Claim Values are defined by this specification:\n\n\n\n> - Normal Claims\n>\n>   Claims that are directly asserted by the OpenID Provider.\n>\n> - Aggregated Claims\n>\n>   Claims that are asserted by a Claims Provider other than the OpenID Provider but are returned by OpenID Provider.\n>\n> - Distributed Claims\n>\n>   Claims that are asserted by a Claims Provider other than the OpenID Provider but are returned as references by the OpenID Provider.\n\n\n\nNormal Claims MUST be supported. Support for Aggregated Claims and Distributed Claims is OPTIONAL.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.6.1. Normal Claims\n\nNormal Claims are represented as members in a JSON object. The Claim Name is the member name and the Claim Value is the member value.\n\nThe following is a non-normative response containing Normal Claims:\n\n```\n  {\n   \"name\": \"Jane Doe\",\n   \"given_name\": \"Jane\",\n   \"family_name\": \"Doe\",\n   \"email\": \"janedoe@example.com\",\n   \"picture\": \"http://example.com/janedoe/me.jpg\"\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.6.2. Aggregated and Distributed Claims\n\nAggregated and distributed Claims are represented by using special `_claim_names` and `_claim_sources` members of the JSON object containing the Claims.\n\n\n\n> - _claim_names\n>\n>   JSON object whose member names are the Claim Names for the Aggregated and Distributed Claims. The member values are references to the member names in the `_claim_sources` member from which the actual Claim Values can be retrieved.\n>\n> - _claim_sources\n>\n>   JSON object whose member names are referenced by the member values of the `_claim_names` member. The member values contain sets of Aggregated Claims or reference locations for Distributed Claims. The member values can have one of the following formats depending on whether it is providing Aggregated or Distributed Claims:Aggregated ClaimsJSON object that MUST contain the `JWT` member whose value is a [JWT](https://openid.net/specs/openid-connect-core-1_0.html#JWT) [JWT] that MUST contain all the Claims in the `_claim_names` object that references the corresponding `_claim_sources` member. Other members MAY be present. Any members used that are not understood MUST be ignored.JWTREQUIRED. JWT containing Claim Values.The JWT SHOULD NOT contain a `sub` (subject) Claim unless its value is an identifier for the End-User at the Claims Provider (and not for the OpenID Provider or another party); this typically means that a `sub` Claim SHOULD NOT be provided.Distributed ClaimsJSON object that contains the following members and values:endpointREQUIRED. OAuth 2.0 resource endpoint from which the associated Claim can be retrieved. The endpoint URL MUST return the Claim as a JWT.access_tokenOPTIONAL. Access Token enabling retrieval of the Claims from the endpoint URL by using the [OAuth 2.0 Bearer Token Usage](https://openid.net/specs/openid-connect-core-1_0.html#RFC6750) [RFC6750] protocol. Claims SHOULD be requested using the Authorization Request header field and Claims Providers MUST support this method. If the Access Token is not available, RPs MAY need to retrieve the Access Token out of band or use an Access Token that was pre-negotiated between the Claims Provider and RP, or the Claims Provider MAY reauthenticate the End-User and/or reauthorize the RP.A `sub` (subject) Claim SHOULD NOT be returned from the Claims Provider unless its value is an identifier for the End-User at the Claims Provider (and not for the OpenID Provider or another party); this typically means that a `sub` Claim SHOULD NOT be provided.\n\n\n\nIn general, it is up to the OP when it is appropriate to use Aggregated Claims and Distributed Claims. In some cases, information about when to use what Claim Types might be negotiated out of band between RPs and OPs.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.6.2.1. Example of Aggregated Claims\n\nIn this non-normative example, Claims from Claims Provider A are combined with other Claims held by the OpenID provider, with the Claims from Claims Provider A being returned as Aggregated Claims.\n\n\n\nIn this example, these Claims about Jane Doe have been issued by Claims Provider A:\n\n```\n  {\n   \"address\": {\n     \"street_address\": \"1234 Hollywood Blvd.\",\n     \"locality\": \"Los Angeles\",\n     \"region\": \"CA\",\n     \"postal_code\": \"90210\",\n     \"country\": \"US\"},\n   \"phone_number\": \"+1 (310) 123-4567\"\n  }\n```\n\nClaims Provider A signs the JSON Claims, representing them in a signed JWT: jwt_header.jwt_part2.jwt_part3. It is this JWT that is used by the OpenID Provider.\n\n\n\nIn this example, this JWT containing Jane Doe's Aggregated Claims from Claims Provider A is combined with other Normal Claims, and returned as the following set of Claims:\n\n```\n  {\n   \"name\": \"Jane Doe\",\n   \"given_name\": \"Jane\",\n   \"family_name\": \"Doe\",\n   \"birthdate\": \"0000-03-22\",\n   \"eye_color\": \"blue\",\n   \"email\": \"janedoe@example.com\",\n   \"_claim_names\": {\n     \"address\": \"src1\",\n     \"phone_number\": \"src1\"\n   },\n   \"_claim_sources\": {\n     \"src1\": {\"JWT\": \"jwt_header.jwt_part2.jwt_part3\"}\n   }\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.6.2.2. Example of Distributed Claims\n\nIn this non-normative example, the OpenID Provider combines Normal Claims that it holds with references to Claims held by two different Claims Providers, B and C, incorporating references to some of the Claims held by B and C as Distributed Claims.\n\n\n\nIn this example, these Claims about Jane Doe are held by Claims Provider B (Jane Doe's bank):\n\n```\n  {\n   \"shipping_address\": {\n     \"street_address\": \"1234 Hollywood Blvd.\",\n     \"locality\": \"Los Angeles\",\n     \"region\": \"CA\",\n     \"postal_code\": \"90210\",\n     \"country\": \"US\"},\n   \"payment_info\": \"Some_Card 1234 5678 9012 3456\",\n   \"phone_number\": \"+1 (310) 123-4567\"\n  }\n```\n\n\n\nAlso in this example, this Claim about Jane Doe is held by Claims Provider C (a credit agency):\n\n```\n  {\n   \"credit_score\": 650\n  }\n```\n\n\n\nThe OpenID Provider returns Jane Doe's Claims along with references to the Distributed Claims from Claims Provider B and Claims Provider C by sending the Access Tokens and URLs of locations from which the Distributed Claims can be retrieved:\n\n```\n  {\n   \"name\": \"Jane Doe\",\n   \"given_name\": \"Jane\",\n   \"family_name\": \"Doe\",\n   \"email\": \"janedoe@example.com\",\n   \"birthdate\": \"0000-03-22\",\n   \"eye_color\": \"blue\",\n   \"_claim_names\": {\n     \"payment_info\": \"src1\",\n     \"shipping_address\": \"src1\",\n     \"credit_score\": \"src2\"\n    },\n   \"_claim_sources\": {\n     \"src1\": {\"endpoint\":\n                \"https://bank.example.com/claim_source\"},\n     \"src2\": {\"endpoint\":\n                \"https://creditagency.example.com/claims_here\",\n              \"access_token\": \"ksj3n283dke\"}\n   }\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 5.7. Claim Stability and Uniqueness\n\nThe `sub` (subject) and `iss` (issuer) Claims, used together, are the only Claims that an RP can rely upon as a stable identifier for the End-User, since the `sub` Claim MUST be locally unique and never reassigned within the Issuer for a particular End-User, as described in [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken). Therefore, the only guaranteed unique identifier for a given End-User is the combination of the `iss` Claim and the `sub` Claim.\n\nAll other Claims carry no such guarantees across different issuers in terms of stability over time or uniqueness across users, and Issuers are permitted to apply local restrictions and policies. For instance, an Issuer MAY re-use an `email` Claim Value across different End-Users at different points in time, and the claimed `email` address for a given End-User MAY change over time. Therefore, other Claims such as `email`, `phone_number`, and `preferred_username` and MUST NOT be used as unique identifiers for the End-User.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 6. Passing Request Parameters as JWTs\n\nOpenID Connect defines the following Authorization Request parameters to enable Authentication Requests to be signed and optionally encrypted:\n\n> - request\n>\n>   OPTIONAL. This parameter enables OpenID Connect requests to be passed in a single, self-contained parameter and to be optionally signed and/or encrypted. The parameter value is a Request Object value, as specified in [Section 6.1](https://openid.net/specs/openid-connect-core-1_0.html#RequestObject). It represents the request as a JWT whose Claims are the request parameters.\n>\n> - request_uri\n>\n>   OPTIONAL. This parameter enables OpenID Connect requests to be passed by reference, rather than by value. The `request_uri` value is a URL using the `https` scheme referencing a resource containing a Request Object value, which is a JWT containing the request parameters.\n\n\n\nRequests using these parameters are represented as JWTs, which are respectively passed by value or by reference. The ability to pass requests by reference is particularly useful for large requests. If one of these parameters is used, the other MUST NOT be used in the same request.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 6.1. Passing a Request Object by Value\n\nThe `request` Authorization Request parameter enables OpenID Connect requests to be passed in a single, self-contained parameter and to be optionally signed and/or encrypted. It represents the request as a JWT whose Claims are the request parameters specified in [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint). This JWT is called a Request Object.\n\nSupport for the `request` parameter is OPTIONAL. The `request_parameter_supported` Discovery result indicates whether the OP supports this parameter. Should an OP not support this parameter and an RP uses it, the OP MUST return the `request_not_supported` error.\n\nWhen the `request` parameter is used, the OpenID Connect request parameter values contained in the JWT supersede those passed using the OAuth 2.0 request syntax. However, parameters MAY also be passed using the OAuth 2.0 request syntax even when a Request Object is used; this would typically be done to enable a cached, pre-signed (and possibly pre-encrypted) Request Object value to be used containing the fixed request parameters, while parameters that can vary with each request, such as `state` and `nonce`, are passed as OAuth 2.0 parameters.\n\nSo that the request is a valid OAuth 2.0 Authorization Request, values for the `response_type` and `client_id` parameters MUST be included using the OAuth 2.0 request syntax, since they are REQUIRED by OAuth 2.0. The values for these parameters MUST match those in the Request Object, if present.\n\nEven if a `scope` parameter is present in the Request Object value, a `scope` parameter MUST always be passed using the OAuth 2.0 request syntax containing the `openid` scope value to indicate to the underlying OAuth 2.0 logic that this is an OpenID Connect request.\n\nThe Request Object MAY be signed or unsigned (plaintext). When it is plaintext, this is indicated by use of the `none` algorithm [[JWA\\]](https://openid.net/specs/openid-connect-core-1_0.html#JWA) in the JOSE Header. If signed, the Request Object SHOULD contain the Claims `iss` (issuer) and `aud` (audience) as members. The `iss` value SHOULD be the Client ID of the RP, unless it was signed by a different party than the RP. The `aud` value SHOULD be or include the OP's Issuer Identifier URL.\n\nThe Request Object MAY also be encrypted using [JWE](https://openid.net/specs/openid-connect-core-1_0.html#JWE) [JWE] and MAY be encrypted without also being signed. If both signing and encryption are performed, it MUST be signed then encrypted, with the result being a Nested JWT, as defined in [[JWT\\]](https://openid.net/specs/openid-connect-core-1_0.html#JWT).\n\n`request` and `request_uri` parameters MUST NOT be included in Request Objects.\n\n\n\nThe following is a non-normative example of the Claims in a Request Object before base64url encoding and signing:\n\n```\n  {\n   \"iss\": \"s6BhdRkqt3\",\n   \"aud\": \"https://server.example.com\",\n   \"response_type\": \"code id_token\",\n   \"client_id\": \"s6BhdRkqt3\",\n   \"redirect_uri\": \"https://client.example.org/cb\",\n   \"scope\": \"openid\",\n   \"state\": \"af0ifjsldkj\",\n   \"nonce\": \"n-0S6_WzA2Mj\",\n   \"max_age\": 86400,\n   \"claims\":\n    {\n     \"userinfo\":\n      {\n       \"given_name\": {\"essential\": true},\n       \"nickname\": null,\n       \"email\": {\"essential\": true},\n       \"email_verified\": {\"essential\": true},\n       \"picture\": null\n      },\n     \"id_token\":\n      {\n       \"gender\": null,\n       \"birthdate\": {\"essential\": true},\n       \"acr\": {\"values\": [\"urn:mace:incommon:iap:silver\"]}\n      }\n    }\n  }\n```\n\nSigning it with the `RS256` algorithm results in this Request Object value (with line wraps within values for display purposes only):\n\n```\n  eyJhbGciOiJSUzI1NiIsImtpZCI6ImsyYmRjIn0.ew0KICJpc3MiOiAiczZCaGRSa3\n  F0MyIsDQogImF1ZCI6ICJodHRwczovL3NlcnZlci5leGFtcGxlLmNvbSIsDQogInJl\n  c3BvbnNlX3R5cGUiOiAiY29kZSBpZF90b2tlbiIsDQogImNsaWVudF9pZCI6ICJzNk\n  JoZFJrcXQzIiwNCiAicmVkaXJlY3RfdXJpIjogImh0dHBzOi8vY2xpZW50LmV4YW1w\n  bGUub3JnL2NiIiwNCiAic2NvcGUiOiAib3BlbmlkIiwNCiAic3RhdGUiOiAiYWYwaW\n  Zqc2xka2oiLA0KICJub25jZSI6ICJuLTBTNl9XekEyTWoiLA0KICJtYXhfYWdlIjog\n  ODY0MDAsDQogImNsYWltcyI6IA0KICB7DQogICAidXNlcmluZm8iOiANCiAgICB7DQ\n  ogICAgICJnaXZlbl9uYW1lIjogeyJlc3NlbnRpYWwiOiB0cnVlfSwNCiAgICAgIm5p\n  Y2tuYW1lIjogbnVsbCwNCiAgICAgImVtYWlsIjogeyJlc3NlbnRpYWwiOiB0cnVlfS\n  wNCiAgICAgImVtYWlsX3ZlcmlmaWVkIjogeyJlc3NlbnRpYWwiOiB0cnVlfSwNCiAg\n  ICAgInBpY3R1cmUiOiBudWxsDQogICAgfSwNCiAgICJpZF90b2tlbiI6IA0KICAgIH\n  sNCiAgICAgImdlbmRlciI6IG51bGwsDQogICAgICJiaXJ0aGRhdGUiOiB7ImVzc2Vu\n  dGlhbCI6IHRydWV9LA0KICAgICAiYWNyIjogeyJ2YWx1ZXMiOiBbInVybjptYWNlOm\n  luY29tbW9uOmlhcDpzaWx2ZXIiXX0NCiAgICB9DQogIH0NCn0.nwwnNsk1-Zkbmnvs\n  F6zTHm8CHERFMGQPhos-EJcaH4Hh-sMgk8ePrGhw_trPYs8KQxsn6R9Emo_wHwajyF\n  KzuMXZFSZ3p6Mb8dkxtVyjoy2GIzvuJT_u7PkY2t8QU9hjBcHs68PkgjDVTrG1uRTx\n  0GxFbuPbj96tVuj11pTnmFCUR6IEOXKYr7iGOCRB3btfJhM0_AKQUfqKnRlrRscc8K\n  ol-cSLWoYE9l5QqholImzjT_cMnNIznW9E7CDyWXTsO70xnB4SkG6pXfLSjLLlxmPG\n  iyon_-Te111V8uE83IlzCYIb_NMXvtTIVc1jpspnTSD7xMbpL-2QgwUsAlMGzw\n```\n\nThe following RSA public key, represented in JWK format, can be used to validate the Request Object signature in this and subsequent Request Object examples (with line wraps within values for display purposes only):\n\n```\n  {\n   \"kty\":\"RSA\",\n   \"kid\":\"k2bdc\",\n   \"n\":\"y9Lqv4fCp6Ei-u2-ZCKq83YvbFEk6JMs_pSj76eMkddWRuWX2aBKGHAtKlE5P\n        7_vn__PCKZWePt3vGkB6ePgzAFu08NmKemwE5bQI0e6kIChtt_6KzT5OaaXDF\n        I6qCLJmk51Cc4VYFaxgqevMncYrzaW_50mZ1yGSFIQzLYP8bijAHGVjdEFgZa\n        ZEN9lsn_GdWLaJpHrB3ROlS50E45wxrlg9xMncVb8qDPuXZarvghLL0HzOuYR\n        adBJVoWZowDNTpKpk2RklZ7QaBO7XDv3uR7s_sf2g-bAjSYxYUGsqkNA9b3xV\n        W53am_UZZ3tZbFTIh557JICWKHlWj5uzeJXaw\",\n   \"e\":\"AQAB\"\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 6.1.1. Request using the \"request\" Request Parameter\n\nThe Client sends the Authorization Request to the Authorization Endpoint.\n\n\n\nThe following is a non-normative example of an Authorization Request using the `request` parameter (with line wraps within values for display purposes only):\n\n```\n  https://server.example.com/authorize?\n    response_type=code%20id_token\n    &client_id=s6BhdRkqt3\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb\n    &scope=openid\n    &state=af0ifjsldkj\n    &nonce=n-0S6_WzA2Mj\n    &request=eyJhbGciOiJSUzI1NiIsImtpZCI6ImsyYmRjIn0.ew0KICJpc3MiOiA\n    iczZCaGRSa3F0MyIsDQogImF1ZCI6ICJodHRwczovL3NlcnZlci5leGFtcGxlLmN\n    vbSIsDQogInJlc3BvbnNlX3R5cGUiOiAiY29kZSBpZF90b2tlbiIsDQogImNsaWV\n    udF9pZCI6ICJzNkJoZFJrcXQzIiwNCiAicmVkaXJlY3RfdXJpIjogImh0dHBzOi8\n    vY2xpZW50LmV4YW1wbGUub3JnL2NiIiwNCiAic2NvcGUiOiAib3BlbmlkIiwNCiA\n    ic3RhdGUiOiAiYWYwaWZqc2xka2oiLA0KICJub25jZSI6ICJuLTBTNl9XekEyTWo\n    iLA0KICJtYXhfYWdlIjogODY0MDAsDQogImNsYWltcyI6IA0KICB7DQogICAidXN\n    lcmluZm8iOiANCiAgICB7DQogICAgICJnaXZlbl9uYW1lIjogeyJlc3NlbnRpYWw\n    iOiB0cnVlfSwNCiAgICAgIm5pY2tuYW1lIjogbnVsbCwNCiAgICAgImVtYWlsIjo\n    geyJlc3NlbnRpYWwiOiB0cnVlfSwNCiAgICAgImVtYWlsX3ZlcmlmaWVkIjogeyJ\n    lc3NlbnRpYWwiOiB0cnVlfSwNCiAgICAgInBpY3R1cmUiOiBudWxsDQogICAgfSw\n    NCiAgICJpZF90b2tlbiI6IA0KICAgIHsNCiAgICAgImdlbmRlciI6IG51bGwsDQo\n    gICAgICJiaXJ0aGRhdGUiOiB7ImVzc2VudGlhbCI6IHRydWV9LA0KICAgICAiYWN\n    yIjogeyJ2YWx1ZXMiOiBbInVybjptYWNlOmluY29tbW9uOmlhcDpzaWx2ZXIiXX0\n    NCiAgICB9DQogIH0NCn0.nwwnNsk1-ZkbmnvsF6zTHm8CHERFMGQPhos-EJcaH4H\n    h-sMgk8ePrGhw_trPYs8KQxsn6R9Emo_wHwajyFKzuMXZFSZ3p6Mb8dkxtVyjoy2\n    GIzvuJT_u7PkY2t8QU9hjBcHs68PkgjDVTrG1uRTx0GxFbuPbj96tVuj11pTnmFC\n    UR6IEOXKYr7iGOCRB3btfJhM0_AKQUfqKnRlrRscc8Kol-cSLWoYE9l5QqholImz\n    jT_cMnNIznW9E7CDyWXTsO70xnB4SkG6pXfLSjLLlxmPGiyon_-Te111V8uE83Il\n    zCYIb_NMXvtTIVc1jpspnTSD7xMbpL-2QgwUsAlMGzw\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 6.2. Passing a Request Object by Reference\n\nThe `request_uri` Authorization Request parameter enables OpenID Connect requests to be passed by reference, rather than by value. This parameter is used identically to the `request` parameter, other than that the Request Object value is retrieved from the resource at the specified URL, rather than passed by value.\n\nThe `request_uri_parameter_supported` Discovery result indicates whether the OP supports this parameter. Should an OP not support this parameter and an RP uses it, the OP MUST return the `request_uri_not_supported` error.\n\nWhen the `request_uri` parameter is used, the OpenID Connect request parameter values contained in the referenced JWT supersede those passed using the OAuth 2.0 request syntax. However, parameters MAY also be passed using the OAuth 2.0 request syntax even when a `request_uri` is used; this would typically be done to enable a cached, pre-signed (and possibly pre-encrypted) Request Object value to be used containing the fixed request parameters, while parameters that can vary with each request, such as `state` and `nonce`, are passed as OAuth 2.0 parameters.\n\nSo that the request is a valid OAuth 2.0 Authorization Request, values for the `response_type` and `client_id` parameters MUST be included using the OAuth 2.0 request syntax, since they are REQUIRED by OAuth 2.0. The values for these parameters MUST match those in the Request Object, if present.\n\nEven if a `scope` parameter is present in the referenced Request Object, a `scope` parameter MUST always be passed using the OAuth 2.0 request syntax containing the `openid` scope value to indicate to the underlying OAuth 2.0 logic that this is an OpenID Connect request.\n\nServers MAY cache the contents of the resources referenced by Request URIs. If the contents of the referenced resource could ever change, the URI SHOULD include the base64url encoded SHA-256 hash of the referenced resource contents as the fragment component of the URI. If the fragment value used for a URI changes, that signals the server that any cached value for that URI with the old fragment value is no longer valid.\n\nNote that Clients MAY pre-register `request_uri` values using the `request_uris` parameter defined in Section 2.1 of the [OpenID Connect Dynamic Client Registration 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration) [OpenID.Registration] specification. OPs can require that `request_uri` values used be pre-registered with the `require_request_uri_registration` discovery parameter.\n\nThe entire Request URI MUST NOT exceed 512 ASCII characters.\n\nThe contents of the resource referenced by the URL MUST be a Request Object. The scheme used in the `request_uri` value MUST be `https`, unless the target Request Object is signed in a way that is verifiable by the Authorization Server. The `request_uri` value MUST be reachable by the Authorization Server, and SHOULD be reachable by the Client.\n\n\n\nThe following is a non-normative example of the contents of a Request Object resource that can be referenced by a `request_uri` (with line wraps within values for display purposes only):\n\n```\n  eyJhbGciOiJSUzI1NiIsImtpZCI6ImsyYmRjIn0.ew0KICJpc3MiOiAiczZCaGRSa3\n  F0MyIsDQogImF1ZCI6ICJodHRwczovL3NlcnZlci5leGFtcGxlLmNvbSIsDQogInJl\n  c3BvbnNlX3R5cGUiOiAiY29kZSBpZF90b2tlbiIsDQogImNsaWVudF9pZCI6ICJzNk\n  JoZFJrcXQzIiwNCiAicmVkaXJlY3RfdXJpIjogImh0dHBzOi8vY2xpZW50LmV4YW1w\n  bGUub3JnL2NiIiwNCiAic2NvcGUiOiAib3BlbmlkIiwNCiAic3RhdGUiOiAiYWYwaW\n  Zqc2xka2oiLA0KICJub25jZSI6ICJuLTBTNl9XekEyTWoiLA0KICJtYXhfYWdlIjog\n  ODY0MDAsDQogImNsYWltcyI6IA0KICB7DQogICAidXNlcmluZm8iOiANCiAgICB7DQ\n  ogICAgICJnaXZlbl9uYW1lIjogeyJlc3NlbnRpYWwiOiB0cnVlfSwNCiAgICAgIm5p\n  Y2tuYW1lIjogbnVsbCwNCiAgICAgImVtYWlsIjogeyJlc3NlbnRpYWwiOiB0cnVlfS\n  wNCiAgICAgImVtYWlsX3ZlcmlmaWVkIjogeyJlc3NlbnRpYWwiOiB0cnVlfSwNCiAg\n  ICAgInBpY3R1cmUiOiBudWxsDQogICAgfSwNCiAgICJpZF90b2tlbiI6IA0KICAgIH\n  sNCiAgICAgImdlbmRlciI6IG51bGwsDQogICAgICJiaXJ0aGRhdGUiOiB7ImVzc2Vu\n  dGlhbCI6IHRydWV9LA0KICAgICAiYWNyIjogeyJ2YWx1ZXMiOiBbInVybjptYWNlOm\n  luY29tbW9uOmlhcDpzaWx2ZXIiXX0NCiAgICB9DQogIH0NCn0.nwwnNsk1-Zkbmnvs\n  F6zTHm8CHERFMGQPhos-EJcaH4Hh-sMgk8ePrGhw_trPYs8KQxsn6R9Emo_wHwajyF\n  KzuMXZFSZ3p6Mb8dkxtVyjoy2GIzvuJT_u7PkY2t8QU9hjBcHs68PkgjDVTrG1uRTx\n  0GxFbuPbj96tVuj11pTnmFCUR6IEOXKYr7iGOCRB3btfJhM0_AKQUfqKnRlrRscc8K\n  ol-cSLWoYE9l5QqholImzjT_cMnNIznW9E7CDyWXTsO70xnB4SkG6pXfLSjLLlxmPG\n  iyon_-Te111V8uE83IlzCYIb_NMXvtTIVc1jpspnTSD7xMbpL-2QgwUsAlMGzw\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 6.2.1. URL Referencing the Request Object\n\nThe Client stores the Request Object resource either locally or remotely at a URL the Server can access. This URL is the Request URI, `request_uri`.\n\nIf the Request Object includes requested values for Claims, it MUST NOT be revealed to anybody but the Authorization Server. As such, the `request_uri` MUST have appropriate entropy for its lifetime. It is RECOMMENDED that it be removed if it is known that it will not be used again or after a reasonable timeout unless access control measures are taken.\n\nThe following is a non-normative example of a Request URI value (with line wraps within values for display purposes only):\n\n```\n  https://client.example.org/request.jwt#\n    GkurKxf5T0Y-mnPFCHqWOMiZi4VS138cQO_V7PZHAdM\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 6.2.2. Request using the \"request_uri\" Request Parameter\n\nThe Client sends the Authorization Request to the Authorization Endpoint.\n\nThe following is a non-normative example of an Authorization Request using the `request_uri` parameter (with line wraps within values for display purposes only):\n\n```\n  https://server.example.com/authorize?\n    response_type=code%20id_token\n    &client_id=s6BhdRkqt3\n    &request_uri=https%3A%2F%2Fclient.example.org%2Frequest.jwt\n    %23GkurKxf5T0Y-mnPFCHqWOMiZi4VS138cQO_V7PZHAdM\n    &state=af0ifjsldkj&nonce=n-0S6_WzA2Mj\n    &scope=openid\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 6.2.3. Authorization Server Fetches Request Object\n\nUpon receipt of the Request, the Authorization Server MUST send an HTTP `GET` request to the `request_uri` to retrieve the referenced Request Object, unless it is already cached, and parse it to recreate the Authorization Request parameters.\n\nNote that the RP SHOULD use a unique URI for each request utilizing distinct parameters, or otherwise prevent the Authorization Server from caching the `request_uri`.\n\nThe following is a non-normative example of this fetch process:\n\n```\n  GET /request.jwt HTTP/1.1\n  Host: client.example.org\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 6.2.4. \"request_uri\" Rationale\n\nThere are several reasons that one might choose to use the `request_uri` parameter:\n\n\n\n1. The set of request parameters can become large, and can exceed browser URI size limitations. Passing the request parameters by reference can solve this problem.\n2. Passing a `request_uri` value, rather than a complete request by value, can reduce request latency.\n3. Most requests for Claims from an RP are constant. The `request_uri` is a way of creating and sometimes also signing and encrypting a constant set of request parameters in advance. (The `request_uri` value becomes an \"artifact\" representing a particular fixed set of request parameters.)\n4. Pre-registering a fixed set of request parameters at Registration time enables OPs to cache and pre-validate the request parameters at Registration time, meaning they need not be retrieved at request time.\n5. Pre-registering a fixed set of request parameters at Registration time enables OPs to vet the contents of the request from consumer protection and other points of views, either itself or by utilizing a third party.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 6.3. Validating JWT-Based Requests\n\nWhen the `request` or `request_uri` Authorization Request parameters are used, additional steps must be performed to validate the Authentication Request beyond those specified in Sections [3.1.2.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequestValidation), [3.2.2.2](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitValidation), or [3.3.2.2](https://openid.net/specs/openid-connect-core-1_0.html#HybridValidation). These steps are to validate the JWT containing the Request Object and to validate the Request Object itself.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 6.3.1. Encrypted Request Object\n\nIf the Authorization Server has advertised JWE encryption algorithms in the `request_object_encryption_alg_values_supported` and `request_object_encryption_enc_values_supported` elements of its Discovery document [[OpenID.Discovery\\]](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Discovery), or has supplied encryption algorithms by other means, these are used by the Client to encrypt the JWT.\n\nThe Authorization Server MUST decrypt the JWT in accordance with the [JSON Web Encryption](https://openid.net/specs/openid-connect-core-1_0.html#JWE) [JWE] specification. The result MAY be either a signed or unsigned (plaintext) Request Object. In the former case, signature validation MUST be performed as defined in [Section 6.3.2](https://openid.net/specs/openid-connect-core-1_0.html#SignedRequestObject).\n\nThe Authorization Server MUST return an error if decryption fails.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 6.3.2. Signed Request Object\n\nTo perform Signature Validation, the `alg` Header Parameter in the JOSE Header MUST match the value of the `request_object_signing_alg` set during Client Registration [[OpenID.Registration\\]](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration) or a value that was pre-registered by other means. The signature MUST be validated against the appropriate key for that `client_id` and algorithm.\n\nThe Authorization Server MUST return an error if signature validation fails.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 6.3.3. Request Parameter Assembly and Validation\n\nThe Authorization Server MUST assemble the set of Authorization Request parameters to be used from the Request Object value and the OAuth 2.0 Authorization Request parameters (minus the `request` or `request_uri` parameters). If the same parameter exists both in the Request Object and the OAuth Authorization Request parameters, the parameter in the Request Object is used. Using the assembled set of Authorization Request parameters, the Authorization Server then validates the request the normal manner for the flow being used, as specified in Sections [3.1.2.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequestValidation), [3.2.2.2](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitValidation), or [3.3.2.2](https://openid.net/specs/openid-connect-core-1_0.html#HybridValidation).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 7. Self-Issued OpenID Provider\n\nOpenID Connect supports Self-Issued OpenID Providers - personal, self-hosted OPs that issue self-signed ID Tokens. Self-Issued OPs use the special Issuer Identifier `https://self-issued.me`.\n\nThe messages used to communicate with Self-Issued OPs are mostly the same as those used to communicate with other OPs. Specifications for the few additional parameters used and for the values of some parameters in the Self-Issued case are defined in this section.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 7.1. Self-Issued OpenID Provider Discovery\n\nIf the input identifier for the discovery process contains the domain self-issued.me, dynamic discovery is not performed. Instead, then the following static configuration values are used:\n\n\n\n```\n  {\n   \"authorization_endpoint\":\n     \"openid:\",\n   \"issuer\":\n     \"https://self-issued.me\",\n   \"scopes_supported\":\n     [\"openid\", \"profile\", \"email\", \"address\", \"phone\"],\n   \"response_types_supported\":\n     [\"id_token\"],\n   \"subject_types_supported\":\n     [\"pairwise\"],\n   \"id_token_signing_alg_values_supported\":\n     [\"RS256\"],\n   \"request_object_signing_alg_values_supported\":\n     [\"none\", \"RS256\"]\n  }\n```\n\n\n\nNOTE: The OpenID Foundation plans to host the OpenID Provider site `https://self-issued.me/`, including its WebFinger service, so that performing discovery on it returns the above static discovery information, enabling RPs to not need any special processing for discovery of the Self-Issued OP. This site will be hosted on an experimental basis. Production implementations should not take a dependency upon it without a subsequent commitment by the OpenID Foundation to host the site in a manner intended for production use.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 7.2. Self-Issued OpenID Provider Registration\n\nWhen using a Self-Issued OP, registration is not required. The Client can proceed without registration as if it had registered with the OP and obtained the following Client Registration Response:\n\n\n\n> - client_id\n>\n>   `redirect_uri` value of the Client.\n>\n> - client_secret_expires_at\n>\n>   0\n\n\n\nNOTE: The OpenID Foundation plans to host the (stateless) endpoint `https://self-issued.me/registration/1.0/` that returns the response above, enabling RPs to not need any special processing for registration with the Self-Issued OP. This site will be hosted on an experimental basis. Production implementations should not take a dependency upon it without a subsequent commitment by the OpenID Foundation to host the site in a manner intended for production use.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 7.2.1. Providing Information with the \"registration\" Request Parameter\n\nOpenID Connect defines the following Authorization Request parameter to enable Clients to provide additional registration information to Self-Issued OpenID Providers:\n\n> - registration\n>\n>   OPTIONAL. This parameter is used by the Client to provide information about itself to a Self-Issued OP that would normally be provided to an OP during Dynamic Client Registration. The value is a JSON object containing Client metadata values, as defined in Section 2.1 of the [OpenID Connect Dynamic Client Registration 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration) [OpenID.Registration] specification. The `registration` parameter SHOULD NOT be used when the OP is not a Self-Issued OP.\n\n\n\nNone of this information is REQUIRED by Self-Issued OPs, so the use of this parameter is OPTIONAL.\n\nThe `registration` parameter value is represented in an OAuth 2.0 request as a UTF-8 encoded JSON object (which ends up being form-urlencoded when passed as an OAuth parameter). When used in a Request Object value, per [Section 6.1](https://openid.net/specs/openid-connect-core-1_0.html#RequestObject), the JSON object is used as the value of the `registration` member.\n\nThe Registration parameters that would typically be used in requests to Self-Issued OPs are `policy_uri`, `tos_uri`, and `logo_uri`. If the Client uses more than one Redirection URI, the `redirect_uris` parameter would be used to register them. Finally, if the Client is requesting encrypted responses, it would typically use the `jwks_uri`, `id_token_encrypted_response_alg` and `id_token_encrypted_response_enc` parameters.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 7.3. Self-Issued OpenID Provider Request\n\nThe Client sends the Authentication Request to the Authorization Endpoint with the following parameters:\n\n\n\n> - scope\n>\n>   REQUIRED. `scope` parameter value, as specified in [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint).\n>\n> - response_type\n>\n>   REQUIRED. Constant string value `id_token`.\n>\n> - client_id\n>\n>   REQUIRED. Client ID value for the Client, which in this case contains the `redirect_uri` value of the Client. Since the Client's `redirect_uri` URI value is communicated as the Client ID, a `redirect_uri` parameter is NOT REQUIRED to also be included in the request.\n>\n> - id_token_hint\n>\n>   OPTIONAL. `id_token_hint` parameter value, as specified in [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint). If the ID Token is encrypted to the Self-Issued OP, the `sub` (subject) of the signed ID Token MUST be sent as the `kid` (Key ID) of the JWE. Encrypting content to Self-Issued OPs is currently only supported when the OP's JWK key type is `RSA` and the encryption algorithm used is `RSA1_5`.\n>\n> - claims\n>\n>   OPTIONAL. `claims` parameter value, as specified in [Section 5.5](https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter).\n>\n> - registration\n>\n>   OPTIONAL. This parameter is used by the Client to provide information about itself to a Self-Issued OP that would normally be provided to an OP during Dynamic Client Registration, as specified in [Section 7.2.1](https://openid.net/specs/openid-connect-core-1_0.html#RegistrationParameter).\n>\n> - request\n>\n>   OPTIONAL. Request Object value, as specified in [Section 6.1](https://openid.net/specs/openid-connect-core-1_0.html#RequestObject). The Request Object MAY be encrypted to the Self-Issued OP by the Client. In this case, the `sub` (subject) of a previously issued ID Token for this Client MUST be sent as the `kid` (Key ID) of the JWE. Encrypting content to Self-Issued OPs is currently only supported when the OP's JWK key type is `RSA` and the encryption algorithm used is `RSA1_5`.\n\n\n\nOther parameters MAY be sent. Note that all Claims are returned in the ID Token.\n\nThe entire URL MUST NOT exceed 2048 ASCII characters.\n\nThe following is a non-normative example HTTP 302 redirect response by the Client, which triggers the User Agent to make an Authentication Request to the Self-Issued OpenID Provider (with line wraps within values for display purposes only):\n\n```\n  HTTP/1.1 302 Found\n  Location: openid://?\n    response_type=id_token\n    &client_id=https%3A%2F%2Fclient.example.org%2Fcb\n    &scope=openid%20profile\n    &state=af0ifjsldkj\n    &nonce=n-0S6_WzA2Mj\n    &registration=%7B%22logo_uri%22%3A%22https%3A%2F%2F\n      client.example.org%2Flogo.png%22%7D\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 7.4. Self-Issued OpenID Provider Response\n\nOpenID Connect defines the following Claim for use in Self-Issued OpenID Provider Responses:\n\n> - sub_jwk\n>\n>   REQUIRED. Public key used to check the signature of an ID Token issued by a Self-Issued OpenID Provider, as specified in [Section 7](https://openid.net/specs/openid-connect-core-1_0.html#SelfIssued). The key is a bare key in JWK [[JWK\\]](https://openid.net/specs/openid-connect-core-1_0.html#JWK) format (not an X.509 certificate value). The `sub_jwk` value is a JSON object. Use of the `sub_jwk` Claim is NOT RECOMMENDED when the OP is not Self-Issued.\n\n\n\nThe Self-Issued OpenID Provider response is the same as the normal Implicit Flow response with the following refinements. Since it is an Implicit Flow response, the response parameters will be returned in the URL fragment component, unless a different Response Mode was specified.\n\n\n\n1. The `iss` (issuer) Claim Value is `https://self-issued.me`.\n2. A `sub_jwk` Claim is present, with its value being the public key used to check the signature of the ID Token.\n3. The `sub` (subject) Claim value is the base64url encoded representation of the thumbprint of the key in the `sub_jwk` Claim. This thumbprint value is computed as the SHA-256 hash of the octets of the UTF-8 representation of a JWK constructed containing only the REQUIRED members to represent the key, with the member names sorted into lexicographic order, and with no white space or line breaks. For instance, when the `kty` value is `RSA`, the member names `e`, `kty`, and `n` are the ones present in the constructed JWK used in the thumbprint computation and appear in that order; when the `kty` value is `EC`, the member names `crv`, `kty`, `x`, and `y` are present in that order. Note that this thumbprint calculation is the same as that defined in the JWK Thumbprint [[JWK.Thumbprint\\]](https://openid.net/specs/openid-connect-core-1_0.html#JWK.Thumbprint) specification.\n4. No Access Token is returned for accessing a UserInfo Endpoint, so all Claims returned MUST be in the ID Token.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 7.5. Self-Issued ID Token Validation\n\nTo validate the ID Token received, the Client MUST do the following:\n\n\n\n1. The Client MUST validate that the value of the `iss` (issuer) Claim is `https://self-isued.me`. If `iss` contains a different value, the ID Token is not Self-Issued, and instead it MUST be validated according to [Section 3.1.3.7](https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation).\n2. The Client MUST validate that the `aud` (audience) Claim contains the value of the `redirect_uri` that the Client sent in the Authentication Request as an audience.\n3. The Client MUST validate the signature of the ID Token according to [JWS](https://openid.net/specs/openid-connect-core-1_0.html#JWS) [JWS] using the algorithm specified in the `alg` Header Parameter of the JOSE Header, using the key in the `sub_jwk` Claim; the key is a bare key in JWK format (not an X.509 certificate value).\n4. The `alg` value SHOULD be the default of `RS256`. It MAY also be `ES256`.\n5. The Client MUST validate that the `sub` Claim value is the base64url encoded representation of the thumbprint of the key in the `sub_jwk` Claim, as specified in [Section 7.4](https://openid.net/specs/openid-connect-core-1_0.html#SelfIssuedResponse).\n6. The current time MUST be before the time represented by the `exp` Claim (possibly allowing for some small leeway to account for clock skew).\n7. The `iat` Claim can be used to reject tokens that were issued too far away from the current time, limiting the amount of time that nonces need to be stored to prevent attacks. The acceptable range is Client specific.\n8. If a nonce value was sent in the Authentication Request, a `nonce` Claim MUST be present and its value checked to verify that it is the same value as the one that was sent in the Authentication Request. The Client SHOULD check the `nonce` value for replay attacks. The precise method for detecting replay attacks is Client specific.\n\n\n\nThe following is a non-normative example of a base64url decoded Self-Issued ID Token (with line wraps within values for display purposes only):\n\n```\n  {\n   \"iss\": \"https://self-issued.me\",\n   \"sub\": \"NzbLsXh8uDCcd-6MNwXF4W_7noWXFZAfHkxZsRGC9Xs\",\n   \"aud\": \"https://client.example.org/cb\",\n   \"nonce\": \"n-0S6_WzA2Mj\",\n   \"exp\": 1311281970,\n   \"iat\": 1311280970,\n   \"sub_jwk\": {\n     \"kty\":\"RSA\",\n     \"n\": \"0vx7agoebGcQSuuPiLJXZptN9nndrQmbXEps2aiAFbWhM78LhWx\n     4cbbfAAtVT86zwu1RK7aPFFxuhDR1L6tSoc_BJECPebWKRXjBZCiFV4n3oknjhMs\n     tn64tZ_2W-5JsGY4Hc5n9yBXArwl93lqt7_RN5w6Cf0h4QyQ5v-65YGjQR0_FDW2\n     QvzqY368QQMicAtaSqzs8KJZgnYb9c7d0zgdAZHzu6qMQvRL5hajrn1n91CbOpbI\n     SD08qNLyrdkt-bFTWhAI4vMQFh6WeZu0fM4lFd2NcRwr3XPksINHaQ-G_xBniIqb\n     w0Ls1jF44-csFCur-kEgU8awapJzKnqDKgw\",\n     \"e\":\"AQAB\"\n    }\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 8. Subject Identifier Types\n\nA Subject Identifier is a locally unique and never reassigned identifier within the Issuer for the End-User, which is intended to be consumed by the Client. Two Subject Identifier types are defined by this specification:\n\n> - public\n>\n>   This provides the same `sub` (subject) value to all Clients. It is the default if the provider has no `subject_types_supported` element in its discovery document.\n>\n> - pairwise\n>\n>   This provides a different `sub` value to each Client, so as not to enable Clients to correlate the End-User's activities without permission.\n\n\n\nThe OpenID Provider's Discovery document SHOULD list its supported Subject Identifier types in the `subject_types_supported` element. If there is more than one type listed in the array, the Client MAY elect to provide its preferred identifier type using the `subject_type` parameter during Registration.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 8.1. Pairwise Identifier Algorithm\n\nWhen pairwise Subject Identifiers are used, the OpenID Provider MUST calculate a unique `sub` (subject) value for each Sector Identifier. The Subject Identifier value MUST NOT be reversible by any party other than the OpenID Provider.\n\nProviders that use pairwise `sub` values and support [Dynamic Client Registration](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration) [OpenID.Registration] SHOULD use the `sector_identifier_uri` parameter. It provides a way for a group of websites under common administrative control to have consistent pairwise `sub` values independent of the individual domain names. It also provides a way for Clients to change `redirect_uri` domains without having to reregister all of their users.\n\nIf the Client has not provided a value for `sector_identifier_uri` in [Dynamic Client Registration](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration) [OpenID.Registration], the Sector Identifier used for pairwise identifier calculation is the host component of the registered `redirect_uri`. If there are multiple hostnames in the registered `redirect_uris`, the Client MUST register a `sector_identifier_uri`.\n\nWhen a `sector_identifier_uri` is provided, the host component of that URL is used as the Sector Identifier for the pairwise identifier calculation. The value of the `sector_identifier_uri` MUST be a URL using the `https` scheme that points to a JSON file containing an array of `redirect_uri` values. The values of the registered `redirect_uris` MUST be included in the elements of the array.\n\nAny algorithm with the following properties can be used by OpenID Providers to calculate pairwise Subject Identifiers:\n\n- The Subject Identifier value MUST NOT be reversible by any party other than the OpenID Provider.\n- Distinct Sector Identifier values MUST result in distinct Subject Identifier values.\n- The algorithm MUST be deterministic.\n\n\n\nThree example methods are:\n\n1. The Sector Identifier can be concatenated with a local account ID and a salt value that is kept secret by the Provider. The concatenated string is then hashed using an appropriate algorithm.\n\n   Calculate `sub` = SHA-256 ( sector_identifier || local_account_id || salt ).\n\n   \n\n2. The Sector Identifier can be concatenated with a local account ID and a salt value that is kept secret by the Provider. The concatenated string is then encrypted using an appropriate algorithm.\n\n   Calculate `sub` = AES-128 ( sector_identifier || local_account_id || salt ).\n\n   \n\n3. The Issuer creates a Globally Unique Identifier (GUID) for the pair of Sector Identifier and local account ID and stores this value.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 9. Client Authentication\n\nThis section defines a set of Client Authentication methods that are used by Clients to authenticate to the Authorization Server when using the Token Endpoint. During Client Registration, the RP (Client) MAY register a Client Authentication method. If no method is registered, the default method is `client_secret_basic`.\n\nThese Client Authentication methods are:\n\n\n\n> - client_secret_basic\n>\n>   Clients that have received a `client_secret` value from the Authorization Server authenticate with the Authorization Server in accordance with Section 2.3.1 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749] using the HTTP Basic authentication scheme.\n>\n> - client_secret_post\n>\n>   Clients that have received a `client_secret` value from the Authorization Server, authenticate with the Authorization Server in accordance with Section 2.3.1 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749] by including the Client Credentials in the request body.\n>\n> - client_secret_jwt\n>\n>   Clients that have received a `client_secret` value from the Authorization Server create a JWT using an HMAC SHA algorithm, such as HMAC SHA-256. The HMAC (Hash-based Message Authentication Code) is calculated using the octets of the UTF-8 representation of the `client_secret` as the shared key.\n>\n> - \n>\n>   The Client authenticates in accordance with [JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.JWT) [OAuth.JWT] and [Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions) [OAuth.Assertions]. The JWT MUST contain the following REQUIRED Claim Values and MAY contain the following OPTIONAL Claim Values:\n>\n> - \n>\n>   issREQUIRED. Issuer. This MUST contain the `client_id` of the OAuth Client.subREQUIRED. Subject. This MUST contain the `client_id` of the OAuth Client.audREQUIRED. Audience. The `aud` (audience) Claim. Value that identifies the Authorization Server as an intended audience. The Authorization Server MUST verify that it is an intended audience for the token. The Audience SHOULD be the URL of the Authorization Server's Token Endpoint.jtiREQUIRED. JWT ID. A unique identifier for the token, which can be used to prevent reuse of the token. These tokens MUST only be used once, unless conditions for reuse were negotiated between the parties; any such negotiation is beyond the scope of this specification.expREQUIRED. Expiration time on or after which the ID Token MUST NOT be accepted for processing.iatOPTIONAL. Time at which the JWT was issued.\n>\n> - \n>\n>   The JWT MAY contain other Claims. Any Claims used that are not understood MUST be ignored.\n>\n> - \n>\n>   The authentication token MUST be sent as the value of the [[OAuth.Assertions\\]](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions) `client_assertion` parameter.\n>\n> - \n>\n>   The value of the [[OAuth.Assertions\\]](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions) `client_assertion_type` parameter MUST be \"urn:ietf:params:oauth:client-assertion-type:jwt-bearer\", per [[OAuth.JWT\\]](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.JWT).\n>\n> - private_key_jwt\n>\n>   Clients that have registered a public key sign a JWT using that key. The Client authenticates in accordance with [JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.JWT) [OAuth.JWT] and [Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions) [OAuth.Assertions]. The JWT MUST contain the following REQUIRED Claim Values and MAY contain the following OPTIONAL Claim Values:\n>\n> - \n>\n>   issREQUIRED. Issuer. This MUST contain the `client_id` of the OAuth Client.subREQUIRED. Subject. This MUST contain the `client_id` of the OAuth Client.audREQUIRED. Audience. The `aud` (audience) Claim. Value that identifies the Authorization Server as an intended audience. The Authorization Server MUST verify that it is an intended audience for the token. The Audience SHOULD be the URL of the Authorization Server's Token Endpoint.jtiREQUIRED. JWT ID. A unique identifier for the token, which can be used to prevent reuse of the token. These tokens MUST only be used once, unless conditions for reuse were negotiated between the parties; any such negotiation is beyond the scope of this specification.expREQUIRED. Expiration time on or after which the ID Token MUST NOT be accepted for processing.iatOPTIONAL. Time at which the JWT was issued.\n>\n> - \n>\n>   The JWT MAY contain other Claims. Any Claims used that are not understood MUST be ignored.\n>\n> - \n>\n>   The authentication token MUST be sent as the value of the [[OAuth.Assertions\\]](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions) `client_assertion` parameter.\n>\n> - \n>\n>   The value of the [[OAuth.Assertions\\]](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions) `client_assertion_type` parameter MUST be \"urn:ietf:params:oauth:client-assertion-type:jwt-bearer\", per [[OAuth.JWT\\]](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.JWT).\n>\n> - \n>\n>   For example (with line wraps within values for display purposes only):`  POST /token HTTP/1.1  Host: server.example.com  Content-Type: application/x-www-form-urlencoded   grant_type=authorization_code&    code=i1WsRn1uB1&    client_id=s6BhdRkqt3&    client_assertion_type=    urn%3Aietf%3Aparams%3Aoauth%3Aclient-assertion-type%3Ajwt-bearer&    client_assertion=PHNhbWxwOl ... ZT `\n>\n> - none\n>\n>   The Client does not authenticate itself at the Token Endpoint, either because it uses only the Implicit Flow (and so does not use the Token Endpoint) or because it is a Public Client with no Client Secret or other authentication mechanism.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 10. Signatures and Encryption\n\nDepending on the transport through which the messages are sent, the integrity of the message might not be guaranteed and the originator of the message might not be authenticated. To mitigate these risks, ID Token, UserInfo Response, Request Object, and Client Authentication JWT values can utilize [JSON Web Signature (JWS)](https://openid.net/specs/openid-connect-core-1_0.html#JWS) [JWS] to sign their contents. To achieve message confidentiality, these values can also use [JSON Web Encryption (JWE)](https://openid.net/specs/openid-connect-core-1_0.html#JWE) [JWE] to encrypt their contents.\n\nWhen the message is both signed and encrypted, it MUST be signed first and then encrypted, per [Section 16.14](https://openid.net/specs/openid-connect-core-1_0.html#SigningOrder), with the result being a Nested JWT, as specified in [[JWT\\]](https://openid.net/specs/openid-connect-core-1_0.html#JWT). Note that all JWE encryption methods perform integrity checking.\n\nThe OP advertises its supported signing and encryption algorithms in its Discovery document, or may supply this information by other means. The RP declares its required signing and encryption algorithms in its Dynamic Registration request, or may communicate this information by other means.\n\nThe OP advertises its public keys via its Discovery document, or may supply this information by other means. The RP declares its public keys via its Dynamic Registration request, or may communicate this information by other means.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 10.1. Signing\n\nThe signing party MUST select a signature algorithm based on the algorithms supported by the recipient.\n\n\n\n> - Asymmetric Signatures\n>\n>   When using RSA or ECDSA Signatures, the `alg` Header Parameter value of the JOSE Header MUST be set to an appropriate algorithm as defined in [JSON Web Algorithms](https://openid.net/specs/openid-connect-core-1_0.html#JWA) [JWA]. The private key used to sign the content MUST be associated with a public key used for signature verification published by the sender in its JWK Set document. If there are multiple keys in the referenced JWK Set document, a `kid` value MUST be provided in the JOSE Header. The key usage of the respective keys MUST support signing.\n>\n> - Symmetric Signatures\n>\n>   When using MAC-based signatures, the `alg` Header Parameter value of the JOSE Header MUST be set to a MAC algorithm, as defined in [JSON Web Algorithms](https://openid.net/specs/openid-connect-core-1_0.html#JWA) [JWA]. The MAC key used is the octets of the UTF-8 representation of the `client_secret` value. See [Section 16.19](https://openid.net/specs/openid-connect-core-1_0.html#SymmetricKeyEntropy) for a discussion of entropy requirements for `client_secret` values. Symmetric signatures MUST NOT be used by public (non-confidential) Clients because of their inability to keep secrets.\n\n\n\nSee [Section 16.20](https://openid.net/specs/openid-connect-core-1_0.html#NeedForSignedRequests) for Security Considerations about the need for signed requests.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 10.1.1. Rotation of Asymmetric Signing Keys\n\nRotation of signing keys can be accomplished with the following approach. The signer publishes its keys in a JWK Set at its `jwks_uri` location and includes the `kid` of the signing key in the JOSE Header of each message to indicate to the verifier which key is to be used to validate the signature. Keys can be rolled over by periodically adding new keys to the JWK Set at the `jwks_uri` location. The signer can begin using a new key at its discretion and signals the change to the verifier using the `kid` value. The verifier knows to go back to the `jwks_uri` location to re-retrieve the keys when it sees an unfamiliar `kid` value. The JWK Set document at the `jwks_uri` SHOULD retain recently decommissioned signing keys for a reasonable period of time to facilitate a smooth transition.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 10.2. Encryption\n\nThe encrypting party MUST select an encryption algorithm based on the algorithms supported by the recipient.\n\n\n\n> - Asymmetric Encryption: RSA\n>\n>   The public key to which the content was encrypted MUST be a public key used for encryption published by the recipient in its JWK Set document. If there are multiple keys in the referenced JWK Set document, a `kid` value MUST be provided in the JOSE Header. Use the supported RSA encryption algorithm to encrypt a random Content Encryption Key to be used for encrypting the signed JWT. The key usage of the respective keys MUST include encryption.\n>\n> - Asymmetric Encryption: Elliptic Curve\n>\n>   Create an ephemeral Elliptic Curve public key for the `epk` element of the JOSE Header. The other public key used for the key agreement computation MUST be a public key published by the recipient in its JWK Set document. If there are multiple keys in the referenced JWK Set document, a `kid` value MUST be provided in the JOSE Header. Use the ECDH-ES algorithm to agree upon a Content Encryption Key to be used for encrypting the signed JWT. The key usage of the respective keys MUST support encryption.\n>\n> - Symmetric Encryption\n>\n>   The symmetric encryption key is derived from the `client_secret` value by using a left truncated SHA-2 hash of the octets of the UTF-8 representation of the `client_secret`. For keys of 256 or fewer bits, SHA-256 is used; for keys of 257-384 bits, SHA-384 is used; for keys of 385-512 bits, SHA-512 is used. The hash value MUST be left truncated to the appropriate bit length for the AES key wrapping or direct encryption algorithm used, for instance, truncating the SHA-256 hash to 128 bits for `A128KW`. If a symmetric key with greater than 512 bits is needed, a different method of deriving the key from the `client_secret` would have to be defined by an extension. Symmetric encryption MUST NOT be used by public (non-confidential) Clients because of their inability to keep secrets.\n\n\n\nSee [Section 16.21](https://openid.net/specs/openid-connect-core-1_0.html#NeedForEncryptedRequests) for Security Considerations about the need for encrypted requests.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 10.2.1. Rotation of Asymmetric Encryption Keys\n\nRotating encryption keys necessarily uses a different process than the one for signing keys because the encrypting party starts the process and thus cannot rely on a change in `kid` as a signal that keys need to change. The encrypting party still uses the `kid` Header Parameter in the JWE to tell the decrypting party which private key to use to decrypt, however, the encrypting party needs to first select the most appropriate key from those provided in the JWK Set at the recipient's `jwks_uri` location.\n\nTo rotate keys, the decrypting party can publish new keys at its `jwks_uri` location and remove from the JWK Set those that are being decommissioned. The `jwks_uri` SHOULD include a `Cache-Control` header in the response that contains a `max-age` directive, as defined in [RFC 2616](https://openid.net/specs/openid-connect-core-1_0.html#RFC2616) [RFC2616], which enables the encrypting party to safely cache the JWK Set and not have to re-retrieve the document for every encryption event. The decrypting party SHOULD remove decommissioned keys from the JWK Set referenced by `jwks_uri` but retain them internally for some reasonable period of time, coordinated with the cache duration, to facilitate a smooth transition between keys by allowing the encrypting party some time to obtain the new keys. The cache duration SHOULD also be coordinated with the issuance of new signing keys, as described in [Section 10.1.1](https://openid.net/specs/openid-connect-core-1_0.html#RotateSigKeys).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 11. Offline Access\n\nOpenID Connect defines the following `scope` value to request offline access:\n\n> - offline_access\n>\n>   OPTIONAL. This scope value requests that an OAuth 2.0 Refresh Token be issued that can be used to obtain an Access Token that grants access to the End-User's UserInfo Endpoint even when the End-User is not present (not logged in).\n\n\n\nWhen offline access is requested, a `prompt` parameter value of `consent` MUST be used unless other conditions for processing the request permitting offline access to the requested resources are in place. The OP MUST always obtain consent to returning a Refresh Token that enables offline access to the requested resources. A previously saved user consent is not always sufficient to grant offline access.\n\nUpon receipt of a scope parameter containing the `offline_access` value, the Authorization Server:\n\n- MUST ensure that the prompt parameter contains `consent` unless other conditions for processing the request permitting offline access to the requested resources are in place; unless one or both of these conditions are fulfilled, then it MUST ignore the `offline_access` request,\n- MUST ignore the `offline_access` request unless the Client is using a `response_type` value that would result in an Authorization Code being returned,\n- MUST explicitly receive or have consent for all Clients when the registered `application_type` is `web`,\n- SHOULD explicitly receive or have consent for all Clients when the registered `application_type` is `native`.\n\nThe use of Refresh Tokens is not exclusive to the `offline_access` use case. The Authorization Server MAY grant Refresh Tokens in other contexts that are beyond the scope of this specification.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 12. Using Refresh Tokens\n\nA request to the Token Endpoint can also use a Refresh Token by using the `grant_type` value `refresh_token`, as described in Section 6 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749]. This section defines the behaviors for OpenID Connect Authorization Servers when Refresh Tokens are used.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 12.1. Refresh Request\n\nTo refresh an Access Token, the Client MUST authenticate to the Token Endpoint using the authentication method registered for its `client_id`, as documented in [Section 9](https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication). The Client sends the parameters via HTTP `POST` to the Token Endpoint using Form Serialization, per [Section 13.2](https://openid.net/specs/openid-connect-core-1_0.html#FormSerialization).\n\nThe following is a non-normative example of a Refresh Request (with line wraps within values for display purposes only):\n\n```\n  POST /token HTTP/1.1\n  Host: server.example.com\n  Content-Type: application/x-www-form-urlencoded\n\n  client_id=s6BhdRkqt3\n    &client_secret=some_secret12345\n    &grant_type=refresh_token\n    &refresh_token=8xLOxBtZp8\n    &scope=openid%20profile\n```\n\nThe Authorization Server MUST validate the Refresh Token, MUST verify that it was issued to the Client, and must verify that the Client successfully authenticated it has a Client Authentication method.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 12.2. Successful Refresh Response\n\nUpon successful validation of the Refresh Token, the response body is the Token Response of [Section 3.1.3.3](https://openid.net/specs/openid-connect-core-1_0.html#TokenResponse) except that it might not contain an `id_token`.\n\nIf an ID Token is returned as a result of a token refresh request, the following requirements apply:\n\n- its `iss` Claim Value MUST be the same as in the ID Token issued when the original authentication occurred,\n- its `sub` Claim Value MUST be the same as in the ID Token issued when the original authentication occurred,\n- its `iat` Claim MUST represent the time that the new ID Token is issued,\n- its `aud` Claim Value MUST be the same as in the ID Token issued when the original authentication occurred,\n- if the ID Token contains an `auth_time` Claim, its value MUST represent the time of the original authentication - not the time that the new ID token is issued,\n- its `azp` Claim Value MUST be the same as in the ID Token issued when the original authentication occurred; if no `azp` Claim was present in the original ID Token, one MUST NOT be present in the new ID Token, and\n- otherwise, the same rules apply as apply when issuing an ID Token at the time of the original authentication.\n\n\n\nThe following is a non-normative example of a Refresh Response:\n\n```\n  HTTP/1.1 200 OK\n  Content-Type: application/json\n  Cache-Control: no-store\n  Pragma: no-cache\n\n  {\n   \"access_token\": \"TlBN45jURg\",\n   \"token_type\": \"Bearer\",\n   \"refresh_token\": \"9yNOxJtZa5\",\n   \"expires_in\": 3600\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 12.3. Refresh Error Response\n\nIf the Refresh Request is invalid or unauthorized, the Authorization Server returns the Token Error Response as defined in Section 5.2 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749].\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 13. Serializations\n\nMessages are serialized using one of the following methods:\n\n1. Query String Serialization\n2. Form Serialization\n3. JSON Serialization\n\nThis section describes the syntax of these serialization methods; other sections describe when they can and must be used. Note that not all methods can be used for all messages.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 13.1. Query String Serialization\n\nIn order to serialize the parameters using the Query String Serialization, the Client constructs the string by adding the parameters and values to the query component of a URL using the `application/x-www-form-urlencoded` format as defined by [[W3C.REC‑html401‑19991224\\]](https://openid.net/specs/openid-connect-core-1_0.html#W3C.REC-html401-19991224). Query String Serialization is typically used in HTTP `GET` requests. The same serialization method is also used when adding parameters to the fragment component of a URL.\n\nThe following is a non-normative example of this serialization (with line wraps within values for display purposes only):\n\n```\n  GET /authorize?\n    response_type=code\n    &scope=openid\n    &client_id=s6BhdRkqt3\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb HTTP/1.1\n  Host: server.example.com\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 13.2. Form Serialization\n\nParameters and their values are Form Serialized by adding the parameter names and values to the entity body of the HTTP request using the `application/x-www-form-urlencoded` format as defined by [[W3C.REC‑html401‑19991224\\]](https://openid.net/specs/openid-connect-core-1_0.html#W3C.REC-html401-19991224). Form Serialization is typically used in HTTP `POST` requests.\n\nThe following is a non-normative example of this serialization (with line wraps within values for display purposes only):\n\n```\n  POST /authorize HTTP/1.1\n  Host: server.example.com\n  Content-Type: application/x-www-form-urlencoded\n\n  response_type=code\n    &scope=openid\n    &client_id=s6BhdRkqt3\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 13.3. JSON Serialization\n\nThe parameters are serialized into a JSON object structure by adding each parameter at the highest structure level. Parameter names and string values are represented as JSON strings. Numerical values are represented as JSON numbers. Boolean values are represented as JSON booleans. Omitted parameters and parameters with no value SHOULD be omitted from the object and not represented by a JSON `null` value, unless otherwise specified. A parameter MAY have a JSON object or a JSON array as its value.\n\nThe following is a non-normative example of this serialization:\n\n```\n  {\n   \"access_token\": \"SlAV32hkKG\",\n   \"token_type\": \"Bearer\",\n   \"expires_in\": 3600,\n   \"refresh_token\": \"8xLOxBtZp8\"\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 14. String Operations\n\nProcessing some OpenID Connect messages requires comparing values in the messages to known values. For example, the Claim Names returned by the UserInfo Endpoint might be compared to specific Claim Names such as `sub`. Comparing Unicode strings, however, has significant security implications.\n\nTherefore, comparisons between JSON strings and other Unicode strings MUST be performed as specified below:\n\n1. Remove any JSON applied escaping to produce an array of Unicode code points.\n2. Unicode Normalization [[USA15\\]](https://openid.net/specs/openid-connect-core-1_0.html#USA15) MUST NOT be applied at any point to either the JSON string or to the string it is to be compared against.\n3. Comparisons between the two strings MUST be performed as a Unicode code point to code point equality comparison.\n\n\n\nIn several places, this specification uses space delimited lists of strings. In all such cases, a single ASCII space character (0x20) MUST be used as the delimiter.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 15. Implementation Considerations\n\nThis specification defines features used by both Relying Parties and OpenID Providers. It is expected that some OpenID Providers will require static, out-of-band configuration of RPs using them, whereas others will support dynamic usage by RPs without a pre-established relationship between them. For that reason, the mandatory-to-implement features for OPs are listed below in two groups: the first for all OPs and the second for \"Dynamic\" OpenID Providers.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 15.1. Mandatory to Implement Features for All OpenID Providers\n\nAll OpenID Providers MUST implement the following features defined in this specification. This list augments the set of features that are already listed elsewhere as being \"REQUIRED\" or are described with a \"MUST\", and so is not, by itself, a comprehensive set of implementation requirements for OPs.\n\n\n\n> - Signing ID Tokens with RSA SHA-256\n>\n>   OPs MUST support signing ID Tokens with the RSA SHA-256 algorithm (an `alg` value of `RS256`), unless the OP only supports returning ID Tokens from the Token Endpoint (as is the case for the Authorization Code Flow) and only allows Clients to register specifying `none` as the requested ID Token signing algorithm.\n>\n> - Prompt Parameter\n>\n>   OPs MUST support the `prompt` parameter, as defined in [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint), including the specified user interface behaviors such as `none` and `login`.\n>\n> - Display Parameter\n>\n>   OPs MUST support the `display` parameter, as defined in [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint). (Note that the minimum level of support required for this parameter is simply that its use must not result in an error.)\n>\n> - Preferred Locales\n>\n>   OPs MUST support requests for preferred languages and scripts for the user interface and for Claims via the `ui_locales` and `claims_locales` request parameters, as defined in [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint). (Note that the minimum level of support required for these parameters is simply to have their use not result in errors.)\n>\n> - Authentication Time\n>\n>   OPs MUST support returning the time at which the End-User authenticated via the `auth_time` Claim, when requested, as defined in [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken).\n>\n> - Maximum Authentication Age\n>\n>   OPs MUST support enforcing a maximum authentication age via the `max_age` parameter, as defined in [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint).\n>\n> - Authentication Context Class Reference\n>\n>   OPs MUST support requests for specific Authentication Context Class Reference values via the `acr_values` parameter, as defined in [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint). (Note that the minimum level of support required for this parameter is simply to have its use not result in an error.)\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 15.2. Mandatory to Implement Features for Dynamic OpenID Providers\n\nIn addition to the features listed above, OpenID Providers supporting dynamic establishment of relationships with RPs that they do not have a pre-configured relationship with MUST also implement the following features defined in this and related specifications.\n\n\n\n> - Response Types\n>\n>   These OpenID Providers MUST support the `id_token` Response Type and all that are not Self-Issued OPs MUST also support the `code` and `id_token token` Response Types.\n>\n> - Discovery\n>\n>   These OPs MUST support Discovery, as defined in [OpenID Connect Discovery 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Discovery) [OpenID.Discovery].\n>\n> - Dynamic Registration\n>\n>   These OPs MUST support Dynamic Client Registration, as defined in [OpenID Connect Dynamic Client Registration 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration) [OpenID.Registration].\n>\n> - UserInfo Endpoint\n>\n>   All dynamic OPs that issue Access Tokens MUST support the UserInfo Endpoint, as defined in [Section 5.3](https://openid.net/specs/openid-connect-core-1_0.html#UserInfo). (Self-Issued OPs do not issue Access Tokens.)\n>\n> - Public Keys Published as Bare Keys\n>\n>   These OPs MUST publish their public keys as bare JWK keys (which MAY also be accompanied by X.509 representations of those keys).\n>\n> - Request URI\n>\n>   These OPs MUST support requests made using a Request Object value that is retrieved from a Request URI that is provided with the `request_uri` parameter, as defined in [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint).\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 15.3. Discovery and Registration\n\nSome OpenID Connect installations can use a pre-configured set of OpenID Providers and/or Relying Parties. In those cases, it might not be necessary to support dynamic discovery of information about identities or services or dynamic registration of Clients.\n\nHowever, if installations choose to support unanticipated interactions between Relying Parties and OpenID Providers that do not have pre-configured relationships, they SHOULD accomplish this by implementing the facilities defined in the [OpenID Connect Discovery 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Discovery) [OpenID.Discovery] and [OpenID Connect Dynamic Client Registration 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration) [OpenID.Registration] specifications.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 15.4. Mandatory to Implement Features for Relying Parties\n\nIn general, it is up to Relying Parties which features they use when interacting with OpenID Providers. However, some choices are dictated by the nature of their OAuth Client, such as whether it is a Confidential Client, capable of keeping secrets, in which case the Authorization Code Flow may be appropriate, or whether it is a Public Client, for instance, a User Agent Based Application or a statically registered Native Application, in which case the Implicit Flow may be appropriate.\n\nWhen using OpenID Connect features, those listed as being \"REQUIRED\" or are described with a \"MUST\" are mandatory to implement, when used by a Relying Party. Likewise, those features that are described as \"OPTIONAL\" need not be used or supported unless they provide value in the particular application context. Finally, when interacting with OpenID Providers that support Discovery, the OP's Discovery document can be used to dynamically determine which OP features are available for use by the RP.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 15.5. Implementation Notes\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 15.5.1. Authorization Code Implementation Notes\n\nWhen using the Authorization Code or Hybrid flows, an ID Token is returned from the Token Endpoint in response to a Token Request using an Authorization Code. Some implementations may choose to encode state about the ID Token to be returned in the Authorization Code value. Others may use the Authorization Code value as an index into a database storing this state.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 15.5.2. Nonce Implementation Notes\n\nThe `nonce` parameter value needs to include per-session state and be unguessable to attackers. One method to achieve this for Web Server Clients is to store a cryptographically random value as an HttpOnly session cookie and use a cryptographic hash of the value as the `nonce` parameter. In that case, the `nonce` in the returned ID Token is compared to the hash of the session cookie to detect ID Token replay by third parties. A related method applicable to JavaScript Clients is to store the cryptographically random value in HTML5 local storage and use a cryptographic hash of this value.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 15.5.3. Redirect URI Fragment Handling Implementation Notes\n\nWhen response parameters are returned in the Redirection URI fragment value, the Client needs to have the User Agent parse the fragment encoded values and pass them to on to the Client's processing logic for consumption. User Agents that have direct access to cryptographic APIs may be able to be self-contained, for instance, with all Client code being written in JavaScript.\n\nHowever, if the Client does not run entirely in the User Agent, one way to achieve this is to post them to a Web Server Client for validation.\n\nThe following is an example of a JavaScript file that a Client might host at its `redirect_uri`. This is loaded by the redirect from the Authorization Server. The fragment component is parsed and then sent by `POST` to a URI that will validate and use the information received.\n\nFollowing is a non-normative example of a Redirect URI response:\n\n```\n  GET /cb HTTP/1.1\n  Host: client.example.org\n\n  HTTP/1.1 200 OK\n  Content-Type: text/html\n\n  <script type=\"text/javascript\">\n\n  // First, parse the query string\n  var params = {}, postBody = location.hash.substring(1),\n      regex = /([^&=]+)=([^&]*)/g, m;\n  while (m = regex.exec(postBody)) {\n    params[decodeURIComponent(m[1])] = decodeURIComponent(m[2]);\n  }\n\n  // And send the token over to the server\n  var req = new XMLHttpRequest();\n  // using POST so query isn't logged\n  req.open('POST', 'https://' + window.location.host +\n                   '/catch_response', true);\n  req.setRequestHeader('Content-Type',\n                       'application/x-www-form-urlencoded');\n\n  req.onreadystatechange = function (e) {\n    if (req.readyState == 4) {\n      if (req.status == 200) {\n  // If the response from the POST is 200 OK, perform a redirect\n        window.location = 'https://'\n          + window.location.host + '/redirect_after_login'\n      }\n  // if the OAuth response is invalid, generate an error message\n      else if (req.status == 400) {\n        alert('There was an error processing the token')\n      } else {\n        alert('Something other than 200 was returned')\n      }\n    }\n  };\n  req.send(postBody);\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 15.6. Compatibility Notes\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 15.6.1. Pre-Final IETF Specifications\n\nImplementers should be aware that this specification uses several IETF specifications that are not yet final specifications. Those specifications are:\n\n- [JSON Web Token (JWT) draft -25](https://openid.net/specs/openid-connect-core-1_0.html#JWT) [JWT]\n- [JSON Web Signature (JWS) draft -31](https://openid.net/specs/openid-connect-core-1_0.html#JWS) [JWS]\n- [JSON Web Encryption (JWE) draft -31](https://openid.net/specs/openid-connect-core-1_0.html#JWE) [JWE]\n- [JSON Web Key (JWK) draft -31](https://openid.net/specs/openid-connect-core-1_0.html#JWK) [JWK]\n- [JSON Web Algorithms draft -31](https://openid.net/specs/openid-connect-core-1_0.html#JWA) [JWA]\n- [Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants draft -17](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions) [OAuth.Assertions]\n- [JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants draft -10](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.JWT) [OAuth.JWT]\n\n\n\nWhile every effort will be made to prevent breaking changes to these specifications, should they occur, OpenID Connect implementations should continue to use the specifically referenced draft versions above in preference to the final versions, unless using a possible future OpenID Connect profile or specification that updates some or all of these references.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 15.6.2. Google \"iss\" Value\n\nImplementers may want to be aware that, as of the time of this writing, Google's deployed OpenID Connect implementation issues ID Tokens that omit the required `https://` scheme prefix from the `iss` (issuer) Claim Value. Relying Party implementations wishing to work with Google will therefore need to have code to work around this, until such time as their implementation is updated. Any such workaround code should be written in a manner that will not break at such point Google adds the missing prefix to their issuer values.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 15.7. Related Specifications and Implementer's Guides\n\nThese related OPTIONAL specifications MAY be used in combination with this specification to provide additional functionality:\n\n- [OpenID Connect Discovery 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Discovery) [OpenID.Discovery] - Defines how Relying Parties dynamically discover information about OpenID Providers\n- [OpenID Connect Dynamic Client Registration 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration) [OpenID.Registration] - Defines how Relying Parties dynamically register with OpenID Providers\n- [OpenID Connect Session Management 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Session) [OpenID.Session] - Defines how to manage OpenID Connect sessions, including logout functionality\n- [OAuth 2.0 Form Post Response Mode](https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Post) [OAuth.Post] - Defines how to return OAuth 2.0 Authorization Response parameters (including OpenID Connect Authentication Response parameters) using HTML form values that are auto-submitted by the User Agent using HTTP `POST`\n\n\n\nThese implementer's guides are intended to serve as self-contained references for implementers of basic Web-based Relying Parties:\n\n- [OpenID Connect Basic Client Implementer's Guide 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Basic) [OpenID.Basic] - Implementer's guide containing a subset of this specification that is intended for use by basic Web-based Relying Parties using the OAuth Authorization Code Flow\n- [OpenID Connect Implicit Client Implementer's Guide 1.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Implicit) [OpenID.Implicit] - Implementer's guide containing a subset of this specification that is intended for use by basic Web-based Relying Parties using the OAuth Implicit Flow\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16. Security Considerations\n\nThis specification references the security considerations defined in Section 10 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749], and Section 5 of [OAuth 2.0 Bearer Token Usage](https://openid.net/specs/openid-connect-core-1_0.html#RFC6750) [RFC6750]. Furthermore, the [OAuth 2.0 Threat Model and Security Considerations](https://openid.net/specs/openid-connect-core-1_0.html#RFC6819) [RFC6819] specification provides an extensive list of threats and controls that apply to this specification as well, given that it is based upon OAuth 2.0. [ISO/IEC 29115](https://openid.net/specs/openid-connect-core-1_0.html#ISO29115) [ISO29115] also provides threats and controls that implementers need to take into account. Implementers are highly advised to read these references in detail and apply the countermeasures described therein.\n\nIn addition, the following list of attack vectors and remedies are also considered.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.1. Request Disclosure\n\nIf appropriate measures are not taken, a request might be disclosed to an attacker, posing security and privacy threats.\n\nIn addition to what is stated in Section 5.1.1 of [[RFC6819\\]](https://openid.net/specs/openid-connect-core-1_0.html#RFC6819), this standard provides a way to provide the confidentiality of the request end to end through the use of `request` or `request_uri` parameters, where the content of the `request` is an encrypted JWT with the appropriate key and cipher. This protects even against a compromised User Agent in the case of indirect request.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.2. Server Masquerading\n\nA malicious Server might masquerade as the legitimate server using various means. To detect such an attack, the Client needs to authenticate the server.\n\nIn addition to what is stated in Section 5.1.2 of [[RFC6819\\]](https://openid.net/specs/openid-connect-core-1_0.html#RFC6819), this standard provides a way to authenticate the Server through either the use of Signed or Encrypted JWTs with an appropriate key and cipher.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.3. Token Manufacture/Modification\n\nAn Attacker might generate a bogus token or modify the token contents (such as Claims values or the signature) of an existing parseable token, causing the RP to grant inappropriate access to the Client. For example, an Attacker might modify the parseable token to extend the validity period; a Client might modify the parseable token to have access to information that they should not be able to view.\n\nThere are two ways to mitigate this attack:\n\n\n\n1. The token can be digitally signed by the OP. The Relying Party SHOULD validate the digital signature to verify that it was issued by a legitimate OP.\n2. The token can be sent over a protected channel such as TLS. See [Section 16.17](https://openid.net/specs/openid-connect-core-1_0.html#TLSRequirements) for more information on using TLS. In this specification, the token is always sent over a TLS protected channel. Note however, that this measure is only a defense against third party attackers and is not applicable to the case where the Client is the attacker.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.4. Access Token Disclosure\n\nAccess Tokens are credentials used to access Protected Resources, as defined in Section 1.4 of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749]. Access Tokens represent an End-User's authorization and MUST NOT be exposed to unauthorized parties.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.5. Server Response Disclosure\n\nThe server response might contain authentication data and Claims that include sensitive Client information. Disclosure of the response contents can make the Client vulnerable to other types of attacks.\n\nThe server response disclosure can be mitigated in the following two ways:\n\n1. Using the `code` Response Type. The response is sent over a TLS protected channel, where the Client is authenticated by the `client_id` and `client_secret`.\n2. For other Response Types, the signed response can be encrypted with the Client's public key or a shared secret as an encrypted JWT with an appropriate key and cipher.\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.6. Server Response Repudiation\n\nA response might be repudiated by the server if the proper mechanisms are not in place. For example, if a Server does not digitally sign a response, the Server can claim that it was not generated through the services of the Server.\n\nTo mitigate this threat, the response MAY be digitally signed by the Server using a key that supports non-repudiation. The Client SHOULD validate the digital signature to verify that it was issued by a legitimate Server and its integrity is intact.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.7. Request Repudiation\n\nSince it is possible for a compromised or malicious Client to send a request to the wrong party, a Client that was authenticated using only a bearer token can repudiate any transaction.\n\nTo mitigate this threat, the Server MAY require that the request be digitally signed by the Client using a key that supports non-repudiation. The Server SHOULD validate the digital signature to verify that it was issued by a legitimate Client and the integrity is intact.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.8. Access Token Redirect\n\nAn Attacker uses the Access Token generated for one resource to obtain access to a second resource.\n\nTo mitigate this threat, the Access Token SHOULD be audience and scope restricted. One way of implementing it is to include the identifier of the resource for whom it was generated as audience. The resource verifies that incoming tokens include its identifier as the audience of the token.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.9. Token Reuse\n\nAn Attacker attempts to use a one-time use token such as an Authorization Code that has already been used once with the intended Resource. To mitigate this threat, the token SHOULD include a timestamp and a short validity lifetime. The Relying Party then checks the timestamp and lifetime values to ensure that the token is currently valid.\n\nAlternatively, the server MAY record the state of the use of the token and check the status for each request.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.10. Eavesdropping or Leaking Authorization Codes (Secondary Authenticator Capture)\n\nIn addition to the attack patterns described in Section 4.4.1.1 of [[RFC6819\\]](https://openid.net/specs/openid-connect-core-1_0.html#RFC6819), an Authorization Code can be captured in the User Agent where the TLS session is terminated if the User Agent is infected by malware. However, capturing it is not useful as long as either Client Authentication or an encrypted response is used.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.11. Token Substitution\n\nToken Substitution is a class of attacks in which a malicious user swaps various tokens, including swapping an Authorization Code for a legitimate user with another token that the attacker has. One means of accomplishing this is for the attacker to copy a token out one session and use it in an HTTP message for a different session, which is easy to do when the token is available to the browser; this is known as the \"cut and paste\" attack.\n\nThe Implicit Flow of [OAuth 2.0](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749] is not designed to mitigate this risk. In Section 10.16, it normatively requires that any use of the authorization process as a form of delegated End-User authentication to the Client MUST NOT use the Implicit Flow without employing additional security mechanisms that enable the Client to determine whether the ID Token and Access Token were issued for its use.\n\nIn OpenID Connect, this is mitigated through mechanisms provided through the ID Token. The ID Token is a signed security token that provides Claims such as `iss` (issuer), `sub` (subject), `aud` (audience), `azp` (authorized party), `at_hash` (access token hash), and `c_hash` (code hash). Using the ID Token, the Client is capable of detecting the Token Substitution Attack.\n\nThe `c_hash` in the ID Token enables Clients to prevent Authorization Code substitution. The `at_hash` in the ID Token enables Clients to prevent Access Token substitution.\n\nAlso, a malicious user may attempt to impersonate a more privileged user by subverting the communication channel between the Authorization Endpoint and Client, or the Token Endpoint and Client, for example by swapping the Authorization Code or reordering the messages, to convince the Token Endpoint that the attacker's authorization grant corresponds to a grant sent on behalf of a more privileged user.\n\nFor the HTTP binding defined by this specification, the responses to Token Requests are bound to the corresponding requests by message order in HTTP, as both the response containing the token and requests are protected by TLS, which will detect and prevent packet reordering.\n\nWhen designing another binding of this specification to a protocol incapable of strongly binding Token Endpoint requests to responses, additional mechanisms to address this issue MUST be utilized. One such mechanism could be to include an ID Token with a `c_hash` Claim in the token request and response.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.12. Timing Attack\n\nA timing attack enables the attacker to obtain an unnecessary large amount of information through the elapsed time differences in the code paths taken by successful and unsuccessful decryption operations or successful and unsuccessful signature validation of a message. It can be used to reduce the effective key length of the cipher used.\n\nImplementations SHOULD NOT terminate the validation process at the instant of the finding an error but SHOULD continue running until all the octets have been processed to avoid this attack.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.13. Other Crypto Related Attacks\n\nThere are various crypto related attacks possible depending on the method used for encryption and signature / integrity checking. Implementers need to consult the Security Considerations for the [JWT](https://openid.net/specs/openid-connect-core-1_0.html#JWT) [JWT] specification and specifications that it references to avoid the vulnerabilities identified in these specifications.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.14. Signing and Encryption Order\n\nSignatures over encrypted text are not considered valid in many jurisdictions. Therefore, for integrity and non-repudiation, this specification requires signing the plain text JSON Claims, when signing is performed. If both signing and encryption are desired, it is performed on the JWS containing the signed Claims, with the result being a Nested JWT, as specified in [[JWT\\]](https://openid.net/specs/openid-connect-core-1_0.html#JWT). Note that since all JWE encryption algorithms provide integrity protection, there is no need to separately sign the encrypted content.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.15. Issuer Identifier\n\nOpenID Connect supports multiple Issuers per Host and Port combination. The issuer returned by discovery MUST exactly match the value of `iss` in the ID Token.\n\nOpenID Connect treats the path component of any Issuer URI as being part of the Issuer Identifier. For instance, the subject \"1234\" with an Issuer Identifier of \"https://example.com\" is not equivalent to the subject \"1234\" with an Issuer Identifier of \"https://example.com/sales\".\n\nIt is RECOMMENDED that only a single Issuer per host be used. However, if a host supports multiple tenants, multiple Issuers for that host may be needed.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.16. Implicit Flow Threats\n\nIn the Implicit Flow, the Access Token is returned in the fragment component of the Client's `redirect_uri` through HTTPS, thus it is protected between the OP and the User Agent, and between the User Agent and the RP. The only place it can be captured is the User Agent where the TLS session is terminated, which is possible if the User Agent is infected by malware or under the control of a malicious party.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.17. TLS Requirements\n\nImplementations MUST support TLS. Which version(s) ought to be implemented will vary over time, and depend on the widespread deployment and known security vulnerabilities at the time of implementation. At the time of this writing, TLS version 1.2 [[RFC5246\\]](https://openid.net/specs/openid-connect-core-1_0.html#RFC5246) is the most recent version, but has very limited actual deployment, and might not be readily available in implementation toolkits. TLS version 1.0 [[RFC2246\\]](https://openid.net/specs/openid-connect-core-1_0.html#RFC2246) is the most widely deployed version, and will give the broadest interoperability.\n\nTo protect against information disclosure and tampering, confidentiality protection MUST be applied using TLS with a ciphersuite that provides confidentiality and integrity protection.\n\nWhenever TLS is used, a TLS server certificate check MUST be performed, per [RFC 6125](https://openid.net/specs/openid-connect-core-1_0.html#RFC6125) [RFC6125].\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.18. Lifetimes of Access Tokens and Refresh Tokens\n\nAccess Tokens might not be revocable by the Authorization Server. Access Token lifetimes SHOULD therefore be kept to single use or very short lifetimes.\n\nIf ongoing access to the UserInfo Endpoint or other Protected Resources is required, a Refresh Token can be used. The Client can then exchange the Refresh Token at the Token Endpoint for a fresh short-lived Access Token that can be used to access the resource.\n\nThe Authorization Server SHOULD clearly identify long-term grants to the User during Authorization. The Authorization Server SHOULD provide a mechanism for the End-User to revoke Access Tokens and Refresh Tokens granted to a Client.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.19. Symmetric Key Entropy\n\nIn [Section 10.1](https://openid.net/specs/openid-connect-core-1_0.html#Signing) and [Section 10.2](https://openid.net/specs/openid-connect-core-1_0.html#Encryption), keys are derived from the `client_secret` value. Thus, when used with symmetric signing or encryption operations, `client_secret` values MUST contain sufficient entropy to generate cryptographically strong keys. Also, `client_secret` values MUST also contain at least the minimum of number of octets required for MAC keys for the particular algorithm used. So for instance, for `HS256`, the `client_secret` value MUST contain at least 32 octets (and almost certainly SHOULD contain more, since `client_secret` values are likely to use a restricted alphabet).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.20. Need for Signed Requests\n\nIn some situations, Clients might need to use signed requests to ensure that the desired request parameters are delivered to the OP without having been tampered with. For instance, the `max_age` and `acr_values` provide more assurance about the nature of the authentication performed when delivered in signed requests.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 16.21. Need for Encrypted Requests\n\nIn some situations, knowing the contents of an OpenID Connect request can, in and of itself, reveal sensitive information about the End-User. For instance, knowing that the Client is requesting a particular Claim or that it is requesting that a particular authentication method be used can reveal sensitive information about the End-User. OpenID Connect enables requests to be encrypted to the OpenID Provider to prevent such potentially sensitive information from being revealed.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 17. Privacy Considerations\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 17.1. Personally Identifiable Information\n\nThe UserInfo Response typically contains Personally Identifiable Information (PII). As such, End-User consent for the release of the information for the specified purpose should be obtained at or prior to the authorization time in accordance with relevant regulations. The purpose of use is typically registered in association with the `redirect_uris`.\n\nOnly necessary UserInfo data should be stored at the Client and the Client SHOULD associate the received data with the purpose of use statement.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 17.2. Data Access Monitoring\n\nThe Resource Server SHOULD make End-Users' UserInfo access logs available to them so that they can monitor who accessed their data.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 17.3. Correlation\n\nTo protect the End-User from a possible correlation among Clients, the use of a Pairwise Pseudonymous Identifier (PPID) as the `sub` (subject) SHOULD be considered.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 17.4. Offline Access\n\nOffline access enables access to Claims when the user is not present, posing greater privacy risk than the Claims transfer when the user is present. Therefore, it is prudent to obtain explicit consent for offline access to resources. This specification mandates the use of the `prompt` parameter to obtain consent unless it is already known that the request complies with the conditions for processing the request in each jurisdiction.\n\nWhen an Access Token is returned via the User Agent using the Implicit Flow or Hybrid Flow, there is a greater risk of it being exposed to an attacker, who could later use it to access the UserInfo endpoint. If the Access Token does not enable offline access and the server can differentiate whether the Client request has been made offline or online, the risk will be substantially reduced. Therefore, this specification mandates ignoring the offline access request when the Access Token is transmitted through the User Agent. Note that differentiating between online and offline access from the server can be difficult especially for native clients. The server may well have to rely on heuristics. Also, the risk of exposure for the Access Token delivered through the User Agent for the Response Types of `code token` and `token` is the same. Thus, the implementations should be prepared to detect whether the Access Token was issued through the User Agent or directly from the Token Endpoint and deny offline access if the token was issued through the User Agent.\n\nNote that although these provisions require an explicit consent dialogue through the `prompt` parameter, the mere fact that the user pressed an \"accept\" button etc., might not constitute a valid consent. Developers should be aware that for the act of consent to be valid, typically, the impact of the terms have to be understood by the End-User, the consent must be freely given and not forced (i.e., other options have to be available), and the terms must fair and equitable. In general, it is advisable for the service to follow the required privacy principles in each jurisdiction and rely on other conditions for processing the request than simply explicit consent, as online self-service \"explicit consent\" often does not form a valid consent in some jurisdictions.\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 18. IANA Considerations\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 18.1. JSON Web Token Claims Registration\n\nThis specification registers the Claims defined in [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) and [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken) in the IANA JSON Web Token Claims registry defined in [[JWT\\]](https://openid.net/specs/openid-connect-core-1_0.html#JWT).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 18.1.1. Registry Contents\n\n\n\n- Claim Name: `name`\n- Claim Description: Full name\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `given_name`\n- Claim Description: Given name(s) or first name(s)\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `family_name`\n- Claim Description: Surname(s) or last name(s)\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `middle_name`\n- Claim Description: Middle name(s)\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `nickname`\n- Claim Description: Casual name\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `preferred_username`\n- Claim Description: Shorthand name by which the End-User wishes to be referred to\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `profile`\n- Claim Description: Profile page URL\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `picture`\n- Claim Description: Profile picture URL\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `website`\n- Claim Description: Web page or blog URL\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `email`\n- Claim Description: Preferred e-mail address\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `email_verified`\n- Claim Description: True if the e-mail address has been verified; otherwise false\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `gender`\n- Claim Description: Gender\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `birthdate`\n- Claim Description: Birthday\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `zoneinfo`\n- Claim Description: Time zone\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `locale`\n- Claim Description: Locale\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `phone_number`\n- Claim Description: Preferred telephone number\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `phone_number_verified`\n- Claim Description: True if the phone number has been verified; otherwise false\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `address`\n- Claim Description: Preferred postal address\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `updated_at`\n- Claim Description: Time the information was last updated\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 5.1](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) of this document\n\n\n\n\n\n- Claim Name: `azp`\n- Claim Description: Authorized party - the party to which the ID Token was issued\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken) of this document\n\n\n\n\n\n- Claim Name: `nonce`\n- Claim Description: Value used to associate a Client session with an ID Token\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken) of this document\n\n\n\n\n\n- Claim Name: `auth_time`\n- Claim Description: Time when the authentication occurred\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken) of this document\n\n\n\n\n\n- Claim Name: `at_hash`\n- Claim Description: Access Token hash value\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken) of this document\n\n\n\n\n\n- Claim Name: `c_hash`\n- Claim Description: Code hash value\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 3.3.2.11](https://openid.net/specs/openid-connect-core-1_0.html#HybridIDToken) of this document\n\n\n\n\n\n- Claim Name: `acr`\n- Claim Description: Authentication Context Class Reference\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken) of this document\n\n\n\n\n\n- Claim Name: `amr`\n- Claim Description: Authentication Methods References\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 2](https://openid.net/specs/openid-connect-core-1_0.html#IDToken) of this document\n\n\n\n\n\n- Claim Name: `sub_jwk`\n- Claim Description: Public key used to check the signature of an ID Token\n- Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification Document(s): [Section 7.4](https://openid.net/specs/openid-connect-core-1_0.html#SelfIssuedResponse) of this document\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 18.2. OAuth Parameters Registration\n\nThis specification registers the following parameters in the IANA OAuth Parameters registry defined in [RFC 6749](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749].\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 18.2.1. Registry Contents\n\n\n\n- Parameter name: `nonce`\n- Parameter usage location: Authorization Request\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint) of this document\n- Related information: None\n\n\n\n\n\n- Parameter name: `display`\n- Parameter usage location: Authorization Request\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint) of this document\n- Related information: None\n\n\n\n\n\n- Parameter name: `prompt`\n- Parameter usage location: Authorization Request\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint) of this document\n- Related information: None\n\n\n\n\n\n- Parameter name: `max_age`\n- Parameter usage location: Authorization Request\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint) of this document\n- Related information: None\n\n\n\n\n\n- Parameter name: `ui_locales`\n- Parameter usage location: Authorization Request\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint) of this document\n- Related information: None\n\n\n\n\n\n- Parameter name: `claims_locales`\n- Parameter usage location: Authorization Request\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 5.2](https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts) of this document\n- Related information: None\n\n\n\n\n\n- Parameter name: `id_token_hint`\n- Parameter usage location: Authorization Request\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint) of this document\n- Related information: None\n\n\n\n\n\n- Parameter name: `login_hint`\n- Parameter usage location: Authorization Request\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint) of this document\n- Related information: None\n\n\n\n\n\n- Parameter name: `acr_values`\n- Parameter usage location: Authorization Request\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint) of this document\n- Related information: None\n\n\n\n\n\n- Parameter name: `claims`\n- Parameter usage location: Authorization Request\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 5.5](https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter) of this document\n- Related information: None\n\n\n\n\n\n- Parameter name: `registration`\n- Parameter usage location: Authorization Request\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 7.2.1](https://openid.net/specs/openid-connect-core-1_0.html#RegistrationParameter) of this document\n- Related information: None\n\n\n\n\n\n- Parameter name: `request`\n- Parameter usage location: Authorization Request\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 6](https://openid.net/specs/openid-connect-core-1_0.html#JWTRequests) of this document\n- Related information: None\n\n\n\n\n\n- Parameter name: `request_uri`\n- Parameter usage location: Authorization Request\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 6](https://openid.net/specs/openid-connect-core-1_0.html#JWTRequests) of this document\n- Related information: None\n\n\n\n\n\n- Parameter name: `id_token`\n- Parameter usage location: Authorization Response, Access Token Response\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.3.3](https://openid.net/specs/openid-connect-core-1_0.html#TokenResponse) of this document\n- Related information: None\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 18.3. OAuth Extensions Error Registration\n\nThis specification registers the following errors in the IANA OAuth Extensions Error registry defined in [RFC 6749](https://openid.net/specs/openid-connect-core-1_0.html#RFC6749) [RFC6749].\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 18.3.1. Registry Contents\n\n\n\n- Error name: `interaction_required`\n- Error usage location: Authorization Endpoint\n- Related protocol extension: OpenID Connect\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError) of this document\n\n\n\n\n\n- Error name: `login_required`\n- Error usage location: Authorization Endpoint\n- Related protocol extension: OpenID Connect\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError) of this document\n\n\n\n\n\n- Error name: `account_selection_required`\n- Error usage location: Authorization Endpoint\n- Related protocol extension: OpenID Connect\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError) of this document\n\n\n\n\n\n- Error name: `consent_required`\n- Error usage location: Authorization Endpoint\n- Related protocol extension: OpenID Connect\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError) of this document\n\n\n\n\n\n- Error name: `invalid_request_uri`\n- Error usage location: Authorization Endpoint\n- Related protocol extension: OpenID Connect\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError) of this document\n\n\n\n\n\n- Error name: `invalid_request_object`\n- Error usage location: Authorization Endpoint\n- Related protocol extension: OpenID Connect\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError) of this document\n\n\n\n\n\n- Error name: `request_not_supported`\n- Error usage location: Authorization Endpoint\n- Related protocol extension: OpenID Connect\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError) of this document\n\n\n\n\n\n- Error name: `request_uri_not_supported`\n- Error usage location: Authorization Endpoint\n- Related protocol extension: OpenID Connect\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError) of this document\n\n\n\n\n\n- Error name: `registration_not_supported`\n- Error usage location: Authorization Endpoint\n- Related protocol extension: OpenID Connect\n- Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net\n- Specification document(s): [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError) of this document\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### 19. References\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n### 19.1. Normative References\n\n| [CORS]                     | Opera Software ASA, “[Cross-Origin Resource Sharing](http://www.w3.org/TR/access-control/),” July 2010. |\n| -------------------------- | ------------------------------------------------------------ |\n| [E.164]                    | International Telecommunication Union, “[E.164: The international public telecommunication numbering plan](http://www.itu.int/rec/T-REC-E.164-201011-I/en),” 2010. |\n| [IANA.Language]            | Internet Assigned Numbers Authority (IANA), “[Language Subtag Registry](http://www.iana.org/assignments/language-subtag-registry),” 2005. |\n| [ISO29115]                 | International Organization for Standardization, “[ISO/IEC 29115:2013 -- Information technology - Security techniques - Entity authentication assurance framework](http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=45138),” ISO/IEC 29115, March 2013. |\n| [ISO3166-1]                | International Organization for Standardization, “[ISO 3166-1:1997. Codes for the representation of names of countries and their subdivisions -- Part 1: Country codes](http://www.w3.org/WAI/ER/IG/ert/iso639.htm),” 1997. |\n| [ISO639-1]                 | International Organization for Standardization, “ISO 639-1:2002. Codes for the representation of names of languages -- Part 1: Alpha-2 code,” 2002. |\n| [ISO8601-2004]             | International Organization for Standardization, “ISO 8601:2004. Data elements and interchange formats - Information interchange - Representation of dates and times,” 2004. |\n| [JWA]                      | Jones, M., “[JSON Web Algorithms (JWA)](http://tools.ietf.org/html/draft-ietf-jose-json-web-algorithms),” draft-ietf-jose-json-web-algorithms (work in progress), July 2014 ([HTML](http://tools.ietf.org/html/draft-ietf-jose-json-web-algorithms-31)). |\n| [JWE]                      | Jones, M., Rescorla, E., and J. Hildebrand, “[JSON Web Encryption (JWE)](http://tools.ietf.org/html/draft-ietf-jose-json-web-encryption),” draft-ietf-jose-json-web-encryption (work in progress), July 2014 ([HTML](http://tools.ietf.org/html/draft-ietf-jose-json-web-encryption-31)). |\n| [JWK]                      | Jones, M., “[JSON Web Key (JWK)](http://tools.ietf.org/html/draft-ietf-jose-json-web-key),” draft-ietf-jose-json-web-key (work in progress), July 2014 ([HTML](http://tools.ietf.org/html/draft-ietf-jose-json-web-key-31)). |\n| [JWS]                      | Jones, M., Bradley, J., and N. Sakimura, “[JSON Web Signature (JWS)](http://tools.ietf.org/html/draft-ietf-jose-json-web-signature),” draft-ietf-jose-json-web-signature (work in progress), July 2014 ([HTML](http://tools.ietf.org/html/draft-ietf-jose-json-web-signature-31)). |\n| [JWT]                      | Jones, M., Bradley, J., and N. Sakimura, “[JSON Web Token (JWT)](http://tools.ietf.org/html/draft-ietf-oauth-json-web-token),” draft-ietf-oauth-json-web-token (work in progress), July 2014 ([HTML](http://tools.ietf.org/html/draft-ietf-oauth-json-web-token-25)). |\n| [OAuth.Assertions]         | Campbell, B., Mortimore, C., Jones, M., and Y. Goland, “[Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants](http://tools.ietf.org/html/draft-ietf-oauth-assertions),” draft-ietf-oauth-assertions (work in progress), July 2014 ([HTML](http://tools.ietf.org/html/draft-ietf-oauth-assertions-17)). |\n| [OAuth.JWT]                | Jones, M., Campbell, B., and C. Mortimore, “[JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants](http://tools.ietf.org/html/draft-ietf-oauth-jwt-bearer),” draft-ietf-oauth-jwt-bearer (work in progress), July 2014 ([HTML](http://tools.ietf.org/html/draft-ietf-oauth-jwt-bearer-10)). |\n| [OAuth.Responses]          | de Medeiros, B., Ed., Scurtescu, M., Tarjan, P., and M. Jones, “[OAuth 2.0 Multiple Response Type Encoding Practices](http://openid.net/specs/oauth-v2-multiple-response-types-1_0.html),” February 2014. |\n| [OpenID.Discovery]         | Sakimura, N., Bradley, J., Jones, M., and E. Jay, “[OpenID Connect Discovery 1.0](http://openid.net/specs/openid-connect-discovery-1_0.html),” November 2014. |\n| [OpenID.Registration]      | Sakimura, N., Bradley, J., and M. Jones, “[OpenID Connect Dynamic Client Registration 1.0](http://openid.net/specs/openid-connect-registration-1_0.html),” November 2014. |\n| [RFC2119]                  | [Bradner, S.](mailto:sob@harvard.edu), “[Key words for use in RFCs to Indicate Requirement Levels](http://tools.ietf.org/html/rfc2119),” BCP 14, RFC 2119, March 1997 ([TXT](http://www.rfc-editor.org/rfc/rfc2119.txt), [HTML](http://xml.resource.org/public/rfc/html/rfc2119.html), [XML](http://xml.resource.org/public/rfc/xml/rfc2119.xml)). |\n| [RFC2246]                  | [Dierks, T.](mailto:tdierks@certicom.com) and [C. Allen](mailto:callen@certicom.com), “[The TLS Protocol Version 1.0](http://tools.ietf.org/html/rfc2246),” RFC 2246, January 1999 ([TXT](http://www.rfc-editor.org/rfc/rfc2246.txt)). |\n| [RFC2616]                  | [Fielding, R.](mailto:fielding@ics.uci.edu), [Gettys, J.](mailto:jg@w3.org), [Mogul, J.](mailto:mogul@wrl.dec.com), [Frystyk, H.](mailto:frystyk@w3.org), [Masinter, L.](mailto:masinter@parc.xerox.com), [Leach, P.](mailto:paulle@microsoft.com), and [T. Berners-Lee](mailto:timbl@w3.org), “[Hypertext Transfer Protocol -- HTTP/1.1](http://tools.ietf.org/html/rfc2616),” RFC 2616, June 1999 ([TXT](http://www.rfc-editor.org/rfc/rfc2616.txt), [PS](http://www.rfc-editor.org/rfc/rfc2616.ps), [PDF](http://www.rfc-editor.org/rfc/rfc2616.pdf), [HTML](http://xml.resource.org/public/rfc/html/rfc2616.html), [XML](http://xml.resource.org/public/rfc/xml/rfc2616.xml)). |\n| [RFC3339]                  | [Klyne, G., Ed.](mailto:GK@ACM.ORG) and [C. Newman](mailto:chris.newman@sun.com), “[Date and Time on the Internet: Timestamps](http://tools.ietf.org/html/rfc3339),” RFC 3339, July 2002 ([TXT](http://www.rfc-editor.org/rfc/rfc3339.txt), [HTML](http://xml.resource.org/public/rfc/html/rfc3339.html), [XML](http://xml.resource.org/public/rfc/xml/rfc3339.xml)). |\n| [RFC3966]                  | Schulzrinne, H., “[The tel URI for Telephone Numbers](http://tools.ietf.org/html/rfc3966),” RFC 3966, December 2004 ([TXT](http://www.rfc-editor.org/rfc/rfc3966.txt)). |\n| [RFC3986]                  | [Berners-Lee, T.](mailto:timbl@w3.org), [Fielding, R.](mailto:fielding@gbiv.com), and [L. Masinter](mailto:LMM@acm.org), “[Uniform Resource Identifier (URI): Generic Syntax](http://tools.ietf.org/html/rfc3986),” STD 66, RFC 3986, January 2005 ([TXT](http://www.rfc-editor.org/rfc/rfc3986.txt), [HTML](http://xml.resource.org/public/rfc/html/rfc3986.html), [XML](http://xml.resource.org/public/rfc/xml/rfc3986.xml)). |\n| [RFC4627]                  | Crockford, D., “[The application/json Media Type for JavaScript Object Notation (JSON)](http://tools.ietf.org/html/rfc4627),” RFC 4627, July 2006 ([TXT](http://www.rfc-editor.org/rfc/rfc4627.txt)). |\n| [RFC5246]                  | Dierks, T. and E. Rescorla, “[The Transport Layer Security (TLS) Protocol Version 1.2](http://tools.ietf.org/html/rfc5246),” RFC 5246, August 2008 ([TXT](http://www.rfc-editor.org/rfc/rfc5246.txt)). |\n| [RFC5322]                  | [Resnick, P., Ed.](mailto:presnick@qualcomm.com), “[Internet Message Format](http://tools.ietf.org/html/rfc5322),” RFC 5322, October 2008 ([TXT](http://www.rfc-editor.org/rfc/rfc5322.txt), [HTML](http://xml.resource.org/public/rfc/html/rfc5322.html), [XML](http://xml.resource.org/public/rfc/xml/rfc5322.xml)). |\n| [RFC5646]                  | Phillips, A. and M. Davis, “[Tags for Identifying Languages](http://tools.ietf.org/html/rfc5646),” BCP 47, RFC 5646, September 2009 ([TXT](http://www.rfc-editor.org/rfc/rfc5646.txt)). |\n| [RFC6125]                  | Saint-Andre, P. and J. Hodges, “[Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)](http://tools.ietf.org/html/rfc6125),” RFC 6125, March 2011 ([TXT](http://www.rfc-editor.org/rfc/rfc6125.txt)). |\n| [RFC6711]                  | Johansson, L., “[An IANA Registry for Level of Assurance (LoA) Profiles](http://tools.ietf.org/html/rfc6711),” RFC 6711, August 2012 ([TXT](http://www.rfc-editor.org/rfc/rfc6711.txt)). |\n| [RFC6749]                  | Hardt, D., “[The OAuth 2.0 Authorization Framework](http://tools.ietf.org/html/rfc6749),” RFC 6749, October 2012 ([TXT](http://www.rfc-editor.org/rfc/rfc6749.txt)). |\n| [RFC6750]                  | Jones, M. and D. Hardt, “[The OAuth 2.0 Authorization Framework: Bearer Token Usage](http://tools.ietf.org/html/rfc6750),” RFC 6750, October 2012 ([TXT](http://www.rfc-editor.org/rfc/rfc6750.txt)). |\n| [RFC6819]                  | Lodderstedt, T., McGloin, M., and P. Hunt, “[OAuth 2.0 Threat Model and Security Considerations](http://tools.ietf.org/html/rfc6819),” RFC 6819, January 2013 ([TXT](http://www.rfc-editor.org/rfc/rfc6819.txt)). |\n| [USA15]                    | [Davis, M.](mailto:markdavis@google.com), [Whistler, K.](mailto:ken@unicode.org), and M. Dürst, “Unicode Normalization Forms,” Unicode Standard Annex 15, 09 2009. |\n| [W3C.REC-html401-19991224] | Raggett, D., Hors, A., and I. Jacobs, “[HTML 4.01 Specification](http://www.w3.org/TR/1999/REC-html401-19991224),” World Wide Web Consortium Recommendation REC-html401-19991224, December 1999 ([HTML](http://www.w3.org/TR/1999/REC-html401-19991224)). |\n| [zoneinfo]                 | Public Domain, “[The tz database](http://www.twinsun.com/tz/tz-link.htm),” June 2011. |\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n### 19.2. Informative References\n\n| [JWK.Thumbprint]  | [Jones, M.](mailto:mbj@microsoft.com), “[JSON Web Key (JWK) Thumbprint](http://tools.ietf.org/html/draft-jones-jose-jwk-thumbprint),” draft-jones-jose-jwk-thumbprint (work in progress), July 2014 ([HTML](http://tools.ietf.org/html/draft-jones-jose-jwk-thumbprint-01)). |\n| ----------------- | ------------------------------------------------------------ |\n| [OAuth.Post]      | Jones, M. and B. Campbell, “[OAuth 2.0 Form Post Response Mode](http://openid.net/specs/oauth-v2-form-post-response-mode-1_0.html),” February 2014. |\n| [OpenID.2.0]      | OpenID Foundation, “OpenID Authentication 2.0,” December 2007 ([TXT](http://openid.net/specs/openid-authentication-2_0.txt), [HTML](http://openid.net/specs/openid-authentication-2_0.html)). |\n| [OpenID.Basic]    | Sakimura, N., Bradley, J., Jones, M., de Medeiros, B., and C. Mortimore, “[OpenID Connect Basic Client Implementer's Guide 1.0](http://openid.net/specs/openid-connect-basic-1_0.html),” November 2014. |\n| [OpenID.Implicit] | Sakimura, N., Bradley, J., Jones, M., de Medeiros, B., and C. Mortimore, “[OpenID Connect Implicit Client Implementer's Guide 1.0](http://openid.net/specs/openid-connect-implicit-1_0.html),” November 2014. |\n| [OpenID.PAPE]     | [Recordon, D.](mailto:david@sixapart.com), [Jones, M.](mailto:mbj@microsoft.com), [Bufu, J., Ed.](mailto:johnny.bufu@gmail.com), [Daugherty, J., Ed.](mailto:cygnus@janrain.com), and [N. Sakimura](mailto:n-sakimura@nri.co.jp), “OpenID Provider Authentication Policy Extension 1.0,” December 2008 ([TXT](http://openid.net/specs/openid-provider-authentication-policy-extension-1_0.txt), [HTML](http://openid.net/specs/openid-provider-authentication-policy-extension-1_0.html)). |\n| [OpenID.Session]  | Sakimura, N., Bradley, J., Jones, M., de Medeiros, B., Mortimore, C., and E. Jay, “[OpenID Connect Session Management 1.0](http://openid.net/specs/openid-connect-session-1_0.html),” November 2014. |\n| [RFC4949]         | Shirey, R., “[Internet Security Glossary, Version 2](http://tools.ietf.org/html/rfc4949),” RFC 4949, August 2007 ([TXT](http://www.rfc-editor.org/rfc/rfc4949.txt)). |\n| [X.1252]          | International Telecommunication Union, “[ITU-T Recommendation X.1252 -- Cyberspace security -- Identity management -- Baseline identity management terms and definitions](http://www.itu.int/rec/dologin_pub.asp?lang=e&id=T-REC-X.1252-201004-I!!PDF-E&type=items),” ITU-T X.1252, November 2010. |\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### Appendix A. Authorization Examples\n\nThe following are non-normative examples of Authorization Requests with different `response_type` values and their responses (with line wraps within values for display purposes only):\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### A.1. Example using response_type=code\n\n```\n  GET /authorize?\n    response_type=code\n    &client_id=s6BhdRkqt3\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb\n    &scope=openid%20profile%20email\n    &nonce=n-0S6_WzA2Mj\n    &state=af0ifjsldkj HTTP/1.1\n  Host: server.example.com\n\n  HTTP/1.1 302 Found\n  Location: https://client.example.org/cb?\n    code=Qcb0Orv1zh30vL1MPRsbm-diHiMwcLyZvn1arpZv-Jxf_11jnpEX3Tgfvk\n    &state=af0ifjsldkj\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### A.2. Example using response_type=id_token\n\n```\n  GET /authorize?\n    response_type=id_token\n    &client_id=s6BhdRkqt3\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb\n    &scope=openid%20profile%20email\n    &nonce=n-0S6_WzA2Mj\n    &state=af0ifjsldkj HTTP/1.1\n  Host: server.example.com\n\n  HTTP/1.1 302 Found\n  Location: https://client.example.org/cb#\n    id_token=eyJraWQiOiIxZTlnZGs3IiwiYWxnIjoiUlMyNTYifQ.ewogImlz\n    cyI6ICJodHRwOi8vc2VydmVyLmV4YW1wbGUuY29tIiwKICJzdWIiOiAiMjQ4\n    Mjg5NzYxMDAxIiwKICJhdWQiOiAiczZCaGRSa3F0MyIsCiAibm9uY2UiOiAi\n    bi0wUzZfV3pBMk1qIiwKICJleHAiOiAxMzExMjgxOTcwLAogImlhdCI6IDEz\n    MTEyODA5NzAsCiAibmFtZSI6ICJKYW5lIERvZSIsCiAiZ2l2ZW5fbmFtZSI6\n    ICJKYW5lIiwKICJmYW1pbHlfbmFtZSI6ICJEb2UiLAogImdlbmRlciI6ICJm\n    ZW1hbGUiLAogImJpcnRoZGF0ZSI6ICIwMDAwLTEwLTMxIiwKICJlbWFpbCI6\n    ICJqYW5lZG9lQGV4YW1wbGUuY29tIiwKICJwaWN0dXJlIjogImh0dHA6Ly9l\n    eGFtcGxlLmNvbS9qYW5lZG9lL21lLmpwZyIKfQ.rHQjEmBqn9Jre0OLykYNn\n    spA10Qql2rvx4FsD00jwlB0Sym4NzpgvPKsDjn_wMkHxcp6CilPcoKrWHcip\n    R2iAjzLvDNAReF97zoJqq880ZD1bwY82JDauCXELVR9O6_B0w3K-E7yM2mac\n    AAgNCUwtik6SjoSUZRcf-O5lygIyLENx882p6MtmwaL1hd6qn5RZOQ0TLrOY\n    u0532g9Exxcm-ChymrB4xLykpDj3lUivJt63eEGGN6DH5K6o33TcxkIjNrCD\n    4XB1CKKumZvCedgHHF3IAK4dVEDSUoGlH9z4pP_eWYNXvqQOjGs-rDaQzUHl\n    6cQQWNiDpWOl_lxXjQEvQ\n    &state=af0ifjsldkj\n```\n\nThe value of the `id_token` parameter is the ID Token, which is a signed JWT, containing three base64url encoded segments separated by period ('.') characters. The first segment represents the JOSE Header. Base64url decoding it will result in the following set of Header Parameters:\n\n```\n  {\"kid\":\"1e9gdk7\",\"alg\":\"RS256\"}\n```\n\nThe `alg` value represents the algorithm that was used to sign the JWT, in this case `RS256`, representing RSASSA-PKCS-v1_5 using SHA-256. The `kid` value is a key identifier used in identifying the key to be used to verify the signature. If the `kid` value is unknown to the RP, it needs to retrieve the contents of the OP's JWK Set again to obtain the OP's current set of keys.\n\nThe second segment represents the Claims in the ID Token. Verifying and decoding the ID Token will yield the following Claims:\n\n```\n  {\n   \"iss\": \"http://server.example.com\",\n   \"sub\": \"248289761001\",\n   \"aud\": \"s6BhdRkqt3\",\n   \"nonce\": \"n-0S6_WzA2Mj\",\n   \"exp\": 1311281970,\n   \"iat\": 1311280970,\n   \"name\": \"Jane Doe\",\n   \"given_name\": \"Jane\",\n   \"family_name\": \"Doe\",\n   \"gender\": \"female\",\n   \"birthdate\": \"0000-10-31\",\n   \"email\": \"janedoe@example.com\",\n   \"picture\": \"http://example.com/janedoe/me.jpg\"\n  }\n```\n\nThe third segment represents the ID Token signature, which is verified as described in [[JWS\\]](https://openid.net/specs/openid-connect-core-1_0.html#JWS).\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### A.3. Example using response_type=id_token token\n\n```\n  GET /authorize?\n    response_type=id_token%20token\n    &client_id=s6BhdRkqt3\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb\n    &scope=openid%20profile%20email\n    &nonce=n-0S6_WzA2Mj\n    &state=af0ifjsldkj HTTP/1.1\n  Host: server.example.com\n\n  HTTP/1.1 302 Found\n  Location: https://client.example.org/cb#\n    access_token=jHkWEdUXMU1BwAsC4vtUsZwnNvTIxEl0z9K3vx5KF0Y\n    &token_type=Bearer\n    &id_token=eyJraWQiOiIxZTlnZGs3IiwiYWxnIjoiUlMyNTYifQ.ewogIml\n    zcyI6ICJodHRwOi8vc2VydmVyLmV4YW1wbGUuY29tIiwKICJzdWIiOiAiMjQ\n    4Mjg5NzYxMDAxIiwKICJhdWQiOiAiczZCaGRSa3F0MyIsCiAibm9uY2UiOiA\n    ibi0wUzZfV3pBMk1qIiwKICJleHAiOiAxMzExMjgxOTcwLAogImlhdCI6IDE\n    zMTEyODA5NzAsCiAiYXRfaGFzaCI6ICI3N1FtVVB0alBmeld0RjJBbnBLOVJ\n    RIgp9.F9gRev0Dt2tKcrBkHy72cmRqnLdzw9FLCCSebV7mWs7o_sv2O5s6zM\n    ky2kmhHTVx9HmdvNnx9GaZ8XMYRFeYk8L5NZ7aYlA5W56nsG1iWOou_-gji0\n    ibWIuuf4Owaho3YSoi7EvsTuLFz6tq-dLyz0dKABMDsiCmJ5wqkPUDTE3QTX\n    jzbUmOzUDli-gCh5QPuZAq0cNW3pf_2n4zpvTYtbmj12cVcxGIMZby7TMWES\n    RjQ9_o3jvhVNcCGcE0KAQXejhA1ocJhNEvQNqMFGlBb6_0RxxKjDZ-Oa329e\n    GDidOvvp0h5hoES4a8IuGKS7NOcpp-aFwp0qVMDLI-Xnm-Pg\n    &state=af0ifjsldkj\n```\n\nVerifying and decoding the ID Token will yield the following Claims:\n\n```\n  {\n   \"iss\": \"http://server.example.com\",\n   \"sub\": \"248289761001\",\n   \"aud\": \"s6BhdRkqt3\",\n   \"nonce\": \"n-0S6_WzA2Mj\",\n   \"exp\": 1311281970,\n   \"iat\": 1311280970,\n   \"at_hash\": \"77QmUPtjPfzWtF2AnpK9RQ\"\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### A.4. Example using response_type=code id_token\n\n```\n  GET /authorize?\n    response_type=code%20id_token\n    &client_id=s6BhdRkqt3\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb\n    &scope=openid%20profile%20email\n    &nonce=n-0S6_WzA2Mj\n    &state=af0ifjsldkj HTTP/1.1\n  Host: server.example.com\n\n  HTTP/1.1 302 Found\n  Location: https://client.example.org/cb#\n    code=Qcb0Orv1zh30vL1MPRsbm-diHiMwcLyZvn1arpZv-Jxf_11jnpEX3Tgfvk\n    &id_token=eyJraWQiOiIxZTlnZGs3IiwiYWxnIjoiUlMyNTYifQ.ewogIml\n    zcyI6ICJodHRwOi8vc2VydmVyLmV4YW1wbGUuY29tIiwKICJzdWIiOiAiMjQ\n    4Mjg5NzYxMDAxIiwKICJhdWQiOiAiczZCaGRSa3F0MyIsCiAibm9uY2UiOiA\n    ibi0wUzZfV3pBMk1qIiwKICJleHAiOiAxMzExMjgxOTcwLAogImlhdCI6IDE\n    zMTEyODA5NzAsCiAiY19oYXNoIjogIkxEa3RLZG9RYWszUGswY25YeENsdEE\n    iCn0.XW6uhdrkBgcGx6zVIrCiROpWURs-4goO1sKA4m9jhJIImiGg5muPUcN\n    egx6sSv43c5DSn37sxCRrDZZm4ZPBKKgtYASMcE20SDgvYJdJS0cyuFw7Ijp\n    _7WnIjcrl6B5cmoM6ylCvsLMwkoQAxVublMwH10oAxjzD6NEFsu9nipkszWh\n    sPePf_rM4eMpkmCbTzume-fzZIi5VjdWGGEmzTg32h3jiex-r5WTHbj-u5HL\n    7u_KP3rmbdYNzlzd1xWRYTUs4E8nOTgzAUwvwXkIQhOh5TPcSMBYy6X3E7-_\n    gr9Ue6n4ND7hTFhtjYs3cjNKIA08qm5cpVYFMFMG6PkhzLQ\n    &state=af0ifjsldkj\n```\n\nVerifying and decoding the ID Token will yield the following Claims:\n\n```\n  {\n   \"iss\": \"http://server.example.com\",\n   \"sub\": \"248289761001\",\n   \"aud\": \"s6BhdRkqt3\",\n   \"nonce\": \"n-0S6_WzA2Mj\",\n   \"exp\": 1311281970,\n   \"iat\": 1311280970,\n   \"c_hash\": \"LDktKdoQak3Pk0cnXxCltA\"\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### A.5. Example using response_type=code token\n\n```\n  GET /authorize?\n    response_type=code%20token\n    &client_id=s6BhdRkqt3\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb\n    &scope=openid%20profile%20email\n    &nonce=n-0S6_WzA2Mj\n    &state=af0ifjsldkj HTTP/1.1\n  Host: server.example.com\n\n  HTTP/1.1 302 Found\n  Location: https://client.example.org/cb#\n    code=Qcb0Orv1zh30vL1MPRsbm-diHiMwcLyZvn1arpZv-Jxf_11jnpEX3Tgfvk\n    &access_token=jHkWEdUXMU1BwAsC4vtUsZwnNvTIxEl0z9K3vx5KF0Y\n    &token_type=Bearer\n    &state=af0ifjsldkj\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### A.6. Example using response_type=code id_token token\n\n```\n  GET /authorize?\n    response_type=code%20id_token%20token\n    &client_id=s6BhdRkqt3\n    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb\n    &scope=openid%20profile%20email\n    &nonce=n-0S6_WzA2Mj\n    &state=af0ifjsldkj HTTP/1.1\n  Host: server.example.com\n\n  HTTP/1.1 302 Found\n  Location: https://client.example.org/cb#\n    code=Qcb0Orv1zh30vL1MPRsbm-diHiMwcLyZvn1arpZv-Jxf_11jnpEX3Tgfvk\n    &access_token=jHkWEdUXMU1BwAsC4vtUsZwnNvTIxEl0z9K3vx5KF0Y\n    &token_type=Bearer\n    &id_token=eyJraWQiOiIxZTlnZGs3IiwiYWxnIjoiUlMyNTYifQ.ewogIml\n    zcyI6ICJodHRwOi8vc2VydmVyLmV4YW1wbGUuY29tIiwKICJzdWIiOiAiMjQ\n    4Mjg5NzYxMDAxIiwKICJhdWQiOiAiczZCaGRSa3F0MyIsCiAibm9uY2UiOiA\n    ibi0wUzZfV3pBMk1qIiwKICJleHAiOiAxMzExMjgxOTcwLAogImlhdCI6IDE\n    zMTEyODA5NzAsCiAiY19oYXNoIjogIkxEa3RLZG9RYWszUGswY25YeENsdEE\n    iCn0.XW6uhdrkBgcGx6zVIrCiROpWURs-4goO1sKA4m9jhJIImiGg5muPUcN\n    egx6sSv43c5DSn37sxCRrDZZm4ZPBKKgtYASMcE20SDgvYJdJS0cyuFw7Ijp\n    _7WnIjcrl6B5cmoM6ylCvsLMwkoQAxVublMwH10oAxjzD6NEFsu9nipkszWh\n    sPePf_rM4eMpkmCbTzume-fzZIi5VjdWGGEmzTg32h3jiex-r5WTHbj-u5HL\n    7u_KP3rmbdYNzlzd1xWRYTUs4E8nOTgzAUwvwXkIQhOh5TPcSMBYy6X3E7-_\n    gr9Ue6n4ND7hTFhtjYs3cjNKIA08qm5cpVYFMFMG6PkhzLQ\n    &state=af0ifjsldkj\n```\n\nVerifying and decoding the ID Token will yield the following Claims:\n\n```\n  {\n   \"iss\": \"http://server.example.com\",\n   \"sub\": \"248289761001\",\n   \"aud\": \"s6BhdRkqt3\",\n   \"nonce\": \"n-0S6_WzA2Mj\",\n   \"exp\": 1311281970,\n   \"iat\": 1311280970,\n   \"at_hash\": \"77QmUPtjPfzWtF2AnpK9RQ\",\n   \"c_hash\": \"LDktKdoQak3Pk0cnXxCltA\"\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### A.7. RSA Key Used in Examples\n\nThe following RSA public key, represented in JWK format, can be used to validate the ID Token signatures in the above examples (with line wraps within values for display purposes only):\n\n```\n  {\n   \"kty\":\"RSA\",\n   \"kid\":\"1e9gdk7\",\n   \"n\":\"w7Zdfmece8iaB0kiTY8pCtiBtzbptJmP28nSWwtdjRu0f2GFpajvWE4VhfJA\n        jEsOcwYzay7XGN0b-X84BfC8hmCTOj2b2eHT7NsZegFPKRUQzJ9wW8ipn_aD\n        JWMGDuB1XyqT1E7DYqjUCEOD1b4FLpy_xPn6oV_TYOfQ9fZdbE5HGxJUzeku\n        GcOKqOQ8M7wfYHhHHLxGpQVgL0apWuP2gDDOdTtpuld4D2LK1MZK99s9gaSj\n        RHE8JDb1Z4IGhEcEyzkxswVdPndUWzfvWBBWXWxtSUvQGBRkuy1BHOa4sP6F\n        KjWEeeF7gm7UMs2Nm2QUgNZw6xvEDGaLk4KASdIxRQ\",\n   \"e\":\"AQAB\"\n  }\n```\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### Appendix B. Acknowledgements\n\nAs a successor version of OpenID, this specification heavily relies on ideas explored in [OpenID Authentication 2.0](https://openid.net/specs/openid-connect-core-1_0.html#OpenID.2.0) [OpenID.2.0]. Please refer to Appendix C of OpenID Authentication 2.0 for the full list of the contributors for that specification.\n\nIn addition, the OpenID Community would like to thank the following people for their contributions to this specification:\n\n\n\n> Naveen Agarwal (naa@google.com), Google\n>\n> Amanda Anganes (aanganes@mitre.org), MITRE\n>\n> Casper Biering (cb@peercraft.com), Peercraft\n>\n> John Bradley (ve7jtb@ve7jtb.com), Ping Identity\n>\n> Tim Bray (tbray@textuality.com), Google\n>\n> Johnny Bufu (jbufu@janrain.com), Janrain\n>\n> Brian Campbell (bcampbell@pingidentity.com), Ping Identity\n>\n> Blaine Cook (romeda@gmail.com), Independent\n>\n> Breno de Medeiros (breno@google.com), Google\n>\n> Pamela Dingle (pdingle@pingidentity.com), Ping Identity\n>\n> Vladimir Dzhuvinov (vladimir@nimbusds.com), Nimbus Directory Services\n>\n> George Fletcher (george.fletcher@corp.aol.com), AOL\n>\n> Roland Hedberg (roland.hedberg@adm.umu.se), University of Umea\n>\n> Ryo Ito (ryo.ito@mixi.co.jp), mixi, Inc.\n>\n> Edmund Jay (ejay@mgi1.com), Illumila\n>\n> Michael B. Jones (mbj@microsoft.com), Microsoft\n>\n> Torsten Lodderstedt (t.lodderstedt@telekom.de), Deutsche Telekom\n>\n> Nov Matake (nov@matake.jp), Independent\n>\n> Chuck Mortimore (cmortimore@salesforce.com), Salesforce\n>\n> Anthony Nadalin (tonynad@microsoft.com), Microsoft\n>\n> Hideki Nara (hdknr@ic-tact.co.jp), Tact Communications\n>\n> Axel Nennker (axel.nennker@telekom.de), Deutsche Telekom\n>\n> David Recordon (dr@fb.com), Facebook\n>\n> Justin Richer (jricher@mitre.org), MITRE\n>\n> Nat Sakimura (n-sakimura@nri.co.jp), Nomura Research Institute, Ltd.\n>\n> Luke Shepard (lshepard@fb.com), Facebook\n>\n> Andreas Åkre Solberg (andreas.solberg@uninett.no), UNINET\n>\n> Paul Tarjan (pt@fb.com), Facebook\n\n\n\n\n\n------\n\n[ TOC ](https://openid.net/specs/openid-connect-core-1_0.html#toc)\n\n\n\n### Appendix C. Notices\n\nCopyright (c) 2014 The OpenID Foundation.\n\nThe OpenID Foundation (OIDF) grants to any Contributor, developer, implementer, or other interested party a non-exclusive, royalty free, worldwide copyright license to reproduce, prepare derivative works from, distribute, perform and display, this Implementers Draft or Final Specification solely for the purposes of (i) developing specifications, and (ii) implementing Implementers Drafts and Final Specifications based on such documents, provided that attribution be made to the OIDF as the source of the material, but that such attribution does not indicate an endorsement by the OIDF.\n\nThe technology described in this specification was made available from contributions from various sources, including members of the OpenID Foundation and others. Although the OpenID Foundation has taken steps to help ensure that the technology is available for distribution, it takes no position regarding the validity or scope of any intellectual property or other rights that might be claimed to pertain to the implementation or use of the technology described in this specification or the extent to which any license under such rights might or might not be available; neither does it represent that it has made any independent effort to identify any such rights. The OpenID Foundation and the contributors to this specification make no (and hereby expressly disclaim any) warranties (express, implied, or otherwise), including implied warranties of merchantability, non-infringement, fitness for a particular purpose, or title, related to this specification, and the entire risk as to implementing this specification is assumed by the implementer. The OpenID Intellectual Property Rights policy requires contributors to offer a patent promise not to assert certain patent claims against other contributors and against implementers. The OpenID Foundation invites any interested party to bring to its attention any copyrights, patents, patent applications, or other proprietary rights that may cover technology that may be required to practice this specification.","slug":"openid/OpenID","published":1,"_id":"clo6vbzvv0000xcvfes2ieeey","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"1-介绍\"><a href=\"#1-介绍\" class=\"headerlink\" title=\"1. 介绍\"></a>1. 介绍</h3><p>OpenID Connect 1.0 is a simple identity layer on top of the OAuth 2.0 [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">RFC6749]</a> protocol. It enables Clients to verify the identity of the End-User based on the authentication performed by an Authorization Server, as well as to obtain basic profile information about the End-User in an interoperable and REST-like manner.</p>\n<p>The OpenID Connect Core 1.0 specification defines the core OpenID Connect functionality: authentication built on top of OAuth 2.0 and the use of Claims to communicate information about the End-User. It also describes the security and privacy considerations for using OpenID Connect.</p>\n<p>As background, the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0 Authorization Framework</a> [RFC6749] and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6750\">OAuth 2.0 Bearer Token Usage</a> [RFC6750] specifications provide a general framework for third-party applications to obtain and use limited access to HTTP resources. They define mechanisms to obtain and use Access Tokens to access resources but do not define standard methods to provide identity information. Notably, without profiling OAuth 2.0, it is incapable of providing information about the authentication of an End-User. Readers are expected to be familiar with these specifications.</p>\n<p>OpenID Connect implements authentication as an extension to the OAuth 2.0 authorization process. Use of this extension is requested by Clients by including the <code>openid</code> scope value in the Authorization Request. Information about the authentication performed is returned in a <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JSON Web Token (JWT)</a> [JWT] called an ID Token (see <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a>). OAuth 2.0 Authentication Servers implementing OpenID Connect are also referred to as OpenID Providers (OPs). OAuth 2.0 Clients using OpenID Connect are also referred to as Relying Parties (RPs).</p>\n<p>This specification assumes that the Relying Party has already obtained configuration information about the OpenID Provider, including its Authorization Endpoint and Token Endpoint locations. This information is normally obtained via Discovery, as described in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Discovery\">OpenID Connect Discovery 1.0</a> [OpenID.Discovery], or may be obtained via other mechanisms.</p>\n<p>Likewise, this specification assumes that the Relying Party has already obtained sufficient credentials and provided information needed to use the OpenID Provider. This is normally done via Dynamic Registration, as described in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration\">OpenID Connect Dynamic Client Registration 1.0</a> [OpenID.Registration], or may be obtained via other mechanisms.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"1-1-需求符号和约定\"><a href=\"#1-1-需求符号和约定\" class=\"headerlink\" title=\"1.1. 需求符号和约定\"></a>1.1. 需求符号和约定</h3><p>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC2119\">RFC 2119</a> [RFC2119].</p>\n<p>In the .txt version of this document, values are quoted to indicate that they are to be taken literally. When using these values in protocol messages, the quotes MUST NOT be used as part of the value. In the HTML version of this document, values to be taken literally are indicated by the use of <code>this fixed-width font</code>.</p>\n<p>All uses of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWS\">JSON Web Signature (JWS)</a> [JWS] and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWE\">JSON Web Encryption (JWE)</a> [JWE] data structures in this specification utilize the JWS Compact Serialization or the JWE Compact Serialization; the JWS JSON Serialization and the JWE JSON Serialization are not used.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"1-2-术语\"><a href=\"#1-2-术语\" class=\"headerlink\" title=\"1.2. 术语\"></a>1.2. 术语</h3><p>This specification uses the terms “Access Token”, “Authorization Code”, “Authorization Endpoint”, “Authorization Grant”, “Authorization Server”, “Client”, “Client Authentication”, “Client Identifier”, “Client Secret”, “Grant Type”, “Protected Resource”, “Redirection URI”, “Refresh Token”, “Resource Owner”, “Resource Server”, “Response Type”, and “Token Endpoint” defined by <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749], the terms “Claim Name”, “Claim Value”, “JSON Web Token (JWT)”, “JWT Claims Set”, and “Nested JWT” defined by <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JSON Web Token (JWT)</a> [JWT], the terms “Header Parameter” and “JOSE Header” defined by <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWS\">JSON Web Signature (JWS)</a> [JWS], the term “User Agent” defined by <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC2616\">RFC 2616</a> [RFC2616], and the term “Response Mode” defined by <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses\">OAuth 2.0 Multiple Response Type Encoding Practices</a> [OAuth.Responses].</p>\n<p>This specification also defines the following terms:</p>\n<blockquote>\n<ul>\n<li><p>Authentication</p>\n<p>Process used to achieve sufficient confidence in the binding between the Entity and the presented Identity.</p>\n</li>\n<li><p>Authentication Request</p>\n<p>OAuth 2.0 Authorization Request using extension parameters and scopes defined by OpenID Connect to request that the End-User be authenticated by the Authorization Server, which is an OpenID Connect Provider, to the Client, which is an OpenID Connect Relying Party.</p>\n</li>\n<li><p>Authentication Context</p>\n<p>Information that the Relying Party can require before it makes an entitlement decision with respect to an authentication response. Such context can include, but is not limited to, the actual authentication method used or level of assurance such as <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ISO29115\">ISO&#x2F;IEC 29115</a> [ISO29115] entity authentication assurance level.</p>\n</li>\n<li><p>Authentication Context Class</p>\n<p>Set of authentication methods or procedures that are considered to be equivalent to each other in a particular context.</p>\n</li>\n<li><p>Authentication Context Class Reference</p>\n<p>Identifier for an Authentication Context Class.</p>\n</li>\n<li><p>Authorization Code Flow</p>\n<p>OAuth 2.0 flow in which an Authorization Code is returned from the Authorization Endpoint and all tokens are returned from the Token Endpoint.</p>\n</li>\n<li><p>Authorization Request</p>\n<p>OAuth 2.0 Authorization Request as defined by [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">RFC6749]</a>.</p>\n</li>\n<li><p>Claim</p>\n<p>Piece of information asserted about an Entity.</p>\n</li>\n<li><p>Claim Type</p>\n<p>Syntax used for representing a Claim Value. This specification defines Normal, Aggregated, and Distributed Claim Types.</p>\n</li>\n<li><p>Claims Provider</p>\n<p>Server that can return Claims about an Entity.</p>\n</li>\n<li><p>Credential</p>\n<p>Data presented as evidence of the right to use an identity or other resources.</p>\n</li>\n<li><p>End-User</p>\n<p>Human participant.</p>\n</li>\n<li><p>Entity</p>\n<p>Something that has a separate and distinct existence and that can be identified in a context. An End-User is one example of an Entity.</p>\n</li>\n<li><p>Essential Claim</p>\n<p>Claim specified by the Client as being necessary to ensure a smooth authorization experience for the specific task requested by the End-User.</p>\n</li>\n<li><p>Hybrid Flow</p>\n<p>OAuth 2.0 flow in which an Authorization Code is returned from the Authorization Endpoint, some tokens are returned from the Authorization Endpoint, and others are returned from the Token Endpoint.</p>\n</li>\n<li><p>ID Token</p>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JSON Web Token (JWT)</a> [JWT] that contains Claims about the Authentication event. It MAY contain other Claims.</p>\n</li>\n<li><p>Identifier</p>\n<p>Value that uniquely characterizes an Entity in a specific context.</p>\n</li>\n<li><p>Identity</p>\n<p>Set of attributes related to an Entity.</p>\n</li>\n<li><p>Implicit Flow</p>\n<p>OAuth 2.0 flow in which all tokens are returned from the Authorization Endpoint and neither the Token Endpoint nor an Authorization Code are used.</p>\n</li>\n<li><p>Issuer</p>\n<p>Entity that issues a set of Claims.</p>\n</li>\n<li><p>Issuer Identifier</p>\n<p>Verifiable Identifier for an Issuer. An Issuer Identifier is a case sensitive URL using the <code>https</code> scheme that contains scheme, host, and optionally, port number and path components and no query or fragment components.</p>\n</li>\n<li><p>Message</p>\n<p>Request or a response between an OpenID Relying Party and an OpenID Provider.</p>\n</li>\n<li><p>OpenID Provider (OP)</p>\n<p>OAuth 2.0 Authorization Server that is capable of Authenticating the End-User and providing Claims to a Relying Party about the Authentication event and the End-User.</p>\n</li>\n<li><p>Request Object</p>\n<p>JWT that contains a set of request parameters as its Claims.</p>\n</li>\n<li><p>Request URI</p>\n<p>URL that references a resource containing a Request Object. The Request URI contents MUST be retrievable by the Authorization Server.</p>\n</li>\n<li><p>Pairwise Pseudonymous Identifier (PPID)</p>\n<p>Identifier that identifies the Entity to a Relying Party that cannot be correlated with the Entity’s PPID at another Relying Party.</p>\n</li>\n<li><p>Personally Identifiable Information (PII)</p>\n<p>Information that (a) can be used to identify the natural person to whom such information relates, or (b) is or might be directly or indirectly linked to a natural person to whom such information relates.</p>\n</li>\n<li><p>Relying Party (RP)</p>\n<p>OAuth 2.0 Client application requiring End-User Authentication and Claims from an OpenID Provider.</p>\n</li>\n<li><p>Sector Identifier</p>\n<p>Host component of a URL used by the Relying Party’s organization that is an input to the computation of pairwise Subject Identifiers for that Relying Party.</p>\n</li>\n<li><p>Self-Issued OpenID Provider</p>\n<p>Personal, self-hosted OpenID Provider that issues self-signed ID Tokens.</p>\n</li>\n<li><p>Subject Identifier</p>\n<p>Locally unique and never reassigned identifier within the Issuer for the End-User, which is intended to be consumed by the Client.</p>\n</li>\n<li><p>UserInfo Endpoint</p>\n<p>Protected Resource that, when presented with an Access Token by the Client, returns authorized information about the End-User represented by the corresponding Authorization Grant. The UserInfo Endpoint URL MUST use the <code>https</code> scheme and MAY contain port, path, and query parameter components.</p>\n</li>\n<li><p>Validation</p>\n<p>Process intended to establish the soundness or correctness of a construct.</p>\n</li>\n<li><p>Verification</p>\n<p>Process intended to test or prove the truth or accuracy of a fact or value.</p>\n</li>\n<li><p>Voluntary Claim</p>\n<p>Claim specified by the Client as being useful but not Essential for the specific task requested by the End-User.</p>\n</li>\n</ul>\n</blockquote>\n<p>IMPORTANT NOTE TO READERS: The terminology definitions in this section are a normative portion of this specification, imposing requirements upon implementations. All the capitalized words in the text of this specification, such as “Issuer Identifier”, reference these defined terms. Whenever the reader encounters them, their definitions found in this section must be followed.</p>\n<p>For more background on some of the terminology used, see <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC4949\">Internet Security Glossary, Version 2</a> [RFC4949], <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ISO29115\">ISO&#x2F;IEC 29115 Entity Authentication Assurance</a> [ISO29115], and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#X.1252\">ITU-T X.1252</a> [X.1252].</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"1-3-概述\"><a href=\"#1-3-概述\" class=\"headerlink\" title=\"1.3. 概述\"></a>1.3. 概述</h3><p>The OpenID Connect protocol, in abstract, follows the following steps.</p>\n<ol>\n<li>The RP (Client) sends a request to the OpenID Provider (OP).</li>\n<li>The OP authenticates the End-User and obtains authorization.</li>\n<li>The OP responds with an ID Token and usually an Access Token.</li>\n<li>The RP can send a request with the Access Token to the UserInfo Endpoint.</li>\n<li>The UserInfo Endpoint returns Claims about the End-User.</li>\n</ol>\n<p>These steps are illustrated in the following diagram:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">+--------+                                   +--------+\n|        |                                   |        |\n|        |---------(1) AuthN Request--------&gt;|        |\n|        |                                   |        |\n|        |  +--------+                       |        |\n|        |  |        |                       |        |\n|        |  |  End-  |&lt;--(2) AuthN &amp; AuthZ--&gt;|        |\n|        |  |  User  |                       |        |\n|   RP   |  |        |                       |   OP   |\n|        |  +--------+                       |        |\n|        |                                   |        |\n|        |&lt;--------(3) AuthN Response--------|        |\n|        |                                   |        |\n|        |---------(4) UserInfo Request-----&gt;|        |\n|        |                                   |        |\n|        |&lt;--------(5) UserInfo Response-----|        |\n|        |                                   |        |\n+--------+                                   +--------+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"2-ID-Token\"><a href=\"#2-ID-Token\" class=\"headerlink\" title=\"2. ID Token\"></a>2. ID Token</h3><p>The primary extension that OpenID Connect makes to OAuth 2.0 to enable End-Users to be Authenticated is the ID Token data structure. The ID Token is a security token that contains Claims about the Authentication of an End-User by an Authorization Server when using a Client, and potentially other requested Claims. The ID Token is represented as a <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JSON Web Token (JWT)</a> [JWT].</p>\n<p>The following Claims are used within the ID Token for all OAuth 2.0 flows used by OpenID Connect:</p>\n<blockquote>\n<ul>\n<li><p>iss</p>\n<p>REQUIRED. Issuer Identifier for the Issuer of the response. The <code>iss</code> value is a case sensitive URL using the <code>https</code> scheme that contains scheme, host, and optionally, port number and path components and no query or fragment components.</p>\n</li>\n<li><p>sub</p>\n<p>REQUIRED. Subject Identifier. A locally unique and never reassigned identifier within the Issuer for the End-User, which is intended to be consumed by the Client, e.g., <code>24400320</code> or <code>AItOawmwtWwcT0k51BayewNvutrJUqsvl6qs7A4</code>. It MUST NOT exceed 255 ASCII characters in length. The <code>sub</code> value is a case sensitive string.</p>\n</li>\n<li><p>aud</p>\n<p>REQUIRED. Audience(s) that this ID Token is intended for. It MUST contain the OAuth 2.0 <code>client_id</code> of the Relying Party as an audience value. It MAY also contain identifiers for other audiences. In the general case, the <code>aud</code> value is an array of case sensitive strings. In the common special case when there is one audience, the <code>aud</code> value MAY be a single case sensitive string.</p>\n</li>\n<li><p>exp</p>\n<p>REQUIRED. Expiration time on or after which the ID Token MUST NOT be accepted for processing. The processing of this parameter requires that the current date&#x2F;time MUST be before the expiration date&#x2F;time listed in the value. Implementers MAY provide for some small leeway, usually no more than a few minutes, to account for clock skew. Its value is a JSON number representing the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the date&#x2F;time. See <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC3339\">RFC 3339</a> [RFC3339] for details regarding date&#x2F;times in general and UTC in particular.</p>\n</li>\n<li><p>iat</p>\n<p>REQUIRED. Time at which the JWT was issued. Its value is a JSON number representing the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the date&#x2F;time.</p>\n</li>\n<li><p>auth_time</p>\n<p>Time when the End-User authentication occurred. Its value is a JSON number representing the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the date&#x2F;time. When a <code>max_age</code> request is made or when <code>auth_time</code> is requested as an Essential Claim, then this Claim is REQUIRED; otherwise, its inclusion is OPTIONAL. (The <code>auth_time</code> Claim semantically corresponds to the OpenID 2.0 <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.PAPE\">PAPE</a> [OpenID.PAPE] <code>auth_time</code> response parameter.)</p>\n</li>\n<li><p>nonce</p>\n<p>String value used to associate a Client session with an ID Token, and to mitigate replay attacks. The value is passed through unmodified from the Authentication Request to the ID Token. If present in the ID Token, Clients MUST verify that the <code>nonce</code> Claim Value is equal to the value of the <code>nonce</code> parameter sent in the Authentication Request. If present in the Authentication Request, Authorization Servers MUST include a <code>nonce</code> Claim in the ID Token with the Claim Value being the nonce value sent in the Authentication Request. Authorization Servers SHOULD perform no other processing on <code>nonce</code> values used. The <code>nonce</code> value is a case sensitive string.</p>\n</li>\n<li><p>acr</p>\n<p>OPTIONAL. Authentication Context Class Reference. String specifying an Authentication Context Class Reference value that identifies the Authentication Context Class that the authentication performed satisfied. The value “0” indicates the End-User authentication did not meet the requirements of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ISO29115\">ISO&#x2F;IEC 29115</a> [ISO29115] level 1. Authentication using a long-lived browser cookie, for instance, is one example where the use of “level 0” is appropriate. Authentications with level 0 SHOULD NOT be used to authorize access to any resource of any monetary value. (This corresponds to the OpenID 2.0 <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.PAPE\">PAPE</a> [OpenID.PAPE] <code>nist_auth_level</code> 0.) An absolute URI or an <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6711\">RFC 6711</a> [RFC6711] registered name SHOULD be used as the <code>acr</code> value; registered names MUST NOT be used with a different meaning than that which is registered. Parties using this claim will need to agree upon the meanings of the values used, which may be context-specific. The <code>acr</code> value is a case sensitive string.</p>\n</li>\n<li><p>amr</p>\n<p>OPTIONAL. Authentication Methods References. JSON array of strings that are identifiers for authentication methods used in the authentication. For instance, values might indicate that both password and OTP authentication methods were used. The definition of particular values to be used in the <code>amr</code> Claim is beyond the scope of this specification. Parties using this claim will need to agree upon the meanings of the values used, which may be context-specific. The <code>amr</code> value is an array of case sensitive strings.</p>\n</li>\n<li><p>azp</p>\n<p>OPTIONAL. Authorized party - the party to which the ID Token was issued. If present, it MUST contain the OAuth 2.0 Client ID of this party. This Claim is only needed when the ID Token has a single audience value and that audience is different than the authorized party. It MAY be included even when the authorized party is the same as the sole audience. The <code>azp</code> value is a case sensitive string containing a StringOrURI value.</p>\n</li>\n</ul>\n</blockquote>\n<p>ID Tokens MAY contain other Claims. Any Claims used that are not understood MUST be ignored. See Sections <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#CodeIDToken\">3.1.3.6</a>, <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#HybridIDToken\">3.3.2.11</a>, <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">5.1</a>, and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#SelfIssuedResponse\">7.4</a> for additional Claims defined by this specification.</p>\n<p>ID Tokens MUST be signed using <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWS\">JWS</a> [JWS] and optionally both signed and then encrypted using <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWS\">JWS</a> [JWS] and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWE\">JWE</a> [JWE] respectively, thereby providing authentication, integrity, non-repudiation, and optionally, confidentiality, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#SigningOrder\">Section 16.14</a>. If the ID Token is encrypted, it MUST be signed then encrypted, with the result being a Nested JWT, as defined in [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JWT]</a>. ID Tokens MUST NOT use <code>none</code> as the <code>alg</code> value unless the Response Type used returns no ID Token from the Authorization Endpoint (such as when using the Authorization Code Flow) and the Client explicitly requested the use of <code>none</code> at Registration time.</p>\n<p>ID Tokens SHOULD NOT use the JWS or JWE <code>x5u</code>, <code>x5c</code>, <code>jku</code>, or <code>jwk</code> Header Parameter fields. Instead, references to keys used are communicated in advance using Discovery and Registration parameters, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#SigEnc\">Section 10</a>.</p>\n<p>The following is a non-normative example of the set of Claims (the JWT Claims Set) in an ID Token:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;iss&quot;: &quot;https:&#x2F;&#x2F;server.example.com&quot;,\n &quot;sub&quot;: &quot;24400320&quot;,\n &quot;aud&quot;: &quot;s6BhdRkqt3&quot;,\n &quot;nonce&quot;: &quot;n-0S6_WzA2Mj&quot;,\n &quot;exp&quot;: 1311281970,\n &quot;iat&quot;: 1311280970,\n &quot;auth_time&quot;: 1311280969,\n &quot;acr&quot;: &quot;urn:mace:incommon:iap:silver&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-身份验证\"><a href=\"#3-身份验证\" class=\"headerlink\" title=\"3. 身份验证\"></a>3. 身份验证</h3><p>OpenID Connect执行身份验证，用于登录终端用户或确定终端用户已经登录。OpenID Connect以安全的方式将服务器执行的身份验证结果返回给客户端，以便客户端可以依赖它。因此，在这种情况下，客户端被称为Relying Party（RP）。</p>\n<p>The Authentication result is returned in an ID Token, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a>. It has Claims expressing such information as the Issuer, the Subject Identifier, when the authentication expires, etc.</p>\n<p>Authentication can follow one of three paths: the Authorization Code Flow (<code>response_type=code</code>), the Implicit Flow (<code>response_type=id_token token</code> or <code>response_type=id_token</code>), or the Hybrid Flow (using other Response Type values defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses\">OAuth 2.0 Multiple Response Type Encoding Practices</a> [OAuth.Responses]). The flows determine how the ID Token and Access Token are returned to the Client.</p>\n<p>The characteristics of the three flows are summarized in the following non-normative table. The table is intended to provide some guidance on which flow to choose in particular contexts.</p>\n<hr>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Authorization Code Flow</th>\n<th>Implicit Flow</th>\n<th>Hybrid Flow</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>All tokens returned from Authorization Endpoint</td>\n<td>no</td>\n<td>yes</td>\n<td>no</td>\n</tr>\n<tr>\n<td>All tokens returned from Token Endpoint</td>\n<td>yes</td>\n<td>no</td>\n<td>no</td>\n</tr>\n<tr>\n<td>Tokens not revealed to User Agent</td>\n<td>yes</td>\n<td>no</td>\n<td>no</td>\n</tr>\n<tr>\n<td>Client can be authenticated</td>\n<td>yes</td>\n<td>no</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>Refresh Token possible</td>\n<td>yes</td>\n<td>no</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>Communication in one round trip</td>\n<td>no</td>\n<td>yes</td>\n<td>no</td>\n</tr>\n<tr>\n<td>Most communication server-to-server</td>\n<td>yes</td>\n<td>no</td>\n<td>varies</td>\n</tr>\n</tbody></table>\n<p> <strong>OpenID Connect Authentication Flows</strong>  </p>\n<hr>\n<p>The flow used is determined by the <code>response_type</code> value contained in the Authorization Request. These <code>response_type</code> values select these flows:</p>\n<hr>\n<table>\n<thead>\n<tr>\n<th>“response_type” value</th>\n<th>Flow</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>code</code></td>\n<td>Authorization Code Flow</td>\n</tr>\n<tr>\n<td><code>id_token</code></td>\n<td>Implicit Flow</td>\n</tr>\n<tr>\n<td><code>id_token token</code></td>\n<td>Implicit Flow</td>\n</tr>\n<tr>\n<td><code>code id_token</code></td>\n<td>Hybrid Flow</td>\n</tr>\n<tr>\n<td><code>code token</code></td>\n<td>Hybrid Flow</td>\n</tr>\n<tr>\n<td><code>code id_token token</code></td>\n<td>Hybrid Flow</td>\n</tr>\n</tbody></table>\n<p> <strong>OpenID Connect “response_type” Values</strong>  </p>\n<hr>\n<p>All but the <code>code</code> Response Type value, which is defined by <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749], are defined in the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses\">OAuth 2.0 Multiple Response Type Encoding Practices</a> [OAuth.Responses] specification. NOTE: While OAuth 2.0 also defines the <code>token</code> Response Type value for the Implicit Flow, OpenID Connect does not use this Response Type, since no ID Token would be returned.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-使用授权码流（Authorization-Code-Flow）进行身份验证\"><a href=\"#3-1-使用授权码流（Authorization-Code-Flow）进行身份验证\" class=\"headerlink\" title=\"3.1. 使用授权码流（Authorization Code Flow）进行身份验证\"></a>3.1. 使用授权码流（Authorization Code Flow）进行身份验证</h3><p>This section describes how to perform authentication using the Authorization Code Flow. When using the Authorization Code Flow, all tokens are returned from the Token Endpoint.</p>\n<p>The Authorization Code Flow returns an Authorization Code to the Client, which can then exchange it for an ID Token and an Access Token directly. This provides the benefit of not exposing any tokens to the User Agent and possibly other malicious applications with access to the User Agent. The Authorization Server can also authenticate the Client before exchanging the Authorization Code for an Access Token. The Authorization Code flow is suitable for Clients that can securely maintain a Client Secret between themselves and the Authorization Server.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-1-授权码流（Authorization-Code-Flow）的步骤\"><a href=\"#3-1-1-授权码流（Authorization-Code-Flow）的步骤\" class=\"headerlink\" title=\"3.1.1. 授权码流（Authorization Code Flow）的步骤\"></a>3.1.1. 授权码流（Authorization Code Flow）的步骤</h3><p>The Authorization Code Flow goes through the following steps.</p>\n<ol>\n<li>Client prepares an Authentication Request containing the desired request parameters.</li>\n<li>Client sends the request to the Authorization Server.</li>\n<li>Authorization Server Authenticates the End-User.</li>\n<li>Authorization Server obtains End-User Consent&#x2F;Authorization.</li>\n<li>Authorization Server sends the End-User back to the Client with an Authorization Code.</li>\n<li>Client requests a response using the Authorization Code at the Token Endpoint.</li>\n<li>Client receives a response that contains an ID Token and Access Token in the response body.</li>\n<li>Client validates the ID token and retrieves the End-User’s Subject Identifier.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-2-授权端点\"><a href=\"#3-1-2-授权端点\" class=\"headerlink\" title=\"3.1.2. 授权端点\"></a>3.1.2. 授权端点</h3><p>The Authorization Endpoint performs Authentication of the End-User. This is done by sending the User Agent to the Authorization Server’s Authorization Endpoint for Authentication and Authorization, using request parameters defined by OAuth 2.0 and additional parameters and parameter values defined by OpenID Connect.</p>\n<p>Communication with the Authorization Endpoint MUST utilize TLS. See <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#TLSRequirements\">Section 16.17</a> for more information on using TLS.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-2-1-身份验证请求\"><a href=\"#3-1-2-1-身份验证请求\" class=\"headerlink\" title=\"3.1.2.1. 身份验证请求\"></a>3.1.2.1. 身份验证请求</h3><p>An Authentication Request is an OAuth 2.0 Authorization Request that requests that the End-User be authenticated by the Authorization Server.</p>\n<p>Authorization Servers MUST support the use of the HTTP <code>GET</code> and <code>POST</code> methods defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC2616\">RFC 2616</a> [RFC2616] at the Authorization Endpoint. Clients MAY use the HTTP <code>GET</code> or <code>POST</code> methods to send the Authorization Request to the Authorization Server. If using the HTTP <code>GET</code> method, the request parameters are serialized using URI Query String Serialization, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#QuerySerialization\">Section 13.1</a>. If using the HTTP <code>POST</code> method, the request parameters are serialized using Form Serialization, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#FormSerialization\">Section 13.2</a>.</p>\n<p>OpenID Connect uses the following OAuth 2.0 request parameters with the Authorization Code Flow:</p>\n<blockquote>\n<ul>\n<li><p>scope</p>\n<p>REQUIRED. OpenID Connect requests MUST contain the <code>openid</code> scope value. If the <code>openid</code> scope value is not present, the behavior is entirely unspecified. Other scope values MAY be present. Scope values used that are not understood by an implementation SHOULD be ignored. See Sections <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims\">5.4</a> and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OfflineAccess\">11</a> for additional scope values defined by this specification.</p>\n</li>\n<li><p>response_type</p>\n<p>REQUIRED. OAuth 2.0 Response Type value that determines the authorization processing flow to be used, including what parameters are returned from the endpoints used. When using the Authorization Code Flow, this value is <code>code</code>.</p>\n</li>\n<li><p>client_id</p>\n<p>REQUIRED. OAuth 2.0 Client Identifier valid at the Authorization Server.</p>\n</li>\n<li><p>redirect_uri</p>\n<p>REQUIRED. Redirection URI to which the response will be sent. This URI MUST exactly match one of the Redirection URI values for the Client pre-registered at the OpenID Provider, with the matching performed as described in Section 6.2.1 of [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC3986\">RFC3986]</a> (Simple String Comparison). When using this flow, the Redirection URI SHOULD use the <code>https</code> scheme; however, it MAY use the <code>http</code> scheme, provided that the Client Type is <code>confidential</code>, as defined in Section 2.1 of OAuth 2.0, and provided the OP allows the use of <code>http</code> Redirection URIs in this case. The Redirection URI MAY use an alternate scheme, such as one that is intended to identify a callback into a native application.</p>\n</li>\n<li><p>state</p>\n<p>RECOMMENDED. Opaque value used to maintain state between the request and the callback. Typically, Cross-Site Request Forgery (CSRF, XSRF) mitigation is done by cryptographically binding the value of this parameter with a browser cookie.</p>\n</li>\n</ul>\n</blockquote>\n<p>OpenID Connect also uses the following OAuth 2.0 request parameter, which is defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses\">OAuth 2.0 Multiple Response Type Encoding Practices</a> [OAuth.Responses]:</p>\n<blockquote>\n<ul>\n<li><p>response_mode</p>\n<p>OPTIONAL. Informs the Authorization Server of the mechanism to be used for returning parameters from the Authorization Endpoint. This use of this parameter is NOT RECOMMENDED when the Response Mode that would be requested is the default mode specified for the Response Type.</p>\n</li>\n</ul>\n</blockquote>\n<p>This specification also defines the following request parameters:</p>\n<blockquote>\n<ul>\n<li><p>nonce</p>\n<p>OPTIONAL. String value used to associate a Client session with an ID Token, and to mitigate replay attacks. The value is passed through unmodified from the Authentication Request to the ID Token. Sufficient entropy MUST be present in the <code>nonce</code> values used to prevent attackers from guessing values. For implementation notes, see <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#NonceNotes\">Section 15.5.2</a>.</p>\n</li>\n<li><p>display</p>\n<p>OPTIONAL. ASCII string value that specifies how the Authorization Server displays the authentication and consent user interface pages to the End-User. The defined values are:pageThe Authorization Server SHOULD display the authentication and consent UI consistent with a full User Agent page view. If the display parameter is not specified, this is the default display mode.popupThe Authorization Server SHOULD display the authentication and consent UI consistent with a popup User Agent window. The popup User Agent window should be of an appropriate size for a login-focused dialog and should not obscure the entire window that it is popping up over.touchThe Authorization Server SHOULD display the authentication and consent UI consistent with a device that leverages a touch interface.wapThe Authorization Server SHOULD display the authentication and consent UI consistent with a “feature phone” type display.The Authorization Server MAY also attempt to detect the capabilities of the User Agent and present an appropriate display.</p>\n</li>\n<li><p>prompt</p>\n<p>OPTIONAL. Space delimited, case sensitive list of ASCII string values that specifies whether the Authorization Server prompts the End-User for reauthentication and consent. The defined values are:noneThe Authorization Server MUST NOT display any authentication or consent user interface pages. An error is returned if an End-User is not already authenticated or the Client does not have pre-configured consent for the requested Claims or does not fulfill other conditions for processing the request. The error code will typically be <code>login_required</code>, <code>interaction_required</code>, or another code defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthError\">Section 3.1.2.6</a>. This can be used as a method to check for existing authentication and&#x2F;or consent.loginThe Authorization Server SHOULD prompt the End-User for reauthentication. If it cannot reauthenticate the End-User, it MUST return an error, typically <code>login_required</code>.consentThe Authorization Server SHOULD prompt the End-User for consent before returning information to the Client. If it cannot obtain consent, it MUST return an error, typically <code>consent_required</code>.select_accountThe Authorization Server SHOULD prompt the End-User to select a user account. This enables an End-User who has multiple accounts at the Authorization Server to select amongst the multiple accounts that they might have current sessions for. If it cannot obtain an account selection choice made by the End-User, it MUST return an error, typically <code>account_selection_required</code>.The <code>prompt</code> parameter can be used by the Client to make sure that the End-User is still present for the current session or to bring attention to the request. If this parameter contains <code>none</code> with any other value, an error is returned.</p>\n</li>\n<li><p>max_age</p>\n<p>OPTIONAL. Maximum Authentication Age. Specifies the allowable elapsed time in seconds since the last time the End-User was actively authenticated by the OP. If the elapsed time is greater than this value, the OP MUST attempt to actively re-authenticate the End-User. (The <code>max_age</code> request parameter corresponds to the OpenID 2.0 <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.PAPE\">PAPE</a> [OpenID.PAPE] <code>max_auth_age</code> request parameter.) When <code>max_age</code> is used, the ID Token returned MUST include an <code>auth_time</code> Claim Value.</p>\n</li>\n<li><p>ui_locales</p>\n<p>OPTIONAL. End-User’s preferred languages and scripts for the user interface, represented as a space-separated list of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC5646\">BCP47</a> [RFC5646] language tag values, ordered by preference. For instance, the value “fr-CA fr en” represents a preference for French as spoken in Canada, then French (without a region designation), followed by English (without a region designation). An error SHOULD NOT result if some or all of the requested locales are not supported by the OpenID Provider.</p>\n</li>\n<li><p>id_token_hint</p>\n<p>OPTIONAL. ID Token previously issued by the Authorization Server being passed as a hint about the End-User’s current or past authenticated session with the Client. If the End-User identified by the ID Token is logged in or is logged in by the request, then the Authorization Server returns a positive response; otherwise, it SHOULD return an error, such as <code>login_required</code>. When possible, an <code>id_token_hint</code> SHOULD be present when <code>prompt=none</code> is used and an <code>invalid_request</code> error MAY be returned if it is not; however, the server SHOULD respond successfully when possible, even if it is not present. The Authorization Server need not be listed as an audience of the ID Token when it is used as an <code>id_token_hint</code> value.</p>\n</li>\n<li><p>If the ID Token received by the RP from the OP is encrypted, to use it as an <code>id_token_hint</code>, the Client MUST decrypt the signed ID Token contained within the encrypted ID Token. The Client MAY re-encrypt the signed ID token to the Authentication Server using a key that enables the server to decrypt the ID Token, and use the re-encrypted ID token as the <code>id_token_hint</code> value.</p>\n</li>\n<li><p>login_hint</p>\n<p>OPTIONAL. Hint to the Authorization Server about the login identifier the End-User might use to log in (if necessary). This hint can be used by an RP if it first asks the End-User for their e-mail address (or other identifier) and then wants to pass that value as a hint to the discovered authorization service. It is RECOMMENDED that the hint value match the value used for discovery. This value MAY also be a phone number in the format specified for the <code>phone_number</code> Claim. The use of this parameter is left to the OP’s discretion.</p>\n</li>\n<li><p>acr_values</p>\n<p>OPTIONAL. Requested Authentication Context Class Reference values. Space-separated string that specifies the <code>acr</code> values that the Authorization Server is being requested to use for processing this Authentication Request, with the values appearing in order of preference. The Authentication Context Class satisfied by the authentication performed is returned as the <code>acr</code> Claim Value, as specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a>. The <code>acr</code> Claim is requested as a Voluntary Claim by this parameter.</p>\n</li>\n</ul>\n</blockquote>\n<p>Other parameters MAY be sent. See Sections <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ImplicitAuthorizationEndpoint\">3.2.2</a>, <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#HybridAuthorizationEndpoint\">3.3.2</a>, <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts\">5.2</a>, <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter\">5.5</a>, <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWTRequests\">6</a>, and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RegistrationParameter\">7.2.1</a> for additional Authorization Request parameters and parameter values defined by this specification.</p>\n<p>The following is a non-normative example HTTP 302 redirect response by the Client, which triggers the User Agent to make an Authentication Request to the Authorization Endpoint (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">HTTP&#x2F;1.1 302 Found\nLocation: https:&#x2F;&#x2F;server.example.com&#x2F;authorize?\n  response_type&#x3D;code\n  &amp;scope&#x3D;openid%20profile%20email\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;state&#x3D;af0ifjsldkj\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>The following is the non-normative example request that would be sent by the User Agent to the Authorization Server in response to the HTTP 302 redirect response by the Client above (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;authorize?\n  response_type&#x3D;code\n  &amp;scope&#x3D;openid%20profile%20email\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;state&#x3D;af0ifjsldkj\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb HTTP&#x2F;1.1\nHost: server.example.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-2-2-Authentication-Request-Validation\"><a href=\"#3-1-2-2-Authentication-Request-Validation\" class=\"headerlink\" title=\"3.1.2.2. Authentication Request Validation\"></a>3.1.2.2. Authentication Request Validation</h3><p>The Authorization Server MUST validate the request received as follows:</p>\n<ol>\n<li>The Authorization Server MUST validate all the OAuth 2.0 parameters according to the OAuth 2.0 specification.</li>\n<li>Verify that a <code>scope</code> parameter is present and contains the <code>openid</code> scope value. (If no <code>openid</code> scope value is present, the request may still be a valid OAuth 2.0 request, but is not an OpenID Connect request.)</li>\n<li>The Authorization Server MUST verify that all the REQUIRED parameters are present and their usage conforms to this specification.</li>\n<li>If the <code>sub</code> (subject) Claim is requested with a specific value for the ID Token, the Authorization Server MUST only send a positive response if the End-User identified by that <code>sub</code> value has an active session with the Authorization Server or has been Authenticated as a result of the request. The Authorization Server MUST NOT reply with an ID Token or Access Token for a different user, even if they have an active session with the Authorization Server. Such a request can be made either using an <code>id_token_hint</code> parameter or by requesting a specific Claim Value as described in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IndividualClaimsRequests\">Section 5.5.1</a>, if the <code>claims</code> parameter is supported by the implementation.</li>\n</ol>\n<p>As specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749], Authorization Servers SHOULD ignore unrecognized request parameters.</p>\n<p>If the Authorization Server encounters any error, it MUST return an error response, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthError\">Section 3.1.2.6</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-2-3-Authorization-Server-Authenticates-End-User\"><a href=\"#3-1-2-3-Authorization-Server-Authenticates-End-User\" class=\"headerlink\" title=\"3.1.2.3. Authorization Server Authenticates End-User\"></a>3.1.2.3. Authorization Server Authenticates End-User</h3><p>If the request is valid, the Authorization Server attempts to Authenticate the End-User or determines whether the End-User is Authenticated, depending upon the request parameter values used. The methods used by the Authorization Server to Authenticate the End-User (e.g. username and password, session cookies, etc.) are beyond the scope of this specification. An Authentication user interface MAY be displayed by the Authorization Server, depending upon the request parameter values used and the authentication methods used.</p>\n<p>The Authorization Server MUST attempt to Authenticate the End-User in the following cases:</p>\n<ul>\n<li>The End-User is not already Authenticated.</li>\n<li>The Authentication Request contains the <code>prompt</code> parameter with the value <code>login</code>. In this case, the Authorization Server MUST reauthenticate the End-User even if the End-User is already authenticated.</li>\n</ul>\n<p>The Authorization Server MUST NOT interact with the End-User in the following case:</p>\n<ul>\n<li>The Authentication Request contains the <code>prompt</code> parameter with the value <code>none</code>. In this case, the Authorization Server MUST return an error if an End-User is not already Authenticated or could not be silently Authenticated.</li>\n</ul>\n<p>When interacting with the End-User, the Authorization Server MUST employ appropriate measures against Cross-Site Request Forgery and Clickjacking as, described in Sections 10.12 and 10.13 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749].</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-2-4-Authorization-Server-Obtains-End-User-Consent-x2F-Authorization\"><a href=\"#3-1-2-4-Authorization-Server-Obtains-End-User-Consent-x2F-Authorization\" class=\"headerlink\" title=\"3.1.2.4. Authorization Server Obtains End-User Consent&#x2F;Authorization\"></a>3.1.2.4. Authorization Server Obtains End-User Consent&#x2F;Authorization</h3><p>Once the End-User is authenticated, the Authorization Server MUST obtain an authorization decision before releasing information to the Relying Party. When permitted by the request parameters used, this MAY be done through an interactive dialogue with the End-User that makes it clear what is being consented to or by establishing consent via conditions for processing the request or other means (for example, via previous administrative consent). Sections <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">2</a> and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#UserInfo\">5.3</a> describe information release mechanisms.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-2-5-Successful-Authentication-Response\"><a href=\"#3-1-2-5-Successful-Authentication-Response\" class=\"headerlink\" title=\"3.1.2.5. Successful Authentication Response\"></a>3.1.2.5. Successful Authentication Response</h3><p>An Authentication Response is an OAuth 2.0 Authorization Response message returned from the OP’s Authorization Endpoint in response to the Authorization Request message sent by the RP.</p>\n<p>When using the Authorization Code Flow, the Authorization Response MUST return the parameters defined in Section 4.1.2 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749] by adding them as query parameters to the <code>redirect_uri</code> specified in the Authorization Request using the <code>application/x-www-form-urlencoded</code> format, unless a different Response Mode was specified.</p>\n<p>The following is a non-normative example successful response using this flow (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">HTTP&#x2F;1.1 302 Found\nLocation: https:&#x2F;&#x2F;client.example.org&#x2F;cb?\n  code&#x3D;SplxlOBeZQQYbYS6WxSbIA\n  &amp;state&#x3D;af0ifjsldkj<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>For implementation notes on the contents of the Authorization Code, see <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#CodeNotes\">Section 15.5.1</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-2-6-Authentication-Error-Response\"><a href=\"#3-1-2-6-Authentication-Error-Response\" class=\"headerlink\" title=\"3.1.2.6. Authentication Error Response\"></a>3.1.2.6. Authentication Error Response</h3><p>An Authentication Error Response is an OAuth 2.0 Authorization Error Response message returned from the OP’s Authorization Endpoint in response to the Authorization Request message sent by the RP.</p>\n<p>If the End-User denies the request or the End-User authentication fails, the OP (Authorization Server) informs the RP (Client) by using the Error Response parameters defined in Section 4.1.2.1 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749]. (HTTP errors unrelated to RFC 6749 are returned to the User Agent using the appropriate HTTP status code.)</p>\n<p>Unless the Redirection URI is invalid, the Authorization Server returns the Client to the Redirection URI specified in the Authorization Request with the appropriate error and state parameters. Other parameters SHOULD NOT be returned.</p>\n<p>In addition to the error codes defined in Section 4.1.2.1 of OAuth 2.0, this specification also defines the following error codes:</p>\n<blockquote>\n<ul>\n<li><p>interaction_required</p>\n<p>The Authorization Server requires End-User interaction of some form to proceed. This error MAY be returned when the <code>prompt</code> parameter value in the Authentication Request is <code>none</code>, but the Authentication Request cannot be completed without displaying a user interface for End-User interaction.</p>\n</li>\n<li><p>login_required</p>\n<p>The Authorization Server requires End-User authentication. This error MAY be returned when the <code>prompt</code> parameter value in the Authentication Request is <code>none</code>, but the Authentication Request cannot be completed without displaying a user interface for End-User authentication.</p>\n</li>\n<li><p>account_selection_required</p>\n<p>The End-User is REQUIRED to select a session at the Authorization Server. The End-User MAY be authenticated at the Authorization Server with different associated accounts, but the End-User did not select a session. This error MAY be returned when the <code>prompt</code> parameter value in the Authentication Request is <code>none</code>, but the Authentication Request cannot be completed without displaying a user interface to prompt for a session to use.</p>\n</li>\n<li><p>consent_required</p>\n<p>The Authorization Server requires End-User consent. This error MAY be returned when the <code>prompt</code> parameter value in the Authentication Request is <code>none</code>, but the Authentication Request cannot be completed without displaying a user interface for End-User consent.</p>\n</li>\n<li><p>invalid_request_uri</p>\n<p>The <code>request_uri</code> in the Authorization Request returns an error or contains invalid data.</p>\n</li>\n<li><p>invalid_request_object</p>\n<p>The <code>request</code> parameter contains an invalid Request Object.</p>\n</li>\n<li><p>request_not_supported</p>\n<p>The OP does not support use of the <code>request</code> parameter defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWTRequests\">Section 6</a>.</p>\n</li>\n<li><p>request_uri_not_supported</p>\n<p>The OP does not support use of the <code>request_uri</code> parameter defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWTRequests\">Section 6</a>.</p>\n</li>\n<li><p>registration_not_supported</p>\n<p>The OP does not support use of the <code>registration</code> parameter defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RegistrationParameter\">Section 7.2.1</a>.</p>\n</li>\n</ul>\n</blockquote>\n<p>The error response parameters are the following:</p>\n<blockquote>\n<ul>\n<li><p>error</p>\n<p>REQUIRED. Error code.</p>\n</li>\n<li><p>error_description</p>\n<p>OPTIONAL. Human-readable ASCII encoded text description of the error.</p>\n</li>\n<li><p>error_uri</p>\n<p>OPTIONAL. URI of a web page that includes additional information about the error.</p>\n</li>\n<li><p>state</p>\n<p>OAuth 2.0 state value. REQUIRED if the Authorization Request included the <code>state</code> parameter. Set to the value received from the Client.</p>\n</li>\n</ul>\n</blockquote>\n<p>When using the Authorization Code Flow, the error response parameters are added to the query component of the Redirection URI, unless a different Response Mode was specified.</p>\n<p>The following is a non-normative example error response using this flow (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">HTTP&#x2F;1.1 302 Found\nLocation: https:&#x2F;&#x2F;client.example.org&#x2F;cb?\n  error&#x3D;invalid_request\n  &amp;error_description&#x3D;\n    Unsupported%20response_type%20value\n  &amp;state&#x3D;af0ifjsldkj<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-2-7-Authentication-Response-Validation\"><a href=\"#3-1-2-7-Authentication-Response-Validation\" class=\"headerlink\" title=\"3.1.2.7. Authentication Response Validation\"></a>3.1.2.7. Authentication Response Validation</h3><p>When using the Authorization Code Flow, the Client MUST validate the response according to RFC 6749, especially Sections 4.1.2 and 10.12.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-3-Token-Endpoint\"><a href=\"#3-1-3-Token-Endpoint\" class=\"headerlink\" title=\"3.1.3. Token Endpoint\"></a>3.1.3. Token Endpoint</h3><p>To obtain an Access Token, an ID Token, and optionally a Refresh Token, the RP (Client) sends a Token Request to the Token Endpoint to obtain a Token Response, as described in Section 3.2 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749], when using the Authorization Code Flow.</p>\n<p>Communication with the Token Endpoint MUST utilize TLS. See <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#TLSRequirements\">Section 16.17</a> for more information on using TLS.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-3-1-Token-Request\"><a href=\"#3-1-3-1-Token-Request\" class=\"headerlink\" title=\"3.1.3.1. Token Request\"></a>3.1.3.1. Token Request</h3><p>A Client makes a Token Request by presenting its Authorization Grant (in the form of an Authorization Code) to the Token Endpoint using the <code>grant_type</code> value <code>authorization_code</code>, as described in Section 4.1.3 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749]. If the Client is a Confidential Client, then it MUST authenticate to the Token Endpoint using the authentication method registered for its <code>client_id</code>, as described in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication\">Section 9</a>.</p>\n<p>The Client sends the parameters to the Token Endpoint using the HTTP <code>POST</code> method and the Form Serialization, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#FormSerialization\">Section 13.2</a>, as described in Section 4.1.3 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749].</p>\n<p>The following is a non-normative example of a Token Request (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">POST &#x2F;token HTTP&#x2F;1.1\nHost: server.example.com\nContent-Type: application&#x2F;x-www-form-urlencoded\nAuthorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW\n\ngrant_type&#x3D;authorization_code&amp;code&#x3D;SplxlOBeZQQYbYS6WxSbIA\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-3-2-Token-Request-Validation\"><a href=\"#3-1-3-2-Token-Request-Validation\" class=\"headerlink\" title=\"3.1.3.2. Token Request Validation\"></a>3.1.3.2. Token Request Validation</h3><p>The Authorization Server MUST validate the Token Request as follows:</p>\n<ul>\n<li>Authenticate the Client if it was issued Client Credentials or if it uses another Client Authentication method, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication\">Section 9</a>.</li>\n<li>Ensure the Authorization Code was issued to the authenticated Client.</li>\n<li>Verify that the Authorization Code is valid.</li>\n<li>If possible, verify that the Authorization Code has not been previously used.</li>\n<li>Ensure that the <code>redirect_uri</code> parameter value is identical to the <code>redirect_uri</code> parameter value that was included in the initial Authorization Request. If the <code>redirect_uri</code> parameter value is not present when there is only one registered <code>redirect_uri</code> value, the Authorization Server MAY return an error (since the Client should have included the parameter) or MAY proceed without an error (since OAuth 2.0 permits the parameter to be omitted in this case).</li>\n<li>Verify that the Authorization Code used was issued in response to an OpenID Connect Authentication Request (so that an ID Token will be returned from the Token Endpoint).</li>\n</ul>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-3-3-Successful-Token-Response\"><a href=\"#3-1-3-3-Successful-Token-Response\" class=\"headerlink\" title=\"3.1.3.3. Successful Token Response\"></a>3.1.3.3. Successful Token Response</h3><p>After receiving and validating a valid and authorized Token Request from the Client, the Authorization Server returns a successful response that includes an ID Token and an Access Token. The parameters in the successful response are defined in Section 4.1.4 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749]. The response uses the <code>application/json</code> media type.</p>\n<p>The OAuth 2.0 <code>token_type</code> response parameter value MUST be <code>Bearer</code>, as specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6750\">OAuth 2.0 Bearer Token Usage</a> [RFC6750], unless another Token Type has been negotiated with the Client. Servers SHOULD support the <code>Bearer</code> Token Type; use of other Token Types is outside the scope of this specification.</p>\n<p>In addition to the response parameters specified by OAuth 2.0, the following parameters MUST be included in the response:</p>\n<blockquote>\n<ul>\n<li><p>id_token</p>\n<p>ID Token value associated with the authenticated session.</p>\n</li>\n</ul>\n</blockquote>\n<p>All Token Responses that contain tokens, secrets, or other sensitive information MUST include the following HTTP response header fields and values:</p>\n<hr>\n<table>\n<thead>\n<tr>\n<th>Header Name</th>\n<th>Header Value</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Cache-Control</td>\n<td>no-store</td>\n</tr>\n<tr>\n<td>Pragma</td>\n<td>no-cache</td>\n</tr>\n</tbody></table>\n<p> <strong>HTTP Response Headers and Values</strong>  </p>\n<hr>\n<p>The following is a non-normative example of a successful Token Response. The ID Token signature in the example can be verified with the key at <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ExampleRSAKey\">Appendix A.7</a>.</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">HTTP&#x2F;1.1 200 OK\nContent-Type: application&#x2F;json\nCache-Control: no-store\nPragma: no-cache\n\n&#123;\n &quot;access_token&quot;: &quot;SlAV32hkKG&quot;,\n &quot;token_type&quot;: &quot;Bearer&quot;,\n &quot;refresh_token&quot;: &quot;8xLOxBtZp8&quot;,\n &quot;expires_in&quot;: 3600,\n &quot;id_token&quot;: &quot;eyJhbGciOiJSUzI1NiIsImtpZCI6IjFlOWdkazcifQ.ewogImlzc\n   yI6ICJodHRwOi8vc2VydmVyLmV4YW1wbGUuY29tIiwKICJzdWIiOiAiMjQ4Mjg5\n   NzYxMDAxIiwKICJhdWQiOiAiczZCaGRSa3F0MyIsCiAibm9uY2UiOiAibi0wUzZ\n   fV3pBMk1qIiwKICJleHAiOiAxMzExMjgxOTcwLAogImlhdCI6IDEzMTEyODA5Nz\n   AKfQ.ggW8hZ1EuVLuxNuuIJKX_V8a_OMXzR0EHR9R6jgdqrOOF4daGU96Sr_P6q\n   Jp6IcmD3HP99Obi1PRs-cwh3LO-p146waJ8IhehcwL7F09JdijmBqkvPeB2T9CJ\n   NqeGpe-gccMg4vfKjkM8FcGvnzZUN4_KSP0aAp1tOJ1zZwgjxqGByKHiOtX7Tpd\n   QyHE5lcMiKPXfEIQILVq0pc_E2DzL7emopWoaoZTF_m0_N0YzFC6g6EJbOEoRoS\n   K5hoDalrcvRYLSrQAZZKflyuVCyixEoV9GfNQC3_osjzw2PAithfubEEBLuVVk4\n   XUVrWOLrLl0nx7RkKU8NXNHq-rvKMzqg&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>As specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749], Clients SHOULD ignore unrecognized response parameters.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-3-4-Token-Error-Response\"><a href=\"#3-1-3-4-Token-Error-Response\" class=\"headerlink\" title=\"3.1.3.4. Token Error Response\"></a>3.1.3.4. Token Error Response</h3><p>If the Token Request is invalid or unauthorized, the Authorization Server constructs the error response. The parameters of the Token Error Response are defined as in Section 5.2 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749]. The HTTP response body uses the <code>application/json</code> media type with HTTP response code of 400.</p>\n<p>The following is a non-normative example Token Error Response:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">HTTP&#x2F;1.1 400 Bad Request\nContent-Type: application&#x2F;json\nCache-Control: no-store\nPragma: no-cache\n\n&#123;\n &quot;error&quot;: &quot;invalid_request&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-3-5-Token-Response-Validation\"><a href=\"#3-1-3-5-Token-Response-Validation\" class=\"headerlink\" title=\"3.1.3.5. Token Response Validation\"></a>3.1.3.5. Token Response Validation</h3><p>The Client MUST validate the Token Response as follows:</p>\n<ol>\n<li>Follow the validation rules in RFC 6749, especially those in Sections 5.1 and 10.12.</li>\n<li>Follow the ID Token validation rules in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation\">Section 3.1.3.7</a>.</li>\n<li>Follow the Access Token validation rules in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowTokenValidation\">Section 3.1.3.8</a>.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-3-6-ID-Token\"><a href=\"#3-1-3-6-ID-Token\" class=\"headerlink\" title=\"3.1.3.6. ID Token\"></a>3.1.3.6. ID Token</h3><p>The contents of the ID Token are as described in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a>. When using the Authorization Code Flow, these additional requirements for the following ID Token Claims apply:</p>\n<blockquote>\n<ul>\n<li><p>at_hash</p>\n<p>OPTIONAL. Access Token hash value. Its value is the base64url encoding of the left-most half of the hash of the octets of the ASCII representation of the <code>access_token</code> value, where the hash algorithm used is the hash algorithm used in the <code>alg</code> Header Parameter of the ID Token’s JOSE Header. For instance, if the <code>alg</code> is <code>RS256</code>, hash the <code>access_token</code> value with SHA-256, then take the left-most 128 bits and base64url encode them. The <code>at_hash</code> value is a case sensitive string.</p>\n</li>\n</ul>\n</blockquote>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-3-7-ID-Token-Validation\"><a href=\"#3-1-3-7-ID-Token-Validation\" class=\"headerlink\" title=\"3.1.3.7. ID Token Validation\"></a>3.1.3.7. ID Token Validation</h3><p>Clients MUST validate the ID Token in the Token Response in the following manner:</p>\n<ol>\n<li>If the ID Token is encrypted, decrypt it using the keys and algorithms that the Client specified during Registration that the OP was to use to encrypt the ID Token. If encryption was negotiated with the OP at Registration time and the ID Token is not encrypted, the RP SHOULD reject it.</li>\n<li>The Issuer Identifier for the OpenID Provider (which is typically obtained during Discovery) MUST exactly match the value of the <code>iss</code> (issuer) Claim.</li>\n<li>The Client MUST validate that the <code>aud</code> (audience) Claim contains its <code>client_id</code> value registered at the Issuer identified by the <code>iss</code> (issuer) Claim as an audience. The <code>aud</code> (audience) Claim MAY contain an array with more than one element. The ID Token MUST be rejected if the ID Token does not list the Client as a valid audience, or if it contains additional audiences not trusted by the Client.</li>\n<li>If the ID Token contains multiple audiences, the Client SHOULD verify that an <code>azp</code> Claim is present.</li>\n<li>If an <code>azp</code> (authorized party) Claim is present, the Client SHOULD verify that its <code>client_id</code> is the Claim Value.</li>\n<li>If the ID Token is received via direct communication between the Client and the Token Endpoint (which it is in this flow), the TLS server validation MAY be used to validate the issuer in place of checking the token signature. The Client MUST validate the signature of all other ID Tokens according to <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWS\">JWS</a> [JWS] using the algorithm specified in the JWT <code>alg</code> Header Parameter. The Client MUST use the keys provided by the Issuer.</li>\n<li>The <code>alg</code> value SHOULD be the default of <code>RS256</code> or the algorithm sent by the Client in the <code>id_token_signed_response_alg</code> parameter during Registration.</li>\n<li>If the JWT <code>alg</code> Header Parameter uses a MAC based algorithm such as <code>HS256</code>, <code>HS384</code>, or <code>HS512</code>, the octets of the UTF-8 representation of the <code>client_secret</code> corresponding to the <code>client_id</code> contained in the <code>aud</code> (audience) Claim are used as the key to validate the signature. For MAC based algorithms, the behavior is unspecified if the <code>aud</code> is multi-valued or if an <code>azp</code> value is present that is different than the <code>aud</code> value.</li>\n<li>The current time MUST be before the time represented by the <code>exp</code> Claim.</li>\n<li>The <code>iat</code> Claim can be used to reject tokens that were issued too far away from the current time, limiting the amount of time that nonces need to be stored to prevent attacks. The acceptable range is Client specific.</li>\n<li>If a nonce value was sent in the Authentication Request, a <code>nonce</code> Claim MUST be present and its value checked to verify that it is the same value as the one that was sent in the Authentication Request. The Client SHOULD check the <code>nonce</code> value for replay attacks. The precise method for detecting replay attacks is Client specific.</li>\n<li>If the <code>acr</code> Claim was requested, the Client SHOULD check that the asserted Claim Value is appropriate. The meaning and processing of <code>acr</code> Claim Values is out of scope for this specification.</li>\n<li>If the <code>auth_time</code> Claim was requested, either through a specific request for this Claim or by using the <code>max_age</code> parameter, the Client SHOULD check the <code>auth_time</code> Claim value and request re-authentication if it determines too much time has elapsed since the last End-User authentication.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-3-8-Access-Token-Validation\"><a href=\"#3-1-3-8-Access-Token-Validation\" class=\"headerlink\" title=\"3.1.3.8. Access Token Validation\"></a>3.1.3.8. Access Token Validation</h3><p>When using the Authorization Code Flow, if the ID Token contains an <code>at_hash</code> Claim, the Client MAY use it to validate the Access Token in the same manner as for the Implicit Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ImplicitTokenValidation\">Section 3.2.2.9</a>, but using the ID Token and Access Token returned from the Token Endpoint.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-Authentication-using-the-Implicit-Flow\"><a href=\"#3-2-Authentication-using-the-Implicit-Flow\" class=\"headerlink\" title=\"3.2. Authentication using the Implicit Flow\"></a>3.2. Authentication using the Implicit Flow</h3><p>This section describes how to perform authentication using the Implicit Flow. When using the Implicit Flow, all tokens are returned from the Authorization Endpoint; the Token Endpoint is not used.</p>\n<p>The Implicit Flow is mainly used by Clients implemented in a browser using a scripting language. The Access Token and ID Token are returned directly to the Client, which may expose them to the End-User and applications that have access to the End-User’s User Agent. The Authorization Server does not perform Client Authentication.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-1-Implicit-Flow-Steps\"><a href=\"#3-2-1-Implicit-Flow-Steps\" class=\"headerlink\" title=\"3.2.1. Implicit Flow Steps\"></a>3.2.1. Implicit Flow Steps</h3><p>The Implicit Flow follows the following steps:</p>\n<ol>\n<li>Client prepares an Authentication Request containing the desired request parameters.</li>\n<li>Client sends the request to the Authorization Server.</li>\n<li>Authorization Server Authenticates the End-User.</li>\n<li>Authorization Server obtains End-User Consent&#x2F;Authorization.</li>\n<li>Authorization Server sends the End-User back to the Client with an ID Token and, if requested, an Access Token.</li>\n<li>Client validates the ID token and retrieves the End-User’s Subject Identifier.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-2-Authorization-Endpoint\"><a href=\"#3-2-2-Authorization-Endpoint\" class=\"headerlink\" title=\"3.2.2. Authorization Endpoint\"></a>3.2.2. Authorization Endpoint</h3><p>When using the Implicit Flow, the Authorization Endpoint is used in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a>, with the exception of the differences specified in this section.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-2-1-Authentication-Request\"><a href=\"#3-2-2-1-Authentication-Request\" class=\"headerlink\" title=\"3.2.2.1. Authentication Request\"></a>3.2.2.1. Authentication Request</h3><p>Authentication Requests are made as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest\">Section 3.1.2.1</a>, except that these Authentication Request parameters are used as follows:</p>\n<blockquote>\n<ul>\n<li><p>response_type</p>\n<p>REQUIRED. OAuth 2.0 Response Type value that determines the authorization processing flow to be used, including what parameters are returned from the endpoints used. When using the Implicit Flow, this value is <code>id_token token</code> or <code>id_token</code>. The meanings of both of these values are defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses\">OAuth 2.0 Multiple Response Type Encoding Practices</a> [OAuth.Responses]. No Access Token is returned when the value is <code>id_token</code>.</p>\n</li>\n<li><p>NOTE: While OAuth 2.0 also defines the <code>token</code> Response Type value for the Implicit Flow, OpenID Connect does not use this Response Type, since no ID Token would be returned.</p>\n</li>\n<li><p>redirect_uri</p>\n<p>REQUIRED. Redirection URI to which the response will be sent. This URI MUST exactly match one of the Redirection URI values for the Client pre-registered at the OpenID Provider, with the matching performed as described in Section 6.2.1 of [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC3986\">RFC3986]</a> (Simple String Comparison). When using this flow, the Redirection URI MUST NOT use the <code>http</code> scheme unless the Client is a native application, in which case it MAY use the <code>http:</code> scheme with <code>localhost</code> as the hostname.</p>\n</li>\n<li><p>nonce</p>\n<p>REQUIRED. String value used to associate a Client session with an ID Token, and to mitigate replay attacks. The value is passed through unmodified from the Authentication Request to the ID Token. Sufficient entropy MUST be present in the <code>nonce</code> values used to prevent attackers from guessing values. For implementation notes, see <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#NonceNotes\">Section 15.5.2</a>.</p>\n</li>\n</ul>\n</blockquote>\n<p>The following is a non-normative example request using the Implicit Flow that would be sent by the User Agent to the Authorization Server in response to a corresponding HTTP 302 redirect response by the Client (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;authorize?\n  response_type&#x3D;id_token%20token\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb\n  &amp;scope&#x3D;openid%20profile\n  &amp;state&#x3D;af0ifjsldkj\n  &amp;nonce&#x3D;n-0S6_WzA2Mj HTTP&#x2F;1.1\nHost: server.example.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-2-2-Authentication-Request-Validation\"><a href=\"#3-2-2-2-Authentication-Request-Validation\" class=\"headerlink\" title=\"3.2.2.2. Authentication Request Validation\"></a>3.2.2.2. Authentication Request Validation</h3><p>When using the Implicit Flow, the Authentication Request is validated in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthRequestValidation\">Section 3.1.2.2</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-2-3-Authorization-Server-Authenticates-End-User\"><a href=\"#3-2-2-3-Authorization-Server-Authenticates-End-User\" class=\"headerlink\" title=\"3.2.2.3. Authorization Server Authenticates End-User\"></a>3.2.2.3. Authorization Server Authenticates End-User</h3><p>When using the Implicit Flow, End-User Authentication is performed in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#Authenticates\">Section 3.1.2.3</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-2-4-Authorization-Server-Obtains-End-User-Consent-x2F-Authorization\"><a href=\"#3-2-2-4-Authorization-Server-Obtains-End-User-Consent-x2F-Authorization\" class=\"headerlink\" title=\"3.2.2.4. Authorization Server Obtains End-User Consent&#x2F;Authorization\"></a>3.2.2.4. Authorization Server Obtains End-User Consent&#x2F;Authorization</h3><p>When using the Implicit Flow, End-User Consent is obtained in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#Consent\">Section 3.1.2.4</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-2-5-Successful-Authentication-Response\"><a href=\"#3-2-2-5-Successful-Authentication-Response\" class=\"headerlink\" title=\"3.2.2.5. Successful Authentication Response\"></a>3.2.2.5. Successful Authentication Response</h3><p>When using the Implicit Flow, Authentication Responses are made in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthResponse\">Section 3.1.2.5</a>, with the exception of the differences specified in this section.</p>\n<p>When using the Implicit Flow, all response parameters are added to the fragment component of the Redirection URI, as specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses\">OAuth 2.0 Multiple Response Type Encoding Practices</a> [OAuth.Responses], unless a different Response Mode was specified.</p>\n<p>These parameters are returned from the Authorization Endpoint:</p>\n<blockquote>\n<ul>\n<li><p>access_token</p>\n<p>OAuth 2.0 Access Token. This is returned unless the <code>response_type</code> value used is <code>id_token</code>.</p>\n</li>\n<li><p>token_type</p>\n<p>OAuth 2.0 Token Type value. The value MUST be <code>Bearer</code> or another <code>token_type</code> value that the Client has negotiated with the Authorization Server. Clients implementing this profile MUST support the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6750\">OAuth 2.0 Bearer Token Usage</a> [RFC6750] specification. This profile only describes the use of bearer tokens. This is returned in the same cases as <code>access_token</code> is.</p>\n</li>\n<li><p>id_token</p>\n<p>REQUIRED. ID Token.</p>\n</li>\n<li><p>state</p>\n<p>OAuth 2.0 state value. REQUIRED if the <code>state</code> parameter is present in the Authorization Request. Clients MUST verify that the <code>state</code> value is equal to the value of <code>state</code> parameter in the Authorization Request.</p>\n</li>\n<li><p>expires_in</p>\n<p>OPTIONAL. Expiration time of the Access Token in seconds since the response was generated.</p>\n</li>\n</ul>\n</blockquote>\n<p>Per Section 4.2.2 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749], no <code>code</code> result is returned when using the Implicit Flow.</p>\n<p>The following is a non-normative example of a successful response using the Implicit Flow (with line wraps for the display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">HTTP&#x2F;1.1 302 Found\nLocation: https:&#x2F;&#x2F;client.example.org&#x2F;cb#\n  access_token&#x3D;SlAV32hkKG\n  &amp;token_type&#x3D;bearer\n  &amp;id_token&#x3D;eyJ0 ... NiJ9.eyJ1c ... I6IjIifX0.DeWt4Qu ... ZXso\n  &amp;expires_in&#x3D;3600\n  &amp;state&#x3D;af0ifjsldkj<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-2-6-Authentication-Error-Response\"><a href=\"#3-2-2-6-Authentication-Error-Response\" class=\"headerlink\" title=\"3.2.2.6. Authentication Error Response\"></a>3.2.2.6. Authentication Error Response</h3><p>When using the Implicit Flow, Authorization Error Responses are made in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthError\">Section 3.1.2.6</a>, with the exception of the differences specified in this section.</p>\n<p>If the End-User denies the request or the End-User authentication fails, the Authorization Server MUST return the error Authorization Response in the fragment component of the Redirection URI, as defined in 4.2.2.1 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749] and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses\">OAuth 2.0 Multiple Response Type Encoding Practices</a> [OAuth.Responses], unless a different Response Mode was specified.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-2-7-Redirect-URI-Fragment-Handling\"><a href=\"#3-2-2-7-Redirect-URI-Fragment-Handling\" class=\"headerlink\" title=\"3.2.2.7. Redirect URI Fragment Handling\"></a>3.2.2.7. Redirect URI Fragment Handling</h3><p>Since response parameters are returned in the Redirection URI fragment value, the Client needs to have the User Agent parse the fragment encoded values and pass them to on to the Client’s processing logic for consumption. See <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#FragmentNotes\">Section 15.5.3</a> for implementation notes on URI fragment handling.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-2-8-Authentication-Response-Validation\"><a href=\"#3-2-2-8-Authentication-Response-Validation\" class=\"headerlink\" title=\"3.2.2.8. Authentication Response Validation\"></a>3.2.2.8. Authentication Response Validation</h3><p>When using the Implicit Flow, the Client MUST validate the response as follows:</p>\n<ol>\n<li>Verify that the response conforms to Section 5 of [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses\">OAuth.Responses]</a>.</li>\n<li>Follow the validation rules in RFC 6749, especially those in Sections 4.2.2 and 10.12.</li>\n<li>Follow the ID Token validation rules in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ImplicitIDTValidation\">Section 3.2.2.11</a>.</li>\n<li>Follow the Access Token validation rules in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ImplicitTokenValidation\">Section 3.2.2.9</a>, unless the <code>response_type</code> value used is <code>id_token</code>.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-2-9-Access-Token-Validation\"><a href=\"#3-2-2-9-Access-Token-Validation\" class=\"headerlink\" title=\"3.2.2.9. Access Token Validation\"></a>3.2.2.9. Access Token Validation</h3><p>To validate an Access Token issued from the Authorization Endpoint with an ID Token, the Client SHOULD do the following:</p>\n<ol>\n<li>Hash the octets of the ASCII representation of the <code>access_token</code> with the hash algorithm specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWA\">JWA</a> [JWA] for the <code>alg</code> Header Parameter of the ID Token’s JOSE Header. For instance, if the <code>alg</code> is <code>RS256</code>, the hash algorithm used is SHA-256.</li>\n<li>Take the left-most half of the hash and base64url encode it.</li>\n<li>The value of <code>at_hash</code> in the ID Token MUST match the value produced in the previous step.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-2-10-ID-Token\"><a href=\"#3-2-2-10-ID-Token\" class=\"headerlink\" title=\"3.2.2.10. ID Token\"></a>3.2.2.10. ID Token</h3><p>The contents of the ID Token are as described in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a>. When using the Implicit Flow, these additional requirements for the following ID Token Claims apply:</p>\n<blockquote>\n<ul>\n<li><p>nonce</p>\n<p>Use of the <code>nonce</code> Claim is REQUIRED for this flow.</p>\n</li>\n<li><p>at_hash</p>\n<p>Access Token hash value. Its value is the base64url encoding of the left-most half of the hash of the octets of the ASCII representation of the <code>access_token</code> value, where the hash algorithm used is the hash algorithm used in the <code>alg</code> Header Parameter of the ID Token’s JOSE Header. For instance, if the <code>alg</code> is <code>RS256</code>, hash the <code>access_token</code> value with SHA-256, then take the left-most 128 bits and base64url encode them. The <code>at_hash</code> value is a case sensitive string.</p>\n</li>\n<li><p>If the ID Token is issued from the Authorization Endpoint with an <code>access_token</code> value, which is the case for the <code>response_type</code> value <code>id_token token</code>, this is REQUIRED; it MAY NOT be used when no Access Token is issued, which is the case for the <code>response_type</code> value <code>id_token</code>.</p>\n</li>\n</ul>\n</blockquote>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-2-11-ID-Token-Validation\"><a href=\"#3-2-2-11-ID-Token-Validation\" class=\"headerlink\" title=\"3.2.2.11. ID Token Validation\"></a>3.2.2.11. ID Token Validation</h3><p>When using the Implicit Flow, the contents of the ID Token MUST be validated in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation\">Section 3.1.3.7</a>, with the exception of the differences specified in this section.</p>\n<ol>\n<li>The Client MUST validate the signature of the ID Token according to <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWS\">JWS</a> [JWS] using the algorithm specified in the <code>alg</code> Header Parameter of the JOSE Header.</li>\n<li>The value of the <code>nonce</code> Claim MUST be checked to verify that it is the same value as the one that was sent in the Authentication Request. The Client SHOULD check the <code>nonce</code> value for replay attacks. The precise method for detecting replay attacks is Client specific.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-Authentication-using-the-Hybrid-Flow\"><a href=\"#3-3-Authentication-using-the-Hybrid-Flow\" class=\"headerlink\" title=\"3.3. Authentication using the Hybrid Flow\"></a>3.3. Authentication using the Hybrid Flow</h3><p>This section describes how to perform authentication using the Hybrid Flow. When using the Hybrid Flow, some tokens are returned from the Authorization Endpoint and others are returned from the Token Endpoint. The mechanisms for returning tokens in the Hybrid Flow are specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses\">OAuth 2.0 Multiple Response Type Encoding Practices</a> [OAuth.Responses].</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-1-Hybrid-Flow-Steps\"><a href=\"#3-3-1-Hybrid-Flow-Steps\" class=\"headerlink\" title=\"3.3.1. Hybrid Flow Steps\"></a>3.3.1. Hybrid Flow Steps</h3><p>The Hybrid Flow follows the following steps:</p>\n<ol>\n<li>Client prepares an Authentication Request containing the desired request parameters.</li>\n<li>Client sends the request to the Authorization Server.</li>\n<li>Authorization Server Authenticates the End-User.</li>\n<li>Authorization Server obtains End-User Consent&#x2F;Authorization.</li>\n<li>Authorization Server sends the End-User back to the Client with an Authorization Code and, depending on the Response Type, one or more additional parameters.</li>\n<li>Client requests a response using the Authorization Code at the Token Endpoint.</li>\n<li>Client receives a response that contains an ID Token and Access Token in the response body.</li>\n<li>Client validates the ID Token and retrieves the End-User’s Subject Identifier.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-2-Authorization-Endpoint\"><a href=\"#3-3-2-Authorization-Endpoint\" class=\"headerlink\" title=\"3.3.2. Authorization Endpoint\"></a>3.3.2. Authorization Endpoint</h3><p>When using the Hybrid Flow, the Authorization Endpoint is used in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a>, with the exception of the differences specified in this section.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-2-1-Authentication-Request\"><a href=\"#3-3-2-1-Authentication-Request\" class=\"headerlink\" title=\"3.3.2.1. Authentication Request\"></a>3.3.2.1. Authentication Request</h3><p>Authentication Requests are made as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest\">Section 3.1.2.1</a>, except that these Authentication Request parameters are used as follows:</p>\n<blockquote>\n<ul>\n<li><p>response_type</p>\n<p>REQUIRED. OAuth 2.0 Response Type value that determines the authorization processing flow to be used, including what parameters are returned from the endpoints used. When using the Hybrid Flow, this value is <code>code id_token</code>, <code>code token</code>, or <code>code id_token token</code>. The meanings of these values are defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses\">OAuth 2.0 Multiple Response Type Encoding Practices</a> [OAuth.Responses].</p>\n</li>\n</ul>\n</blockquote>\n<p>The following is a non-normative example request using the Hybrid Flow that would be sent by the User Agent to the Authorization Server in response to a corresponding HTTP 302 redirect response by the Client (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;authorize?\n  response_type&#x3D;code%20id_token\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb\n  &amp;scope&#x3D;openid%20profile%20email\n  &amp;nonce&#x3D;n-0S6_WzA2Mj\n  &amp;state&#x3D;af0ifjsldkj HTTP&#x2F;1.1\nHost: server.example.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-2-2-Authentication-Request-Validation\"><a href=\"#3-3-2-2-Authentication-Request-Validation\" class=\"headerlink\" title=\"3.3.2.2. Authentication Request Validation\"></a>3.3.2.2. Authentication Request Validation</h3><p>When using the Hybrid Flow, the Authentication Request is validated in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthRequestValidation\">Section 3.1.2.2</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-2-3-Authorization-Server-Authenticates-End-User\"><a href=\"#3-3-2-3-Authorization-Server-Authenticates-End-User\" class=\"headerlink\" title=\"3.3.2.3. Authorization Server Authenticates End-User\"></a>3.3.2.3. Authorization Server Authenticates End-User</h3><p>When using the Hybrid Flow, End-User Authentication is performed in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#Authenticates\">Section 3.1.2.3</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-2-4-Authorization-Server-Obtains-End-User-Consent-x2F-Authorization\"><a href=\"#3-3-2-4-Authorization-Server-Obtains-End-User-Consent-x2F-Authorization\" class=\"headerlink\" title=\"3.3.2.4. Authorization Server Obtains End-User Consent&#x2F;Authorization\"></a>3.3.2.4. Authorization Server Obtains End-User Consent&#x2F;Authorization</h3><p>When using the Hybrid Flow, End-User Consent is obtained in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#Consent\">Section 3.1.2.4</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-2-5-Successful-Authentication-Response\"><a href=\"#3-3-2-5-Successful-Authentication-Response\" class=\"headerlink\" title=\"3.3.2.5. Successful Authentication Response\"></a>3.3.2.5. Successful Authentication Response</h3><p>When using the Hybrid Flow, Authentication Responses are made in the same manner as for the Implicit Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ImplicitAuthResponse\">Section 3.2.2.5</a>, with the exception of the differences specified in this section.</p>\n<p>These Authorization Endpoint results are used in the following manner:</p>\n<blockquote>\n<ul>\n<li><p>access_token</p>\n<p>OAuth 2.0 Access Token. This is returned when the <code>response_type</code> value used is <code>code token</code>, or <code>code id_token token</code>. (A <code>token_type</code> value is also returned in the same cases.)</p>\n</li>\n<li><p>id_token</p>\n<p>ID Token. This is returned when the <code>response_type</code> value used is <code>code id_token</code> or <code>code id_token token</code>.</p>\n</li>\n<li><p>code</p>\n<p>Authorization Code. This is always returned when using the Hybrid Flow.</p>\n</li>\n</ul>\n</blockquote>\n<p>The following is a non-normative example of a successful response using the Hybrid Flow (with line wraps for the display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">HTTP&#x2F;1.1 302 Found\nLocation: https:&#x2F;&#x2F;client.example.org&#x2F;cb#\n  code&#x3D;SplxlOBeZQQYbYS6WxSbIA\n  &amp;id_token&#x3D;eyJ0 ... NiJ9.eyJ1c ... I6IjIifX0.DeWt4Qu ... ZXso\n  &amp;state&#x3D;af0ifjsldkj<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-2-6-Authentication-Error-Response\"><a href=\"#3-3-2-6-Authentication-Error-Response\" class=\"headerlink\" title=\"3.3.2.6. Authentication Error Response\"></a>3.3.2.6. Authentication Error Response</h3><p>When using the Hybrid Flow, Authorization Error Responses are made in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthError\">Section 3.1.2.6</a>, with the exception of the differences specified in this section.</p>\n<p>If the End-User denies the request or the End-User authentication fails, the Authorization Server MUST return the error Authorization Response in the fragment component of the Redirection URI, as defined in 4.2.2.1 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749] and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses\">OAuth 2.0 Multiple Response Type Encoding Practices</a> [OAuth.Responses], unless a different Response Mode was specified.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-2-7-Redirect-URI-Fragment-Handling\"><a href=\"#3-3-2-7-Redirect-URI-Fragment-Handling\" class=\"headerlink\" title=\"3.3.2.7. Redirect URI Fragment Handling\"></a>3.3.2.7. Redirect URI Fragment Handling</h3><p>When using the Hybrid Flow, the same requirements for Redirection URI fragment parameter handling apply as do for the Implicit Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ImplicitCallback\">Section 3.2.2.7</a>. Also see <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#FragmentNotes\">Section 15.5.3</a> for implementation notes on URI fragment handling.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-2-8-Authentication-Response-Validation\"><a href=\"#3-3-2-8-Authentication-Response-Validation\" class=\"headerlink\" title=\"3.3.2.8. Authentication Response Validation\"></a>3.3.2.8. Authentication Response Validation</h3><p>When using the Hybrid Flow, the Client MUST validate the response as follows:</p>\n<ol>\n<li>Verify that the response conforms to Section 5 of [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses\">OAuth.Responses]</a>.</li>\n<li>Follow the validation rules in RFC 6749, especially those in Sections 4.2.2 and 10.12.</li>\n<li>Follow the ID Token validation rules in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#HybridIDTValidation\">Section 3.3.2.12</a> when the <code>response_type</code> value used is <code>code id_token</code> or <code>code id_token token</code>.</li>\n<li>Follow the Access Token validation rules in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#HybridTokenValidation\">Section 3.3.2.9</a> when the <code>response_type</code> value used is <code>code token</code> or <code>code id_token token</code>.</li>\n<li>Follow the Authorization Code validation rules in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#CodeValidation\">Section 3.3.2.10</a> when the <code>response_type</code> value used is <code>code id_token</code> or <code>code id_token token</code>.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-2-9-Access-Token-Validation\"><a href=\"#3-3-2-9-Access-Token-Validation\" class=\"headerlink\" title=\"3.3.2.9. Access Token Validation\"></a>3.3.2.9. Access Token Validation</h3><p>When using the Hybrid Flow, Access Tokens returned from the Authorization Endpoint are validated in the same manner as for the Implicit Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ImplicitTokenValidation\">Section 3.2.2.9</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-2-10-Authorization-Code-Validation\"><a href=\"#3-3-2-10-Authorization-Code-Validation\" class=\"headerlink\" title=\"3.3.2.10. Authorization Code Validation\"></a>3.3.2.10. Authorization Code Validation</h3><p>To validate an Authorization Code issued from the Authorization Endpoint with an ID Token, the Client SHOULD do the following:</p>\n<ol>\n<li>Hash the octets of the ASCII representation of the <code>code</code> with the hash algorithm specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWA\">JWA</a> [JWA] for the <code>alg</code> Header Parameter of the ID Token’s JOSE Header. For instance, if the <code>alg</code> is <code>RS256</code>, the hash algorithm used is SHA-256.</li>\n<li>Take the left-most half of the hash and base64url encode it.</li>\n<li>The value of <code>c_hash</code> in the ID Token MUST match the value produced in the previous step if <code>c_hash</code> is present in the ID Token.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-2-11-ID-Token\"><a href=\"#3-3-2-11-ID-Token\" class=\"headerlink\" title=\"3.3.2.11. ID Token\"></a>3.3.2.11. ID Token</h3><p>The contents of the ID Token are as described in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a>. When using the Hybrid Flow, these additional requirements for the following ID Token Claims apply to an ID Token returned from the Authorization Endpoint:</p>\n<blockquote>\n<ul>\n<li><p>nonce</p>\n<p>Use of the <code>nonce</code> Claim is REQUIRED for this flow.</p>\n</li>\n<li><p>at_hash</p>\n<p>Access Token hash value. Its value is the base64url encoding of the left-most half of the hash of the octets of the ASCII representation of the <code>access_token</code> value, where the hash algorithm used is the hash algorithm used in the <code>alg</code> Header Parameter of the ID Token’s JOSE Header. For instance, if the <code>alg</code> is <code>RS256</code>, hash the <code>access_token</code> value with SHA-256, then take the left-most 128 bits and base64url encode them. The <code>at_hash</code> value is a case sensitive string.</p>\n</li>\n<li><p>If the ID Token is issued from the Authorization Endpoint with an <code>access_token</code> value, which is the case for the <code>response_type</code> value <code>code id_token token</code>, this is REQUIRED; otherwise, its inclusion is OPTIONAL.</p>\n</li>\n<li><p>c_hash</p>\n<p>Code hash value. Its value is the base64url encoding of the left-most half of the hash of the octets of the ASCII representation of the <code>code</code> value, where the hash algorithm used is the hash algorithm used in the <code>alg</code> Header Parameter of the ID Token’s JOSE Header. For instance, if the <code>alg</code> is <code>HS512</code>, hash the <code>code</code> value with SHA-512, then take the left-most 256 bits and base64url encode them. The <code>c_hash</code> value is a case sensitive string.</p>\n</li>\n<li><p>If the ID Token is issued from the Authorization Endpoint with a <code>code</code>, which is the case for the <code>response_type</code> values <code>code id_token</code> and <code>code id_token token</code>, this is REQUIRED; otherwise, its inclusion is OPTIONAL.</p>\n</li>\n</ul>\n</blockquote>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-2-12-ID-Token-Validation\"><a href=\"#3-3-2-12-ID-Token-Validation\" class=\"headerlink\" title=\"3.3.2.12. ID Token Validation\"></a>3.3.2.12. ID Token Validation</h3><p>When using the Hybrid Flow, the contents of an ID Token returned from the Authorization Endpoint MUST be validated in the same manner as for the Implicit Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ImplicitIDTValidation\">Section 3.2.2.11</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-3-Token-Endpoint\"><a href=\"#3-3-3-Token-Endpoint\" class=\"headerlink\" title=\"3.3.3. Token Endpoint\"></a>3.3.3. Token Endpoint</h3><p>When using the Hybrid Flow, the Token Endpoint is used in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\">Section 3.1.3</a>, with the exception of the differences specified in this section.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-3-1-Token-Request\"><a href=\"#3-3-3-1-Token-Request\" class=\"headerlink\" title=\"3.3.3.1. Token Request\"></a>3.3.3.1. Token Request</h3><p>When using the Hybrid Flow, Token Requests are made in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#TokenRequest\">Section 3.1.3.1</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-3-2-Token-Request-Validation\"><a href=\"#3-3-3-2-Token-Request-Validation\" class=\"headerlink\" title=\"3.3.3.2. Token Request Validation\"></a>3.3.3.2. Token Request Validation</h3><p>When using the Hybrid Flow, Token Requests are validated in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#TokenRequestValidation\">Section 3.1.3.2</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-3-3-Successful-Token-Response\"><a href=\"#3-3-3-3-Successful-Token-Response\" class=\"headerlink\" title=\"3.3.3.3. Successful Token Response\"></a>3.3.3.3. Successful Token Response</h3><p>When using the Hybrid Flow, Token Responses are made in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#TokenResponse\">Section 3.1.3.3</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-3-4-Token-Error-Response\"><a href=\"#3-3-3-4-Token-Error-Response\" class=\"headerlink\" title=\"3.3.3.4. Token Error Response\"></a>3.3.3.4. Token Error Response</h3><p>When using the Hybrid Flow, Token Error Responses are made in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#TokenErrorResponse\">Section 3.1.3.4</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-3-5-Token-Response-Validation\"><a href=\"#3-3-3-5-Token-Response-Validation\" class=\"headerlink\" title=\"3.3.3.5. Token Response Validation\"></a>3.3.3.5. Token Response Validation</h3><p>When using the Hybrid Flow, Token Responses are validated in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#TokenResponseValidation\">Section 3.1.3.5</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-3-6-ID-Token\"><a href=\"#3-3-3-6-ID-Token\" class=\"headerlink\" title=\"3.3.3.6. ID Token\"></a>3.3.3.6. ID Token</h3><p>When using the Hybrid Flow, the contents of an ID Token returned from the Token Endpoint are the same as for an ID Token returned from the Authorization Endpoint, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#HybridIDToken\">Section 3.3.2.11</a>, with the exception of the differences specified in this section.</p>\n<p>If an ID Token is returned from both the Authorization Endpoint and from the Token Endpoint, which is the case for the <code>response_type</code> values <code>code id_token</code> and <code>code id_token token</code>, the <code>iss</code> and <code>sub</code> Claim Values MUST be identical in both ID Tokens. All Claims about the Authentication event present in either SHOULD be present in both. If either ID Token contains Claims about the End-User, any that are present in both SHOULD have the same values in both. Note that the OP MAY choose to return fewer Claims about the End-User from the Authorization Endpoint, for instance, for privacy reasons. The <code>at_hash</code> and <code>c_hash</code> Claims MAY be omitted from the ID Token returned from the Token Endpoint even when these Claims are present in the ID Token returned from the Authorization Endpoint, because the ID Token and Access Token values returned from the Token Endpoint are already cryptographically bound together by the TLS encryption performed by the Token Endpoint.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-3-7-ID-Token-Validation\"><a href=\"#3-3-3-7-ID-Token-Validation\" class=\"headerlink\" title=\"3.3.3.7. ID Token Validation\"></a>3.3.3.7. ID Token Validation</h3><p>When using the Hybrid Flow, the contents of an ID Token returned from the Token Endpoint MUST be validated in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation\">Section 3.1.3.7</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-3-8-Access-Token\"><a href=\"#3-3-3-8-Access-Token\" class=\"headerlink\" title=\"3.3.3.8. Access Token\"></a>3.3.3.8. Access Token</h3><p>If an Access Token is returned from both the Authorization Endpoint and from the Token Endpoint, which is the case for the <code>response_type</code> values <code>code token</code> and <code>code id_token token</code>, their values MAY be the same or they MAY be different. Note that different Access Tokens might be returned be due to the different security characteristics of the two endpoints and the lifetimes and the access to resources granted by them might also be different.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-3-9-Access-Token-Validation\"><a href=\"#3-3-3-9-Access-Token-Validation\" class=\"headerlink\" title=\"3.3.3.9. Access Token Validation\"></a>3.3.3.9. Access Token Validation</h3><p>When using the Hybrid Flow, the Access Token returned from the Token Endpoint is validated in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowTokenValidation\">Section 3.1.3.8</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"4-Initiating-Login-from-a-Third-Party\"><a href=\"#4-Initiating-Login-from-a-Third-Party\" class=\"headerlink\" title=\"4. Initiating Login from a Third Party\"></a>4. Initiating Login from a Third Party</h3><p>In some cases, the login flow is initiated by an OpenID Provider or another party, rather than the Relying Party. In this case, the initiator redirects to the RP at its login initiation endpoint, which requests that the RP send an Authentication Request to a specified OP. This login initiation endpoint can be a deep link at the RP, rather than a default landing page. RPs supporting <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration\">OpenID Connect Dynamic Client Registration 1.0</a> [OpenID.Registration] register this endpoint value using the <code>initiate_login_uri</code> Registration parameter.</p>\n<p>The party initiating the login request does so by redirecting to the login initiation endpoint at the RP, passing the following parameters:</p>\n<blockquote>\n<ul>\n<li><p>iss</p>\n<p>REQUIRED. Issuer Identifier for the OP that the RP is to send the Authentication Request to. Its value MUST be a URL using the <code>https</code> scheme.</p>\n</li>\n<li><p>login_hint</p>\n<p>OPTIONAL. Hint to the Authorization Server about the login identifier the End-User might use to log in. If the client receives a value for this string-valued parameter, it MUST include it in the Authentication Request as the <code>login_hint</code> parameter value.</p>\n</li>\n<li><p>target_link_uri</p>\n<p>OPTIONAL. URL that the RP is requested to redirect to after authentication. RPs MUST verify the value of the <code>target_link_uri</code> to prevent being used as an open redirector to external sites.</p>\n</li>\n</ul>\n</blockquote>\n<p>The parameters can either be passed as query parameters using the HTTP <code>GET</code> method or be passed as HTML form values that are auto-submitted in the User Agent, and thus are transmitted via the HTTP <code>POST</code> method.</p>\n<p>Other parameters MAY be sent, if defined by extensions. Any parameters used that are not understood MUST be ignored by the Client.</p>\n<p>Clients SHOULD employ frame busting and other techniques to prevent End-Users from being logged in by third party sites without their knowledge through attacks such as Clickjacking. Refer to Section 4.4.1.9 of [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6819\">RFC6819]</a> for more details.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-Claims\"><a href=\"#5-Claims\" class=\"headerlink\" title=\"5. Claims\"></a>5. Claims</h3><p>This section specifies how the Client can obtain Claims about the End-User and the Authentication event. It also defines a standard set of basic profile Claims. Pre-defined sets of Claims can be requested using specific scope values or individual Claims can be requested using the <code>claims</code> request parameter. The Claims can come directly from the OpenID Provider or from distributed sources as well.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-1-Standard-Claims\"><a href=\"#5-1-Standard-Claims\" class=\"headerlink\" title=\"5.1. Standard Claims\"></a>5.1. Standard Claims</h3><p>This specification defines a set of standard Claims. They can be requested to be returned either in the UserInfo Response, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#UserInfoResponse\">Section 5.3.2</a>, or in the ID Token, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a>.</p>\n<hr>\n<table>\n<thead>\n<tr>\n<th>Member</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>sub</td>\n<td>string</td>\n<td>Subject - Identifier for the End-User at the Issuer.</td>\n</tr>\n<tr>\n<td>name</td>\n<td>string</td>\n<td>End-User’s full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User’s locale and preferences.</td>\n</tr>\n<tr>\n<td>given_name</td>\n<td>string</td>\n<td>Given name(s) or first name(s) of the End-User. Note that in some cultures, people can have multiple given names; all can be present, with the names being separated by space characters.</td>\n</tr>\n<tr>\n<td>family_name</td>\n<td>string</td>\n<td>Surname(s) or last name(s) of the End-User. Note that in some cultures, people can have multiple family names or no family name; all can be present, with the names being separated by space characters.</td>\n</tr>\n<tr>\n<td>middle_name</td>\n<td>string</td>\n<td>Middle name(s) of the End-User. Note that in some cultures, people can have multiple middle names; all can be present, with the names being separated by space characters. Also note that in some cultures, middle names are not used.</td>\n</tr>\n<tr>\n<td>nickname</td>\n<td>string</td>\n<td>Casual name of the End-User that may or may not be the same as the <code>given_name</code>. For instance, a <code>nickname</code> value of <code>Mike</code> might be returned alongside a <code>given_name</code> value of <code>Michael</code>.</td>\n</tr>\n<tr>\n<td>preferred_username</td>\n<td>string</td>\n<td>Shorthand name by which the End-User wishes to be referred to at the RP, such as <code>janedoe</code> or <code>j.doe</code>. This value MAY be any valid JSON string including special characters such as <code>@</code>, <code>/</code>, or whitespace. The RP MUST NOT rely upon this value being unique, as discussed in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClaimStability\">Section 5.7</a>.</td>\n</tr>\n<tr>\n<td>profile</td>\n<td>string</td>\n<td>URL of the End-User’s profile page. The contents of this Web page SHOULD be about the End-User.</td>\n</tr>\n<tr>\n<td>picture</td>\n<td>string</td>\n<td>URL of the End-User’s profile picture. This URL MUST refer to an image file (for example, a PNG, JPEG, or GIF image file), rather than to a Web page containing an image. Note that this URL SHOULD specifically reference a profile photo of the End-User suitable for displaying when describing the End-User, rather than an arbitrary photo taken by the End-User.</td>\n</tr>\n<tr>\n<td>website</td>\n<td>string</td>\n<td>URL of the End-User’s Web page or blog. This Web page SHOULD contain information published by the End-User or an organization that the End-User is affiliated with.</td>\n</tr>\n<tr>\n<td>email</td>\n<td>string</td>\n<td>End-User’s preferred e-mail address. Its value MUST conform to the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC5322\">RFC 5322</a> [RFC5322] addr-spec syntax. The RP MUST NOT rely upon this value being unique, as discussed in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClaimStability\">Section 5.7</a>.</td>\n</tr>\n<tr>\n<td>email_verified</td>\n<td>boolean</td>\n<td>True if the End-User’s e-mail address has been verified; otherwise false. When this Claim Value is <code>true</code>, this means that the OP took affirmative steps to ensure that this e-mail address was controlled by the End-User at the time the verification was performed. The means by which an e-mail address is verified is context-specific, and dependent upon the trust framework or contractual agreements within which the parties are operating.</td>\n</tr>\n<tr>\n<td>gender</td>\n<td>string</td>\n<td>End-User’s gender. Values defined by this specification are <code>female</code> and <code>male</code>. Other values MAY be used when neither of the defined values are applicable.</td>\n</tr>\n<tr>\n<td>birthdate</td>\n<td>string</td>\n<td>End-User’s birthday, represented as an <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ISO8601-2004\">ISO 8601:2004</a> [ISO8601‑2004] <code>YYYY-MM-DD</code> format. The year MAY be <code>0000</code>, indicating that it is omitted. To represent only the year, <code>YYYY</code> format is allowed. Note that depending on the underlying platform’s date related function, providing just year can result in varying month and day, so the implementers need to take this factor into account to correctly process the dates.</td>\n</tr>\n<tr>\n<td>zoneinfo</td>\n<td>string</td>\n<td>String from zoneinfo [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#zoneinfo\">zoneinfo]</a> time zone database representing the End-User’s time zone. For example, <code>Europe/Paris</code> or <code>America/Los_Angeles</code>.</td>\n</tr>\n<tr>\n<td>locale</td>\n<td>string</td>\n<td>End-User’s locale, represented as a <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC5646\">BCP47</a> [RFC5646] language tag. This is typically an <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ISO639-1\">ISO 639-1 Alpha-2</a> [ISO639‑1] language code in lowercase and an <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ISO3166-1\">ISO 3166-1 Alpha-2</a> [ISO3166‑1] country code in uppercase, separated by a dash. For example, <code>en-US</code> or <code>fr-CA</code>. As a compatibility note, some implementations have used an underscore as the separator rather than a dash, for example, <code>en_US</code>; Relying Parties MAY choose to accept this locale syntax as well.</td>\n</tr>\n<tr>\n<td>phone_number</td>\n<td>string</td>\n<td>End-User’s preferred telephone number. <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#E.164\">E.164</a> [E.164] is RECOMMENDED as the format of this Claim, for example, <code>+1 (425) 555-1212</code> or <code>+56 (2) 687 2400</code>. If the phone number contains an extension, it is RECOMMENDED that the extension be represented using the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC3966\">RFC 3966</a> [RFC3966] extension syntax, for example, <code>+1 (604) 555-1234;ext=5678</code>.</td>\n</tr>\n<tr>\n<td>phone_number_verified</td>\n<td>boolean</td>\n<td>True if the End-User’s phone number has been verified; otherwise false. When this Claim Value is <code>true</code>, this means that the OP took affirmative steps to ensure that this phone number was controlled by the End-User at the time the verification was performed. The means by which a phone number is verified is context-specific, and dependent upon the trust framework or contractual agreements within which the parties are operating. When true, the <code>phone_number</code> Claim MUST be in E.164 format and any extensions MUST be represented in RFC 3966 format.</td>\n</tr>\n<tr>\n<td>address</td>\n<td>JSON object</td>\n<td>End-User’s preferred postal address. The value of the <code>address</code> member is a JSON [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC4627\">RFC4627]</a> structure containing some or all of the members defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim\">Section 5.1.1</a>.</td>\n</tr>\n<tr>\n<td>updated_at</td>\n<td>number</td>\n<td>Time the End-User’s information was last updated. Its value is a JSON number representing the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the date&#x2F;time.</td>\n</tr>\n</tbody></table>\n<p> <strong>Table 1: Registered Member Definitions</strong>  </p>\n<hr>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-1-1-Address-Claim\"><a href=\"#5-1-1-Address-Claim\" class=\"headerlink\" title=\"5.1.1. Address Claim\"></a>5.1.1. Address Claim</h3><p>The Address Claim represents a physical mailing address. Implementations MAY return only a subset of the fields of an <code>address</code>, depending upon the information available and the End-User’s privacy preferences. For example, the <code>country</code> and <code>region</code> might be returned without returning more fine-grained address information.</p>\n<p>Implementations MAY return just the full address as a single string in the formatted sub-field, or they MAY return just the individual component fields using the other sub-fields, or they MAY return both. If both variants are returned, they SHOULD be describing the same address, with the formatted address indicating how the component fields are combined.</p>\n<blockquote>\n<ul>\n<li><p>formatted</p>\n<p>Full mailing address, formatted for display or use on a mailing label. This field MAY contain multiple lines, separated by newlines. Newlines can be represented either as a carriage return&#x2F;line feed pair (“\\r\\n”) or as a single line feed character (“\\n”).</p>\n</li>\n<li><p>street_address</p>\n<p>Full street address component, which MAY include house number, street name, Post Office Box, and multi-line extended street address information. This field MAY contain multiple lines, separated by newlines. Newlines can be represented either as a carriage return&#x2F;line feed pair (“\\r\\n”) or as a single line feed character (“\\n”).</p>\n</li>\n<li><p>locality</p>\n<p>City or locality component.</p>\n</li>\n<li><p>region</p>\n<p>State, province, prefecture, or region component.</p>\n</li>\n<li><p>postal_code</p>\n<p>Zip code or postal code component.</p>\n</li>\n<li><p>country</p>\n<p>Country name component.</p>\n</li>\n</ul>\n</blockquote>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-1-2-Additional-Claims\"><a href=\"#5-1-2-Additional-Claims\" class=\"headerlink\" title=\"5.1.2. Additional Claims\"></a>5.1.2. Additional Claims</h3><p>While this specification defines only a small set of Claims as standard Claims, other Claims MAY be used in conjunction with the standard Claims. When using such Claims, it is RECOMMENDED that collision-resistant names be used for the Claim Names, as described in the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JSON Web Token (JWT)</a> [JWT] specification. Alternatively, Private Claim Names can be safely used when naming conflicts are unlikely to arise, as described in the JWT specification. Or, if specific additional Claims will have broad and general applicability, they can be registered with Registered Claim Names, per the JWT specification.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-2-Claims-Languages-and-Scripts\"><a href=\"#5-2-Claims-Languages-and-Scripts\" class=\"headerlink\" title=\"5.2. Claims Languages and Scripts\"></a>5.2. Claims Languages and Scripts</h3><p>Human-readable Claim Values and Claim Values that reference human-readable values MAY be represented in multiple languages and scripts. To specify the languages and scripts, <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC5646\">BCP47</a> [RFC5646] language tags are added to member names, delimited by a <code>#</code> character. For example, <code>family_name#ja-Kana-JP</code> expresses the Family Name in Katakana in Japanese, which is commonly used to index and represent the phonetics of the Kanji representation of the same represented as <code>family_name#ja-Hani-JP</code>. As another example, both <code>website</code> and <code>website#de</code> Claim Values might be returned, referencing a Web site in an unspecified language and a Web site in German.</p>\n<p>Since Claim Names are case sensitive, it is strongly RECOMMENDED that language tag values used in Claim Names be spelled using the character case with which they are registered in the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IANA.Language\">IANA Language Subtag Registry</a> [IANA.Language]. In particular, normally language names are spelled with lowercase characters, region names are spelled with uppercase characters, and scripts are spelled with mixed case characters. However, since BCP47 language tag values are case insensitive, implementations SHOULD interpret the language tag values supplied in a case insensitive manner.</p>\n<p>Per the recommendations in BCP47, language tag values for Claims SHOULD only be as specific as necessary. For instance, using <code>fr</code> might be sufficient in many contexts, rather than <code>fr-CA</code> or <code>fr-FR</code>. Where possible, OPs SHOULD try to match requested Claim locales with Claims it has. For instance, if the Client asks for a Claim with a <code>de</code> (German) language tag and the OP has a value tagged with <code>de-CH</code> (Swiss German) and no generic German value, it would be appropriate for the OP to return the Swiss German value to the Client. (This intentionally moves as much of the complexity of language tag matching to the OP as possible, to simplify Clients.)</p>\n<p>OpenID Connect defines the following Authorization Request parameter to enable specify the preferred languages and scripts to be used for the returned Claims:</p>\n<blockquote>\n<ul>\n<li><p>claims_locales</p>\n<p>OPTIONAL. End-User’s preferred languages and scripts for Claims being returned, represented as a space-separated list of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC5646\">BCP47</a> [RFC5646] language tag values, ordered by preference. An error SHOULD NOT result if some or all of the requested locales are not supported by the OpenID Provider.</p>\n</li>\n</ul>\n</blockquote>\n<p>When the OP determines, either through the <code>claims_locales</code> parameter, or by other means, that the End-User and Client are requesting Claims in only one set of languages and scripts, it is RECOMMENDED that OPs return Claims without language tags when they employ this language and script. It is also RECOMMENDED that Clients be written in a manner that they can handle and utilize Claims using language tags.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-3-UserInfo-Endpoint\"><a href=\"#5-3-UserInfo-Endpoint\" class=\"headerlink\" title=\"5.3. UserInfo Endpoint\"></a>5.3. UserInfo Endpoint</h3><p>The UserInfo Endpoint is an OAuth 2.0 Protected Resource that returns Claims about the authenticated End-User. To obtain the requested Claims about the End-User, the Client makes a request to the UserInfo Endpoint using an Access Token obtained through OpenID Connect Authentication. These Claims are normally represented by a JSON object that contains a collection of name and value pairs for the Claims.</p>\n<p>Communication with the UserInfo Endpoint MUST utilize TLS. See <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#TLSRequirements\">Section 16.17</a> for more information on using TLS.</p>\n<p>The UserInfo Endpoint MUST support the use of the HTTP <code>GET</code> and HTTP <code>POST</code> methods defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC2616\">RFC 2616</a> [RFC2616].</p>\n<p>The UserInfo Endpoint MUST accept Access Tokens as <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6750\">OAuth 2.0 Bearer Token Usage</a> [RFC6750].</p>\n<p>The UserInfo Endpoint SHOULD support the use of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#CORS\">Cross Origin Resource Sharing (CORS)</a> [CORS] and or other methods as appropriate to enable Java Script Clients to access the endpoint.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-3-1-UserInfo-Request\"><a href=\"#5-3-1-UserInfo-Request\" class=\"headerlink\" title=\"5.3.1. UserInfo Request\"></a>5.3.1. UserInfo Request</h3><p>The Client sends the UserInfo Request using either HTTP <code>GET</code> or HTTP <code>POST</code>. The Access Token obtained from an OpenID Connect Authentication Request MUST be sent as a Bearer Token, per Section 2 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6750\">OAuth 2.0 Bearer Token Usage</a> [RFC6750].</p>\n<p>It is RECOMMENDED that the request use the HTTP <code>GET</code> method and the Access Token be sent using the <code>Authorization</code> header field.</p>\n<p>The following is a non-normative example of a UserInfo Request:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;userinfo HTTP&#x2F;1.1\nHost: server.example.com\nAuthorization: Bearer SlAV32hkKG<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-3-2-Successful-UserInfo-Response\"><a href=\"#5-3-2-Successful-UserInfo-Response\" class=\"headerlink\" title=\"5.3.2. Successful UserInfo Response\"></a>5.3.2. Successful UserInfo Response</h3><p>The UserInfo Claims MUST be returned as the members of a JSON object unless a signed or encrypted response was requested during Client Registration. The Claims defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> can be returned, as can additional Claims not specified there.</p>\n<p>For privacy reasons, OpenID Providers MAY elect to not return values for some requested Claims.</p>\n<p>If a Claim is not returned, that Claim Name SHOULD be omitted from the JSON object representing the Claims; it SHOULD NOT be present with a null or empty string value.</p>\n<p>The <code>sub</code> (subject) Claim MUST always be returned in the UserInfo Response.</p>\n<p>NOTE: Due to the possibility of token substitution attacks (see <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#TokenSubstitution\">Section 16.11</a>), the UserInfo Response is not guaranteed to be about the End-User identified by the <code>sub</code> (subject) element of the ID Token. The <code>sub</code> Claim in the UserInfo Response MUST be verified to exactly match the <code>sub</code> Claim in the ID Token; if they do not match, the UserInfo Response values MUST NOT be used.</p>\n<p>Upon receipt of the UserInfo Request, the UserInfo Endpoint MUST return the JSON Serialization of the UserInfo Response as in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JSONSerialization\">Section 13.3</a> in the HTTP response body unless a different format was specified during Registration [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration\">OpenID.Registration]</a>. The UserInfo Endpoint MUST return a content-type header to indicate which format is being returned. The content-type of the HTTP response MUST be <code>application/json</code> if the response body is a text JSON object; the response body SHOULD be encoded using UTF-8.</p>\n<p>If the UserInfo Response is signed and&#x2F;or encrypted, then the Claims are returned in a JWT and the content-type MUST be <code>application/jwt</code>. The response MAY be encrypted without also being signed. If both signing and encryption are requested, the response MUST be signed then encrypted, with the result being a Nested JWT, as defined in [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JWT]</a>.</p>\n<p>If signed, the UserInfo Response SHOULD contain the Claims <code>iss</code> (issuer) and <code>aud</code> (audience) as members. The <code>iss</code> value SHOULD be the OP’s Issuer Identifier URL. The <code>aud</code> value SHOULD be or include the RP’s Client ID value.</p>\n<p>The following is a non-normative example of a UserInfo Response:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">HTTP&#x2F;1.1 200 OK\nContent-Type: application&#x2F;json\n\n&#123;\n &quot;sub&quot;: &quot;248289761001&quot;,\n &quot;name&quot;: &quot;Jane Doe&quot;,\n &quot;given_name&quot;: &quot;Jane&quot;,\n &quot;family_name&quot;: &quot;Doe&quot;,\n &quot;preferred_username&quot;: &quot;j.doe&quot;,\n &quot;email&quot;: &quot;janedoe@example.com&quot;,\n &quot;picture&quot;: &quot;http:&#x2F;&#x2F;example.com&#x2F;janedoe&#x2F;me.jpg&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-3-3-UserInfo-Error-Response\"><a href=\"#5-3-3-UserInfo-Error-Response\" class=\"headerlink\" title=\"5.3.3. UserInfo Error Response\"></a>5.3.3. UserInfo Error Response</h3><p>When an error condition occurs, the UserInfo Endpoint returns an Error Response as defined in Section 3 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6750\">OAuth 2.0 Bearer Token Usage</a> [RFC6750]. (HTTP errors unrelated to RFC 6750 are returned to the User Agent using the appropriate HTTP status code.)</p>\n<p>The following is a non-normative example of a UserInfo Error Response:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">HTTP&#x2F;1.1 401 Unauthorized\nWWW-Authenticate: error&#x3D;&quot;invalid_token&quot;,\n  error_description&#x3D;&quot;The Access Token expired&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-3-4-UserInfo-Response-Validation\"><a href=\"#5-3-4-UserInfo-Response-Validation\" class=\"headerlink\" title=\"5.3.4. UserInfo Response Validation\"></a>5.3.4. UserInfo Response Validation</h3><p>The Client MUST validate the UserInfo Response as follows:</p>\n<ol>\n<li>Verify that the OP that responded was the intended OP through a TLS server certificate check, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6125\">RFC 6125</a> [RFC6125].</li>\n<li>If the Client has provided a <code>userinfo_encrypted_response_alg</code> parameter during Registration, decrypt the UserInfo Response using the keys specified during Registration.</li>\n<li>If the response was signed, the Client SHOULD validate the signature according to <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWS\">JWS</a> [JWS].</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-4-Requesting-Claims-using-Scope-Values\"><a href=\"#5-4-Requesting-Claims-using-Scope-Values\" class=\"headerlink\" title=\"5.4. Requesting Claims using Scope Values\"></a>5.4. Requesting Claims using Scope Values</h3><p>OpenID Connect Clients use <code>scope</code> values, as defined in Section 3.3 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749], to specify what access privileges are being requested for Access Tokens. The scopes associated with Access Tokens determine what resources will be available when they are used to access OAuth 2.0 protected endpoints. Protected Resource endpoints MAY perform different actions and return different information based on the scope values and other parameters used when requesting the presented Access Token.</p>\n<p>For OpenID Connect, scopes can be used to request that specific sets of information be made available as Claim Values.</p>\n<p>Claims requested by the following scopes are treated by Authorization Servers as Voluntary Claims.</p>\n<p>OpenID Connect defines the following <code>scope</code> values that are used to request Claims:</p>\n<blockquote>\n<ul>\n<li><p>profile</p>\n<p>OPTIONAL. This scope value requests access to the End-User’s default profile Claims, which are: <code>name</code>, <code>family_name</code>, <code>given_name</code>, <code>middle_name</code>, <code>nickname</code>, <code>preferred_username</code>, <code>profile</code>, <code>picture</code>, <code>website</code>, <code>gender</code>, <code>birthdate</code>, <code>zoneinfo</code>, <code>locale</code>, and <code>updated_at</code>.</p>\n</li>\n<li><p>email</p>\n<p>OPTIONAL. This scope value requests access to the <code>email</code> and <code>email_verified</code> Claims.</p>\n</li>\n<li><p>address</p>\n<p>OPTIONAL. This scope value requests access to the <code>address</code> Claim.</p>\n</li>\n<li><p>phone</p>\n<p>OPTIONAL. This scope value requests access to the <code>phone_number</code> and <code>phone_number_verified</code> Claims.</p>\n</li>\n</ul>\n</blockquote>\n<p>Multiple scope values MAY be used by creating a space delimited, case sensitive list of ASCII scope values.</p>\n<p>The Claims requested by the <code>profile</code>, <code>email</code>, <code>address</code>, and <code>phone</code> scope values are returned from the UserInfo Endpoint, as described in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#UserInfoResponse\">Section 5.3.2</a>, when a <code>response_type</code> value is used that results in an Access Token being issued. However, when no Access Token is issued (which is the case for the <code>response_type</code> value <code>id_token</code>), the resulting Claims are returned in the ID Token.</p>\n<p>In some cases, the End-User will be given the option to have the OpenID Provider decline to provide some or all information requested by RPs. To minimize the amount of information that the End-User is being asked to disclose, an RP can elect to only request a subset of the information available from the UserInfo Endpoint.</p>\n<p>The following is a non-normative example of an unencoded <code>scope</code> request:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">scope&#x3D;openid profile email phone<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-5-Requesting-Claims-using-the-“claims”-Request-Parameter\"><a href=\"#5-5-Requesting-Claims-using-the-“claims”-Request-Parameter\" class=\"headerlink\" title=\"5.5. Requesting Claims using the “claims” Request Parameter\"></a>5.5. Requesting Claims using the “claims” Request Parameter</h3><p>OpenID Connect defines the following Authorization Request parameter to enable requesting individual Claims and specifying parameters that apply to the requested Claims:</p>\n<blockquote>\n<ul>\n<li><p>claims</p>\n<p>OPTIONAL. This parameter is used to request that specific Claims be returned. The value is a JSON object listing the requested Claims.</p>\n</li>\n</ul>\n</blockquote>\n<p>The <code>claims</code> Authentication Request parameter requests that specific Claims be returned from the UserInfo Endpoint and&#x2F;or in the ID Token. It is represented as a JSON object containing lists of Claims being requested from these locations. Properties of the Claims being requested MAY also be specified.</p>\n<p>Support for the <code>claims</code> parameter is OPTIONAL. Should an OP not support this parameter and an RP uses it, the OP SHOULD return a set of Claims to the RP that it believes would be useful to the RP and the End-User using whatever heuristics it believes are appropriate. The <code>claims_parameter_supported</code> Discovery result indicates whether the OP supports this parameter.</p>\n<p>The <code>claims</code> parameter value is represented in an OAuth 2.0 request as UTF-8 encoded JSON (which ends up being form-urlencoded when passed as an OAuth parameter). When used in a Request Object value, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RequestObject\">Section 6.1</a>, the JSON is used as the value of the <code>claims</code> member.</p>\n<p>The top-level members of the Claims request JSON object are:</p>\n<blockquote>\n<ul>\n<li><p>userinfo</p>\n<p>OPTIONAL. Requests that the listed individual Claims be returned from the UserInfo Endpoint. If present, the listed Claims are being requested to be added to any Claims that are being requested using <code>scope</code> values. If not present, the Claims being requested from the UserInfo Endpoint are only those requested using <code>scope</code> values.</p>\n</li>\n<li><p>When the <code>userinfo</code> member is used, the request MUST also use a <code>response_type</code> value that results in an Access Token being issued to the Client for use at the UserInfo Endpoint.</p>\n</li>\n<li><p>id_token</p>\n<p>OPTIONAL. Requests that the listed individual Claims be returned in the ID Token. If present, the listed Claims are being requested to be added to the default Claims in the ID Token. If not present, the default ID Token Claims are requested, as per the ID Token definition in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a> and per the additional per-flow ID Token requirements in Sections <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#CodeIDToken\">3.1.3.6</a>, <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ImplicitIDToken\">3.2.2.10</a>, <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#HybridIDToken\">3.3.2.11</a>, and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#HybridIDToken2\">3.3.3.6</a>.</p>\n</li>\n</ul>\n</blockquote>\n<p>Other members MAY be present. Any members used that are not understood MUST be ignored.</p>\n<p>An example Claims request is as follows:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;userinfo&quot;:\n  &#123;\n   &quot;given_name&quot;: &#123;&quot;essential&quot;: true&#125;,\n   &quot;nickname&quot;: null,\n   &quot;email&quot;: &#123;&quot;essential&quot;: true&#125;,\n   &quot;email_verified&quot;: &#123;&quot;essential&quot;: true&#125;,\n   &quot;picture&quot;: null,\n   &quot;http:&#x2F;&#x2F;example.info&#x2F;claims&#x2F;groups&quot;: null\n  &#125;,\n &quot;id_token&quot;:\n  &#123;\n   &quot;auth_time&quot;: &#123;&quot;essential&quot;: true&#125;,\n   &quot;acr&quot;: &#123;&quot;values&quot;: [&quot;urn:mace:incommon:iap:silver&quot;] &#125;\n  &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>Note that a Claim that is not in the standard set defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a>, the (example) <code>http://example.info/claims/groups</code> Claim, is being requested. Using the <code>claims</code> parameter is the only way to request Claims outside the standard set. It is also the only way to request specific combinations of the standard Claims that cannot be specified using scope values.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-5-1-Individual-Claims-Requests\"><a href=\"#5-5-1-Individual-Claims-Requests\" class=\"headerlink\" title=\"5.5.1. Individual Claims Requests\"></a>5.5.1. Individual Claims Requests</h3><p>The <code>userinfo</code> and <code>id_token</code> members of the <code>claims</code> request both are JSON objects with the names of the individual Claims being requested as the member names. The member values MUST be one of the following:</p>\n<blockquote>\n<ul>\n<li><p>null</p>\n<p>Indicates that this Claim is being requested in the default manner. In particular, this is a Voluntary Claim. For instance, the Claim request:<code> &quot;given_name&quot;: null</code>requests the <code>given_name</code> Claim in the default manner.</p>\n</li>\n<li><p>JSON Object</p>\n<p>Used to provide additional information about the Claim being requested. This specification defines the following members:essentialOPTIONAL. Indicates whether the Claim being requested is an Essential Claim. If the value is <code>true</code>, this indicates that the Claim is an Essential Claim. For instance, the Claim request:<code> &quot;auth_time&quot;: &#123;&quot;essential&quot;: true&#125;</code>can be used to specify that it is Essential to return an <code>auth_time</code> Claim Value.If the value is <code>false</code>, it indicates that it is a Voluntary Claim. The default is <code>false</code>.By requesting Claims as Essential Claims, the RP indicates to the End-User that releasing these Claims will ensure a smooth authorization for the specific task requested by the End-User. Note that even if the Claims are not available because the End-User did not authorize their release or they are not present, the Authorization Server MUST NOT generate an error when Claims are not returned, whether they are Essential or Voluntary, unless otherwise specified in the description of the specific claim.valueOPTIONAL. Requests that the Claim be returned with a particular value. For instance the Claim request:<code> &quot;sub&quot;: &#123;&quot;value&quot;: &quot;248289761001&quot;&#125;</code>can be used to specify that the request apply to the End-User with Subject Identifier <code>248289761001</code>.The value of the <code>value</code> member MUST be a valid value for the Claim being requested. Definitions of individual Claims can include requirements on how and whether the <code>value</code> qualifier is to be used when requesting that Claim.valuesOPTIONAL. Requests that the Claim be returned with one of a set of values, with the values appearing in order of preference. For instance the Claim request:<code> &quot;acr&quot;: &#123;&quot;essential&quot;: true,          &quot;values&quot;: [&quot;urn:mace:incommon:iap:silver&quot;,                     &quot;urn:mace:incommon:iap:bronze&quot;]&#125;</code>specifies that it is Essential that the <code>acr</code> Claim be returned with either the value <code>urn:mace:incommon:iap:silver</code> or <code>urn:mace:incommon:iap:bronze</code>.The values in the <code>values</code> member array MUST be valid values for the Claim being requested. Definitions of individual Claims can include requirements on how and whether the <code>values</code> qualifier is to be used when requesting that Claim.Other members MAY be defined to provide additional information about the requested Claims. Any members used that are not understood MUST be ignored.</p>\n</li>\n</ul>\n</blockquote>\n<p>Note that when the <code>claims</code> request parameter is supported, the scope values that request Claims, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims\">Section 5.4</a>, are effectively shorthand methods for requesting sets of individual Claims. For example, using the scope value <code>openid email</code> and a <code>response_type</code> that returns an Access Token is equivalent to using the scope value <code>openid</code> and the following request for individual Claims.</p>\n<p>Equivalent of using the <code>email</code> scope value:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;userinfo&quot;:\n  &#123;\n   &quot;email&quot;: null,\n   &quot;email_verified&quot;: null\n  &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-5-1-1-Requesting-the-“acr”-Claim\"><a href=\"#5-5-1-1-Requesting-the-“acr”-Claim\" class=\"headerlink\" title=\"5.5.1.1. Requesting the “acr” Claim\"></a>5.5.1.1. Requesting the “acr” Claim</h3><p>If the <code>acr</code> Claim is requested as an Essential Claim for the ID Token with a <code>values</code> parameter requesting specific Authentication Context Class Reference values and the implementation supports the <code>claims</code> parameter, the Authorization Server MUST return an <code>acr</code> Claim Value that matches one of the requested values. The Authorization Server MAY ask the End-User to re-authenticate with additional factors to meet this requirement. If this is an Essential Claim and the requirement cannot be met, then the Authorization Server MUST treat that outcome as a failed authentication attempt.</p>\n<p>Note that the RP MAY request the <code>acr</code> Claim as a Voluntary Claim by using the <code>acr_values</code> request parameter or by not including “essential”: true in an individual <code>acr</code> Claim request. If the Claim is not Essential and a requested value cannot be provided, the Authorization Server SHOULD return the session’s current <code>acr</code> as the value of the <code>acr</code> Claim. If the Claim is not Essential, the Authorization Server is not required to provide this Claim in its response.</p>\n<p>If the client requests the <code>acr</code> Claim using both the <code>acr_values</code> request parameter and an individual <code>acr</code> Claim request for the ID Token listing specific requested values, the resulting behavior is unspecified.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-5-2-Languages-and-Scripts-for-Individual-Claims\"><a href=\"#5-5-2-Languages-and-Scripts-for-Individual-Claims\" class=\"headerlink\" title=\"5.5.2. Languages and Scripts for Individual Claims\"></a>5.5.2. Languages and Scripts for Individual Claims</h3><p>As described in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts\">Section 5.2</a>, human-readable Claim Values and Claim Values that reference human-readable values MAY be represented in multiple languages and scripts. Within a request for individual Claims, requested languages and scripts for particular Claims MAY be requested by including Claim Names that contain <code>#</code>-separated <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC5646\">BCP47</a> [RFC5646] language tags in the Claims request, using the Claim Name syntax specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts\">Section 5.2</a>. For example, a Family Name in Katakana in Japanese can be requested using the Claim Name <code>family_name#ja-Kana-JP</code> and a Kanji representation of the Family Name in Japanese can be requested using the Claim Name <code>family_name#ja-Hani-JP</code>. A German-language Web site can be requested with the Claim Name <code>website#de</code>.</p>\n<p>If an OP receives a request for human-readable Claims in a language and script that it doesn’t have, any versions of those Claims returned that don’t use the requested language and script SHOULD use a language tag in the Claim Name.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-6-Claim-Types\"><a href=\"#5-6-Claim-Types\" class=\"headerlink\" title=\"5.6. Claim Types\"></a>5.6. Claim Types</h3><p>Three representations of Claim Values are defined by this specification:</p>\n<blockquote>\n<ul>\n<li><p>Normal Claims</p>\n<p>Claims that are directly asserted by the OpenID Provider.</p>\n</li>\n<li><p>Aggregated Claims</p>\n<p>Claims that are asserted by a Claims Provider other than the OpenID Provider but are returned by OpenID Provider.</p>\n</li>\n<li><p>Distributed Claims</p>\n<p>Claims that are asserted by a Claims Provider other than the OpenID Provider but are returned as references by the OpenID Provider.</p>\n</li>\n</ul>\n</blockquote>\n<p>Normal Claims MUST be supported. Support for Aggregated Claims and Distributed Claims is OPTIONAL.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-6-1-Normal-Claims\"><a href=\"#5-6-1-Normal-Claims\" class=\"headerlink\" title=\"5.6.1. Normal Claims\"></a>5.6.1. Normal Claims</h3><p>Normal Claims are represented as members in a JSON object. The Claim Name is the member name and the Claim Value is the member value.</p>\n<p>The following is a non-normative response containing Normal Claims:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;name&quot;: &quot;Jane Doe&quot;,\n &quot;given_name&quot;: &quot;Jane&quot;,\n &quot;family_name&quot;: &quot;Doe&quot;,\n &quot;email&quot;: &quot;janedoe@example.com&quot;,\n &quot;picture&quot;: &quot;http:&#x2F;&#x2F;example.com&#x2F;janedoe&#x2F;me.jpg&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-6-2-Aggregated-and-Distributed-Claims\"><a href=\"#5-6-2-Aggregated-and-Distributed-Claims\" class=\"headerlink\" title=\"5.6.2. Aggregated and Distributed Claims\"></a>5.6.2. Aggregated and Distributed Claims</h3><p>Aggregated and distributed Claims are represented by using special <code>_claim_names</code> and <code>_claim_sources</code> members of the JSON object containing the Claims.</p>\n<blockquote>\n<ul>\n<li><p>_claim_names</p>\n<p>JSON object whose member names are the Claim Names for the Aggregated and Distributed Claims. The member values are references to the member names in the <code>_claim_sources</code> member from which the actual Claim Values can be retrieved.</p>\n</li>\n<li><p>_claim_sources</p>\n<p>JSON object whose member names are referenced by the member values of the <code>_claim_names</code> member. The member values contain sets of Aggregated Claims or reference locations for Distributed Claims. The member values can have one of the following formats depending on whether it is providing Aggregated or Distributed Claims:Aggregated ClaimsJSON object that MUST contain the <code>JWT</code> member whose value is a <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JWT</a> [JWT] that MUST contain all the Claims in the <code>_claim_names</code> object that references the corresponding <code>_claim_sources</code> member. Other members MAY be present. Any members used that are not understood MUST be ignored.JWTREQUIRED. JWT containing Claim Values.The JWT SHOULD NOT contain a <code>sub</code> (subject) Claim unless its value is an identifier for the End-User at the Claims Provider (and not for the OpenID Provider or another party); this typically means that a <code>sub</code> Claim SHOULD NOT be provided.Distributed ClaimsJSON object that contains the following members and values:endpointREQUIRED. OAuth 2.0 resource endpoint from which the associated Claim can be retrieved. The endpoint URL MUST return the Claim as a JWT.access_tokenOPTIONAL. Access Token enabling retrieval of the Claims from the endpoint URL by using the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6750\">OAuth 2.0 Bearer Token Usage</a> [RFC6750] protocol. Claims SHOULD be requested using the Authorization Request header field and Claims Providers MUST support this method. If the Access Token is not available, RPs MAY need to retrieve the Access Token out of band or use an Access Token that was pre-negotiated between the Claims Provider and RP, or the Claims Provider MAY reauthenticate the End-User and&#x2F;or reauthorize the RP.A <code>sub</code> (subject) Claim SHOULD NOT be returned from the Claims Provider unless its value is an identifier for the End-User at the Claims Provider (and not for the OpenID Provider or another party); this typically means that a <code>sub</code> Claim SHOULD NOT be provided.</p>\n</li>\n</ul>\n</blockquote>\n<p>In general, it is up to the OP when it is appropriate to use Aggregated Claims and Distributed Claims. In some cases, information about when to use what Claim Types might be negotiated out of band between RPs and OPs.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-6-2-1-Example-of-Aggregated-Claims\"><a href=\"#5-6-2-1-Example-of-Aggregated-Claims\" class=\"headerlink\" title=\"5.6.2.1. Example of Aggregated Claims\"></a>5.6.2.1. Example of Aggregated Claims</h3><p>In this non-normative example, Claims from Claims Provider A are combined with other Claims held by the OpenID provider, with the Claims from Claims Provider A being returned as Aggregated Claims.</p>\n<p>In this example, these Claims about Jane Doe have been issued by Claims Provider A:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;address&quot;: &#123;\n   &quot;street_address&quot;: &quot;1234 Hollywood Blvd.&quot;,\n   &quot;locality&quot;: &quot;Los Angeles&quot;,\n   &quot;region&quot;: &quot;CA&quot;,\n   &quot;postal_code&quot;: &quot;90210&quot;,\n   &quot;country&quot;: &quot;US&quot;&#125;,\n &quot;phone_number&quot;: &quot;+1 (310) 123-4567&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>Claims Provider A signs the JSON Claims, representing them in a signed JWT: jwt_header.jwt_part2.jwt_part3. It is this JWT that is used by the OpenID Provider.</p>\n<p>In this example, this JWT containing Jane Doe’s Aggregated Claims from Claims Provider A is combined with other Normal Claims, and returned as the following set of Claims:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;name&quot;: &quot;Jane Doe&quot;,\n &quot;given_name&quot;: &quot;Jane&quot;,\n &quot;family_name&quot;: &quot;Doe&quot;,\n &quot;birthdate&quot;: &quot;0000-03-22&quot;,\n &quot;eye_color&quot;: &quot;blue&quot;,\n &quot;email&quot;: &quot;janedoe@example.com&quot;,\n &quot;_claim_names&quot;: &#123;\n   &quot;address&quot;: &quot;src1&quot;,\n   &quot;phone_number&quot;: &quot;src1&quot;\n &#125;,\n &quot;_claim_sources&quot;: &#123;\n   &quot;src1&quot;: &#123;&quot;JWT&quot;: &quot;jwt_header.jwt_part2.jwt_part3&quot;&#125;\n &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-6-2-2-Example-of-Distributed-Claims\"><a href=\"#5-6-2-2-Example-of-Distributed-Claims\" class=\"headerlink\" title=\"5.6.2.2. Example of Distributed Claims\"></a>5.6.2.2. Example of Distributed Claims</h3><p>In this non-normative example, the OpenID Provider combines Normal Claims that it holds with references to Claims held by two different Claims Providers, B and C, incorporating references to some of the Claims held by B and C as Distributed Claims.</p>\n<p>In this example, these Claims about Jane Doe are held by Claims Provider B (Jane Doe’s bank):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;shipping_address&quot;: &#123;\n   &quot;street_address&quot;: &quot;1234 Hollywood Blvd.&quot;,\n   &quot;locality&quot;: &quot;Los Angeles&quot;,\n   &quot;region&quot;: &quot;CA&quot;,\n   &quot;postal_code&quot;: &quot;90210&quot;,\n   &quot;country&quot;: &quot;US&quot;&#125;,\n &quot;payment_info&quot;: &quot;Some_Card 1234 5678 9012 3456&quot;,\n &quot;phone_number&quot;: &quot;+1 (310) 123-4567&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>Also in this example, this Claim about Jane Doe is held by Claims Provider C (a credit agency):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;credit_score&quot;: 650\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>The OpenID Provider returns Jane Doe’s Claims along with references to the Distributed Claims from Claims Provider B and Claims Provider C by sending the Access Tokens and URLs of locations from which the Distributed Claims can be retrieved:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;name&quot;: &quot;Jane Doe&quot;,\n &quot;given_name&quot;: &quot;Jane&quot;,\n &quot;family_name&quot;: &quot;Doe&quot;,\n &quot;email&quot;: &quot;janedoe@example.com&quot;,\n &quot;birthdate&quot;: &quot;0000-03-22&quot;,\n &quot;eye_color&quot;: &quot;blue&quot;,\n &quot;_claim_names&quot;: &#123;\n   &quot;payment_info&quot;: &quot;src1&quot;,\n   &quot;shipping_address&quot;: &quot;src1&quot;,\n   &quot;credit_score&quot;: &quot;src2&quot;\n  &#125;,\n &quot;_claim_sources&quot;: &#123;\n   &quot;src1&quot;: &#123;&quot;endpoint&quot;:\n              &quot;https:&#x2F;&#x2F;bank.example.com&#x2F;claim_source&quot;&#125;,\n   &quot;src2&quot;: &#123;&quot;endpoint&quot;:\n              &quot;https:&#x2F;&#x2F;creditagency.example.com&#x2F;claims_here&quot;,\n            &quot;access_token&quot;: &quot;ksj3n283dke&quot;&#125;\n &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-7-Claim-Stability-and-Uniqueness\"><a href=\"#5-7-Claim-Stability-and-Uniqueness\" class=\"headerlink\" title=\"5.7. Claim Stability and Uniqueness\"></a>5.7. Claim Stability and Uniqueness</h3><p>The <code>sub</code> (subject) and <code>iss</code> (issuer) Claims, used together, are the only Claims that an RP can rely upon as a stable identifier for the End-User, since the <code>sub</code> Claim MUST be locally unique and never reassigned within the Issuer for a particular End-User, as described in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a>. Therefore, the only guaranteed unique identifier for a given End-User is the combination of the <code>iss</code> Claim and the <code>sub</code> Claim.</p>\n<p>All other Claims carry no such guarantees across different issuers in terms of stability over time or uniqueness across users, and Issuers are permitted to apply local restrictions and policies. For instance, an Issuer MAY re-use an <code>email</code> Claim Value across different End-Users at different points in time, and the claimed <code>email</code> address for a given End-User MAY change over time. Therefore, other Claims such as <code>email</code>, <code>phone_number</code>, and <code>preferred_username</code> and MUST NOT be used as unique identifiers for the End-User.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"6-Passing-Request-Parameters-as-JWTs\"><a href=\"#6-Passing-Request-Parameters-as-JWTs\" class=\"headerlink\" title=\"6. Passing Request Parameters as JWTs\"></a>6. Passing Request Parameters as JWTs</h3><p>OpenID Connect defines the following Authorization Request parameters to enable Authentication Requests to be signed and optionally encrypted:</p>\n<blockquote>\n<ul>\n<li><p>request</p>\n<p>OPTIONAL. This parameter enables OpenID Connect requests to be passed in a single, self-contained parameter and to be optionally signed and&#x2F;or encrypted. The parameter value is a Request Object value, as specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RequestObject\">Section 6.1</a>. It represents the request as a JWT whose Claims are the request parameters.</p>\n</li>\n<li><p>request_uri</p>\n<p>OPTIONAL. This parameter enables OpenID Connect requests to be passed by reference, rather than by value. The <code>request_uri</code> value is a URL using the <code>https</code> scheme referencing a resource containing a Request Object value, which is a JWT containing the request parameters.</p>\n</li>\n</ul>\n</blockquote>\n<p>Requests using these parameters are represented as JWTs, which are respectively passed by value or by reference. The ability to pass requests by reference is particularly useful for large requests. If one of these parameters is used, the other MUST NOT be used in the same request.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"6-1-Passing-a-Request-Object-by-Value\"><a href=\"#6-1-Passing-a-Request-Object-by-Value\" class=\"headerlink\" title=\"6.1. Passing a Request Object by Value\"></a>6.1. Passing a Request Object by Value</h3><p>The <code>request</code> Authorization Request parameter enables OpenID Connect requests to be passed in a single, self-contained parameter and to be optionally signed and&#x2F;or encrypted. It represents the request as a JWT whose Claims are the request parameters specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a>. This JWT is called a Request Object.</p>\n<p>Support for the <code>request</code> parameter is OPTIONAL. The <code>request_parameter_supported</code> Discovery result indicates whether the OP supports this parameter. Should an OP not support this parameter and an RP uses it, the OP MUST return the <code>request_not_supported</code> error.</p>\n<p>When the <code>request</code> parameter is used, the OpenID Connect request parameter values contained in the JWT supersede those passed using the OAuth 2.0 request syntax. However, parameters MAY also be passed using the OAuth 2.0 request syntax even when a Request Object is used; this would typically be done to enable a cached, pre-signed (and possibly pre-encrypted) Request Object value to be used containing the fixed request parameters, while parameters that can vary with each request, such as <code>state</code> and <code>nonce</code>, are passed as OAuth 2.0 parameters.</p>\n<p>So that the request is a valid OAuth 2.0 Authorization Request, values for the <code>response_type</code> and <code>client_id</code> parameters MUST be included using the OAuth 2.0 request syntax, since they are REQUIRED by OAuth 2.0. The values for these parameters MUST match those in the Request Object, if present.</p>\n<p>Even if a <code>scope</code> parameter is present in the Request Object value, a <code>scope</code> parameter MUST always be passed using the OAuth 2.0 request syntax containing the <code>openid</code> scope value to indicate to the underlying OAuth 2.0 logic that this is an OpenID Connect request.</p>\n<p>The Request Object MAY be signed or unsigned (plaintext). When it is plaintext, this is indicated by use of the <code>none</code> algorithm [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWA\">JWA]</a> in the JOSE Header. If signed, the Request Object SHOULD contain the Claims <code>iss</code> (issuer) and <code>aud</code> (audience) as members. The <code>iss</code> value SHOULD be the Client ID of the RP, unless it was signed by a different party than the RP. The <code>aud</code> value SHOULD be or include the OP’s Issuer Identifier URL.</p>\n<p>The Request Object MAY also be encrypted using <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWE\">JWE</a> [JWE] and MAY be encrypted without also being signed. If both signing and encryption are performed, it MUST be signed then encrypted, with the result being a Nested JWT, as defined in [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JWT]</a>.</p>\n<p><code>request</code> and <code>request_uri</code> parameters MUST NOT be included in Request Objects.</p>\n<p>The following is a non-normative example of the Claims in a Request Object before base64url encoding and signing:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;iss&quot;: &quot;s6BhdRkqt3&quot;,\n &quot;aud&quot;: &quot;https:&#x2F;&#x2F;server.example.com&quot;,\n &quot;response_type&quot;: &quot;code id_token&quot;,\n &quot;client_id&quot;: &quot;s6BhdRkqt3&quot;,\n &quot;redirect_uri&quot;: &quot;https:&#x2F;&#x2F;client.example.org&#x2F;cb&quot;,\n &quot;scope&quot;: &quot;openid&quot;,\n &quot;state&quot;: &quot;af0ifjsldkj&quot;,\n &quot;nonce&quot;: &quot;n-0S6_WzA2Mj&quot;,\n &quot;max_age&quot;: 86400,\n &quot;claims&quot;:\n  &#123;\n   &quot;userinfo&quot;:\n    &#123;\n     &quot;given_name&quot;: &#123;&quot;essential&quot;: true&#125;,\n     &quot;nickname&quot;: null,\n     &quot;email&quot;: &#123;&quot;essential&quot;: true&#125;,\n     &quot;email_verified&quot;: &#123;&quot;essential&quot;: true&#125;,\n     &quot;picture&quot;: null\n    &#125;,\n   &quot;id_token&quot;:\n    &#123;\n     &quot;gender&quot;: null,\n     &quot;birthdate&quot;: &#123;&quot;essential&quot;: true&#125;,\n     &quot;acr&quot;: &#123;&quot;values&quot;: [&quot;urn:mace:incommon:iap:silver&quot;]&#125;\n    &#125;\n  &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>Signing it with the <code>RS256</code> algorithm results in this Request Object value (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">eyJhbGciOiJSUzI1NiIsImtpZCI6ImsyYmRjIn0.ew0KICJpc3MiOiAiczZCaGRSa3\nF0MyIsDQogImF1ZCI6ICJodHRwczovL3NlcnZlci5leGFtcGxlLmNvbSIsDQogInJl\nc3BvbnNlX3R5cGUiOiAiY29kZSBpZF90b2tlbiIsDQogImNsaWVudF9pZCI6ICJzNk\nJoZFJrcXQzIiwNCiAicmVkaXJlY3RfdXJpIjogImh0dHBzOi8vY2xpZW50LmV4YW1w\nbGUub3JnL2NiIiwNCiAic2NvcGUiOiAib3BlbmlkIiwNCiAic3RhdGUiOiAiYWYwaW\nZqc2xka2oiLA0KICJub25jZSI6ICJuLTBTNl9XekEyTWoiLA0KICJtYXhfYWdlIjog\nODY0MDAsDQogImNsYWltcyI6IA0KICB7DQogICAidXNlcmluZm8iOiANCiAgICB7DQ\nogICAgICJnaXZlbl9uYW1lIjogeyJlc3NlbnRpYWwiOiB0cnVlfSwNCiAgICAgIm5p\nY2tuYW1lIjogbnVsbCwNCiAgICAgImVtYWlsIjogeyJlc3NlbnRpYWwiOiB0cnVlfS\nwNCiAgICAgImVtYWlsX3ZlcmlmaWVkIjogeyJlc3NlbnRpYWwiOiB0cnVlfSwNCiAg\nICAgInBpY3R1cmUiOiBudWxsDQogICAgfSwNCiAgICJpZF90b2tlbiI6IA0KICAgIH\nsNCiAgICAgImdlbmRlciI6IG51bGwsDQogICAgICJiaXJ0aGRhdGUiOiB7ImVzc2Vu\ndGlhbCI6IHRydWV9LA0KICAgICAiYWNyIjogeyJ2YWx1ZXMiOiBbInVybjptYWNlOm\nluY29tbW9uOmlhcDpzaWx2ZXIiXX0NCiAgICB9DQogIH0NCn0.nwwnNsk1-Zkbmnvs\nF6zTHm8CHERFMGQPhos-EJcaH4Hh-sMgk8ePrGhw_trPYs8KQxsn6R9Emo_wHwajyF\nKzuMXZFSZ3p6Mb8dkxtVyjoy2GIzvuJT_u7PkY2t8QU9hjBcHs68PkgjDVTrG1uRTx\n0GxFbuPbj96tVuj11pTnmFCUR6IEOXKYr7iGOCRB3btfJhM0_AKQUfqKnRlrRscc8K\nol-cSLWoYE9l5QqholImzjT_cMnNIznW9E7CDyWXTsO70xnB4SkG6pXfLSjLLlxmPG\niyon_-Te111V8uE83IlzCYIb_NMXvtTIVc1jpspnTSD7xMbpL-2QgwUsAlMGzw<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>The following RSA public key, represented in JWK format, can be used to validate the Request Object signature in this and subsequent Request Object examples (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;kty&quot;:&quot;RSA&quot;,\n &quot;kid&quot;:&quot;k2bdc&quot;,\n &quot;n&quot;:&quot;y9Lqv4fCp6Ei-u2-ZCKq83YvbFEk6JMs_pSj76eMkddWRuWX2aBKGHAtKlE5P\n      7_vn__PCKZWePt3vGkB6ePgzAFu08NmKemwE5bQI0e6kIChtt_6KzT5OaaXDF\n      I6qCLJmk51Cc4VYFaxgqevMncYrzaW_50mZ1yGSFIQzLYP8bijAHGVjdEFgZa\n      ZEN9lsn_GdWLaJpHrB3ROlS50E45wxrlg9xMncVb8qDPuXZarvghLL0HzOuYR\n      adBJVoWZowDNTpKpk2RklZ7QaBO7XDv3uR7s_sf2g-bAjSYxYUGsqkNA9b3xV\n      W53am_UZZ3tZbFTIh557JICWKHlWj5uzeJXaw&quot;,\n &quot;e&quot;:&quot;AQAB&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"6-1-1-Request-using-the-“request”-Request-Parameter\"><a href=\"#6-1-1-Request-using-the-“request”-Request-Parameter\" class=\"headerlink\" title=\"6.1.1. Request using the “request” Request Parameter\"></a>6.1.1. Request using the “request” Request Parameter</h3><p>The Client sends the Authorization Request to the Authorization Endpoint.</p>\n<p>The following is a non-normative example of an Authorization Request using the <code>request</code> parameter (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">https:&#x2F;&#x2F;server.example.com&#x2F;authorize?\n  response_type&#x3D;code%20id_token\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb\n  &amp;scope&#x3D;openid\n  &amp;state&#x3D;af0ifjsldkj\n  &amp;nonce&#x3D;n-0S6_WzA2Mj\n  &amp;request&#x3D;eyJhbGciOiJSUzI1NiIsImtpZCI6ImsyYmRjIn0.ew0KICJpc3MiOiA\n  iczZCaGRSa3F0MyIsDQogImF1ZCI6ICJodHRwczovL3NlcnZlci5leGFtcGxlLmN\n  vbSIsDQogInJlc3BvbnNlX3R5cGUiOiAiY29kZSBpZF90b2tlbiIsDQogImNsaWV\n  udF9pZCI6ICJzNkJoZFJrcXQzIiwNCiAicmVkaXJlY3RfdXJpIjogImh0dHBzOi8\n  vY2xpZW50LmV4YW1wbGUub3JnL2NiIiwNCiAic2NvcGUiOiAib3BlbmlkIiwNCiA\n  ic3RhdGUiOiAiYWYwaWZqc2xka2oiLA0KICJub25jZSI6ICJuLTBTNl9XekEyTWo\n  iLA0KICJtYXhfYWdlIjogODY0MDAsDQogImNsYWltcyI6IA0KICB7DQogICAidXN\n  lcmluZm8iOiANCiAgICB7DQogICAgICJnaXZlbl9uYW1lIjogeyJlc3NlbnRpYWw\n  iOiB0cnVlfSwNCiAgICAgIm5pY2tuYW1lIjogbnVsbCwNCiAgICAgImVtYWlsIjo\n  geyJlc3NlbnRpYWwiOiB0cnVlfSwNCiAgICAgImVtYWlsX3ZlcmlmaWVkIjogeyJ\n  lc3NlbnRpYWwiOiB0cnVlfSwNCiAgICAgInBpY3R1cmUiOiBudWxsDQogICAgfSw\n  NCiAgICJpZF90b2tlbiI6IA0KICAgIHsNCiAgICAgImdlbmRlciI6IG51bGwsDQo\n  gICAgICJiaXJ0aGRhdGUiOiB7ImVzc2VudGlhbCI6IHRydWV9LA0KICAgICAiYWN\n  yIjogeyJ2YWx1ZXMiOiBbInVybjptYWNlOmluY29tbW9uOmlhcDpzaWx2ZXIiXX0\n  NCiAgICB9DQogIH0NCn0.nwwnNsk1-ZkbmnvsF6zTHm8CHERFMGQPhos-EJcaH4H\n  h-sMgk8ePrGhw_trPYs8KQxsn6R9Emo_wHwajyFKzuMXZFSZ3p6Mb8dkxtVyjoy2\n  GIzvuJT_u7PkY2t8QU9hjBcHs68PkgjDVTrG1uRTx0GxFbuPbj96tVuj11pTnmFC\n  UR6IEOXKYr7iGOCRB3btfJhM0_AKQUfqKnRlrRscc8Kol-cSLWoYE9l5QqholImz\n  jT_cMnNIznW9E7CDyWXTsO70xnB4SkG6pXfLSjLLlxmPGiyon_-Te111V8uE83Il\n  zCYIb_NMXvtTIVc1jpspnTSD7xMbpL-2QgwUsAlMGzw<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"6-2-Passing-a-Request-Object-by-Reference\"><a href=\"#6-2-Passing-a-Request-Object-by-Reference\" class=\"headerlink\" title=\"6.2. Passing a Request Object by Reference\"></a>6.2. Passing a Request Object by Reference</h3><p>The <code>request_uri</code> Authorization Request parameter enables OpenID Connect requests to be passed by reference, rather than by value. This parameter is used identically to the <code>request</code> parameter, other than that the Request Object value is retrieved from the resource at the specified URL, rather than passed by value.</p>\n<p>The <code>request_uri_parameter_supported</code> Discovery result indicates whether the OP supports this parameter. Should an OP not support this parameter and an RP uses it, the OP MUST return the <code>request_uri_not_supported</code> error.</p>\n<p>When the <code>request_uri</code> parameter is used, the OpenID Connect request parameter values contained in the referenced JWT supersede those passed using the OAuth 2.0 request syntax. However, parameters MAY also be passed using the OAuth 2.0 request syntax even when a <code>request_uri</code> is used; this would typically be done to enable a cached, pre-signed (and possibly pre-encrypted) Request Object value to be used containing the fixed request parameters, while parameters that can vary with each request, such as <code>state</code> and <code>nonce</code>, are passed as OAuth 2.0 parameters.</p>\n<p>So that the request is a valid OAuth 2.0 Authorization Request, values for the <code>response_type</code> and <code>client_id</code> parameters MUST be included using the OAuth 2.0 request syntax, since they are REQUIRED by OAuth 2.0. The values for these parameters MUST match those in the Request Object, if present.</p>\n<p>Even if a <code>scope</code> parameter is present in the referenced Request Object, a <code>scope</code> parameter MUST always be passed using the OAuth 2.0 request syntax containing the <code>openid</code> scope value to indicate to the underlying OAuth 2.0 logic that this is an OpenID Connect request.</p>\n<p>Servers MAY cache the contents of the resources referenced by Request URIs. If the contents of the referenced resource could ever change, the URI SHOULD include the base64url encoded SHA-256 hash of the referenced resource contents as the fragment component of the URI. If the fragment value used for a URI changes, that signals the server that any cached value for that URI with the old fragment value is no longer valid.</p>\n<p>Note that Clients MAY pre-register <code>request_uri</code> values using the <code>request_uris</code> parameter defined in Section 2.1 of the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration\">OpenID Connect Dynamic Client Registration 1.0</a> [OpenID.Registration] specification. OPs can require that <code>request_uri</code> values used be pre-registered with the <code>require_request_uri_registration</code> discovery parameter.</p>\n<p>The entire Request URI MUST NOT exceed 512 ASCII characters.</p>\n<p>The contents of the resource referenced by the URL MUST be a Request Object. The scheme used in the <code>request_uri</code> value MUST be <code>https</code>, unless the target Request Object is signed in a way that is verifiable by the Authorization Server. The <code>request_uri</code> value MUST be reachable by the Authorization Server, and SHOULD be reachable by the Client.</p>\n<p>The following is a non-normative example of the contents of a Request Object resource that can be referenced by a <code>request_uri</code> (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">eyJhbGciOiJSUzI1NiIsImtpZCI6ImsyYmRjIn0.ew0KICJpc3MiOiAiczZCaGRSa3\nF0MyIsDQogImF1ZCI6ICJodHRwczovL3NlcnZlci5leGFtcGxlLmNvbSIsDQogInJl\nc3BvbnNlX3R5cGUiOiAiY29kZSBpZF90b2tlbiIsDQogImNsaWVudF9pZCI6ICJzNk\nJoZFJrcXQzIiwNCiAicmVkaXJlY3RfdXJpIjogImh0dHBzOi8vY2xpZW50LmV4YW1w\nbGUub3JnL2NiIiwNCiAic2NvcGUiOiAib3BlbmlkIiwNCiAic3RhdGUiOiAiYWYwaW\nZqc2xka2oiLA0KICJub25jZSI6ICJuLTBTNl9XekEyTWoiLA0KICJtYXhfYWdlIjog\nODY0MDAsDQogImNsYWltcyI6IA0KICB7DQogICAidXNlcmluZm8iOiANCiAgICB7DQ\nogICAgICJnaXZlbl9uYW1lIjogeyJlc3NlbnRpYWwiOiB0cnVlfSwNCiAgICAgIm5p\nY2tuYW1lIjogbnVsbCwNCiAgICAgImVtYWlsIjogeyJlc3NlbnRpYWwiOiB0cnVlfS\nwNCiAgICAgImVtYWlsX3ZlcmlmaWVkIjogeyJlc3NlbnRpYWwiOiB0cnVlfSwNCiAg\nICAgInBpY3R1cmUiOiBudWxsDQogICAgfSwNCiAgICJpZF90b2tlbiI6IA0KICAgIH\nsNCiAgICAgImdlbmRlciI6IG51bGwsDQogICAgICJiaXJ0aGRhdGUiOiB7ImVzc2Vu\ndGlhbCI6IHRydWV9LA0KICAgICAiYWNyIjogeyJ2YWx1ZXMiOiBbInVybjptYWNlOm\nluY29tbW9uOmlhcDpzaWx2ZXIiXX0NCiAgICB9DQogIH0NCn0.nwwnNsk1-Zkbmnvs\nF6zTHm8CHERFMGQPhos-EJcaH4Hh-sMgk8ePrGhw_trPYs8KQxsn6R9Emo_wHwajyF\nKzuMXZFSZ3p6Mb8dkxtVyjoy2GIzvuJT_u7PkY2t8QU9hjBcHs68PkgjDVTrG1uRTx\n0GxFbuPbj96tVuj11pTnmFCUR6IEOXKYr7iGOCRB3btfJhM0_AKQUfqKnRlrRscc8K\nol-cSLWoYE9l5QqholImzjT_cMnNIznW9E7CDyWXTsO70xnB4SkG6pXfLSjLLlxmPG\niyon_-Te111V8uE83IlzCYIb_NMXvtTIVc1jpspnTSD7xMbpL-2QgwUsAlMGzw<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"6-2-1-URL-Referencing-the-Request-Object\"><a href=\"#6-2-1-URL-Referencing-the-Request-Object\" class=\"headerlink\" title=\"6.2.1. URL Referencing the Request Object\"></a>6.2.1. URL Referencing the Request Object</h3><p>The Client stores the Request Object resource either locally or remotely at a URL the Server can access. This URL is the Request URI, <code>request_uri</code>.</p>\n<p>If the Request Object includes requested values for Claims, it MUST NOT be revealed to anybody but the Authorization Server. As such, the <code>request_uri</code> MUST have appropriate entropy for its lifetime. It is RECOMMENDED that it be removed if it is known that it will not be used again or after a reasonable timeout unless access control measures are taken.</p>\n<p>The following is a non-normative example of a Request URI value (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">https:&#x2F;&#x2F;client.example.org&#x2F;request.jwt#\n  GkurKxf5T0Y-mnPFCHqWOMiZi4VS138cQO_V7PZHAdM<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"6-2-2-Request-using-the-“request-uri”-Request-Parameter\"><a href=\"#6-2-2-Request-using-the-“request-uri”-Request-Parameter\" class=\"headerlink\" title=\"6.2.2. Request using the “request_uri” Request Parameter\"></a>6.2.2. Request using the “request_uri” Request Parameter</h3><p>The Client sends the Authorization Request to the Authorization Endpoint.</p>\n<p>The following is a non-normative example of an Authorization Request using the <code>request_uri</code> parameter (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">https:&#x2F;&#x2F;server.example.com&#x2F;authorize?\n  response_type&#x3D;code%20id_token\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;request_uri&#x3D;https%3A%2F%2Fclient.example.org%2Frequest.jwt\n  %23GkurKxf5T0Y-mnPFCHqWOMiZi4VS138cQO_V7PZHAdM\n  &amp;state&#x3D;af0ifjsldkj&amp;nonce&#x3D;n-0S6_WzA2Mj\n  &amp;scope&#x3D;openid<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"6-2-3-Authorization-Server-Fetches-Request-Object\"><a href=\"#6-2-3-Authorization-Server-Fetches-Request-Object\" class=\"headerlink\" title=\"6.2.3. Authorization Server Fetches Request Object\"></a>6.2.3. Authorization Server Fetches Request Object</h3><p>Upon receipt of the Request, the Authorization Server MUST send an HTTP <code>GET</code> request to the <code>request_uri</code> to retrieve the referenced Request Object, unless it is already cached, and parse it to recreate the Authorization Request parameters.</p>\n<p>Note that the RP SHOULD use a unique URI for each request utilizing distinct parameters, or otherwise prevent the Authorization Server from caching the <code>request_uri</code>.</p>\n<p>The following is a non-normative example of this fetch process:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;request.jwt HTTP&#x2F;1.1\nHost: client.example.org<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"6-2-4-“request-uri”-Rationale\"><a href=\"#6-2-4-“request-uri”-Rationale\" class=\"headerlink\" title=\"6.2.4. “request_uri” Rationale\"></a>6.2.4. “request_uri” Rationale</h3><p>There are several reasons that one might choose to use the <code>request_uri</code> parameter:</p>\n<ol>\n<li>The set of request parameters can become large, and can exceed browser URI size limitations. Passing the request parameters by reference can solve this problem.</li>\n<li>Passing a <code>request_uri</code> value, rather than a complete request by value, can reduce request latency.</li>\n<li>Most requests for Claims from an RP are constant. The <code>request_uri</code> is a way of creating and sometimes also signing and encrypting a constant set of request parameters in advance. (The <code>request_uri</code> value becomes an “artifact” representing a particular fixed set of request parameters.)</li>\n<li>Pre-registering a fixed set of request parameters at Registration time enables OPs to cache and pre-validate the request parameters at Registration time, meaning they need not be retrieved at request time.</li>\n<li>Pre-registering a fixed set of request parameters at Registration time enables OPs to vet the contents of the request from consumer protection and other points of views, either itself or by utilizing a third party.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"6-3-Validating-JWT-Based-Requests\"><a href=\"#6-3-Validating-JWT-Based-Requests\" class=\"headerlink\" title=\"6.3. Validating JWT-Based Requests\"></a>6.3. Validating JWT-Based Requests</h3><p>When the <code>request</code> or <code>request_uri</code> Authorization Request parameters are used, additional steps must be performed to validate the Authentication Request beyond those specified in Sections <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthRequestValidation\">3.1.2.2</a>, <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ImplicitValidation\">3.2.2.2</a>, or <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#HybridValidation\">3.3.2.2</a>. These steps are to validate the JWT containing the Request Object and to validate the Request Object itself.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"6-3-1-Encrypted-Request-Object\"><a href=\"#6-3-1-Encrypted-Request-Object\" class=\"headerlink\" title=\"6.3.1. Encrypted Request Object\"></a>6.3.1. Encrypted Request Object</h3><p>If the Authorization Server has advertised JWE encryption algorithms in the <code>request_object_encryption_alg_values_supported</code> and <code>request_object_encryption_enc_values_supported</code> elements of its Discovery document [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Discovery\">OpenID.Discovery]</a>, or has supplied encryption algorithms by other means, these are used by the Client to encrypt the JWT.</p>\n<p>The Authorization Server MUST decrypt the JWT in accordance with the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWE\">JSON Web Encryption</a> [JWE] specification. The result MAY be either a signed or unsigned (plaintext) Request Object. In the former case, signature validation MUST be performed as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#SignedRequestObject\">Section 6.3.2</a>.</p>\n<p>The Authorization Server MUST return an error if decryption fails.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"6-3-2-Signed-Request-Object\"><a href=\"#6-3-2-Signed-Request-Object\" class=\"headerlink\" title=\"6.3.2. Signed Request Object\"></a>6.3.2. Signed Request Object</h3><p>To perform Signature Validation, the <code>alg</code> Header Parameter in the JOSE Header MUST match the value of the <code>request_object_signing_alg</code> set during Client Registration [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration\">OpenID.Registration]</a> or a value that was pre-registered by other means. The signature MUST be validated against the appropriate key for that <code>client_id</code> and algorithm.</p>\n<p>The Authorization Server MUST return an error if signature validation fails.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"6-3-3-Request-Parameter-Assembly-and-Validation\"><a href=\"#6-3-3-Request-Parameter-Assembly-and-Validation\" class=\"headerlink\" title=\"6.3.3. Request Parameter Assembly and Validation\"></a>6.3.3. Request Parameter Assembly and Validation</h3><p>The Authorization Server MUST assemble the set of Authorization Request parameters to be used from the Request Object value and the OAuth 2.0 Authorization Request parameters (minus the <code>request</code> or <code>request_uri</code> parameters). If the same parameter exists both in the Request Object and the OAuth Authorization Request parameters, the parameter in the Request Object is used. Using the assembled set of Authorization Request parameters, the Authorization Server then validates the request the normal manner for the flow being used, as specified in Sections <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthRequestValidation\">3.1.2.2</a>, <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ImplicitValidation\">3.2.2.2</a>, or <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#HybridValidation\">3.3.2.2</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"7-Self-Issued-OpenID-Provider\"><a href=\"#7-Self-Issued-OpenID-Provider\" class=\"headerlink\" title=\"7. Self-Issued OpenID Provider\"></a>7. Self-Issued OpenID Provider</h3><p>OpenID Connect supports Self-Issued OpenID Providers - personal, self-hosted OPs that issue self-signed ID Tokens. Self-Issued OPs use the special Issuer Identifier <code>https://self-issued.me</code>.</p>\n<p>The messages used to communicate with Self-Issued OPs are mostly the same as those used to communicate with other OPs. Specifications for the few additional parameters used and for the values of some parameters in the Self-Issued case are defined in this section.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"7-1-Self-Issued-OpenID-Provider-Discovery\"><a href=\"#7-1-Self-Issued-OpenID-Provider-Discovery\" class=\"headerlink\" title=\"7.1. Self-Issued OpenID Provider Discovery\"></a>7.1. Self-Issued OpenID Provider Discovery</h3><p>If the input identifier for the discovery process contains the domain self-issued.me, dynamic discovery is not performed. Instead, then the following static configuration values are used:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;authorization_endpoint&quot;:\n   &quot;openid:&quot;,\n &quot;issuer&quot;:\n   &quot;https:&#x2F;&#x2F;self-issued.me&quot;,\n &quot;scopes_supported&quot;:\n   [&quot;openid&quot;, &quot;profile&quot;, &quot;email&quot;, &quot;address&quot;, &quot;phone&quot;],\n &quot;response_types_supported&quot;:\n   [&quot;id_token&quot;],\n &quot;subject_types_supported&quot;:\n   [&quot;pairwise&quot;],\n &quot;id_token_signing_alg_values_supported&quot;:\n   [&quot;RS256&quot;],\n &quot;request_object_signing_alg_values_supported&quot;:\n   [&quot;none&quot;, &quot;RS256&quot;]\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>NOTE: The OpenID Foundation plans to host the OpenID Provider site <code>https://self-issued.me/</code>, including its WebFinger service, so that performing discovery on it returns the above static discovery information, enabling RPs to not need any special processing for discovery of the Self-Issued OP. This site will be hosted on an experimental basis. Production implementations should not take a dependency upon it without a subsequent commitment by the OpenID Foundation to host the site in a manner intended for production use.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"7-2-Self-Issued-OpenID-Provider-Registration\"><a href=\"#7-2-Self-Issued-OpenID-Provider-Registration\" class=\"headerlink\" title=\"7.2. Self-Issued OpenID Provider Registration\"></a>7.2. Self-Issued OpenID Provider Registration</h3><p>When using a Self-Issued OP, registration is not required. The Client can proceed without registration as if it had registered with the OP and obtained the following Client Registration Response:</p>\n<blockquote>\n<ul>\n<li><p>client_id</p>\n<p><code>redirect_uri</code> value of the Client.</p>\n</li>\n<li><p>client_secret_expires_at</p>\n<p>0</p>\n</li>\n</ul>\n</blockquote>\n<p>NOTE: The OpenID Foundation plans to host the (stateless) endpoint <code>https://self-issued.me/registration/1.0/</code> that returns the response above, enabling RPs to not need any special processing for registration with the Self-Issued OP. This site will be hosted on an experimental basis. Production implementations should not take a dependency upon it without a subsequent commitment by the OpenID Foundation to host the site in a manner intended for production use.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"7-2-1-Providing-Information-with-the-“registration”-Request-Parameter\"><a href=\"#7-2-1-Providing-Information-with-the-“registration”-Request-Parameter\" class=\"headerlink\" title=\"7.2.1. Providing Information with the “registration” Request Parameter\"></a>7.2.1. Providing Information with the “registration” Request Parameter</h3><p>OpenID Connect defines the following Authorization Request parameter to enable Clients to provide additional registration information to Self-Issued OpenID Providers:</p>\n<blockquote>\n<ul>\n<li><p>registration</p>\n<p>OPTIONAL. This parameter is used by the Client to provide information about itself to a Self-Issued OP that would normally be provided to an OP during Dynamic Client Registration. The value is a JSON object containing Client metadata values, as defined in Section 2.1 of the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration\">OpenID Connect Dynamic Client Registration 1.0</a> [OpenID.Registration] specification. The <code>registration</code> parameter SHOULD NOT be used when the OP is not a Self-Issued OP.</p>\n</li>\n</ul>\n</blockquote>\n<p>None of this information is REQUIRED by Self-Issued OPs, so the use of this parameter is OPTIONAL.</p>\n<p>The <code>registration</code> parameter value is represented in an OAuth 2.0 request as a UTF-8 encoded JSON object (which ends up being form-urlencoded when passed as an OAuth parameter). When used in a Request Object value, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RequestObject\">Section 6.1</a>, the JSON object is used as the value of the <code>registration</code> member.</p>\n<p>The Registration parameters that would typically be used in requests to Self-Issued OPs are <code>policy_uri</code>, <code>tos_uri</code>, and <code>logo_uri</code>. If the Client uses more than one Redirection URI, the <code>redirect_uris</code> parameter would be used to register them. Finally, if the Client is requesting encrypted responses, it would typically use the <code>jwks_uri</code>, <code>id_token_encrypted_response_alg</code> and <code>id_token_encrypted_response_enc</code> parameters.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"7-3-Self-Issued-OpenID-Provider-Request\"><a href=\"#7-3-Self-Issued-OpenID-Provider-Request\" class=\"headerlink\" title=\"7.3. Self-Issued OpenID Provider Request\"></a>7.3. Self-Issued OpenID Provider Request</h3><p>The Client sends the Authentication Request to the Authorization Endpoint with the following parameters:</p>\n<blockquote>\n<ul>\n<li><p>scope</p>\n<p>REQUIRED. <code>scope</code> parameter value, as specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a>.</p>\n</li>\n<li><p>response_type</p>\n<p>REQUIRED. Constant string value <code>id_token</code>.</p>\n</li>\n<li><p>client_id</p>\n<p>REQUIRED. Client ID value for the Client, which in this case contains the <code>redirect_uri</code> value of the Client. Since the Client’s <code>redirect_uri</code> URI value is communicated as the Client ID, a <code>redirect_uri</code> parameter is NOT REQUIRED to also be included in the request.</p>\n</li>\n<li><p>id_token_hint</p>\n<p>OPTIONAL. <code>id_token_hint</code> parameter value, as specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a>. If the ID Token is encrypted to the Self-Issued OP, the <code>sub</code> (subject) of the signed ID Token MUST be sent as the <code>kid</code> (Key ID) of the JWE. Encrypting content to Self-Issued OPs is currently only supported when the OP’s JWK key type is <code>RSA</code> and the encryption algorithm used is <code>RSA1_5</code>.</p>\n</li>\n<li><p>claims</p>\n<p>OPTIONAL. <code>claims</code> parameter value, as specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter\">Section 5.5</a>.</p>\n</li>\n<li><p>registration</p>\n<p>OPTIONAL. This parameter is used by the Client to provide information about itself to a Self-Issued OP that would normally be provided to an OP during Dynamic Client Registration, as specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RegistrationParameter\">Section 7.2.1</a>.</p>\n</li>\n<li><p>request</p>\n<p>OPTIONAL. Request Object value, as specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RequestObject\">Section 6.1</a>. The Request Object MAY be encrypted to the Self-Issued OP by the Client. In this case, the <code>sub</code> (subject) of a previously issued ID Token for this Client MUST be sent as the <code>kid</code> (Key ID) of the JWE. Encrypting content to Self-Issued OPs is currently only supported when the OP’s JWK key type is <code>RSA</code> and the encryption algorithm used is <code>RSA1_5</code>.</p>\n</li>\n</ul>\n</blockquote>\n<p>Other parameters MAY be sent. Note that all Claims are returned in the ID Token.</p>\n<p>The entire URL MUST NOT exceed 2048 ASCII characters.</p>\n<p>The following is a non-normative example HTTP 302 redirect response by the Client, which triggers the User Agent to make an Authentication Request to the Self-Issued OpenID Provider (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">HTTP&#x2F;1.1 302 Found\nLocation: openid:&#x2F;&#x2F;?\n  response_type&#x3D;id_token\n  &amp;client_id&#x3D;https%3A%2F%2Fclient.example.org%2Fcb\n  &amp;scope&#x3D;openid%20profile\n  &amp;state&#x3D;af0ifjsldkj\n  &amp;nonce&#x3D;n-0S6_WzA2Mj\n  &amp;registration&#x3D;%7B%22logo_uri%22%3A%22https%3A%2F%2F\n    client.example.org%2Flogo.png%22%7D<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"7-4-Self-Issued-OpenID-Provider-Response\"><a href=\"#7-4-Self-Issued-OpenID-Provider-Response\" class=\"headerlink\" title=\"7.4. Self-Issued OpenID Provider Response\"></a>7.4. Self-Issued OpenID Provider Response</h3><p>OpenID Connect defines the following Claim for use in Self-Issued OpenID Provider Responses:</p>\n<blockquote>\n<ul>\n<li><p>sub_jwk</p>\n<p>REQUIRED. Public key used to check the signature of an ID Token issued by a Self-Issued OpenID Provider, as specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#SelfIssued\">Section 7</a>. The key is a bare key in JWK [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWK\">JWK]</a> format (not an X.509 certificate value). The <code>sub_jwk</code> value is a JSON object. Use of the <code>sub_jwk</code> Claim is NOT RECOMMENDED when the OP is not Self-Issued.</p>\n</li>\n</ul>\n</blockquote>\n<p>The Self-Issued OpenID Provider response is the same as the normal Implicit Flow response with the following refinements. Since it is an Implicit Flow response, the response parameters will be returned in the URL fragment component, unless a different Response Mode was specified.</p>\n<ol>\n<li>The <code>iss</code> (issuer) Claim Value is <code>https://self-issued.me</code>.</li>\n<li>A <code>sub_jwk</code> Claim is present, with its value being the public key used to check the signature of the ID Token.</li>\n<li>The <code>sub</code> (subject) Claim value is the base64url encoded representation of the thumbprint of the key in the <code>sub_jwk</code> Claim. This thumbprint value is computed as the SHA-256 hash of the octets of the UTF-8 representation of a JWK constructed containing only the REQUIRED members to represent the key, with the member names sorted into lexicographic order, and with no white space or line breaks. For instance, when the <code>kty</code> value is <code>RSA</code>, the member names <code>e</code>, <code>kty</code>, and <code>n</code> are the ones present in the constructed JWK used in the thumbprint computation and appear in that order; when the <code>kty</code> value is <code>EC</code>, the member names <code>crv</code>, <code>kty</code>, <code>x</code>, and <code>y</code> are present in that order. Note that this thumbprint calculation is the same as that defined in the JWK Thumbprint [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWK.Thumbprint\">JWK.Thumbprint]</a> specification.</li>\n<li>No Access Token is returned for accessing a UserInfo Endpoint, so all Claims returned MUST be in the ID Token.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"7-5-Self-Issued-ID-Token-Validation\"><a href=\"#7-5-Self-Issued-ID-Token-Validation\" class=\"headerlink\" title=\"7.5. Self-Issued ID Token Validation\"></a>7.5. Self-Issued ID Token Validation</h3><p>To validate the ID Token received, the Client MUST do the following:</p>\n<ol>\n<li>The Client MUST validate that the value of the <code>iss</code> (issuer) Claim is <code>https://self-isued.me</code>. If <code>iss</code> contains a different value, the ID Token is not Self-Issued, and instead it MUST be validated according to <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation\">Section 3.1.3.7</a>.</li>\n<li>The Client MUST validate that the <code>aud</code> (audience) Claim contains the value of the <code>redirect_uri</code> that the Client sent in the Authentication Request as an audience.</li>\n<li>The Client MUST validate the signature of the ID Token according to <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWS\">JWS</a> [JWS] using the algorithm specified in the <code>alg</code> Header Parameter of the JOSE Header, using the key in the <code>sub_jwk</code> Claim; the key is a bare key in JWK format (not an X.509 certificate value).</li>\n<li>The <code>alg</code> value SHOULD be the default of <code>RS256</code>. It MAY also be <code>ES256</code>.</li>\n<li>The Client MUST validate that the <code>sub</code> Claim value is the base64url encoded representation of the thumbprint of the key in the <code>sub_jwk</code> Claim, as specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#SelfIssuedResponse\">Section 7.4</a>.</li>\n<li>The current time MUST be before the time represented by the <code>exp</code> Claim (possibly allowing for some small leeway to account for clock skew).</li>\n<li>The <code>iat</code> Claim can be used to reject tokens that were issued too far away from the current time, limiting the amount of time that nonces need to be stored to prevent attacks. The acceptable range is Client specific.</li>\n<li>If a nonce value was sent in the Authentication Request, a <code>nonce</code> Claim MUST be present and its value checked to verify that it is the same value as the one that was sent in the Authentication Request. The Client SHOULD check the <code>nonce</code> value for replay attacks. The precise method for detecting replay attacks is Client specific.</li>\n</ol>\n<p>The following is a non-normative example of a base64url decoded Self-Issued ID Token (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;iss&quot;: &quot;https:&#x2F;&#x2F;self-issued.me&quot;,\n &quot;sub&quot;: &quot;NzbLsXh8uDCcd-6MNwXF4W_7noWXFZAfHkxZsRGC9Xs&quot;,\n &quot;aud&quot;: &quot;https:&#x2F;&#x2F;client.example.org&#x2F;cb&quot;,\n &quot;nonce&quot;: &quot;n-0S6_WzA2Mj&quot;,\n &quot;exp&quot;: 1311281970,\n &quot;iat&quot;: 1311280970,\n &quot;sub_jwk&quot;: &#123;\n   &quot;kty&quot;:&quot;RSA&quot;,\n   &quot;n&quot;: &quot;0vx7agoebGcQSuuPiLJXZptN9nndrQmbXEps2aiAFbWhM78LhWx\n   4cbbfAAtVT86zwu1RK7aPFFxuhDR1L6tSoc_BJECPebWKRXjBZCiFV4n3oknjhMs\n   tn64tZ_2W-5JsGY4Hc5n9yBXArwl93lqt7_RN5w6Cf0h4QyQ5v-65YGjQR0_FDW2\n   QvzqY368QQMicAtaSqzs8KJZgnYb9c7d0zgdAZHzu6qMQvRL5hajrn1n91CbOpbI\n   SD08qNLyrdkt-bFTWhAI4vMQFh6WeZu0fM4lFd2NcRwr3XPksINHaQ-G_xBniIqb\n   w0Ls1jF44-csFCur-kEgU8awapJzKnqDKgw&quot;,\n   &quot;e&quot;:&quot;AQAB&quot;\n  &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"8-Subject-Identifier-Types\"><a href=\"#8-Subject-Identifier-Types\" class=\"headerlink\" title=\"8. Subject Identifier Types\"></a>8. Subject Identifier Types</h3><p>A Subject Identifier is a locally unique and never reassigned identifier within the Issuer for the End-User, which is intended to be consumed by the Client. Two Subject Identifier types are defined by this specification:</p>\n<blockquote>\n<ul>\n<li><p>public</p>\n<p>This provides the same <code>sub</code> (subject) value to all Clients. It is the default if the provider has no <code>subject_types_supported</code> element in its discovery document.</p>\n</li>\n<li><p>pairwise</p>\n<p>This provides a different <code>sub</code> value to each Client, so as not to enable Clients to correlate the End-User’s activities without permission.</p>\n</li>\n</ul>\n</blockquote>\n<p>The OpenID Provider’s Discovery document SHOULD list its supported Subject Identifier types in the <code>subject_types_supported</code> element. If there is more than one type listed in the array, the Client MAY elect to provide its preferred identifier type using the <code>subject_type</code> parameter during Registration.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"8-1-Pairwise-Identifier-Algorithm\"><a href=\"#8-1-Pairwise-Identifier-Algorithm\" class=\"headerlink\" title=\"8.1. Pairwise Identifier Algorithm\"></a>8.1. Pairwise Identifier Algorithm</h3><p>When pairwise Subject Identifiers are used, the OpenID Provider MUST calculate a unique <code>sub</code> (subject) value for each Sector Identifier. The Subject Identifier value MUST NOT be reversible by any party other than the OpenID Provider.</p>\n<p>Providers that use pairwise <code>sub</code> values and support <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration\">Dynamic Client Registration</a> [OpenID.Registration] SHOULD use the <code>sector_identifier_uri</code> parameter. It provides a way for a group of websites under common administrative control to have consistent pairwise <code>sub</code> values independent of the individual domain names. It also provides a way for Clients to change <code>redirect_uri</code> domains without having to reregister all of their users.</p>\n<p>If the Client has not provided a value for <code>sector_identifier_uri</code> in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration\">Dynamic Client Registration</a> [OpenID.Registration], the Sector Identifier used for pairwise identifier calculation is the host component of the registered <code>redirect_uri</code>. If there are multiple hostnames in the registered <code>redirect_uris</code>, the Client MUST register a <code>sector_identifier_uri</code>.</p>\n<p>When a <code>sector_identifier_uri</code> is provided, the host component of that URL is used as the Sector Identifier for the pairwise identifier calculation. The value of the <code>sector_identifier_uri</code> MUST be a URL using the <code>https</code> scheme that points to a JSON file containing an array of <code>redirect_uri</code> values. The values of the registered <code>redirect_uris</code> MUST be included in the elements of the array.</p>\n<p>Any algorithm with the following properties can be used by OpenID Providers to calculate pairwise Subject Identifiers:</p>\n<ul>\n<li>The Subject Identifier value MUST NOT be reversible by any party other than the OpenID Provider.</li>\n<li>Distinct Sector Identifier values MUST result in distinct Subject Identifier values.</li>\n<li>The algorithm MUST be deterministic.</li>\n</ul>\n<p>Three example methods are:</p>\n<ol>\n<li><p>The Sector Identifier can be concatenated with a local account ID and a salt value that is kept secret by the Provider. The concatenated string is then hashed using an appropriate algorithm.</p>\n<p>Calculate <code>sub</code> &#x3D; SHA-256 ( sector_identifier || local_account_id || salt ).</p>\n</li>\n<li><p>The Sector Identifier can be concatenated with a local account ID and a salt value that is kept secret by the Provider. The concatenated string is then encrypted using an appropriate algorithm.</p>\n<p>Calculate <code>sub</code> &#x3D; AES-128 ( sector_identifier || local_account_id || salt ).</p>\n</li>\n<li><p>The Issuer creates a Globally Unique Identifier (GUID) for the pair of Sector Identifier and local account ID and stores this value.</p>\n</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"9-Client-Authentication\"><a href=\"#9-Client-Authentication\" class=\"headerlink\" title=\"9. Client Authentication\"></a>9. Client Authentication</h3><p>This section defines a set of Client Authentication methods that are used by Clients to authenticate to the Authorization Server when using the Token Endpoint. During Client Registration, the RP (Client) MAY register a Client Authentication method. If no method is registered, the default method is <code>client_secret_basic</code>.</p>\n<p>These Client Authentication methods are:</p>\n<blockquote>\n<ul>\n<li><p>client_secret_basic</p>\n<p>Clients that have received a <code>client_secret</code> value from the Authorization Server authenticate with the Authorization Server in accordance with Section 2.3.1 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749] using the HTTP Basic authentication scheme.</p>\n</li>\n<li><p>client_secret_post</p>\n<p>Clients that have received a <code>client_secret</code> value from the Authorization Server, authenticate with the Authorization Server in accordance with Section 2.3.1 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749] by including the Client Credentials in the request body.</p>\n</li>\n<li><p>client_secret_jwt</p>\n<p>Clients that have received a <code>client_secret</code> value from the Authorization Server create a JWT using an HMAC SHA algorithm, such as HMAC SHA-256. The HMAC (Hash-based Message Authentication Code) is calculated using the octets of the UTF-8 representation of the <code>client_secret</code> as the shared key.</p>\n</li>\n<li><p>The Client authenticates in accordance with <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.JWT\">JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants</a> [OAuth.JWT] and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions\">Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants</a> [OAuth.Assertions]. The JWT MUST contain the following REQUIRED Claim Values and MAY contain the following OPTIONAL Claim Values:</p>\n</li>\n<li><p>issREQUIRED. Issuer. This MUST contain the <code>client_id</code> of the OAuth Client.subREQUIRED. Subject. This MUST contain the <code>client_id</code> of the OAuth Client.audREQUIRED. Audience. The <code>aud</code> (audience) Claim. Value that identifies the Authorization Server as an intended audience. The Authorization Server MUST verify that it is an intended audience for the token. The Audience SHOULD be the URL of the Authorization Server’s Token Endpoint.jtiREQUIRED. JWT ID. A unique identifier for the token, which can be used to prevent reuse of the token. These tokens MUST only be used once, unless conditions for reuse were negotiated between the parties; any such negotiation is beyond the scope of this specification.expREQUIRED. Expiration time on or after which the ID Token MUST NOT be accepted for processing.iatOPTIONAL. Time at which the JWT was issued.</p>\n</li>\n<li><p>The JWT MAY contain other Claims. Any Claims used that are not understood MUST be ignored.</p>\n</li>\n<li><p>The authentication token MUST be sent as the value of the [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions\">OAuth.Assertions]</a> <code>client_assertion</code> parameter.</p>\n</li>\n<li><p>The value of the [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions\">OAuth.Assertions]</a> <code>client_assertion_type</code> parameter MUST be “urn:ietf:params:oauth:client-assertion-type:jwt-bearer”, per [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.JWT\">OAuth.JWT]</a>.</p>\n</li>\n<li><p>private_key_jwt</p>\n<p>Clients that have registered a public key sign a JWT using that key. The Client authenticates in accordance with <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.JWT\">JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants</a> [OAuth.JWT] and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions\">Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants</a> [OAuth.Assertions]. The JWT MUST contain the following REQUIRED Claim Values and MAY contain the following OPTIONAL Claim Values:</p>\n</li>\n<li><p>issREQUIRED. Issuer. This MUST contain the <code>client_id</code> of the OAuth Client.subREQUIRED. Subject. This MUST contain the <code>client_id</code> of the OAuth Client.audREQUIRED. Audience. The <code>aud</code> (audience) Claim. Value that identifies the Authorization Server as an intended audience. The Authorization Server MUST verify that it is an intended audience for the token. The Audience SHOULD be the URL of the Authorization Server’s Token Endpoint.jtiREQUIRED. JWT ID. A unique identifier for the token, which can be used to prevent reuse of the token. These tokens MUST only be used once, unless conditions for reuse were negotiated between the parties; any such negotiation is beyond the scope of this specification.expREQUIRED. Expiration time on or after which the ID Token MUST NOT be accepted for processing.iatOPTIONAL. Time at which the JWT was issued.</p>\n</li>\n<li><p>The JWT MAY contain other Claims. Any Claims used that are not understood MUST be ignored.</p>\n</li>\n<li><p>The authentication token MUST be sent as the value of the [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions\">OAuth.Assertions]</a> <code>client_assertion</code> parameter.</p>\n</li>\n<li><p>The value of the [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions\">OAuth.Assertions]</a> <code>client_assertion_type</code> parameter MUST be “urn:ietf:params:oauth:client-assertion-type:jwt-bearer”, per [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.JWT\">OAuth.JWT]</a>.</p>\n</li>\n<li><p>For example (with line wraps within values for display purposes only):<code> POST /token HTTP/1.1  Host: server.example.com  Content-Type: application/x-www-form-urlencoded   grant_type=authorization_code&amp;    code=i1WsRn1uB1&amp;    client_id=s6BhdRkqt3&amp;    client_assertion_type=    urn%3Aietf%3Aparams%3Aoauth%3Aclient-assertion-type%3Ajwt-bearer&amp;    client_assertion=PHNhbWxwOl ... ZT</code></p>\n</li>\n<li><p>none</p>\n<p>The Client does not authenticate itself at the Token Endpoint, either because it uses only the Implicit Flow (and so does not use the Token Endpoint) or because it is a Public Client with no Client Secret or other authentication mechanism.</p>\n</li>\n</ul>\n</blockquote>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"10-Signatures-and-Encryption\"><a href=\"#10-Signatures-and-Encryption\" class=\"headerlink\" title=\"10. Signatures and Encryption\"></a>10. Signatures and Encryption</h3><p>Depending on the transport through which the messages are sent, the integrity of the message might not be guaranteed and the originator of the message might not be authenticated. To mitigate these risks, ID Token, UserInfo Response, Request Object, and Client Authentication JWT values can utilize <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWS\">JSON Web Signature (JWS)</a> [JWS] to sign their contents. To achieve message confidentiality, these values can also use <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWE\">JSON Web Encryption (JWE)</a> [JWE] to encrypt their contents.</p>\n<p>When the message is both signed and encrypted, it MUST be signed first and then encrypted, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#SigningOrder\">Section 16.14</a>, with the result being a Nested JWT, as specified in [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JWT]</a>. Note that all JWE encryption methods perform integrity checking.</p>\n<p>The OP advertises its supported signing and encryption algorithms in its Discovery document, or may supply this information by other means. The RP declares its required signing and encryption algorithms in its Dynamic Registration request, or may communicate this information by other means.</p>\n<p>The OP advertises its public keys via its Discovery document, or may supply this information by other means. The RP declares its public keys via its Dynamic Registration request, or may communicate this information by other means.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"10-1-Signing\"><a href=\"#10-1-Signing\" class=\"headerlink\" title=\"10.1. Signing\"></a>10.1. Signing</h3><p>The signing party MUST select a signature algorithm based on the algorithms supported by the recipient.</p>\n<blockquote>\n<ul>\n<li><p>Asymmetric Signatures</p>\n<p>When using RSA or ECDSA Signatures, the <code>alg</code> Header Parameter value of the JOSE Header MUST be set to an appropriate algorithm as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWA\">JSON Web Algorithms</a> [JWA]. The private key used to sign the content MUST be associated with a public key used for signature verification published by the sender in its JWK Set document. If there are multiple keys in the referenced JWK Set document, a <code>kid</code> value MUST be provided in the JOSE Header. The key usage of the respective keys MUST support signing.</p>\n</li>\n<li><p>Symmetric Signatures</p>\n<p>When using MAC-based signatures, the <code>alg</code> Header Parameter value of the JOSE Header MUST be set to a MAC algorithm, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWA\">JSON Web Algorithms</a> [JWA]. The MAC key used is the octets of the UTF-8 representation of the <code>client_secret</code> value. See <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#SymmetricKeyEntropy\">Section 16.19</a> for a discussion of entropy requirements for <code>client_secret</code> values. Symmetric signatures MUST NOT be used by public (non-confidential) Clients because of their inability to keep secrets.</p>\n</li>\n</ul>\n</blockquote>\n<p>See <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#NeedForSignedRequests\">Section 16.20</a> for Security Considerations about the need for signed requests.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"10-1-1-Rotation-of-Asymmetric-Signing-Keys\"><a href=\"#10-1-1-Rotation-of-Asymmetric-Signing-Keys\" class=\"headerlink\" title=\"10.1.1. Rotation of Asymmetric Signing Keys\"></a>10.1.1. Rotation of Asymmetric Signing Keys</h3><p>Rotation of signing keys can be accomplished with the following approach. The signer publishes its keys in a JWK Set at its <code>jwks_uri</code> location and includes the <code>kid</code> of the signing key in the JOSE Header of each message to indicate to the verifier which key is to be used to validate the signature. Keys can be rolled over by periodically adding new keys to the JWK Set at the <code>jwks_uri</code> location. The signer can begin using a new key at its discretion and signals the change to the verifier using the <code>kid</code> value. The verifier knows to go back to the <code>jwks_uri</code> location to re-retrieve the keys when it sees an unfamiliar <code>kid</code> value. The JWK Set document at the <code>jwks_uri</code> SHOULD retain recently decommissioned signing keys for a reasonable period of time to facilitate a smooth transition.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"10-2-Encryption\"><a href=\"#10-2-Encryption\" class=\"headerlink\" title=\"10.2. Encryption\"></a>10.2. Encryption</h3><p>The encrypting party MUST select an encryption algorithm based on the algorithms supported by the recipient.</p>\n<blockquote>\n<ul>\n<li><p>Asymmetric Encryption: RSA</p>\n<p>The public key to which the content was encrypted MUST be a public key used for encryption published by the recipient in its JWK Set document. If there are multiple keys in the referenced JWK Set document, a <code>kid</code> value MUST be provided in the JOSE Header. Use the supported RSA encryption algorithm to encrypt a random Content Encryption Key to be used for encrypting the signed JWT. The key usage of the respective keys MUST include encryption.</p>\n</li>\n<li><p>Asymmetric Encryption: Elliptic Curve</p>\n<p>Create an ephemeral Elliptic Curve public key for the <code>epk</code> element of the JOSE Header. The other public key used for the key agreement computation MUST be a public key published by the recipient in its JWK Set document. If there are multiple keys in the referenced JWK Set document, a <code>kid</code> value MUST be provided in the JOSE Header. Use the ECDH-ES algorithm to agree upon a Content Encryption Key to be used for encrypting the signed JWT. The key usage of the respective keys MUST support encryption.</p>\n</li>\n<li><p>Symmetric Encryption</p>\n<p>The symmetric encryption key is derived from the <code>client_secret</code> value by using a left truncated SHA-2 hash of the octets of the UTF-8 representation of the <code>client_secret</code>. For keys of 256 or fewer bits, SHA-256 is used; for keys of 257-384 bits, SHA-384 is used; for keys of 385-512 bits, SHA-512 is used. The hash value MUST be left truncated to the appropriate bit length for the AES key wrapping or direct encryption algorithm used, for instance, truncating the SHA-256 hash to 128 bits for <code>A128KW</code>. If a symmetric key with greater than 512 bits is needed, a different method of deriving the key from the <code>client_secret</code> would have to be defined by an extension. Symmetric encryption MUST NOT be used by public (non-confidential) Clients because of their inability to keep secrets.</p>\n</li>\n</ul>\n</blockquote>\n<p>See <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#NeedForEncryptedRequests\">Section 16.21</a> for Security Considerations about the need for encrypted requests.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"10-2-1-Rotation-of-Asymmetric-Encryption-Keys\"><a href=\"#10-2-1-Rotation-of-Asymmetric-Encryption-Keys\" class=\"headerlink\" title=\"10.2.1. Rotation of Asymmetric Encryption Keys\"></a>10.2.1. Rotation of Asymmetric Encryption Keys</h3><p>Rotating encryption keys necessarily uses a different process than the one for signing keys because the encrypting party starts the process and thus cannot rely on a change in <code>kid</code> as a signal that keys need to change. The encrypting party still uses the <code>kid</code> Header Parameter in the JWE to tell the decrypting party which private key to use to decrypt, however, the encrypting party needs to first select the most appropriate key from those provided in the JWK Set at the recipient’s <code>jwks_uri</code> location.</p>\n<p>To rotate keys, the decrypting party can publish new keys at its <code>jwks_uri</code> location and remove from the JWK Set those that are being decommissioned. The <code>jwks_uri</code> SHOULD include a <code>Cache-Control</code> header in the response that contains a <code>max-age</code> directive, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC2616\">RFC 2616</a> [RFC2616], which enables the encrypting party to safely cache the JWK Set and not have to re-retrieve the document for every encryption event. The decrypting party SHOULD remove decommissioned keys from the JWK Set referenced by <code>jwks_uri</code> but retain them internally for some reasonable period of time, coordinated with the cache duration, to facilitate a smooth transition between keys by allowing the encrypting party some time to obtain the new keys. The cache duration SHOULD also be coordinated with the issuance of new signing keys, as described in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RotateSigKeys\">Section 10.1.1</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"11-Offline-Access\"><a href=\"#11-Offline-Access\" class=\"headerlink\" title=\"11. Offline Access\"></a>11. Offline Access</h3><p>OpenID Connect defines the following <code>scope</code> value to request offline access:</p>\n<blockquote>\n<ul>\n<li><p>offline_access</p>\n<p>OPTIONAL. This scope value requests that an OAuth 2.0 Refresh Token be issued that can be used to obtain an Access Token that grants access to the End-User’s UserInfo Endpoint even when the End-User is not present (not logged in).</p>\n</li>\n</ul>\n</blockquote>\n<p>When offline access is requested, a <code>prompt</code> parameter value of <code>consent</code> MUST be used unless other conditions for processing the request permitting offline access to the requested resources are in place. The OP MUST always obtain consent to returning a Refresh Token that enables offline access to the requested resources. A previously saved user consent is not always sufficient to grant offline access.</p>\n<p>Upon receipt of a scope parameter containing the <code>offline_access</code> value, the Authorization Server:</p>\n<ul>\n<li>MUST ensure that the prompt parameter contains <code>consent</code> unless other conditions for processing the request permitting offline access to the requested resources are in place; unless one or both of these conditions are fulfilled, then it MUST ignore the <code>offline_access</code> request,</li>\n<li>MUST ignore the <code>offline_access</code> request unless the Client is using a <code>response_type</code> value that would result in an Authorization Code being returned,</li>\n<li>MUST explicitly receive or have consent for all Clients when the registered <code>application_type</code> is <code>web</code>,</li>\n<li>SHOULD explicitly receive or have consent for all Clients when the registered <code>application_type</code> is <code>native</code>.</li>\n</ul>\n<p>The use of Refresh Tokens is not exclusive to the <code>offline_access</code> use case. The Authorization Server MAY grant Refresh Tokens in other contexts that are beyond the scope of this specification.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"12-Using-Refresh-Tokens\"><a href=\"#12-Using-Refresh-Tokens\" class=\"headerlink\" title=\"12. Using Refresh Tokens\"></a>12. Using Refresh Tokens</h3><p>A request to the Token Endpoint can also use a Refresh Token by using the <code>grant_type</code> value <code>refresh_token</code>, as described in Section 6 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749]. This section defines the behaviors for OpenID Connect Authorization Servers when Refresh Tokens are used.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"12-1-Refresh-Request\"><a href=\"#12-1-Refresh-Request\" class=\"headerlink\" title=\"12.1. Refresh Request\"></a>12.1. Refresh Request</h3><p>To refresh an Access Token, the Client MUST authenticate to the Token Endpoint using the authentication method registered for its <code>client_id</code>, as documented in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication\">Section 9</a>. The Client sends the parameters via HTTP <code>POST</code> to the Token Endpoint using Form Serialization, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#FormSerialization\">Section 13.2</a>.</p>\n<p>The following is a non-normative example of a Refresh Request (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">POST &#x2F;token HTTP&#x2F;1.1\nHost: server.example.com\nContent-Type: application&#x2F;x-www-form-urlencoded\n\nclient_id&#x3D;s6BhdRkqt3\n  &amp;client_secret&#x3D;some_secret12345\n  &amp;grant_type&#x3D;refresh_token\n  &amp;refresh_token&#x3D;8xLOxBtZp8\n  &amp;scope&#x3D;openid%20profile<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>The Authorization Server MUST validate the Refresh Token, MUST verify that it was issued to the Client, and must verify that the Client successfully authenticated it has a Client Authentication method.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"12-2-Successful-Refresh-Response\"><a href=\"#12-2-Successful-Refresh-Response\" class=\"headerlink\" title=\"12.2. Successful Refresh Response\"></a>12.2. Successful Refresh Response</h3><p>Upon successful validation of the Refresh Token, the response body is the Token Response of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#TokenResponse\">Section 3.1.3.3</a> except that it might not contain an <code>id_token</code>.</p>\n<p>If an ID Token is returned as a result of a token refresh request, the following requirements apply:</p>\n<ul>\n<li>its <code>iss</code> Claim Value MUST be the same as in the ID Token issued when the original authentication occurred,</li>\n<li>its <code>sub</code> Claim Value MUST be the same as in the ID Token issued when the original authentication occurred,</li>\n<li>its <code>iat</code> Claim MUST represent the time that the new ID Token is issued,</li>\n<li>its <code>aud</code> Claim Value MUST be the same as in the ID Token issued when the original authentication occurred,</li>\n<li>if the ID Token contains an <code>auth_time</code> Claim, its value MUST represent the time of the original authentication - not the time that the new ID token is issued,</li>\n<li>its <code>azp</code> Claim Value MUST be the same as in the ID Token issued when the original authentication occurred; if no <code>azp</code> Claim was present in the original ID Token, one MUST NOT be present in the new ID Token, and</li>\n<li>otherwise, the same rules apply as apply when issuing an ID Token at the time of the original authentication.</li>\n</ul>\n<p>The following is a non-normative example of a Refresh Response:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">HTTP&#x2F;1.1 200 OK\nContent-Type: application&#x2F;json\nCache-Control: no-store\nPragma: no-cache\n\n&#123;\n &quot;access_token&quot;: &quot;TlBN45jURg&quot;,\n &quot;token_type&quot;: &quot;Bearer&quot;,\n &quot;refresh_token&quot;: &quot;9yNOxJtZa5&quot;,\n &quot;expires_in&quot;: 3600\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"12-3-Refresh-Error-Response\"><a href=\"#12-3-Refresh-Error-Response\" class=\"headerlink\" title=\"12.3. Refresh Error Response\"></a>12.3. Refresh Error Response</h3><p>If the Refresh Request is invalid or unauthorized, the Authorization Server returns the Token Error Response as defined in Section 5.2 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749].</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"13-Serializations\"><a href=\"#13-Serializations\" class=\"headerlink\" title=\"13. Serializations\"></a>13. Serializations</h3><p>Messages are serialized using one of the following methods:</p>\n<ol>\n<li>Query String Serialization</li>\n<li>Form Serialization</li>\n<li>JSON Serialization</li>\n</ol>\n<p>This section describes the syntax of these serialization methods; other sections describe when they can and must be used. Note that not all methods can be used for all messages.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"13-1-Query-String-Serialization\"><a href=\"#13-1-Query-String-Serialization\" class=\"headerlink\" title=\"13.1. Query String Serialization\"></a>13.1. Query String Serialization</h3><p>In order to serialize the parameters using the Query String Serialization, the Client constructs the string by adding the parameters and values to the query component of a URL using the <code>application/x-www-form-urlencoded</code> format as defined by [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#W3C.REC-html401-19991224\">W3C.REC‑html401‑19991224]</a>. Query String Serialization is typically used in HTTP <code>GET</code> requests. The same serialization method is also used when adding parameters to the fragment component of a URL.</p>\n<p>The following is a non-normative example of this serialization (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;authorize?\n  response_type&#x3D;code\n  &amp;scope&#x3D;openid\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb HTTP&#x2F;1.1\nHost: server.example.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"13-2-Form-Serialization\"><a href=\"#13-2-Form-Serialization\" class=\"headerlink\" title=\"13.2. Form Serialization\"></a>13.2. Form Serialization</h3><p>Parameters and their values are Form Serialized by adding the parameter names and values to the entity body of the HTTP request using the <code>application/x-www-form-urlencoded</code> format as defined by [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#W3C.REC-html401-19991224\">W3C.REC‑html401‑19991224]</a>. Form Serialization is typically used in HTTP <code>POST</code> requests.</p>\n<p>The following is a non-normative example of this serialization (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">POST &#x2F;authorize HTTP&#x2F;1.1\nHost: server.example.com\nContent-Type: application&#x2F;x-www-form-urlencoded\n\nresponse_type&#x3D;code\n  &amp;scope&#x3D;openid\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"13-3-JSON-Serialization\"><a href=\"#13-3-JSON-Serialization\" class=\"headerlink\" title=\"13.3. JSON Serialization\"></a>13.3. JSON Serialization</h3><p>The parameters are serialized into a JSON object structure by adding each parameter at the highest structure level. Parameter names and string values are represented as JSON strings. Numerical values are represented as JSON numbers. Boolean values are represented as JSON booleans. Omitted parameters and parameters with no value SHOULD be omitted from the object and not represented by a JSON <code>null</code> value, unless otherwise specified. A parameter MAY have a JSON object or a JSON array as its value.</p>\n<p>The following is a non-normative example of this serialization:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;access_token&quot;: &quot;SlAV32hkKG&quot;,\n &quot;token_type&quot;: &quot;Bearer&quot;,\n &quot;expires_in&quot;: 3600,\n &quot;refresh_token&quot;: &quot;8xLOxBtZp8&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"14-String-Operations\"><a href=\"#14-String-Operations\" class=\"headerlink\" title=\"14. String Operations\"></a>14. String Operations</h3><p>Processing some OpenID Connect messages requires comparing values in the messages to known values. For example, the Claim Names returned by the UserInfo Endpoint might be compared to specific Claim Names such as <code>sub</code>. Comparing Unicode strings, however, has significant security implications.</p>\n<p>Therefore, comparisons between JSON strings and other Unicode strings MUST be performed as specified below:</p>\n<ol>\n<li>Remove any JSON applied escaping to produce an array of Unicode code points.</li>\n<li>Unicode Normalization [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#USA15\">USA15]</a> MUST NOT be applied at any point to either the JSON string or to the string it is to be compared against.</li>\n<li>Comparisons between the two strings MUST be performed as a Unicode code point to code point equality comparison.</li>\n</ol>\n<p>In several places, this specification uses space delimited lists of strings. In all such cases, a single ASCII space character (0x20) MUST be used as the delimiter.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"15-Implementation-Considerations\"><a href=\"#15-Implementation-Considerations\" class=\"headerlink\" title=\"15. Implementation Considerations\"></a>15. Implementation Considerations</h3><p>This specification defines features used by both Relying Parties and OpenID Providers. It is expected that some OpenID Providers will require static, out-of-band configuration of RPs using them, whereas others will support dynamic usage by RPs without a pre-established relationship between them. For that reason, the mandatory-to-implement features for OPs are listed below in two groups: the first for all OPs and the second for “Dynamic” OpenID Providers.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"15-1-Mandatory-to-Implement-Features-for-All-OpenID-Providers\"><a href=\"#15-1-Mandatory-to-Implement-Features-for-All-OpenID-Providers\" class=\"headerlink\" title=\"15.1. Mandatory to Implement Features for All OpenID Providers\"></a>15.1. Mandatory to Implement Features for All OpenID Providers</h3><p>All OpenID Providers MUST implement the following features defined in this specification. This list augments the set of features that are already listed elsewhere as being “REQUIRED” or are described with a “MUST”, and so is not, by itself, a comprehensive set of implementation requirements for OPs.</p>\n<blockquote>\n<ul>\n<li><p>Signing ID Tokens with RSA SHA-256</p>\n<p>OPs MUST support signing ID Tokens with the RSA SHA-256 algorithm (an <code>alg</code> value of <code>RS256</code>), unless the OP only supports returning ID Tokens from the Token Endpoint (as is the case for the Authorization Code Flow) and only allows Clients to register specifying <code>none</code> as the requested ID Token signing algorithm.</p>\n</li>\n<li><p>Prompt Parameter</p>\n<p>OPs MUST support the <code>prompt</code> parameter, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a>, including the specified user interface behaviors such as <code>none</code> and <code>login</code>.</p>\n</li>\n<li><p>Display Parameter</p>\n<p>OPs MUST support the <code>display</code> parameter, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a>. (Note that the minimum level of support required for this parameter is simply that its use must not result in an error.)</p>\n</li>\n<li><p>Preferred Locales</p>\n<p>OPs MUST support requests for preferred languages and scripts for the user interface and for Claims via the <code>ui_locales</code> and <code>claims_locales</code> request parameters, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a>. (Note that the minimum level of support required for these parameters is simply to have their use not result in errors.)</p>\n</li>\n<li><p>Authentication Time</p>\n<p>OPs MUST support returning the time at which the End-User authenticated via the <code>auth_time</code> Claim, when requested, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a>.</p>\n</li>\n<li><p>Maximum Authentication Age</p>\n<p>OPs MUST support enforcing a maximum authentication age via the <code>max_age</code> parameter, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a>.</p>\n</li>\n<li><p>Authentication Context Class Reference</p>\n<p>OPs MUST support requests for specific Authentication Context Class Reference values via the <code>acr_values</code> parameter, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a>. (Note that the minimum level of support required for this parameter is simply to have its use not result in an error.)</p>\n</li>\n</ul>\n</blockquote>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"15-2-Mandatory-to-Implement-Features-for-Dynamic-OpenID-Providers\"><a href=\"#15-2-Mandatory-to-Implement-Features-for-Dynamic-OpenID-Providers\" class=\"headerlink\" title=\"15.2. Mandatory to Implement Features for Dynamic OpenID Providers\"></a>15.2. Mandatory to Implement Features for Dynamic OpenID Providers</h3><p>In addition to the features listed above, OpenID Providers supporting dynamic establishment of relationships with RPs that they do not have a pre-configured relationship with MUST also implement the following features defined in this and related specifications.</p>\n<blockquote>\n<ul>\n<li><p>Response Types</p>\n<p>These OpenID Providers MUST support the <code>id_token</code> Response Type and all that are not Self-Issued OPs MUST also support the <code>code</code> and <code>id_token token</code> Response Types.</p>\n</li>\n<li><p>Discovery</p>\n<p>These OPs MUST support Discovery, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Discovery\">OpenID Connect Discovery 1.0</a> [OpenID.Discovery].</p>\n</li>\n<li><p>Dynamic Registration</p>\n<p>These OPs MUST support Dynamic Client Registration, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration\">OpenID Connect Dynamic Client Registration 1.0</a> [OpenID.Registration].</p>\n</li>\n<li><p>UserInfo Endpoint</p>\n<p>All dynamic OPs that issue Access Tokens MUST support the UserInfo Endpoint, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#UserInfo\">Section 5.3</a>. (Self-Issued OPs do not issue Access Tokens.)</p>\n</li>\n<li><p>Public Keys Published as Bare Keys</p>\n<p>These OPs MUST publish their public keys as bare JWK keys (which MAY also be accompanied by X.509 representations of those keys).</p>\n</li>\n<li><p>Request URI</p>\n<p>These OPs MUST support requests made using a Request Object value that is retrieved from a Request URI that is provided with the <code>request_uri</code> parameter, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a>.</p>\n</li>\n</ul>\n</blockquote>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"15-3-Discovery-and-Registration\"><a href=\"#15-3-Discovery-and-Registration\" class=\"headerlink\" title=\"15.3. Discovery and Registration\"></a>15.3. Discovery and Registration</h3><p>Some OpenID Connect installations can use a pre-configured set of OpenID Providers and&#x2F;or Relying Parties. In those cases, it might not be necessary to support dynamic discovery of information about identities or services or dynamic registration of Clients.</p>\n<p>However, if installations choose to support unanticipated interactions between Relying Parties and OpenID Providers that do not have pre-configured relationships, they SHOULD accomplish this by implementing the facilities defined in the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Discovery\">OpenID Connect Discovery 1.0</a> [OpenID.Discovery] and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration\">OpenID Connect Dynamic Client Registration 1.0</a> [OpenID.Registration] specifications.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"15-4-Mandatory-to-Implement-Features-for-Relying-Parties\"><a href=\"#15-4-Mandatory-to-Implement-Features-for-Relying-Parties\" class=\"headerlink\" title=\"15.4. Mandatory to Implement Features for Relying Parties\"></a>15.4. Mandatory to Implement Features for Relying Parties</h3><p>In general, it is up to Relying Parties which features they use when interacting with OpenID Providers. However, some choices are dictated by the nature of their OAuth Client, such as whether it is a Confidential Client, capable of keeping secrets, in which case the Authorization Code Flow may be appropriate, or whether it is a Public Client, for instance, a User Agent Based Application or a statically registered Native Application, in which case the Implicit Flow may be appropriate.</p>\n<p>When using OpenID Connect features, those listed as being “REQUIRED” or are described with a “MUST” are mandatory to implement, when used by a Relying Party. Likewise, those features that are described as “OPTIONAL” need not be used or supported unless they provide value in the particular application context. Finally, when interacting with OpenID Providers that support Discovery, the OP’s Discovery document can be used to dynamically determine which OP features are available for use by the RP.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"15-5-Implementation-Notes\"><a href=\"#15-5-Implementation-Notes\" class=\"headerlink\" title=\"15.5. Implementation Notes\"></a>15.5. Implementation Notes</h3><hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"15-5-1-Authorization-Code-Implementation-Notes\"><a href=\"#15-5-1-Authorization-Code-Implementation-Notes\" class=\"headerlink\" title=\"15.5.1. Authorization Code Implementation Notes\"></a>15.5.1. Authorization Code Implementation Notes</h3><p>When using the Authorization Code or Hybrid flows, an ID Token is returned from the Token Endpoint in response to a Token Request using an Authorization Code. Some implementations may choose to encode state about the ID Token to be returned in the Authorization Code value. Others may use the Authorization Code value as an index into a database storing this state.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"15-5-2-Nonce-Implementation-Notes\"><a href=\"#15-5-2-Nonce-Implementation-Notes\" class=\"headerlink\" title=\"15.5.2. Nonce Implementation Notes\"></a>15.5.2. Nonce Implementation Notes</h3><p>The <code>nonce</code> parameter value needs to include per-session state and be unguessable to attackers. One method to achieve this for Web Server Clients is to store a cryptographically random value as an HttpOnly session cookie and use a cryptographic hash of the value as the <code>nonce</code> parameter. In that case, the <code>nonce</code> in the returned ID Token is compared to the hash of the session cookie to detect ID Token replay by third parties. A related method applicable to JavaScript Clients is to store the cryptographically random value in HTML5 local storage and use a cryptographic hash of this value.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"15-5-3-Redirect-URI-Fragment-Handling-Implementation-Notes\"><a href=\"#15-5-3-Redirect-URI-Fragment-Handling-Implementation-Notes\" class=\"headerlink\" title=\"15.5.3. Redirect URI Fragment Handling Implementation Notes\"></a>15.5.3. Redirect URI Fragment Handling Implementation Notes</h3><p>When response parameters are returned in the Redirection URI fragment value, the Client needs to have the User Agent parse the fragment encoded values and pass them to on to the Client’s processing logic for consumption. User Agents that have direct access to cryptographic APIs may be able to be self-contained, for instance, with all Client code being written in JavaScript.</p>\n<p>However, if the Client does not run entirely in the User Agent, one way to achieve this is to post them to a Web Server Client for validation.</p>\n<p>The following is an example of a JavaScript file that a Client might host at its <code>redirect_uri</code>. This is loaded by the redirect from the Authorization Server. The fragment component is parsed and then sent by <code>POST</code> to a URI that will validate and use the information received.</p>\n<p>Following is a non-normative example of a Redirect URI response:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;cb HTTP&#x2F;1.1\nHost: client.example.org\n\nHTTP&#x2F;1.1 200 OK\nContent-Type: text&#x2F;html\n\n&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;\n\n&#x2F;&#x2F; First, parse the query string\nvar params &#x3D; &#123;&#125;, postBody &#x3D; location.hash.substring(1),\n    regex &#x3D; &#x2F;([^&amp;&#x3D;]+)&#x3D;([^&amp;]*)&#x2F;g, m;\nwhile (m &#x3D; regex.exec(postBody)) &#123;\n  params[decodeURIComponent(m[1])] &#x3D; decodeURIComponent(m[2]);\n&#125;\n\n&#x2F;&#x2F; And send the token over to the server\nvar req &#x3D; new XMLHttpRequest();\n&#x2F;&#x2F; using POST so query isn&#39;t logged\nreq.open(&#39;POST&#39;, &#39;https:&#x2F;&#x2F;&#39; + window.location.host +\n                 &#39;&#x2F;catch_response&#39;, true);\nreq.setRequestHeader(&#39;Content-Type&#39;,\n                     &#39;application&#x2F;x-www-form-urlencoded&#39;);\n\nreq.onreadystatechange &#x3D; function (e) &#123;\n  if (req.readyState &#x3D;&#x3D; 4) &#123;\n    if (req.status &#x3D;&#x3D; 200) &#123;\n&#x2F;&#x2F; If the response from the POST is 200 OK, perform a redirect\n      window.location &#x3D; &#39;https:&#x2F;&#x2F;&#39;\n        + window.location.host + &#39;&#x2F;redirect_after_login&#39;\n    &#125;\n&#x2F;&#x2F; if the OAuth response is invalid, generate an error message\n    else if (req.status &#x3D;&#x3D; 400) &#123;\n      alert(&#39;There was an error processing the token&#39;)\n    &#125; else &#123;\n      alert(&#39;Something other than 200 was returned&#39;)\n    &#125;\n  &#125;\n&#125;;\nreq.send(postBody);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"15-6-Compatibility-Notes\"><a href=\"#15-6-Compatibility-Notes\" class=\"headerlink\" title=\"15.6. Compatibility Notes\"></a>15.6. Compatibility Notes</h3><hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"15-6-1-Pre-Final-IETF-Specifications\"><a href=\"#15-6-1-Pre-Final-IETF-Specifications\" class=\"headerlink\" title=\"15.6.1. Pre-Final IETF Specifications\"></a>15.6.1. Pre-Final IETF Specifications</h3><p>Implementers should be aware that this specification uses several IETF specifications that are not yet final specifications. Those specifications are:</p>\n<ul>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JSON Web Token (JWT) draft -25</a> [JWT]</li>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWS\">JSON Web Signature (JWS) draft -31</a> [JWS]</li>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWE\">JSON Web Encryption (JWE) draft -31</a> [JWE]</li>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWK\">JSON Web Key (JWK) draft -31</a> [JWK]</li>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWA\">JSON Web Algorithms draft -31</a> [JWA]</li>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions\">Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants draft -17</a> [OAuth.Assertions]</li>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.JWT\">JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants draft -10</a> [OAuth.JWT]</li>\n</ul>\n<p>While every effort will be made to prevent breaking changes to these specifications, should they occur, OpenID Connect implementations should continue to use the specifically referenced draft versions above in preference to the final versions, unless using a possible future OpenID Connect profile or specification that updates some or all of these references.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"15-6-2-Google-“iss”-Value\"><a href=\"#15-6-2-Google-“iss”-Value\" class=\"headerlink\" title=\"15.6.2. Google “iss” Value\"></a>15.6.2. Google “iss” Value</h3><p>Implementers may want to be aware that, as of the time of this writing, Google’s deployed OpenID Connect implementation issues ID Tokens that omit the required <code>https://</code> scheme prefix from the <code>iss</code> (issuer) Claim Value. Relying Party implementations wishing to work with Google will therefore need to have code to work around this, until such time as their implementation is updated. Any such workaround code should be written in a manner that will not break at such point Google adds the missing prefix to their issuer values.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"15-7-Related-Specifications-and-Implementer’s-Guides\"><a href=\"#15-7-Related-Specifications-and-Implementer’s-Guides\" class=\"headerlink\" title=\"15.7. Related Specifications and Implementer’s Guides\"></a>15.7. Related Specifications and Implementer’s Guides</h3><p>These related OPTIONAL specifications MAY be used in combination with this specification to provide additional functionality:</p>\n<ul>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Discovery\">OpenID Connect Discovery 1.0</a> [OpenID.Discovery] - Defines how Relying Parties dynamically discover information about OpenID Providers</li>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration\">OpenID Connect Dynamic Client Registration 1.0</a> [OpenID.Registration] - Defines how Relying Parties dynamically register with OpenID Providers</li>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Session\">OpenID Connect Session Management 1.0</a> [OpenID.Session] - Defines how to manage OpenID Connect sessions, including logout functionality</li>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Post\">OAuth 2.0 Form Post Response Mode</a> [OAuth.Post] - Defines how to return OAuth 2.0 Authorization Response parameters (including OpenID Connect Authentication Response parameters) using HTML form values that are auto-submitted by the User Agent using HTTP <code>POST</code></li>\n</ul>\n<p>These implementer’s guides are intended to serve as self-contained references for implementers of basic Web-based Relying Parties:</p>\n<ul>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Basic\">OpenID Connect Basic Client Implementer’s Guide 1.0</a> [OpenID.Basic] - Implementer’s guide containing a subset of this specification that is intended for use by basic Web-based Relying Parties using the OAuth Authorization Code Flow</li>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Implicit\">OpenID Connect Implicit Client Implementer’s Guide 1.0</a> [OpenID.Implicit] - Implementer’s guide containing a subset of this specification that is intended for use by basic Web-based Relying Parties using the OAuth Implicit Flow</li>\n</ul>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-Security-Considerations\"><a href=\"#16-Security-Considerations\" class=\"headerlink\" title=\"16. Security Considerations\"></a>16. Security Considerations</h3><p>This specification references the security considerations defined in Section 10 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749], and Section 5 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6750\">OAuth 2.0 Bearer Token Usage</a> [RFC6750]. Furthermore, the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6819\">OAuth 2.0 Threat Model and Security Considerations</a> [RFC6819] specification provides an extensive list of threats and controls that apply to this specification as well, given that it is based upon OAuth 2.0. <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ISO29115\">ISO&#x2F;IEC 29115</a> [ISO29115] also provides threats and controls that implementers need to take into account. Implementers are highly advised to read these references in detail and apply the countermeasures described therein.</p>\n<p>In addition, the following list of attack vectors and remedies are also considered.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-1-Request-Disclosure\"><a href=\"#16-1-Request-Disclosure\" class=\"headerlink\" title=\"16.1. Request Disclosure\"></a>16.1. Request Disclosure</h3><p>If appropriate measures are not taken, a request might be disclosed to an attacker, posing security and privacy threats.</p>\n<p>In addition to what is stated in Section 5.1.1 of [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6819\">RFC6819]</a>, this standard provides a way to provide the confidentiality of the request end to end through the use of <code>request</code> or <code>request_uri</code> parameters, where the content of the <code>request</code> is an encrypted JWT with the appropriate key and cipher. This protects even against a compromised User Agent in the case of indirect request.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-2-Server-Masquerading\"><a href=\"#16-2-Server-Masquerading\" class=\"headerlink\" title=\"16.2. Server Masquerading\"></a>16.2. Server Masquerading</h3><p>A malicious Server might masquerade as the legitimate server using various means. To detect such an attack, the Client needs to authenticate the server.</p>\n<p>In addition to what is stated in Section 5.1.2 of [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6819\">RFC6819]</a>, this standard provides a way to authenticate the Server through either the use of Signed or Encrypted JWTs with an appropriate key and cipher.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-3-Token-Manufacture-x2F-Modification\"><a href=\"#16-3-Token-Manufacture-x2F-Modification\" class=\"headerlink\" title=\"16.3. Token Manufacture&#x2F;Modification\"></a>16.3. Token Manufacture&#x2F;Modification</h3><p>An Attacker might generate a bogus token or modify the token contents (such as Claims values or the signature) of an existing parseable token, causing the RP to grant inappropriate access to the Client. For example, an Attacker might modify the parseable token to extend the validity period; a Client might modify the parseable token to have access to information that they should not be able to view.</p>\n<p>There are two ways to mitigate this attack:</p>\n<ol>\n<li>The token can be digitally signed by the OP. The Relying Party SHOULD validate the digital signature to verify that it was issued by a legitimate OP.</li>\n<li>The token can be sent over a protected channel such as TLS. See <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#TLSRequirements\">Section 16.17</a> for more information on using TLS. In this specification, the token is always sent over a TLS protected channel. Note however, that this measure is only a defense against third party attackers and is not applicable to the case where the Client is the attacker.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-4-Access-Token-Disclosure\"><a href=\"#16-4-Access-Token-Disclosure\" class=\"headerlink\" title=\"16.4. Access Token Disclosure\"></a>16.4. Access Token Disclosure</h3><p>Access Tokens are credentials used to access Protected Resources, as defined in Section 1.4 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749]. Access Tokens represent an End-User’s authorization and MUST NOT be exposed to unauthorized parties.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-5-Server-Response-Disclosure\"><a href=\"#16-5-Server-Response-Disclosure\" class=\"headerlink\" title=\"16.5. Server Response Disclosure\"></a>16.5. Server Response Disclosure</h3><p>The server response might contain authentication data and Claims that include sensitive Client information. Disclosure of the response contents can make the Client vulnerable to other types of attacks.</p>\n<p>The server response disclosure can be mitigated in the following two ways:</p>\n<ol>\n<li>Using the <code>code</code> Response Type. The response is sent over a TLS protected channel, where the Client is authenticated by the <code>client_id</code> and <code>client_secret</code>.</li>\n<li>For other Response Types, the signed response can be encrypted with the Client’s public key or a shared secret as an encrypted JWT with an appropriate key and cipher.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-6-Server-Response-Repudiation\"><a href=\"#16-6-Server-Response-Repudiation\" class=\"headerlink\" title=\"16.6. Server Response Repudiation\"></a>16.6. Server Response Repudiation</h3><p>A response might be repudiated by the server if the proper mechanisms are not in place. For example, if a Server does not digitally sign a response, the Server can claim that it was not generated through the services of the Server.</p>\n<p>To mitigate this threat, the response MAY be digitally signed by the Server using a key that supports non-repudiation. The Client SHOULD validate the digital signature to verify that it was issued by a legitimate Server and its integrity is intact.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-7-Request-Repudiation\"><a href=\"#16-7-Request-Repudiation\" class=\"headerlink\" title=\"16.7. Request Repudiation\"></a>16.7. Request Repudiation</h3><p>Since it is possible for a compromised or malicious Client to send a request to the wrong party, a Client that was authenticated using only a bearer token can repudiate any transaction.</p>\n<p>To mitigate this threat, the Server MAY require that the request be digitally signed by the Client using a key that supports non-repudiation. The Server SHOULD validate the digital signature to verify that it was issued by a legitimate Client and the integrity is intact.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-8-Access-Token-Redirect\"><a href=\"#16-8-Access-Token-Redirect\" class=\"headerlink\" title=\"16.8. Access Token Redirect\"></a>16.8. Access Token Redirect</h3><p>An Attacker uses the Access Token generated for one resource to obtain access to a second resource.</p>\n<p>To mitigate this threat, the Access Token SHOULD be audience and scope restricted. One way of implementing it is to include the identifier of the resource for whom it was generated as audience. The resource verifies that incoming tokens include its identifier as the audience of the token.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-9-Token-Reuse\"><a href=\"#16-9-Token-Reuse\" class=\"headerlink\" title=\"16.9. Token Reuse\"></a>16.9. Token Reuse</h3><p>An Attacker attempts to use a one-time use token such as an Authorization Code that has already been used once with the intended Resource. To mitigate this threat, the token SHOULD include a timestamp and a short validity lifetime. The Relying Party then checks the timestamp and lifetime values to ensure that the token is currently valid.</p>\n<p>Alternatively, the server MAY record the state of the use of the token and check the status for each request.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-10-Eavesdropping-or-Leaking-Authorization-Codes-Secondary-Authenticator-Capture\"><a href=\"#16-10-Eavesdropping-or-Leaking-Authorization-Codes-Secondary-Authenticator-Capture\" class=\"headerlink\" title=\"16.10. Eavesdropping or Leaking Authorization Codes (Secondary Authenticator Capture)\"></a>16.10. Eavesdropping or Leaking Authorization Codes (Secondary Authenticator Capture)</h3><p>In addition to the attack patterns described in Section 4.4.1.1 of [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6819\">RFC6819]</a>, an Authorization Code can be captured in the User Agent where the TLS session is terminated if the User Agent is infected by malware. However, capturing it is not useful as long as either Client Authentication or an encrypted response is used.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-11-Token-Substitution\"><a href=\"#16-11-Token-Substitution\" class=\"headerlink\" title=\"16.11. Token Substitution\"></a>16.11. Token Substitution</h3><p>Token Substitution is a class of attacks in which a malicious user swaps various tokens, including swapping an Authorization Code for a legitimate user with another token that the attacker has. One means of accomplishing this is for the attacker to copy a token out one session and use it in an HTTP message for a different session, which is easy to do when the token is available to the browser; this is known as the “cut and paste” attack.</p>\n<p>The Implicit Flow of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749] is not designed to mitigate this risk. In Section 10.16, it normatively requires that any use of the authorization process as a form of delegated End-User authentication to the Client MUST NOT use the Implicit Flow without employing additional security mechanisms that enable the Client to determine whether the ID Token and Access Token were issued for its use.</p>\n<p>In OpenID Connect, this is mitigated through mechanisms provided through the ID Token. The ID Token is a signed security token that provides Claims such as <code>iss</code> (issuer), <code>sub</code> (subject), <code>aud</code> (audience), <code>azp</code> (authorized party), <code>at_hash</code> (access token hash), and <code>c_hash</code> (code hash). Using the ID Token, the Client is capable of detecting the Token Substitution Attack.</p>\n<p>The <code>c_hash</code> in the ID Token enables Clients to prevent Authorization Code substitution. The <code>at_hash</code> in the ID Token enables Clients to prevent Access Token substitution.</p>\n<p>Also, a malicious user may attempt to impersonate a more privileged user by subverting the communication channel between the Authorization Endpoint and Client, or the Token Endpoint and Client, for example by swapping the Authorization Code or reordering the messages, to convince the Token Endpoint that the attacker’s authorization grant corresponds to a grant sent on behalf of a more privileged user.</p>\n<p>For the HTTP binding defined by this specification, the responses to Token Requests are bound to the corresponding requests by message order in HTTP, as both the response containing the token and requests are protected by TLS, which will detect and prevent packet reordering.</p>\n<p>When designing another binding of this specification to a protocol incapable of strongly binding Token Endpoint requests to responses, additional mechanisms to address this issue MUST be utilized. One such mechanism could be to include an ID Token with a <code>c_hash</code> Claim in the token request and response.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-12-Timing-Attack\"><a href=\"#16-12-Timing-Attack\" class=\"headerlink\" title=\"16.12. Timing Attack\"></a>16.12. Timing Attack</h3><p>A timing attack enables the attacker to obtain an unnecessary large amount of information through the elapsed time differences in the code paths taken by successful and unsuccessful decryption operations or successful and unsuccessful signature validation of a message. It can be used to reduce the effective key length of the cipher used.</p>\n<p>Implementations SHOULD NOT terminate the validation process at the instant of the finding an error but SHOULD continue running until all the octets have been processed to avoid this attack.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-13-Other-Crypto-Related-Attacks\"><a href=\"#16-13-Other-Crypto-Related-Attacks\" class=\"headerlink\" title=\"16.13. Other Crypto Related Attacks\"></a>16.13. Other Crypto Related Attacks</h3><p>There are various crypto related attacks possible depending on the method used for encryption and signature &#x2F; integrity checking. Implementers need to consult the Security Considerations for the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JWT</a> [JWT] specification and specifications that it references to avoid the vulnerabilities identified in these specifications.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-14-Signing-and-Encryption-Order\"><a href=\"#16-14-Signing-and-Encryption-Order\" class=\"headerlink\" title=\"16.14. Signing and Encryption Order\"></a>16.14. Signing and Encryption Order</h3><p>Signatures over encrypted text are not considered valid in many jurisdictions. Therefore, for integrity and non-repudiation, this specification requires signing the plain text JSON Claims, when signing is performed. If both signing and encryption are desired, it is performed on the JWS containing the signed Claims, with the result being a Nested JWT, as specified in [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JWT]</a>. Note that since all JWE encryption algorithms provide integrity protection, there is no need to separately sign the encrypted content.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-15-Issuer-Identifier\"><a href=\"#16-15-Issuer-Identifier\" class=\"headerlink\" title=\"16.15. Issuer Identifier\"></a>16.15. Issuer Identifier</h3><p>OpenID Connect supports multiple Issuers per Host and Port combination. The issuer returned by discovery MUST exactly match the value of <code>iss</code> in the ID Token.</p>\n<p>OpenID Connect treats the path component of any Issuer URI as being part of the Issuer Identifier. For instance, the subject “1234” with an Issuer Identifier of “<a href=\"https://example.com/\">https://example.com</a>“ is not equivalent to the subject “1234” with an Issuer Identifier of “<a href=\"https://example.com/sales\">https://example.com/sales</a>“.</p>\n<p>It is RECOMMENDED that only a single Issuer per host be used. However, if a host supports multiple tenants, multiple Issuers for that host may be needed.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-16-Implicit-Flow-Threats\"><a href=\"#16-16-Implicit-Flow-Threats\" class=\"headerlink\" title=\"16.16. Implicit Flow Threats\"></a>16.16. Implicit Flow Threats</h3><p>In the Implicit Flow, the Access Token is returned in the fragment component of the Client’s <code>redirect_uri</code> through HTTPS, thus it is protected between the OP and the User Agent, and between the User Agent and the RP. The only place it can be captured is the User Agent where the TLS session is terminated, which is possible if the User Agent is infected by malware or under the control of a malicious party.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-17-TLS-Requirements\"><a href=\"#16-17-TLS-Requirements\" class=\"headerlink\" title=\"16.17. TLS Requirements\"></a>16.17. TLS Requirements</h3><p>Implementations MUST support TLS. Which version(s) ought to be implemented will vary over time, and depend on the widespread deployment and known security vulnerabilities at the time of implementation. At the time of this writing, TLS version 1.2 [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC5246\">RFC5246]</a> is the most recent version, but has very limited actual deployment, and might not be readily available in implementation toolkits. TLS version 1.0 [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC2246\">RFC2246]</a> is the most widely deployed version, and will give the broadest interoperability.</p>\n<p>To protect against information disclosure and tampering, confidentiality protection MUST be applied using TLS with a ciphersuite that provides confidentiality and integrity protection.</p>\n<p>Whenever TLS is used, a TLS server certificate check MUST be performed, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6125\">RFC 6125</a> [RFC6125].</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-18-Lifetimes-of-Access-Tokens-and-Refresh-Tokens\"><a href=\"#16-18-Lifetimes-of-Access-Tokens-and-Refresh-Tokens\" class=\"headerlink\" title=\"16.18. Lifetimes of Access Tokens and Refresh Tokens\"></a>16.18. Lifetimes of Access Tokens and Refresh Tokens</h3><p>Access Tokens might not be revocable by the Authorization Server. Access Token lifetimes SHOULD therefore be kept to single use or very short lifetimes.</p>\n<p>If ongoing access to the UserInfo Endpoint or other Protected Resources is required, a Refresh Token can be used. The Client can then exchange the Refresh Token at the Token Endpoint for a fresh short-lived Access Token that can be used to access the resource.</p>\n<p>The Authorization Server SHOULD clearly identify long-term grants to the User during Authorization. The Authorization Server SHOULD provide a mechanism for the End-User to revoke Access Tokens and Refresh Tokens granted to a Client.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-19-Symmetric-Key-Entropy\"><a href=\"#16-19-Symmetric-Key-Entropy\" class=\"headerlink\" title=\"16.19. Symmetric Key Entropy\"></a>16.19. Symmetric Key Entropy</h3><p>In <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#Signing\">Section 10.1</a> and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#Encryption\">Section 10.2</a>, keys are derived from the <code>client_secret</code> value. Thus, when used with symmetric signing or encryption operations, <code>client_secret</code> values MUST contain sufficient entropy to generate cryptographically strong keys. Also, <code>client_secret</code> values MUST also contain at least the minimum of number of octets required for MAC keys for the particular algorithm used. So for instance, for <code>HS256</code>, the <code>client_secret</code> value MUST contain at least 32 octets (and almost certainly SHOULD contain more, since <code>client_secret</code> values are likely to use a restricted alphabet).</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-20-Need-for-Signed-Requests\"><a href=\"#16-20-Need-for-Signed-Requests\" class=\"headerlink\" title=\"16.20. Need for Signed Requests\"></a>16.20. Need for Signed Requests</h3><p>In some situations, Clients might need to use signed requests to ensure that the desired request parameters are delivered to the OP without having been tampered with. For instance, the <code>max_age</code> and <code>acr_values</code> provide more assurance about the nature of the authentication performed when delivered in signed requests.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-21-Need-for-Encrypted-Requests\"><a href=\"#16-21-Need-for-Encrypted-Requests\" class=\"headerlink\" title=\"16.21. Need for Encrypted Requests\"></a>16.21. Need for Encrypted Requests</h3><p>In some situations, knowing the contents of an OpenID Connect request can, in and of itself, reveal sensitive information about the End-User. For instance, knowing that the Client is requesting a particular Claim or that it is requesting that a particular authentication method be used can reveal sensitive information about the End-User. OpenID Connect enables requests to be encrypted to the OpenID Provider to prevent such potentially sensitive information from being revealed.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"17-Privacy-Considerations\"><a href=\"#17-Privacy-Considerations\" class=\"headerlink\" title=\"17. Privacy Considerations\"></a>17. Privacy Considerations</h3><hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"17-1-Personally-Identifiable-Information\"><a href=\"#17-1-Personally-Identifiable-Information\" class=\"headerlink\" title=\"17.1. Personally Identifiable Information\"></a>17.1. Personally Identifiable Information</h3><p>The UserInfo Response typically contains Personally Identifiable Information (PII). As such, End-User consent for the release of the information for the specified purpose should be obtained at or prior to the authorization time in accordance with relevant regulations. The purpose of use is typically registered in association with the <code>redirect_uris</code>.</p>\n<p>Only necessary UserInfo data should be stored at the Client and the Client SHOULD associate the received data with the purpose of use statement.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"17-2-Data-Access-Monitoring\"><a href=\"#17-2-Data-Access-Monitoring\" class=\"headerlink\" title=\"17.2. Data Access Monitoring\"></a>17.2. Data Access Monitoring</h3><p>The Resource Server SHOULD make End-Users’ UserInfo access logs available to them so that they can monitor who accessed their data.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"17-3-Correlation\"><a href=\"#17-3-Correlation\" class=\"headerlink\" title=\"17.3. Correlation\"></a>17.3. Correlation</h3><p>To protect the End-User from a possible correlation among Clients, the use of a Pairwise Pseudonymous Identifier (PPID) as the <code>sub</code> (subject) SHOULD be considered.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"17-4-Offline-Access\"><a href=\"#17-4-Offline-Access\" class=\"headerlink\" title=\"17.4. Offline Access\"></a>17.4. Offline Access</h3><p>Offline access enables access to Claims when the user is not present, posing greater privacy risk than the Claims transfer when the user is present. Therefore, it is prudent to obtain explicit consent for offline access to resources. This specification mandates the use of the <code>prompt</code> parameter to obtain consent unless it is already known that the request complies with the conditions for processing the request in each jurisdiction.</p>\n<p>When an Access Token is returned via the User Agent using the Implicit Flow or Hybrid Flow, there is a greater risk of it being exposed to an attacker, who could later use it to access the UserInfo endpoint. If the Access Token does not enable offline access and the server can differentiate whether the Client request has been made offline or online, the risk will be substantially reduced. Therefore, this specification mandates ignoring the offline access request when the Access Token is transmitted through the User Agent. Note that differentiating between online and offline access from the server can be difficult especially for native clients. The server may well have to rely on heuristics. Also, the risk of exposure for the Access Token delivered through the User Agent for the Response Types of <code>code token</code> and <code>token</code> is the same. Thus, the implementations should be prepared to detect whether the Access Token was issued through the User Agent or directly from the Token Endpoint and deny offline access if the token was issued through the User Agent.</p>\n<p>Note that although these provisions require an explicit consent dialogue through the <code>prompt</code> parameter, the mere fact that the user pressed an “accept” button etc., might not constitute a valid consent. Developers should be aware that for the act of consent to be valid, typically, the impact of the terms have to be understood by the End-User, the consent must be freely given and not forced (i.e., other options have to be available), and the terms must fair and equitable. In general, it is advisable for the service to follow the required privacy principles in each jurisdiction and rely on other conditions for processing the request than simply explicit consent, as online self-service “explicit consent” often does not form a valid consent in some jurisdictions.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"18-IANA-Considerations\"><a href=\"#18-IANA-Considerations\" class=\"headerlink\" title=\"18. IANA Considerations\"></a>18. IANA Considerations</h3><hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"18-1-JSON-Web-Token-Claims-Registration\"><a href=\"#18-1-JSON-Web-Token-Claims-Registration\" class=\"headerlink\" title=\"18.1. JSON Web Token Claims Registration\"></a>18.1. JSON Web Token Claims Registration</h3><p>This specification registers the Claims defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a> in the IANA JSON Web Token Claims registry defined in [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JWT]</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"18-1-1-Registry-Contents\"><a href=\"#18-1-1-Registry-Contents\" class=\"headerlink\" title=\"18.1.1. Registry Contents\"></a>18.1.1. Registry Contents</h3><ul>\n<li><p>Claim Name: <code>name</code></p>\n</li>\n<li><p>Claim Description: Full name</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#112;&#x65;&#110;&#x69;&#x64;&#45;&#115;&#112;&#x65;&#99;&#x73;&#45;&#97;&#98;&#x40;&#x6c;&#x69;&#x73;&#116;&#115;&#46;&#x6f;&#x70;&#101;&#x6e;&#105;&#100;&#x2e;&#x6e;&#101;&#x74;\">&#111;&#112;&#x65;&#110;&#x69;&#x64;&#45;&#115;&#112;&#x65;&#99;&#x73;&#45;&#97;&#98;&#x40;&#x6c;&#x69;&#x73;&#116;&#115;&#46;&#x6f;&#x70;&#101;&#x6e;&#105;&#100;&#x2e;&#x6e;&#101;&#x74;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>given_name</code></p>\n</li>\n<li><p>Claim Description: Given name(s) or first name(s)</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#101;&#110;&#105;&#100;&#x2d;&#x73;&#x70;&#101;&#99;&#x73;&#45;&#x61;&#98;&#x40;&#x6c;&#105;&#115;&#x74;&#115;&#x2e;&#x6f;&#112;&#x65;&#x6e;&#105;&#x64;&#x2e;&#x6e;&#101;&#116;\">&#x6f;&#x70;&#101;&#110;&#105;&#100;&#x2d;&#x73;&#x70;&#101;&#99;&#x73;&#45;&#x61;&#98;&#x40;&#x6c;&#105;&#115;&#x74;&#115;&#x2e;&#x6f;&#112;&#x65;&#x6e;&#105;&#x64;&#x2e;&#x6e;&#101;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>family_name</code></p>\n</li>\n<li><p>Claim Description: Surname(s) or last name(s)</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#x70;&#x65;&#110;&#105;&#x64;&#45;&#115;&#x70;&#101;&#x63;&#115;&#x2d;&#x61;&#98;&#x40;&#x6c;&#105;&#115;&#x74;&#x73;&#x2e;&#111;&#x70;&#x65;&#110;&#105;&#x64;&#x2e;&#110;&#101;&#x74;\">&#111;&#x70;&#x65;&#110;&#105;&#x64;&#45;&#115;&#x70;&#101;&#x63;&#115;&#x2d;&#x61;&#98;&#x40;&#x6c;&#105;&#115;&#x74;&#x73;&#x2e;&#111;&#x70;&#x65;&#110;&#105;&#x64;&#x2e;&#110;&#101;&#x74;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>middle_name</code></p>\n</li>\n<li><p>Claim Description: Middle name(s)</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#101;&#x6e;&#105;&#100;&#x2d;&#115;&#x70;&#101;&#99;&#115;&#45;&#97;&#x62;&#x40;&#x6c;&#105;&#115;&#x74;&#x73;&#46;&#x6f;&#x70;&#101;&#110;&#105;&#100;&#46;&#x6e;&#x65;&#x74;\">&#x6f;&#x70;&#101;&#x6e;&#105;&#100;&#x2d;&#115;&#x70;&#101;&#99;&#115;&#45;&#97;&#x62;&#x40;&#x6c;&#105;&#115;&#x74;&#x73;&#46;&#x6f;&#x70;&#101;&#110;&#105;&#100;&#46;&#x6e;&#x65;&#x74;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>nickname</code></p>\n</li>\n<li><p>Claim Description: Casual name</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#x70;&#101;&#x6e;&#105;&#x64;&#x2d;&#115;&#x70;&#x65;&#99;&#x73;&#45;&#97;&#98;&#x40;&#x6c;&#105;&#115;&#116;&#x73;&#46;&#x6f;&#112;&#101;&#110;&#x69;&#x64;&#46;&#110;&#101;&#116;\">&#111;&#x70;&#101;&#x6e;&#105;&#x64;&#x2d;&#115;&#x70;&#x65;&#99;&#x73;&#45;&#97;&#98;&#x40;&#x6c;&#105;&#115;&#116;&#x73;&#46;&#x6f;&#112;&#101;&#110;&#x69;&#x64;&#46;&#110;&#101;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>preferred_username</code></p>\n</li>\n<li><p>Claim Description: Shorthand name by which the End-User wishes to be referred to</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#112;&#101;&#110;&#105;&#x64;&#45;&#x73;&#112;&#x65;&#99;&#115;&#45;&#x61;&#x62;&#x40;&#x6c;&#105;&#x73;&#116;&#x73;&#x2e;&#x6f;&#x70;&#x65;&#110;&#105;&#100;&#x2e;&#110;&#101;&#116;\">&#111;&#112;&#101;&#110;&#105;&#x64;&#45;&#x73;&#112;&#x65;&#99;&#115;&#45;&#x61;&#x62;&#x40;&#x6c;&#105;&#x73;&#116;&#x73;&#x2e;&#x6f;&#x70;&#x65;&#110;&#105;&#100;&#x2e;&#110;&#101;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>profile</code></p>\n</li>\n<li><p>Claim Description: Profile page URL</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#x70;&#101;&#110;&#x69;&#100;&#x2d;&#115;&#x70;&#101;&#99;&#115;&#45;&#x61;&#98;&#x40;&#108;&#105;&#x73;&#116;&#x73;&#x2e;&#111;&#112;&#101;&#x6e;&#x69;&#100;&#46;&#110;&#101;&#116;\">&#111;&#x70;&#101;&#110;&#x69;&#100;&#x2d;&#115;&#x70;&#101;&#99;&#115;&#45;&#x61;&#98;&#x40;&#108;&#105;&#x73;&#116;&#x73;&#x2e;&#111;&#112;&#101;&#x6e;&#x69;&#100;&#46;&#110;&#101;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>picture</code></p>\n</li>\n<li><p>Claim Description: Profile picture URL</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#101;&#x6e;&#105;&#x64;&#45;&#115;&#x70;&#101;&#99;&#x73;&#45;&#x61;&#x62;&#x40;&#108;&#105;&#115;&#116;&#x73;&#46;&#x6f;&#x70;&#101;&#110;&#105;&#100;&#46;&#110;&#x65;&#116;\">&#x6f;&#112;&#101;&#x6e;&#105;&#x64;&#45;&#115;&#x70;&#101;&#99;&#x73;&#45;&#x61;&#x62;&#x40;&#108;&#105;&#115;&#116;&#x73;&#46;&#x6f;&#x70;&#101;&#110;&#105;&#100;&#46;&#110;&#x65;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>website</code></p>\n</li>\n<li><p>Claim Description: Web page or blog URL</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#101;&#x6e;&#x69;&#100;&#45;&#115;&#x70;&#101;&#99;&#x73;&#45;&#x61;&#x62;&#64;&#x6c;&#x69;&#115;&#x74;&#115;&#x2e;&#111;&#112;&#x65;&#110;&#x69;&#100;&#46;&#110;&#x65;&#116;\">&#x6f;&#x70;&#101;&#x6e;&#x69;&#100;&#45;&#115;&#x70;&#101;&#99;&#x73;&#45;&#x61;&#x62;&#64;&#x6c;&#x69;&#115;&#x74;&#115;&#x2e;&#111;&#112;&#x65;&#110;&#x69;&#100;&#46;&#110;&#x65;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>email</code></p>\n</li>\n<li><p>Claim Description: Preferred e-mail address</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#x65;&#x6e;&#105;&#x64;&#45;&#x73;&#112;&#x65;&#x63;&#115;&#x2d;&#97;&#98;&#x40;&#x6c;&#x69;&#x73;&#116;&#115;&#x2e;&#x6f;&#x70;&#x65;&#110;&#105;&#x64;&#x2e;&#x6e;&#x65;&#116;\">&#x6f;&#x70;&#x65;&#x6e;&#105;&#x64;&#45;&#x73;&#112;&#x65;&#x63;&#115;&#x2d;&#97;&#98;&#x40;&#x6c;&#x69;&#x73;&#116;&#115;&#x2e;&#x6f;&#x70;&#x65;&#110;&#105;&#x64;&#x2e;&#x6e;&#x65;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>email_verified</code></p>\n</li>\n<li><p>Claim Description: True if the e-mail address has been verified; otherwise false</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#x65;&#110;&#x69;&#100;&#45;&#x73;&#112;&#x65;&#99;&#x73;&#x2d;&#x61;&#x62;&#x40;&#x6c;&#x69;&#115;&#x74;&#115;&#46;&#111;&#112;&#101;&#110;&#x69;&#x64;&#x2e;&#x6e;&#101;&#116;\">&#x6f;&#112;&#x65;&#110;&#x69;&#100;&#45;&#x73;&#112;&#x65;&#99;&#x73;&#x2d;&#x61;&#x62;&#x40;&#x6c;&#x69;&#115;&#x74;&#115;&#46;&#111;&#112;&#101;&#110;&#x69;&#x64;&#x2e;&#x6e;&#101;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>gender</code></p>\n</li>\n<li><p>Claim Description: Gender</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#x65;&#110;&#x69;&#100;&#45;&#115;&#112;&#x65;&#x63;&#x73;&#x2d;&#97;&#x62;&#64;&#108;&#x69;&#115;&#116;&#115;&#x2e;&#111;&#112;&#x65;&#110;&#105;&#x64;&#x2e;&#x6e;&#101;&#116;\">&#x6f;&#112;&#x65;&#110;&#x69;&#100;&#45;&#115;&#112;&#x65;&#x63;&#x73;&#x2d;&#97;&#x62;&#64;&#108;&#x69;&#115;&#116;&#115;&#x2e;&#111;&#112;&#x65;&#110;&#105;&#x64;&#x2e;&#x6e;&#101;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>birthdate</code></p>\n</li>\n<li><p>Claim Description: Birthday</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#x70;&#101;&#110;&#x69;&#100;&#x2d;&#x73;&#x70;&#101;&#x63;&#115;&#x2d;&#x61;&#x62;&#x40;&#x6c;&#x69;&#115;&#x74;&#115;&#46;&#x6f;&#112;&#101;&#x6e;&#105;&#100;&#46;&#x6e;&#x65;&#116;\">&#111;&#x70;&#101;&#110;&#x69;&#100;&#x2d;&#x73;&#x70;&#101;&#x63;&#115;&#x2d;&#x61;&#x62;&#x40;&#x6c;&#x69;&#115;&#x74;&#115;&#46;&#x6f;&#112;&#101;&#x6e;&#105;&#100;&#46;&#x6e;&#x65;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>zoneinfo</code></p>\n</li>\n<li><p>Claim Description: Time zone</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#x70;&#101;&#110;&#105;&#x64;&#x2d;&#x73;&#112;&#101;&#x63;&#115;&#45;&#97;&#x62;&#x40;&#108;&#x69;&#x73;&#x74;&#115;&#46;&#111;&#112;&#x65;&#x6e;&#x69;&#100;&#x2e;&#110;&#101;&#116;\">&#111;&#x70;&#101;&#110;&#105;&#x64;&#x2d;&#x73;&#112;&#101;&#x63;&#115;&#45;&#97;&#x62;&#x40;&#108;&#x69;&#x73;&#x74;&#115;&#46;&#111;&#112;&#x65;&#x6e;&#x69;&#100;&#x2e;&#110;&#101;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>locale</code></p>\n</li>\n<li><p>Claim Description: Locale</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#x70;&#101;&#x6e;&#x69;&#100;&#x2d;&#115;&#112;&#101;&#x63;&#115;&#45;&#x61;&#98;&#x40;&#x6c;&#x69;&#x73;&#x74;&#115;&#x2e;&#x6f;&#x70;&#x65;&#x6e;&#105;&#100;&#x2e;&#110;&#x65;&#x74;\">&#111;&#x70;&#101;&#x6e;&#x69;&#100;&#x2d;&#115;&#112;&#101;&#x63;&#115;&#45;&#x61;&#98;&#x40;&#x6c;&#x69;&#x73;&#x74;&#115;&#x2e;&#x6f;&#x70;&#x65;&#x6e;&#105;&#100;&#x2e;&#110;&#x65;&#x74;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>phone_number</code></p>\n</li>\n<li><p>Claim Description: Preferred telephone number</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#112;&#101;&#x6e;&#x69;&#x64;&#45;&#x73;&#x70;&#x65;&#99;&#115;&#x2d;&#x61;&#x62;&#x40;&#x6c;&#105;&#x73;&#x74;&#x73;&#46;&#x6f;&#x70;&#x65;&#110;&#105;&#x64;&#x2e;&#x6e;&#101;&#116;\">&#111;&#112;&#101;&#x6e;&#x69;&#x64;&#45;&#x73;&#x70;&#x65;&#99;&#115;&#x2d;&#x61;&#x62;&#x40;&#x6c;&#105;&#x73;&#x74;&#x73;&#46;&#x6f;&#x70;&#x65;&#110;&#105;&#x64;&#x2e;&#x6e;&#101;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>phone_number_verified</code></p>\n</li>\n<li><p>Claim Description: True if the phone number has been verified; otherwise false</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#x65;&#x6e;&#x69;&#100;&#x2d;&#115;&#x70;&#101;&#x63;&#x73;&#x2d;&#x61;&#x62;&#64;&#x6c;&#105;&#115;&#x74;&#x73;&#x2e;&#111;&#x70;&#x65;&#110;&#x69;&#x64;&#x2e;&#x6e;&#x65;&#x74;\">&#x6f;&#112;&#x65;&#x6e;&#x69;&#100;&#x2d;&#115;&#x70;&#101;&#x63;&#x73;&#x2d;&#x61;&#x62;&#64;&#x6c;&#105;&#115;&#x74;&#x73;&#x2e;&#111;&#x70;&#x65;&#110;&#x69;&#x64;&#x2e;&#x6e;&#x65;&#x74;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>address</code></p>\n</li>\n<li><p>Claim Description: Preferred postal address</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#x70;&#101;&#110;&#105;&#100;&#x2d;&#x73;&#x70;&#101;&#x63;&#115;&#x2d;&#x61;&#98;&#x40;&#x6c;&#x69;&#x73;&#x74;&#115;&#x2e;&#x6f;&#112;&#x65;&#x6e;&#105;&#x64;&#x2e;&#110;&#101;&#x74;\">&#111;&#x70;&#101;&#110;&#105;&#100;&#x2d;&#x73;&#x70;&#101;&#x63;&#115;&#x2d;&#x61;&#98;&#x40;&#x6c;&#x69;&#x73;&#x74;&#115;&#x2e;&#x6f;&#112;&#x65;&#x6e;&#105;&#x64;&#x2e;&#110;&#101;&#x74;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>updated_at</code></p>\n</li>\n<li><p>Claim Description: Time the information was last updated</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#x65;&#x6e;&#105;&#100;&#x2d;&#x73;&#112;&#101;&#x63;&#115;&#45;&#97;&#x62;&#x40;&#x6c;&#105;&#x73;&#x74;&#x73;&#x2e;&#x6f;&#112;&#101;&#x6e;&#105;&#x64;&#46;&#x6e;&#x65;&#x74;\">&#x6f;&#112;&#x65;&#x6e;&#105;&#100;&#x2d;&#x73;&#112;&#101;&#x63;&#115;&#45;&#97;&#x62;&#x40;&#x6c;&#105;&#x73;&#x74;&#x73;&#x2e;&#x6f;&#112;&#101;&#x6e;&#105;&#x64;&#46;&#x6e;&#x65;&#x74;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>azp</code></p>\n</li>\n<li><p>Claim Description: Authorized party - the party to which the ID Token was issued</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#x65;&#110;&#x69;&#100;&#x2d;&#115;&#x70;&#101;&#99;&#x73;&#45;&#x61;&#x62;&#64;&#x6c;&#x69;&#115;&#116;&#x73;&#x2e;&#111;&#x70;&#101;&#x6e;&#x69;&#x64;&#x2e;&#x6e;&#x65;&#116;\">&#x6f;&#112;&#x65;&#110;&#x69;&#100;&#x2d;&#115;&#x70;&#101;&#99;&#x73;&#45;&#x61;&#x62;&#64;&#x6c;&#x69;&#115;&#116;&#x73;&#x2e;&#111;&#x70;&#101;&#x6e;&#x69;&#x64;&#x2e;&#x6e;&#x65;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>nonce</code></p>\n</li>\n<li><p>Claim Description: Value used to associate a Client session with an ID Token</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#101;&#110;&#x69;&#x64;&#45;&#x73;&#x70;&#x65;&#99;&#115;&#x2d;&#x61;&#98;&#x40;&#x6c;&#105;&#115;&#116;&#115;&#46;&#111;&#x70;&#x65;&#x6e;&#105;&#x64;&#46;&#x6e;&#101;&#116;\">&#x6f;&#x70;&#101;&#110;&#x69;&#x64;&#45;&#x73;&#x70;&#x65;&#99;&#115;&#x2d;&#x61;&#98;&#x40;&#x6c;&#105;&#115;&#116;&#115;&#46;&#111;&#x70;&#x65;&#x6e;&#105;&#x64;&#46;&#x6e;&#101;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>auth_time</code></p>\n</li>\n<li><p>Claim Description: Time when the authentication occurred</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#x65;&#x6e;&#x69;&#100;&#45;&#115;&#112;&#x65;&#x63;&#x73;&#x2d;&#97;&#x62;&#x40;&#108;&#x69;&#x73;&#116;&#115;&#46;&#x6f;&#x70;&#x65;&#x6e;&#x69;&#100;&#x2e;&#110;&#101;&#x74;\">&#x6f;&#112;&#x65;&#x6e;&#x69;&#100;&#45;&#115;&#112;&#x65;&#x63;&#x73;&#x2d;&#97;&#x62;&#x40;&#108;&#x69;&#x73;&#116;&#115;&#46;&#x6f;&#x70;&#x65;&#x6e;&#x69;&#100;&#x2e;&#110;&#101;&#x74;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>at_hash</code></p>\n</li>\n<li><p>Claim Description: Access Token hash value</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#112;&#x65;&#110;&#105;&#x64;&#x2d;&#115;&#x70;&#101;&#x63;&#115;&#45;&#97;&#x62;&#64;&#x6c;&#x69;&#115;&#x74;&#x73;&#46;&#111;&#x70;&#x65;&#x6e;&#x69;&#x64;&#x2e;&#x6e;&#x65;&#x74;\">&#111;&#112;&#x65;&#110;&#105;&#x64;&#x2d;&#115;&#x70;&#101;&#x63;&#115;&#45;&#97;&#x62;&#64;&#x6c;&#x69;&#115;&#x74;&#x73;&#46;&#111;&#x70;&#x65;&#x6e;&#x69;&#x64;&#x2e;&#x6e;&#x65;&#x74;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>c_hash</code></p>\n</li>\n<li><p>Claim Description: Code hash value</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#101;&#110;&#x69;&#100;&#x2d;&#x73;&#x70;&#x65;&#99;&#x73;&#45;&#x61;&#98;&#64;&#x6c;&#x69;&#x73;&#116;&#x73;&#x2e;&#111;&#x70;&#x65;&#110;&#x69;&#100;&#46;&#x6e;&#101;&#x74;\">&#x6f;&#112;&#101;&#110;&#x69;&#100;&#x2d;&#x73;&#x70;&#x65;&#99;&#x73;&#45;&#x61;&#98;&#64;&#x6c;&#x69;&#x73;&#116;&#x73;&#x2e;&#111;&#x70;&#x65;&#110;&#x69;&#100;&#46;&#x6e;&#101;&#x74;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#HybridIDToken\">Section 3.3.2.11</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>acr</code></p>\n</li>\n<li><p>Claim Description: Authentication Context Class Reference</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#x65;&#110;&#105;&#x64;&#x2d;&#x73;&#112;&#x65;&#x63;&#x73;&#45;&#97;&#98;&#x40;&#x6c;&#x69;&#115;&#116;&#x73;&#46;&#111;&#x70;&#x65;&#110;&#105;&#100;&#x2e;&#x6e;&#101;&#116;\">&#x6f;&#112;&#x65;&#110;&#105;&#x64;&#x2d;&#x73;&#112;&#x65;&#x63;&#x73;&#45;&#97;&#98;&#x40;&#x6c;&#x69;&#115;&#116;&#x73;&#46;&#111;&#x70;&#x65;&#110;&#105;&#100;&#x2e;&#x6e;&#101;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>amr</code></p>\n</li>\n<li><p>Claim Description: Authentication Methods References</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#101;&#110;&#105;&#x64;&#45;&#x73;&#x70;&#101;&#99;&#115;&#45;&#97;&#x62;&#x40;&#x6c;&#x69;&#x73;&#x74;&#115;&#x2e;&#111;&#112;&#x65;&#110;&#105;&#x64;&#46;&#x6e;&#x65;&#116;\">&#x6f;&#112;&#101;&#110;&#105;&#x64;&#45;&#x73;&#x70;&#101;&#99;&#115;&#45;&#97;&#x62;&#x40;&#x6c;&#x69;&#x73;&#x74;&#115;&#x2e;&#111;&#112;&#x65;&#110;&#105;&#x64;&#46;&#x6e;&#x65;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>sub_jwk</code></p>\n</li>\n<li><p>Claim Description: Public key used to check the signature of an ID Token</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#x65;&#110;&#x69;&#100;&#x2d;&#x73;&#112;&#101;&#x63;&#x73;&#x2d;&#97;&#98;&#64;&#108;&#105;&#115;&#116;&#x73;&#x2e;&#111;&#112;&#x65;&#110;&#105;&#100;&#46;&#x6e;&#x65;&#x74;\">&#x6f;&#x70;&#x65;&#110;&#x69;&#100;&#x2d;&#x73;&#112;&#101;&#x63;&#x73;&#x2d;&#97;&#98;&#64;&#108;&#105;&#115;&#116;&#x73;&#x2e;&#111;&#112;&#x65;&#110;&#105;&#100;&#46;&#x6e;&#x65;&#x74;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#SelfIssuedResponse\">Section 7.4</a> of this document</p>\n</li>\n</ul>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"18-2-OAuth-Parameters-Registration\"><a href=\"#18-2-OAuth-Parameters-Registration\" class=\"headerlink\" title=\"18.2. OAuth Parameters Registration\"></a>18.2. OAuth Parameters Registration</h3><p>This specification registers the following parameters in the IANA OAuth Parameters registry defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">RFC 6749</a> [RFC6749].</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"18-2-1-Registry-Contents\"><a href=\"#18-2-1-Registry-Contents\" class=\"headerlink\" title=\"18.2.1. Registry Contents\"></a>18.2.1. Registry Contents</h3><ul>\n<li><p>Parameter name: <code>nonce</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Request</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#101;&#x6e;&#105;&#x64;&#x2d;&#x73;&#112;&#101;&#99;&#115;&#x2d;&#97;&#x62;&#x40;&#x6c;&#105;&#115;&#x74;&#x73;&#46;&#111;&#112;&#101;&#x6e;&#105;&#100;&#x2e;&#110;&#x65;&#116;\">&#x6f;&#112;&#101;&#x6e;&#105;&#x64;&#x2d;&#x73;&#112;&#101;&#99;&#115;&#x2d;&#97;&#x62;&#x40;&#x6c;&#105;&#115;&#x74;&#x73;&#46;&#111;&#112;&#101;&#x6e;&#105;&#100;&#x2e;&#110;&#x65;&#116;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n<li><p>Parameter name: <code>display</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Request</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#x65;&#x6e;&#105;&#x64;&#x2d;&#115;&#112;&#x65;&#99;&#x73;&#45;&#97;&#98;&#x40;&#x6c;&#105;&#x73;&#116;&#x73;&#46;&#x6f;&#x70;&#101;&#110;&#x69;&#100;&#46;&#110;&#x65;&#x74;\">&#x6f;&#112;&#x65;&#x6e;&#105;&#x64;&#x2d;&#115;&#112;&#x65;&#99;&#x73;&#45;&#97;&#98;&#x40;&#x6c;&#105;&#x73;&#116;&#x73;&#46;&#x6f;&#x70;&#101;&#110;&#x69;&#100;&#46;&#110;&#x65;&#x74;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n<li><p>Parameter name: <code>prompt</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Request</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#101;&#110;&#105;&#x64;&#45;&#115;&#112;&#101;&#x63;&#x73;&#45;&#x61;&#98;&#64;&#108;&#x69;&#x73;&#x74;&#115;&#x2e;&#111;&#112;&#101;&#x6e;&#105;&#100;&#46;&#110;&#x65;&#116;\">&#x6f;&#112;&#101;&#110;&#105;&#x64;&#45;&#115;&#112;&#101;&#x63;&#x73;&#45;&#x61;&#98;&#64;&#108;&#x69;&#x73;&#x74;&#115;&#x2e;&#111;&#112;&#101;&#x6e;&#105;&#100;&#46;&#110;&#x65;&#116;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n<li><p>Parameter name: <code>max_age</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Request</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#x65;&#110;&#105;&#x64;&#x2d;&#x73;&#112;&#x65;&#99;&#x73;&#x2d;&#97;&#x62;&#x40;&#108;&#105;&#115;&#116;&#x73;&#46;&#111;&#112;&#x65;&#110;&#105;&#100;&#46;&#110;&#101;&#116;\">&#x6f;&#x70;&#x65;&#110;&#105;&#x64;&#x2d;&#x73;&#112;&#x65;&#99;&#x73;&#x2d;&#97;&#x62;&#x40;&#108;&#105;&#115;&#116;&#x73;&#46;&#111;&#112;&#x65;&#110;&#105;&#100;&#46;&#110;&#101;&#116;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n<li><p>Parameter name: <code>ui_locales</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Request</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#x65;&#110;&#x69;&#x64;&#45;&#x73;&#112;&#x65;&#x63;&#115;&#45;&#97;&#98;&#64;&#108;&#105;&#115;&#116;&#115;&#46;&#x6f;&#112;&#101;&#110;&#105;&#100;&#46;&#x6e;&#x65;&#x74;\">&#x6f;&#112;&#x65;&#110;&#x69;&#x64;&#45;&#x73;&#112;&#x65;&#x63;&#115;&#45;&#97;&#98;&#64;&#108;&#105;&#115;&#116;&#115;&#46;&#x6f;&#112;&#101;&#110;&#105;&#100;&#46;&#x6e;&#x65;&#x74;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n<li><p>Parameter name: <code>claims_locales</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Request</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#101;&#x6e;&#x69;&#100;&#x2d;&#x73;&#x70;&#101;&#x63;&#115;&#45;&#x61;&#x62;&#x40;&#108;&#105;&#115;&#116;&#115;&#x2e;&#111;&#x70;&#x65;&#110;&#105;&#100;&#46;&#x6e;&#x65;&#x74;\">&#x6f;&#x70;&#101;&#x6e;&#x69;&#100;&#x2d;&#x73;&#x70;&#101;&#x63;&#115;&#45;&#x61;&#x62;&#x40;&#108;&#105;&#115;&#116;&#115;&#x2e;&#111;&#x70;&#x65;&#110;&#105;&#100;&#46;&#x6e;&#x65;&#x74;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts\">Section 5.2</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n<li><p>Parameter name: <code>id_token_hint</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Request</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#x65;&#110;&#x69;&#x64;&#45;&#x73;&#x70;&#101;&#99;&#x73;&#x2d;&#97;&#98;&#x40;&#108;&#x69;&#115;&#116;&#x73;&#x2e;&#x6f;&#x70;&#101;&#110;&#x69;&#x64;&#x2e;&#x6e;&#x65;&#116;\">&#x6f;&#x70;&#x65;&#110;&#x69;&#x64;&#45;&#x73;&#x70;&#101;&#99;&#x73;&#x2d;&#97;&#98;&#x40;&#108;&#x69;&#115;&#116;&#x73;&#x2e;&#x6f;&#x70;&#101;&#110;&#x69;&#x64;&#x2e;&#x6e;&#x65;&#116;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n<li><p>Parameter name: <code>login_hint</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Request</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#x65;&#x6e;&#x69;&#100;&#x2d;&#x73;&#112;&#x65;&#x63;&#x73;&#x2d;&#x61;&#x62;&#x40;&#108;&#105;&#115;&#x74;&#x73;&#46;&#111;&#x70;&#101;&#110;&#x69;&#100;&#x2e;&#110;&#101;&#x74;\">&#x6f;&#x70;&#x65;&#x6e;&#x69;&#100;&#x2d;&#x73;&#112;&#x65;&#x63;&#x73;&#x2d;&#x61;&#x62;&#x40;&#108;&#105;&#115;&#x74;&#x73;&#46;&#111;&#x70;&#101;&#110;&#x69;&#100;&#x2e;&#110;&#101;&#x74;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n<li><p>Parameter name: <code>acr_values</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Request</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#101;&#110;&#x69;&#x64;&#45;&#x73;&#112;&#x65;&#x63;&#115;&#x2d;&#97;&#98;&#x40;&#x6c;&#x69;&#x73;&#116;&#115;&#46;&#111;&#x70;&#x65;&#x6e;&#105;&#100;&#46;&#x6e;&#101;&#x74;\">&#x6f;&#x70;&#101;&#110;&#x69;&#x64;&#45;&#x73;&#112;&#x65;&#x63;&#115;&#x2d;&#97;&#98;&#x40;&#x6c;&#x69;&#x73;&#116;&#115;&#46;&#111;&#x70;&#x65;&#x6e;&#105;&#100;&#46;&#x6e;&#101;&#x74;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n<li><p>Parameter name: <code>claims</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Request</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#x65;&#x6e;&#x69;&#100;&#45;&#115;&#x70;&#101;&#99;&#x73;&#45;&#x61;&#98;&#64;&#x6c;&#x69;&#115;&#x74;&#115;&#x2e;&#x6f;&#x70;&#101;&#x6e;&#x69;&#x64;&#46;&#x6e;&#x65;&#x74;\">&#x6f;&#x70;&#x65;&#x6e;&#x69;&#100;&#45;&#115;&#x70;&#101;&#99;&#x73;&#45;&#x61;&#98;&#64;&#x6c;&#x69;&#115;&#x74;&#115;&#x2e;&#x6f;&#x70;&#101;&#x6e;&#x69;&#x64;&#46;&#x6e;&#x65;&#x74;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter\">Section 5.5</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n<li><p>Parameter name: <code>registration</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Request</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#101;&#110;&#x69;&#100;&#45;&#115;&#112;&#x65;&#99;&#115;&#x2d;&#97;&#98;&#64;&#x6c;&#x69;&#115;&#116;&#115;&#x2e;&#x6f;&#112;&#101;&#110;&#x69;&#x64;&#x2e;&#x6e;&#101;&#x74;\">&#x6f;&#x70;&#101;&#110;&#x69;&#100;&#45;&#115;&#112;&#x65;&#99;&#115;&#x2d;&#97;&#98;&#64;&#x6c;&#x69;&#115;&#116;&#115;&#x2e;&#x6f;&#112;&#101;&#110;&#x69;&#x64;&#x2e;&#x6e;&#101;&#x74;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RegistrationParameter\">Section 7.2.1</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n<li><p>Parameter name: <code>request</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Request</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#101;&#110;&#x69;&#x64;&#x2d;&#x73;&#x70;&#101;&#99;&#115;&#45;&#x61;&#98;&#x40;&#108;&#105;&#115;&#x74;&#x73;&#x2e;&#111;&#112;&#101;&#110;&#x69;&#100;&#46;&#110;&#101;&#116;\">&#x6f;&#x70;&#101;&#110;&#x69;&#x64;&#x2d;&#x73;&#x70;&#101;&#99;&#115;&#45;&#x61;&#98;&#x40;&#108;&#105;&#115;&#x74;&#x73;&#x2e;&#111;&#112;&#101;&#110;&#x69;&#100;&#46;&#110;&#101;&#116;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWTRequests\">Section 6</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n<li><p>Parameter name: <code>request_uri</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Request</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#x65;&#x6e;&#x69;&#x64;&#45;&#x73;&#x70;&#x65;&#99;&#x73;&#45;&#97;&#x62;&#x40;&#x6c;&#x69;&#115;&#x74;&#x73;&#x2e;&#x6f;&#112;&#x65;&#x6e;&#105;&#x64;&#46;&#x6e;&#101;&#116;\">&#x6f;&#112;&#x65;&#x6e;&#x69;&#x64;&#45;&#x73;&#x70;&#x65;&#99;&#x73;&#45;&#97;&#x62;&#x40;&#x6c;&#x69;&#115;&#x74;&#x73;&#x2e;&#x6f;&#112;&#x65;&#x6e;&#105;&#x64;&#46;&#x6e;&#101;&#116;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWTRequests\">Section 6</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n<li><p>Parameter name: <code>id_token</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Response, Access Token Response</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#x65;&#x6e;&#105;&#x64;&#x2d;&#115;&#112;&#x65;&#x63;&#x73;&#x2d;&#x61;&#x62;&#64;&#x6c;&#x69;&#115;&#116;&#x73;&#x2e;&#x6f;&#x70;&#101;&#x6e;&#105;&#x64;&#46;&#110;&#101;&#x74;\">&#x6f;&#112;&#x65;&#x6e;&#105;&#x64;&#x2d;&#115;&#112;&#x65;&#x63;&#x73;&#x2d;&#x61;&#x62;&#64;&#x6c;&#x69;&#115;&#116;&#x73;&#x2e;&#x6f;&#x70;&#101;&#x6e;&#105;&#x64;&#46;&#110;&#101;&#x74;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#TokenResponse\">Section 3.1.3.3</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n</ul>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"18-3-OAuth-Extensions-Error-Registration\"><a href=\"#18-3-OAuth-Extensions-Error-Registration\" class=\"headerlink\" title=\"18.3. OAuth Extensions Error Registration\"></a>18.3. OAuth Extensions Error Registration</h3><p>This specification registers the following errors in the IANA OAuth Extensions Error registry defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">RFC 6749</a> [RFC6749].</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"18-3-1-Registry-Contents\"><a href=\"#18-3-1-Registry-Contents\" class=\"headerlink\" title=\"18.3.1. Registry Contents\"></a>18.3.1. Registry Contents</h3><ul>\n<li><p>Error name: <code>interaction_required</code></p>\n</li>\n<li><p>Error usage location: Authorization Endpoint</p>\n</li>\n<li><p>Related protocol extension: OpenID Connect</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#112;&#x65;&#110;&#x69;&#100;&#45;&#x73;&#x70;&#x65;&#99;&#x73;&#45;&#97;&#x62;&#64;&#108;&#x69;&#115;&#x74;&#x73;&#x2e;&#x6f;&#112;&#101;&#110;&#105;&#100;&#46;&#x6e;&#x65;&#116;\">&#111;&#112;&#x65;&#110;&#x69;&#100;&#45;&#x73;&#x70;&#x65;&#99;&#x73;&#45;&#97;&#x62;&#64;&#108;&#x69;&#115;&#x74;&#x73;&#x2e;&#x6f;&#112;&#101;&#110;&#105;&#100;&#46;&#x6e;&#x65;&#116;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthError\">Section 3.1.2.6</a> of this document</p>\n</li>\n<li><p>Error name: <code>login_required</code></p>\n</li>\n<li><p>Error usage location: Authorization Endpoint</p>\n</li>\n<li><p>Related protocol extension: OpenID Connect</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#x65;&#110;&#105;&#100;&#45;&#115;&#x70;&#101;&#99;&#x73;&#45;&#97;&#98;&#64;&#108;&#105;&#x73;&#116;&#115;&#46;&#111;&#x70;&#101;&#110;&#105;&#100;&#46;&#110;&#x65;&#116;\">&#x6f;&#x70;&#x65;&#110;&#105;&#100;&#45;&#115;&#x70;&#101;&#99;&#x73;&#45;&#97;&#98;&#64;&#108;&#105;&#x73;&#116;&#115;&#46;&#111;&#x70;&#101;&#110;&#105;&#100;&#46;&#110;&#x65;&#116;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthError\">Section 3.1.2.6</a> of this document</p>\n</li>\n<li><p>Error name: <code>account_selection_required</code></p>\n</li>\n<li><p>Error usage location: Authorization Endpoint</p>\n</li>\n<li><p>Related protocol extension: OpenID Connect</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#x70;&#101;&#110;&#x69;&#100;&#x2d;&#x73;&#112;&#x65;&#99;&#115;&#x2d;&#97;&#98;&#64;&#x6c;&#105;&#115;&#x74;&#x73;&#x2e;&#111;&#x70;&#x65;&#x6e;&#x69;&#100;&#x2e;&#110;&#x65;&#x74;\">&#111;&#x70;&#101;&#110;&#x69;&#100;&#x2d;&#x73;&#112;&#x65;&#99;&#115;&#x2d;&#97;&#98;&#64;&#x6c;&#105;&#115;&#x74;&#x73;&#x2e;&#111;&#x70;&#x65;&#x6e;&#x69;&#100;&#x2e;&#110;&#x65;&#x74;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthError\">Section 3.1.2.6</a> of this document</p>\n</li>\n<li><p>Error name: <code>consent_required</code></p>\n</li>\n<li><p>Error usage location: Authorization Endpoint</p>\n</li>\n<li><p>Related protocol extension: OpenID Connect</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#101;&#x6e;&#x69;&#100;&#x2d;&#115;&#x70;&#x65;&#99;&#115;&#x2d;&#97;&#98;&#x40;&#x6c;&#x69;&#115;&#116;&#x73;&#46;&#x6f;&#x70;&#x65;&#110;&#x69;&#100;&#x2e;&#110;&#x65;&#x74;\">&#x6f;&#112;&#101;&#x6e;&#x69;&#100;&#x2d;&#115;&#x70;&#x65;&#99;&#115;&#x2d;&#97;&#98;&#x40;&#x6c;&#x69;&#115;&#116;&#x73;&#46;&#x6f;&#x70;&#x65;&#110;&#x69;&#100;&#x2e;&#110;&#x65;&#x74;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthError\">Section 3.1.2.6</a> of this document</p>\n</li>\n<li><p>Error name: <code>invalid_request_uri</code></p>\n</li>\n<li><p>Error usage location: Authorization Endpoint</p>\n</li>\n<li><p>Related protocol extension: OpenID Connect</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#x70;&#x65;&#x6e;&#105;&#x64;&#45;&#115;&#112;&#x65;&#x63;&#x73;&#45;&#97;&#x62;&#x40;&#108;&#105;&#115;&#x74;&#115;&#46;&#x6f;&#112;&#101;&#110;&#105;&#100;&#46;&#x6e;&#x65;&#x74;\">&#111;&#x70;&#x65;&#x6e;&#105;&#x64;&#45;&#115;&#112;&#x65;&#x63;&#x73;&#45;&#97;&#x62;&#x40;&#108;&#105;&#115;&#x74;&#115;&#46;&#x6f;&#112;&#101;&#110;&#105;&#100;&#46;&#x6e;&#x65;&#x74;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthError\">Section 3.1.2.6</a> of this document</p>\n</li>\n<li><p>Error name: <code>invalid_request_object</code></p>\n</li>\n<li><p>Error usage location: Authorization Endpoint</p>\n</li>\n<li><p>Related protocol extension: OpenID Connect</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#112;&#x65;&#x6e;&#x69;&#100;&#x2d;&#x73;&#112;&#x65;&#x63;&#115;&#x2d;&#x61;&#x62;&#x40;&#x6c;&#105;&#x73;&#x74;&#115;&#46;&#x6f;&#112;&#101;&#x6e;&#105;&#100;&#46;&#x6e;&#101;&#116;\">&#111;&#112;&#x65;&#x6e;&#x69;&#100;&#x2d;&#x73;&#112;&#x65;&#x63;&#115;&#x2d;&#x61;&#x62;&#x40;&#x6c;&#105;&#x73;&#x74;&#115;&#46;&#x6f;&#112;&#101;&#x6e;&#105;&#100;&#46;&#x6e;&#101;&#116;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthError\">Section 3.1.2.6</a> of this document</p>\n</li>\n<li><p>Error name: <code>request_not_supported</code></p>\n</li>\n<li><p>Error usage location: Authorization Endpoint</p>\n</li>\n<li><p>Related protocol extension: OpenID Connect</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#101;&#x6e;&#x69;&#100;&#45;&#x73;&#112;&#x65;&#x63;&#115;&#45;&#97;&#98;&#64;&#x6c;&#x69;&#x73;&#x74;&#x73;&#x2e;&#x6f;&#112;&#101;&#x6e;&#105;&#100;&#46;&#110;&#101;&#116;\">&#x6f;&#112;&#101;&#x6e;&#x69;&#100;&#45;&#x73;&#112;&#x65;&#x63;&#115;&#45;&#97;&#98;&#64;&#x6c;&#x69;&#x73;&#x74;&#x73;&#x2e;&#x6f;&#112;&#101;&#x6e;&#105;&#100;&#46;&#110;&#101;&#116;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthError\">Section 3.1.2.6</a> of this document</p>\n</li>\n<li><p>Error name: <code>request_uri_not_supported</code></p>\n</li>\n<li><p>Error usage location: Authorization Endpoint</p>\n</li>\n<li><p>Related protocol extension: OpenID Connect</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#x65;&#x6e;&#105;&#100;&#45;&#x73;&#112;&#101;&#x63;&#x73;&#x2d;&#97;&#x62;&#64;&#108;&#105;&#115;&#116;&#115;&#x2e;&#x6f;&#112;&#101;&#x6e;&#105;&#x64;&#46;&#x6e;&#101;&#x74;\">&#x6f;&#x70;&#x65;&#x6e;&#105;&#100;&#45;&#x73;&#112;&#101;&#x63;&#x73;&#x2d;&#97;&#x62;&#64;&#108;&#105;&#115;&#116;&#115;&#x2e;&#x6f;&#112;&#101;&#x6e;&#105;&#x64;&#46;&#x6e;&#101;&#x74;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthError\">Section 3.1.2.6</a> of this document</p>\n</li>\n<li><p>Error name: <code>registration_not_supported</code></p>\n</li>\n<li><p>Error usage location: Authorization Endpoint</p>\n</li>\n<li><p>Related protocol extension: OpenID Connect</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#112;&#x65;&#110;&#105;&#100;&#x2d;&#115;&#112;&#101;&#99;&#x73;&#45;&#97;&#x62;&#64;&#x6c;&#x69;&#x73;&#x74;&#115;&#x2e;&#x6f;&#x70;&#101;&#110;&#105;&#100;&#46;&#x6e;&#101;&#x74;\">&#111;&#112;&#x65;&#110;&#105;&#100;&#x2d;&#115;&#112;&#101;&#99;&#x73;&#45;&#97;&#x62;&#64;&#x6c;&#x69;&#x73;&#x74;&#115;&#x2e;&#x6f;&#x70;&#101;&#110;&#105;&#100;&#46;&#x6e;&#101;&#x74;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthError\">Section 3.1.2.6</a> of this document</p>\n</li>\n</ul>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"19-References\"><a href=\"#19-References\" class=\"headerlink\" title=\"19. References\"></a>19. References</h3><hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"19-1-Normative-References\"><a href=\"#19-1-Normative-References\" class=\"headerlink\" title=\"19.1. Normative References\"></a>19.1. Normative References</h3><table>\n<thead>\n<tr>\n<th>[CORS]</th>\n<th>Opera Software ASA, “<a href=\"http://www.w3.org/TR/access-control/\">Cross-Origin Resource Sharing</a>,” July 2010.</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>[E.164]</td>\n<td>International Telecommunication Union, “<a href=\"http://www.itu.int/rec/T-REC-E.164-201011-I/en\">E.164: The international public telecommunication numbering plan</a>,” 2010.</td>\n</tr>\n<tr>\n<td>[IANA.Language]</td>\n<td>Internet Assigned Numbers Authority (IANA), “<a href=\"http://www.iana.org/assignments/language-subtag-registry\">Language Subtag Registry</a>,” 2005.</td>\n</tr>\n<tr>\n<td>[ISO29115]</td>\n<td>International Organization for Standardization, “<a href=\"http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=45138\">ISO&#x2F;IEC 29115:2013 – Information technology - Security techniques - Entity authentication assurance framework</a>,” ISO&#x2F;IEC 29115, March 2013.</td>\n</tr>\n<tr>\n<td>[ISO3166-1]</td>\n<td>International Organization for Standardization, “<a href=\"http://www.w3.org/WAI/ER/IG/ert/iso639.htm\">ISO 3166-1:1997. Codes for the representation of names of countries and their subdivisions – Part 1: Country codes</a>,” 1997.</td>\n</tr>\n<tr>\n<td>[ISO639-1]</td>\n<td>International Organization for Standardization, “ISO 639-1:2002. Codes for the representation of names of languages – Part 1: Alpha-2 code,” 2002.</td>\n</tr>\n<tr>\n<td>[ISO8601-2004]</td>\n<td>International Organization for Standardization, “ISO 8601:2004. Data elements and interchange formats - Information interchange - Representation of dates and times,” 2004.</td>\n</tr>\n<tr>\n<td>[JWA]</td>\n<td>Jones, M., “<a href=\"http://tools.ietf.org/html/draft-ietf-jose-json-web-algorithms\">JSON Web Algorithms (JWA)</a>,” draft-ietf-jose-json-web-algorithms (work in progress), July 2014 (<a href=\"http://tools.ietf.org/html/draft-ietf-jose-json-web-algorithms-31\">HTML</a>).</td>\n</tr>\n<tr>\n<td>[JWE]</td>\n<td>Jones, M., Rescorla, E., and J. Hildebrand, “<a href=\"http://tools.ietf.org/html/draft-ietf-jose-json-web-encryption\">JSON Web Encryption (JWE)</a>,” draft-ietf-jose-json-web-encryption (work in progress), July 2014 (<a href=\"http://tools.ietf.org/html/draft-ietf-jose-json-web-encryption-31\">HTML</a>).</td>\n</tr>\n<tr>\n<td>[JWK]</td>\n<td>Jones, M., “<a href=\"http://tools.ietf.org/html/draft-ietf-jose-json-web-key\">JSON Web Key (JWK)</a>,” draft-ietf-jose-json-web-key (work in progress), July 2014 (<a href=\"http://tools.ietf.org/html/draft-ietf-jose-json-web-key-31\">HTML</a>).</td>\n</tr>\n<tr>\n<td>[JWS]</td>\n<td>Jones, M., Bradley, J., and N. Sakimura, “<a href=\"http://tools.ietf.org/html/draft-ietf-jose-json-web-signature\">JSON Web Signature (JWS)</a>,” draft-ietf-jose-json-web-signature (work in progress), July 2014 (<a href=\"http://tools.ietf.org/html/draft-ietf-jose-json-web-signature-31\">HTML</a>).</td>\n</tr>\n<tr>\n<td>[JWT]</td>\n<td>Jones, M., Bradley, J., and N. Sakimura, “<a href=\"http://tools.ietf.org/html/draft-ietf-oauth-json-web-token\">JSON Web Token (JWT)</a>,” draft-ietf-oauth-json-web-token (work in progress), July 2014 (<a href=\"http://tools.ietf.org/html/draft-ietf-oauth-json-web-token-25\">HTML</a>).</td>\n</tr>\n<tr>\n<td>[OAuth.Assertions]</td>\n<td>Campbell, B., Mortimore, C., Jones, M., and Y. Goland, “<a href=\"http://tools.ietf.org/html/draft-ietf-oauth-assertions\">Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants</a>,” draft-ietf-oauth-assertions (work in progress), July 2014 (<a href=\"http://tools.ietf.org/html/draft-ietf-oauth-assertions-17\">HTML</a>).</td>\n</tr>\n<tr>\n<td>[OAuth.JWT]</td>\n<td>Jones, M., Campbell, B., and C. Mortimore, “<a href=\"http://tools.ietf.org/html/draft-ietf-oauth-jwt-bearer\">JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants</a>,” draft-ietf-oauth-jwt-bearer (work in progress), July 2014 (<a href=\"http://tools.ietf.org/html/draft-ietf-oauth-jwt-bearer-10\">HTML</a>).</td>\n</tr>\n<tr>\n<td>[OAuth.Responses]</td>\n<td>de Medeiros, B., Ed., Scurtescu, M., Tarjan, P., and M. Jones, “<a href=\"http://openid.net/specs/oauth-v2-multiple-response-types-1_0.html\">OAuth 2.0 Multiple Response Type Encoding Practices</a>,” February 2014.</td>\n</tr>\n<tr>\n<td>[OpenID.Discovery]</td>\n<td>Sakimura, N., Bradley, J., Jones, M., and E. Jay, “<a href=\"http://openid.net/specs/openid-connect-discovery-1_0.html\">OpenID Connect Discovery 1.0</a>,” November 2014.</td>\n</tr>\n<tr>\n<td>[OpenID.Registration]</td>\n<td>Sakimura, N., Bradley, J., and M. Jones, “<a href=\"http://openid.net/specs/openid-connect-registration-1_0.html\">OpenID Connect Dynamic Client Registration 1.0</a>,” November 2014.</td>\n</tr>\n<tr>\n<td>[RFC2119]</td>\n<td><a href=\"mailto:sob@harvard.edu\">Bradner, S.</a>, “<a href=\"http://tools.ietf.org/html/rfc2119\">Key words for use in RFCs to Indicate Requirement Levels</a>,” BCP 14, RFC 2119, March 1997 (<a href=\"http://www.rfc-editor.org/rfc/rfc2119.txt\">TXT</a>, <a href=\"http://xml.resource.org/public/rfc/html/rfc2119.html\">HTML</a>, <a href=\"http://xml.resource.org/public/rfc/xml/rfc2119.xml\">XML</a>).</td>\n</tr>\n<tr>\n<td>[RFC2246]</td>\n<td><a href=\"mailto:tdierks@certicom.com\">Dierks, T.</a> and <a href=\"mailto:callen@certicom.com\">C. Allen</a>, “<a href=\"http://tools.ietf.org/html/rfc2246\">The TLS Protocol Version 1.0</a>,” RFC 2246, January 1999 (<a href=\"http://www.rfc-editor.org/rfc/rfc2246.txt\">TXT</a>).</td>\n</tr>\n<tr>\n<td>[RFC2616]</td>\n<td><a href=\"mailto:fielding@ics.uci.edu\">Fielding, R.</a>, <a href=\"mailto:jg@w3.org\">Gettys, J.</a>, <a href=\"mailto:mogul@wrl.dec.com\">Mogul, J.</a>, <a href=\"mailto:frystyk@w3.org\">Frystyk, H.</a>, <a href=\"mailto:masinter@parc.xerox.com\">Masinter, L.</a>, <a href=\"mailto:paulle@microsoft.com\">Leach, P.</a>, and <a href=\"mailto:timbl@w3.org\">T. Berners-Lee</a>, “<a href=\"http://tools.ietf.org/html/rfc2616\">Hypertext Transfer Protocol – HTTP&#x2F;1.1</a>,” RFC 2616, June 1999 (<a href=\"http://www.rfc-editor.org/rfc/rfc2616.txt\">TXT</a>, <a href=\"http://www.rfc-editor.org/rfc/rfc2616.ps\">PS</a>, <a href=\"http://www.rfc-editor.org/rfc/rfc2616.pdf\">PDF</a>, <a href=\"http://xml.resource.org/public/rfc/html/rfc2616.html\">HTML</a>, <a href=\"http://xml.resource.org/public/rfc/xml/rfc2616.xml\">XML</a>).</td>\n</tr>\n<tr>\n<td>[RFC3339]</td>\n<td><a href=\"mailto:GK@ACM.ORG\">Klyne, G., Ed.</a> and <a href=\"mailto:chris.newman@sun.com\">C. Newman</a>, “<a href=\"http://tools.ietf.org/html/rfc3339\">Date and Time on the Internet: Timestamps</a>,” RFC 3339, July 2002 (<a href=\"http://www.rfc-editor.org/rfc/rfc3339.txt\">TXT</a>, <a href=\"http://xml.resource.org/public/rfc/html/rfc3339.html\">HTML</a>, <a href=\"http://xml.resource.org/public/rfc/xml/rfc3339.xml\">XML</a>).</td>\n</tr>\n<tr>\n<td>[RFC3966]</td>\n<td>Schulzrinne, H., “<a href=\"http://tools.ietf.org/html/rfc3966\">The tel URI for Telephone Numbers</a>,” RFC 3966, December 2004 (<a href=\"http://www.rfc-editor.org/rfc/rfc3966.txt\">TXT</a>).</td>\n</tr>\n<tr>\n<td>[RFC3986]</td>\n<td><a href=\"mailto:timbl@w3.org\">Berners-Lee, T.</a>, <a href=\"mailto:fielding@gbiv.com\">Fielding, R.</a>, and <a href=\"mailto:LMM@acm.org\">L. Masinter</a>, “<a href=\"http://tools.ietf.org/html/rfc3986\">Uniform Resource Identifier (URI): Generic Syntax</a>,” STD 66, RFC 3986, January 2005 (<a href=\"http://www.rfc-editor.org/rfc/rfc3986.txt\">TXT</a>, <a href=\"http://xml.resource.org/public/rfc/html/rfc3986.html\">HTML</a>, <a href=\"http://xml.resource.org/public/rfc/xml/rfc3986.xml\">XML</a>).</td>\n</tr>\n<tr>\n<td>[RFC4627]</td>\n<td>Crockford, D., “<a href=\"http://tools.ietf.org/html/rfc4627\">The application&#x2F;json Media Type for JavaScript Object Notation (JSON)</a>,” RFC 4627, July 2006 (<a href=\"http://www.rfc-editor.org/rfc/rfc4627.txt\">TXT</a>).</td>\n</tr>\n<tr>\n<td>[RFC5246]</td>\n<td>Dierks, T. and E. Rescorla, “<a href=\"http://tools.ietf.org/html/rfc5246\">The Transport Layer Security (TLS) Protocol Version 1.2</a>,” RFC 5246, August 2008 (<a href=\"http://www.rfc-editor.org/rfc/rfc5246.txt\">TXT</a>).</td>\n</tr>\n<tr>\n<td>[RFC5322]</td>\n<td><a href=\"mailto:presnick@qualcomm.com\">Resnick, P., Ed.</a>, “<a href=\"http://tools.ietf.org/html/rfc5322\">Internet Message Format</a>,” RFC 5322, October 2008 (<a href=\"http://www.rfc-editor.org/rfc/rfc5322.txt\">TXT</a>, <a href=\"http://xml.resource.org/public/rfc/html/rfc5322.html\">HTML</a>, <a href=\"http://xml.resource.org/public/rfc/xml/rfc5322.xml\">XML</a>).</td>\n</tr>\n<tr>\n<td>[RFC5646]</td>\n<td>Phillips, A. and M. Davis, “<a href=\"http://tools.ietf.org/html/rfc5646\">Tags for Identifying Languages</a>,” BCP 47, RFC 5646, September 2009 (<a href=\"http://www.rfc-editor.org/rfc/rfc5646.txt\">TXT</a>).</td>\n</tr>\n<tr>\n<td>[RFC6125]</td>\n<td>Saint-Andre, P. and J. Hodges, “<a href=\"http://tools.ietf.org/html/rfc6125\">Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</a>,” RFC 6125, March 2011 (<a href=\"http://www.rfc-editor.org/rfc/rfc6125.txt\">TXT</a>).</td>\n</tr>\n<tr>\n<td>[RFC6711]</td>\n<td>Johansson, L., “<a href=\"http://tools.ietf.org/html/rfc6711\">An IANA Registry for Level of Assurance (LoA) Profiles</a>,” RFC 6711, August 2012 (<a href=\"http://www.rfc-editor.org/rfc/rfc6711.txt\">TXT</a>).</td>\n</tr>\n<tr>\n<td>[RFC6749]</td>\n<td>Hardt, D., “<a href=\"http://tools.ietf.org/html/rfc6749\">The OAuth 2.0 Authorization Framework</a>,” RFC 6749, October 2012 (<a href=\"http://www.rfc-editor.org/rfc/rfc6749.txt\">TXT</a>).</td>\n</tr>\n<tr>\n<td>[RFC6750]</td>\n<td>Jones, M. and D. Hardt, “<a href=\"http://tools.ietf.org/html/rfc6750\">The OAuth 2.0 Authorization Framework: Bearer Token Usage</a>,” RFC 6750, October 2012 (<a href=\"http://www.rfc-editor.org/rfc/rfc6750.txt\">TXT</a>).</td>\n</tr>\n<tr>\n<td>[RFC6819]</td>\n<td>Lodderstedt, T., McGloin, M., and P. Hunt, “<a href=\"http://tools.ietf.org/html/rfc6819\">OAuth 2.0 Threat Model and Security Considerations</a>,” RFC 6819, January 2013 (<a href=\"http://www.rfc-editor.org/rfc/rfc6819.txt\">TXT</a>).</td>\n</tr>\n<tr>\n<td>[USA15]</td>\n<td><a href=\"mailto:markdavis@google.com\">Davis, M.</a>, <a href=\"mailto:ken@unicode.org\">Whistler, K.</a>, and M. Dürst, “Unicode Normalization Forms,” Unicode Standard Annex 15, 09 2009.</td>\n</tr>\n<tr>\n<td>[W3C.REC-html401-19991224]</td>\n<td>Raggett, D., Hors, A., and I. Jacobs, “<a href=\"http://www.w3.org/TR/1999/REC-html401-19991224\">HTML 4.01 Specification</a>,” World Wide Web Consortium Recommendation REC-html401-19991224, December 1999 (<a href=\"http://www.w3.org/TR/1999/REC-html401-19991224\">HTML</a>).</td>\n</tr>\n<tr>\n<td>[zoneinfo]</td>\n<td>Public Domain, “<a href=\"http://www.twinsun.com/tz/tz-link.htm\">The tz database</a>,” June 2011.</td>\n</tr>\n</tbody></table>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"19-2-Informative-References\"><a href=\"#19-2-Informative-References\" class=\"headerlink\" title=\"19.2. Informative References\"></a>19.2. Informative References</h3><table>\n<thead>\n<tr>\n<th>[JWK.Thumbprint]</th>\n<th><a href=\"mailto:mbj@microsoft.com\">Jones, M.</a>, “<a href=\"http://tools.ietf.org/html/draft-jones-jose-jwk-thumbprint\">JSON Web Key (JWK) Thumbprint</a>,” draft-jones-jose-jwk-thumbprint (work in progress), July 2014 (<a href=\"http://tools.ietf.org/html/draft-jones-jose-jwk-thumbprint-01\">HTML</a>).</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>[OAuth.Post]</td>\n<td>Jones, M. and B. Campbell, “<a href=\"http://openid.net/specs/oauth-v2-form-post-response-mode-1_0.html\">OAuth 2.0 Form Post Response Mode</a>,” February 2014.</td>\n</tr>\n<tr>\n<td>[OpenID.2.0]</td>\n<td>OpenID Foundation, “OpenID Authentication 2.0,” December 2007 (<a href=\"http://openid.net/specs/openid-authentication-2_0.txt\">TXT</a>, <a href=\"http://openid.net/specs/openid-authentication-2_0.html\">HTML</a>).</td>\n</tr>\n<tr>\n<td>[OpenID.Basic]</td>\n<td>Sakimura, N., Bradley, J., Jones, M., de Medeiros, B., and C. Mortimore, “<a href=\"http://openid.net/specs/openid-connect-basic-1_0.html\">OpenID Connect Basic Client Implementer’s Guide 1.0</a>,” November 2014.</td>\n</tr>\n<tr>\n<td>[OpenID.Implicit]</td>\n<td>Sakimura, N., Bradley, J., Jones, M., de Medeiros, B., and C. Mortimore, “<a href=\"http://openid.net/specs/openid-connect-implicit-1_0.html\">OpenID Connect Implicit Client Implementer’s Guide 1.0</a>,” November 2014.</td>\n</tr>\n<tr>\n<td>[OpenID.PAPE]</td>\n<td><a href=\"mailto:david@sixapart.com\">Recordon, D.</a>, <a href=\"mailto:mbj@microsoft.com\">Jones, M.</a>, <a href=\"mailto:johnny.bufu@gmail.com\">Bufu, J., Ed.</a>, <a href=\"mailto:cygnus@janrain.com\">Daugherty, J., Ed.</a>, and <a href=\"mailto:n-sakimura@nri.co.jp\">N. Sakimura</a>, “OpenID Provider Authentication Policy Extension 1.0,” December 2008 (<a href=\"http://openid.net/specs/openid-provider-authentication-policy-extension-1_0.txt\">TXT</a>, <a href=\"http://openid.net/specs/openid-provider-authentication-policy-extension-1_0.html\">HTML</a>).</td>\n</tr>\n<tr>\n<td>[OpenID.Session]</td>\n<td>Sakimura, N., Bradley, J., Jones, M., de Medeiros, B., Mortimore, C., and E. Jay, “<a href=\"http://openid.net/specs/openid-connect-session-1_0.html\">OpenID Connect Session Management 1.0</a>,” November 2014.</td>\n</tr>\n<tr>\n<td>[RFC4949]</td>\n<td>Shirey, R., “<a href=\"http://tools.ietf.org/html/rfc4949\">Internet Security Glossary, Version 2</a>,” RFC 4949, August 2007 (<a href=\"http://www.rfc-editor.org/rfc/rfc4949.txt\">TXT</a>).</td>\n</tr>\n<tr>\n<td>[X.1252]</td>\n<td>International Telecommunication Union, “<a href=\"http://www.itu.int/rec/dologin_pub.asp?lang=e&id=T-REC-X.1252-201004-I!!PDF-E&type=items\">ITU-T Recommendation X.1252 – Cyberspace security – Identity management – Baseline identity management terms and definitions</a>,” ITU-T X.1252, November 2010.</td>\n</tr>\n</tbody></table>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"Appendix-A-Authorization-Examples\"><a href=\"#Appendix-A-Authorization-Examples\" class=\"headerlink\" title=\"Appendix A. Authorization Examples\"></a>Appendix A. Authorization Examples</h3><p>The following are non-normative examples of Authorization Requests with different <code>response_type</code> values and their responses (with line wraps within values for display purposes only):</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"A-1-Example-using-response-type-x3D-code\"><a href=\"#A-1-Example-using-response-type-x3D-code\" class=\"headerlink\" title=\"A.1. Example using response_type&#x3D;code\"></a>A.1. Example using response_type&#x3D;code</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;authorize?\n  response_type&#x3D;code\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb\n  &amp;scope&#x3D;openid%20profile%20email\n  &amp;nonce&#x3D;n-0S6_WzA2Mj\n  &amp;state&#x3D;af0ifjsldkj HTTP&#x2F;1.1\nHost: server.example.com\n\nHTTP&#x2F;1.1 302 Found\nLocation: https:&#x2F;&#x2F;client.example.org&#x2F;cb?\n  code&#x3D;Qcb0Orv1zh30vL1MPRsbm-diHiMwcLyZvn1arpZv-Jxf_11jnpEX3Tgfvk\n  &amp;state&#x3D;af0ifjsldkj<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"A-2-Example-using-response-type-x3D-id-token\"><a href=\"#A-2-Example-using-response-type-x3D-id-token\" class=\"headerlink\" title=\"A.2. Example using response_type&#x3D;id_token\"></a>A.2. Example using response_type&#x3D;id_token</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;authorize?\n  response_type&#x3D;id_token\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb\n  &amp;scope&#x3D;openid%20profile%20email\n  &amp;nonce&#x3D;n-0S6_WzA2Mj\n  &amp;state&#x3D;af0ifjsldkj HTTP&#x2F;1.1\nHost: server.example.com\n\nHTTP&#x2F;1.1 302 Found\nLocation: https:&#x2F;&#x2F;client.example.org&#x2F;cb#\n  id_token&#x3D;eyJraWQiOiIxZTlnZGs3IiwiYWxnIjoiUlMyNTYifQ.ewogImlz\n  cyI6ICJodHRwOi8vc2VydmVyLmV4YW1wbGUuY29tIiwKICJzdWIiOiAiMjQ4\n  Mjg5NzYxMDAxIiwKICJhdWQiOiAiczZCaGRSa3F0MyIsCiAibm9uY2UiOiAi\n  bi0wUzZfV3pBMk1qIiwKICJleHAiOiAxMzExMjgxOTcwLAogImlhdCI6IDEz\n  MTEyODA5NzAsCiAibmFtZSI6ICJKYW5lIERvZSIsCiAiZ2l2ZW5fbmFtZSI6\n  ICJKYW5lIiwKICJmYW1pbHlfbmFtZSI6ICJEb2UiLAogImdlbmRlciI6ICJm\n  ZW1hbGUiLAogImJpcnRoZGF0ZSI6ICIwMDAwLTEwLTMxIiwKICJlbWFpbCI6\n  ICJqYW5lZG9lQGV4YW1wbGUuY29tIiwKICJwaWN0dXJlIjogImh0dHA6Ly9l\n  eGFtcGxlLmNvbS9qYW5lZG9lL21lLmpwZyIKfQ.rHQjEmBqn9Jre0OLykYNn\n  spA10Qql2rvx4FsD00jwlB0Sym4NzpgvPKsDjn_wMkHxcp6CilPcoKrWHcip\n  R2iAjzLvDNAReF97zoJqq880ZD1bwY82JDauCXELVR9O6_B0w3K-E7yM2mac\n  AAgNCUwtik6SjoSUZRcf-O5lygIyLENx882p6MtmwaL1hd6qn5RZOQ0TLrOY\n  u0532g9Exxcm-ChymrB4xLykpDj3lUivJt63eEGGN6DH5K6o33TcxkIjNrCD\n  4XB1CKKumZvCedgHHF3IAK4dVEDSUoGlH9z4pP_eWYNXvqQOjGs-rDaQzUHl\n  6cQQWNiDpWOl_lxXjQEvQ\n  &amp;state&#x3D;af0ifjsldkj<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>The value of the <code>id_token</code> parameter is the ID Token, which is a signed JWT, containing three base64url encoded segments separated by period (‘.’) characters. The first segment represents the JOSE Header. Base64url decoding it will result in the following set of Header Parameters:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;&quot;kid&quot;:&quot;1e9gdk7&quot;,&quot;alg&quot;:&quot;RS256&quot;&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>The <code>alg</code> value represents the algorithm that was used to sign the JWT, in this case <code>RS256</code>, representing RSASSA-PKCS-v1_5 using SHA-256. The <code>kid</code> value is a key identifier used in identifying the key to be used to verify the signature. If the <code>kid</code> value is unknown to the RP, it needs to retrieve the contents of the OP’s JWK Set again to obtain the OP’s current set of keys.</p>\n<p>The second segment represents the Claims in the ID Token. Verifying and decoding the ID Token will yield the following Claims:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;iss&quot;: &quot;http:&#x2F;&#x2F;server.example.com&quot;,\n &quot;sub&quot;: &quot;248289761001&quot;,\n &quot;aud&quot;: &quot;s6BhdRkqt3&quot;,\n &quot;nonce&quot;: &quot;n-0S6_WzA2Mj&quot;,\n &quot;exp&quot;: 1311281970,\n &quot;iat&quot;: 1311280970,\n &quot;name&quot;: &quot;Jane Doe&quot;,\n &quot;given_name&quot;: &quot;Jane&quot;,\n &quot;family_name&quot;: &quot;Doe&quot;,\n &quot;gender&quot;: &quot;female&quot;,\n &quot;birthdate&quot;: &quot;0000-10-31&quot;,\n &quot;email&quot;: &quot;janedoe@example.com&quot;,\n &quot;picture&quot;: &quot;http:&#x2F;&#x2F;example.com&#x2F;janedoe&#x2F;me.jpg&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>The third segment represents the ID Token signature, which is verified as described in [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWS\">JWS]</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"A-3-Example-using-response-type-x3D-id-token-token\"><a href=\"#A-3-Example-using-response-type-x3D-id-token-token\" class=\"headerlink\" title=\"A.3. Example using response_type&#x3D;id_token token\"></a>A.3. Example using response_type&#x3D;id_token token</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;authorize?\n  response_type&#x3D;id_token%20token\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb\n  &amp;scope&#x3D;openid%20profile%20email\n  &amp;nonce&#x3D;n-0S6_WzA2Mj\n  &amp;state&#x3D;af0ifjsldkj HTTP&#x2F;1.1\nHost: server.example.com\n\nHTTP&#x2F;1.1 302 Found\nLocation: https:&#x2F;&#x2F;client.example.org&#x2F;cb#\n  access_token&#x3D;jHkWEdUXMU1BwAsC4vtUsZwnNvTIxEl0z9K3vx5KF0Y\n  &amp;token_type&#x3D;Bearer\n  &amp;id_token&#x3D;eyJraWQiOiIxZTlnZGs3IiwiYWxnIjoiUlMyNTYifQ.ewogIml\n  zcyI6ICJodHRwOi8vc2VydmVyLmV4YW1wbGUuY29tIiwKICJzdWIiOiAiMjQ\n  4Mjg5NzYxMDAxIiwKICJhdWQiOiAiczZCaGRSa3F0MyIsCiAibm9uY2UiOiA\n  ibi0wUzZfV3pBMk1qIiwKICJleHAiOiAxMzExMjgxOTcwLAogImlhdCI6IDE\n  zMTEyODA5NzAsCiAiYXRfaGFzaCI6ICI3N1FtVVB0alBmeld0RjJBbnBLOVJ\n  RIgp9.F9gRev0Dt2tKcrBkHy72cmRqnLdzw9FLCCSebV7mWs7o_sv2O5s6zM\n  ky2kmhHTVx9HmdvNnx9GaZ8XMYRFeYk8L5NZ7aYlA5W56nsG1iWOou_-gji0\n  ibWIuuf4Owaho3YSoi7EvsTuLFz6tq-dLyz0dKABMDsiCmJ5wqkPUDTE3QTX\n  jzbUmOzUDli-gCh5QPuZAq0cNW3pf_2n4zpvTYtbmj12cVcxGIMZby7TMWES\n  RjQ9_o3jvhVNcCGcE0KAQXejhA1ocJhNEvQNqMFGlBb6_0RxxKjDZ-Oa329e\n  GDidOvvp0h5hoES4a8IuGKS7NOcpp-aFwp0qVMDLI-Xnm-Pg\n  &amp;state&#x3D;af0ifjsldkj<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>Verifying and decoding the ID Token will yield the following Claims:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;iss&quot;: &quot;http:&#x2F;&#x2F;server.example.com&quot;,\n &quot;sub&quot;: &quot;248289761001&quot;,\n &quot;aud&quot;: &quot;s6BhdRkqt3&quot;,\n &quot;nonce&quot;: &quot;n-0S6_WzA2Mj&quot;,\n &quot;exp&quot;: 1311281970,\n &quot;iat&quot;: 1311280970,\n &quot;at_hash&quot;: &quot;77QmUPtjPfzWtF2AnpK9RQ&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"A-4-Example-using-response-type-x3D-code-id-token\"><a href=\"#A-4-Example-using-response-type-x3D-code-id-token\" class=\"headerlink\" title=\"A.4. Example using response_type&#x3D;code id_token\"></a>A.4. Example using response_type&#x3D;code id_token</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;authorize?\n  response_type&#x3D;code%20id_token\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb\n  &amp;scope&#x3D;openid%20profile%20email\n  &amp;nonce&#x3D;n-0S6_WzA2Mj\n  &amp;state&#x3D;af0ifjsldkj HTTP&#x2F;1.1\nHost: server.example.com\n\nHTTP&#x2F;1.1 302 Found\nLocation: https:&#x2F;&#x2F;client.example.org&#x2F;cb#\n  code&#x3D;Qcb0Orv1zh30vL1MPRsbm-diHiMwcLyZvn1arpZv-Jxf_11jnpEX3Tgfvk\n  &amp;id_token&#x3D;eyJraWQiOiIxZTlnZGs3IiwiYWxnIjoiUlMyNTYifQ.ewogIml\n  zcyI6ICJodHRwOi8vc2VydmVyLmV4YW1wbGUuY29tIiwKICJzdWIiOiAiMjQ\n  4Mjg5NzYxMDAxIiwKICJhdWQiOiAiczZCaGRSa3F0MyIsCiAibm9uY2UiOiA\n  ibi0wUzZfV3pBMk1qIiwKICJleHAiOiAxMzExMjgxOTcwLAogImlhdCI6IDE\n  zMTEyODA5NzAsCiAiY19oYXNoIjogIkxEa3RLZG9RYWszUGswY25YeENsdEE\n  iCn0.XW6uhdrkBgcGx6zVIrCiROpWURs-4goO1sKA4m9jhJIImiGg5muPUcN\n  egx6sSv43c5DSn37sxCRrDZZm4ZPBKKgtYASMcE20SDgvYJdJS0cyuFw7Ijp\n  _7WnIjcrl6B5cmoM6ylCvsLMwkoQAxVublMwH10oAxjzD6NEFsu9nipkszWh\n  sPePf_rM4eMpkmCbTzume-fzZIi5VjdWGGEmzTg32h3jiex-r5WTHbj-u5HL\n  7u_KP3rmbdYNzlzd1xWRYTUs4E8nOTgzAUwvwXkIQhOh5TPcSMBYy6X3E7-_\n  gr9Ue6n4ND7hTFhtjYs3cjNKIA08qm5cpVYFMFMG6PkhzLQ\n  &amp;state&#x3D;af0ifjsldkj<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>Verifying and decoding the ID Token will yield the following Claims:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;iss&quot;: &quot;http:&#x2F;&#x2F;server.example.com&quot;,\n &quot;sub&quot;: &quot;248289761001&quot;,\n &quot;aud&quot;: &quot;s6BhdRkqt3&quot;,\n &quot;nonce&quot;: &quot;n-0S6_WzA2Mj&quot;,\n &quot;exp&quot;: 1311281970,\n &quot;iat&quot;: 1311280970,\n &quot;c_hash&quot;: &quot;LDktKdoQak3Pk0cnXxCltA&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"A-5-Example-using-response-type-x3D-code-token\"><a href=\"#A-5-Example-using-response-type-x3D-code-token\" class=\"headerlink\" title=\"A.5. Example using response_type&#x3D;code token\"></a>A.5. Example using response_type&#x3D;code token</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;authorize?\n  response_type&#x3D;code%20token\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb\n  &amp;scope&#x3D;openid%20profile%20email\n  &amp;nonce&#x3D;n-0S6_WzA2Mj\n  &amp;state&#x3D;af0ifjsldkj HTTP&#x2F;1.1\nHost: server.example.com\n\nHTTP&#x2F;1.1 302 Found\nLocation: https:&#x2F;&#x2F;client.example.org&#x2F;cb#\n  code&#x3D;Qcb0Orv1zh30vL1MPRsbm-diHiMwcLyZvn1arpZv-Jxf_11jnpEX3Tgfvk\n  &amp;access_token&#x3D;jHkWEdUXMU1BwAsC4vtUsZwnNvTIxEl0z9K3vx5KF0Y\n  &amp;token_type&#x3D;Bearer\n  &amp;state&#x3D;af0ifjsldkj<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"A-6-Example-using-response-type-x3D-code-id-token-token\"><a href=\"#A-6-Example-using-response-type-x3D-code-id-token-token\" class=\"headerlink\" title=\"A.6. Example using response_type&#x3D;code id_token token\"></a>A.6. Example using response_type&#x3D;code id_token token</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;authorize?\n  response_type&#x3D;code%20id_token%20token\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb\n  &amp;scope&#x3D;openid%20profile%20email\n  &amp;nonce&#x3D;n-0S6_WzA2Mj\n  &amp;state&#x3D;af0ifjsldkj HTTP&#x2F;1.1\nHost: server.example.com\n\nHTTP&#x2F;1.1 302 Found\nLocation: https:&#x2F;&#x2F;client.example.org&#x2F;cb#\n  code&#x3D;Qcb0Orv1zh30vL1MPRsbm-diHiMwcLyZvn1arpZv-Jxf_11jnpEX3Tgfvk\n  &amp;access_token&#x3D;jHkWEdUXMU1BwAsC4vtUsZwnNvTIxEl0z9K3vx5KF0Y\n  &amp;token_type&#x3D;Bearer\n  &amp;id_token&#x3D;eyJraWQiOiIxZTlnZGs3IiwiYWxnIjoiUlMyNTYifQ.ewogIml\n  zcyI6ICJodHRwOi8vc2VydmVyLmV4YW1wbGUuY29tIiwKICJzdWIiOiAiMjQ\n  4Mjg5NzYxMDAxIiwKICJhdWQiOiAiczZCaGRSa3F0MyIsCiAibm9uY2UiOiA\n  ibi0wUzZfV3pBMk1qIiwKICJleHAiOiAxMzExMjgxOTcwLAogImlhdCI6IDE\n  zMTEyODA5NzAsCiAiY19oYXNoIjogIkxEa3RLZG9RYWszUGswY25YeENsdEE\n  iCn0.XW6uhdrkBgcGx6zVIrCiROpWURs-4goO1sKA4m9jhJIImiGg5muPUcN\n  egx6sSv43c5DSn37sxCRrDZZm4ZPBKKgtYASMcE20SDgvYJdJS0cyuFw7Ijp\n  _7WnIjcrl6B5cmoM6ylCvsLMwkoQAxVublMwH10oAxjzD6NEFsu9nipkszWh\n  sPePf_rM4eMpkmCbTzume-fzZIi5VjdWGGEmzTg32h3jiex-r5WTHbj-u5HL\n  7u_KP3rmbdYNzlzd1xWRYTUs4E8nOTgzAUwvwXkIQhOh5TPcSMBYy6X3E7-_\n  gr9Ue6n4ND7hTFhtjYs3cjNKIA08qm5cpVYFMFMG6PkhzLQ\n  &amp;state&#x3D;af0ifjsldkj<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>Verifying and decoding the ID Token will yield the following Claims:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;iss&quot;: &quot;http:&#x2F;&#x2F;server.example.com&quot;,\n &quot;sub&quot;: &quot;248289761001&quot;,\n &quot;aud&quot;: &quot;s6BhdRkqt3&quot;,\n &quot;nonce&quot;: &quot;n-0S6_WzA2Mj&quot;,\n &quot;exp&quot;: 1311281970,\n &quot;iat&quot;: 1311280970,\n &quot;at_hash&quot;: &quot;77QmUPtjPfzWtF2AnpK9RQ&quot;,\n &quot;c_hash&quot;: &quot;LDktKdoQak3Pk0cnXxCltA&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"A-7-RSA-Key-Used-in-Examples\"><a href=\"#A-7-RSA-Key-Used-in-Examples\" class=\"headerlink\" title=\"A.7. RSA Key Used in Examples\"></a>A.7. RSA Key Used in Examples</h3><p>The following RSA public key, represented in JWK format, can be used to validate the ID Token signatures in the above examples (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;kty&quot;:&quot;RSA&quot;,\n &quot;kid&quot;:&quot;1e9gdk7&quot;,\n &quot;n&quot;:&quot;w7Zdfmece8iaB0kiTY8pCtiBtzbptJmP28nSWwtdjRu0f2GFpajvWE4VhfJA\n      jEsOcwYzay7XGN0b-X84BfC8hmCTOj2b2eHT7NsZegFPKRUQzJ9wW8ipn_aD\n      JWMGDuB1XyqT1E7DYqjUCEOD1b4FLpy_xPn6oV_TYOfQ9fZdbE5HGxJUzeku\n      GcOKqOQ8M7wfYHhHHLxGpQVgL0apWuP2gDDOdTtpuld4D2LK1MZK99s9gaSj\n      RHE8JDb1Z4IGhEcEyzkxswVdPndUWzfvWBBWXWxtSUvQGBRkuy1BHOa4sP6F\n      KjWEeeF7gm7UMs2Nm2QUgNZw6xvEDGaLk4KASdIxRQ&quot;,\n &quot;e&quot;:&quot;AQAB&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"Appendix-B-Acknowledgements\"><a href=\"#Appendix-B-Acknowledgements\" class=\"headerlink\" title=\"Appendix B. Acknowledgements\"></a>Appendix B. Acknowledgements</h3><p>As a successor version of OpenID, this specification heavily relies on ideas explored in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.2.0\">OpenID Authentication 2.0</a> [OpenID.2.0]. Please refer to Appendix C of OpenID Authentication 2.0 for the full list of the contributors for that specification.</p>\n<p>In addition, the OpenID Community would like to thank the following people for their contributions to this specification:</p>\n<blockquote>\n<p>Naveen Agarwal (<a href=\"mailto:&#110;&#97;&#97;&#64;&#x67;&#111;&#111;&#x67;&#x6c;&#x65;&#46;&#99;&#111;&#109;\">&#110;&#97;&#97;&#64;&#x67;&#111;&#111;&#x67;&#x6c;&#x65;&#46;&#99;&#111;&#109;</a>), Google</p>\n<p>Amanda Anganes (<a href=\"mailto:&#97;&#x61;&#110;&#103;&#x61;&#110;&#x65;&#115;&#64;&#109;&#x69;&#x74;&#x72;&#101;&#46;&#x6f;&#x72;&#103;\">&#97;&#x61;&#110;&#103;&#x61;&#110;&#x65;&#115;&#64;&#109;&#x69;&#x74;&#x72;&#101;&#46;&#x6f;&#x72;&#103;</a>), MITRE</p>\n<p>Casper Biering (<a href=\"mailto:&#x63;&#98;&#x40;&#112;&#101;&#x65;&#114;&#99;&#x72;&#97;&#x66;&#x74;&#46;&#99;&#x6f;&#x6d;\">&#x63;&#98;&#x40;&#112;&#101;&#x65;&#114;&#99;&#x72;&#97;&#x66;&#x74;&#46;&#99;&#x6f;&#x6d;</a>), Peercraft</p>\n<p>John Bradley (<a href=\"mailto:&#x76;&#x65;&#x37;&#x6a;&#x74;&#x62;&#x40;&#118;&#x65;&#x37;&#x6a;&#x74;&#98;&#46;&#99;&#x6f;&#x6d;\">&#x76;&#x65;&#x37;&#x6a;&#x74;&#x62;&#x40;&#118;&#x65;&#x37;&#x6a;&#x74;&#98;&#46;&#99;&#x6f;&#x6d;</a>), Ping Identity</p>\n<p>Tim Bray (<a href=\"mailto:&#x74;&#98;&#x72;&#x61;&#x79;&#x40;&#x74;&#101;&#120;&#x74;&#117;&#x61;&#x6c;&#x69;&#116;&#121;&#x2e;&#99;&#x6f;&#109;\">&#x74;&#98;&#x72;&#x61;&#x79;&#x40;&#x74;&#101;&#120;&#x74;&#117;&#x61;&#x6c;&#x69;&#116;&#121;&#x2e;&#99;&#x6f;&#109;</a>), Google</p>\n<p>Johnny Bufu (<a href=\"mailto:&#106;&#x62;&#117;&#102;&#x75;&#64;&#106;&#x61;&#x6e;&#x72;&#x61;&#105;&#110;&#x2e;&#x63;&#111;&#x6d;\">&#106;&#x62;&#117;&#102;&#x75;&#64;&#106;&#x61;&#x6e;&#x72;&#x61;&#105;&#110;&#x2e;&#x63;&#111;&#x6d;</a>), Janrain</p>\n<p>Brian Campbell (<a href=\"mailto:&#98;&#99;&#97;&#109;&#x70;&#x62;&#101;&#x6c;&#x6c;&#x40;&#112;&#x69;&#110;&#103;&#x69;&#x64;&#x65;&#110;&#116;&#x69;&#x74;&#x79;&#46;&#x63;&#x6f;&#x6d;\">&#98;&#99;&#97;&#109;&#x70;&#x62;&#101;&#x6c;&#x6c;&#x40;&#112;&#x69;&#110;&#103;&#x69;&#x64;&#x65;&#110;&#116;&#x69;&#x74;&#x79;&#46;&#x63;&#x6f;&#x6d;</a>), Ping Identity</p>\n<p>Blaine Cook (<a href=\"mailto:&#114;&#111;&#109;&#101;&#100;&#97;&#64;&#103;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#99;&#111;&#109;\">&#114;&#111;&#109;&#101;&#100;&#97;&#64;&#103;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#99;&#111;&#109;</a>), Independent</p>\n<p>Breno de Medeiros (<a href=\"mailto:&#98;&#x72;&#x65;&#110;&#x6f;&#x40;&#103;&#x6f;&#x6f;&#103;&#x6c;&#x65;&#46;&#x63;&#111;&#109;\">&#98;&#x72;&#x65;&#110;&#x6f;&#x40;&#103;&#x6f;&#x6f;&#103;&#x6c;&#x65;&#46;&#x63;&#111;&#109;</a>), Google</p>\n<p>Pamela Dingle (<a href=\"mailto:&#112;&#x64;&#105;&#110;&#x67;&#108;&#x65;&#x40;&#112;&#x69;&#x6e;&#x67;&#105;&#100;&#x65;&#x6e;&#116;&#x69;&#116;&#121;&#x2e;&#99;&#111;&#x6d;\">&#112;&#x64;&#105;&#110;&#x67;&#108;&#x65;&#x40;&#112;&#x69;&#x6e;&#x67;&#105;&#100;&#x65;&#x6e;&#116;&#x69;&#116;&#121;&#x2e;&#99;&#111;&#x6d;</a>), Ping Identity</p>\n<p>Vladimir Dzhuvinov (<a href=\"mailto:&#x76;&#108;&#x61;&#x64;&#x69;&#x6d;&#105;&#x72;&#64;&#x6e;&#105;&#109;&#98;&#117;&#115;&#100;&#115;&#x2e;&#99;&#111;&#109;\">&#x76;&#108;&#x61;&#x64;&#x69;&#x6d;&#105;&#x72;&#64;&#x6e;&#105;&#109;&#98;&#117;&#115;&#100;&#115;&#x2e;&#99;&#111;&#109;</a>), Nimbus Directory Services</p>\n<p>George Fletcher (<a href=\"mailto:&#103;&#101;&#111;&#114;&#x67;&#101;&#x2e;&#102;&#108;&#101;&#x74;&#x63;&#x68;&#x65;&#x72;&#x40;&#x63;&#111;&#x72;&#112;&#x2e;&#x61;&#111;&#x6c;&#x2e;&#x63;&#x6f;&#109;\">&#103;&#101;&#111;&#114;&#x67;&#101;&#x2e;&#102;&#108;&#101;&#x74;&#x63;&#x68;&#x65;&#x72;&#x40;&#x63;&#111;&#x72;&#112;&#x2e;&#x61;&#111;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a>), AOL</p>\n<p>Roland Hedberg (<a href=\"mailto:&#x72;&#111;&#108;&#97;&#110;&#x64;&#46;&#104;&#x65;&#x64;&#x62;&#101;&#114;&#x67;&#64;&#x61;&#x64;&#x6d;&#46;&#x75;&#x6d;&#117;&#46;&#x73;&#x65;\">&#x72;&#111;&#108;&#97;&#110;&#x64;&#46;&#104;&#x65;&#x64;&#x62;&#101;&#114;&#x67;&#64;&#x61;&#x64;&#x6d;&#46;&#x75;&#x6d;&#117;&#46;&#x73;&#x65;</a>), University of Umea</p>\n<p>Ryo Ito (<a href=\"mailto:&#x72;&#x79;&#111;&#46;&#105;&#116;&#x6f;&#x40;&#x6d;&#105;&#x78;&#105;&#x2e;&#99;&#111;&#x2e;&#106;&#112;\">&#x72;&#x79;&#111;&#46;&#105;&#116;&#x6f;&#x40;&#x6d;&#105;&#x78;&#105;&#x2e;&#99;&#111;&#x2e;&#106;&#112;</a>), mixi, Inc.</p>\n<p>Edmund Jay (<a href=\"mailto:&#101;&#106;&#97;&#121;&#64;&#109;&#103;&#x69;&#x31;&#46;&#99;&#111;&#109;\">&#101;&#106;&#97;&#121;&#64;&#109;&#103;&#x69;&#x31;&#46;&#99;&#111;&#109;</a>), Illumila</p>\n<p>Michael B. Jones (<a href=\"mailto:&#x6d;&#98;&#106;&#x40;&#x6d;&#105;&#x63;&#x72;&#111;&#x73;&#111;&#x66;&#x74;&#x2e;&#x63;&#x6f;&#x6d;\">&#x6d;&#98;&#106;&#x40;&#x6d;&#105;&#x63;&#x72;&#111;&#x73;&#111;&#x66;&#x74;&#x2e;&#x63;&#x6f;&#x6d;</a>), Microsoft</p>\n<p>Torsten Lodderstedt (<a href=\"mailto:&#116;&#x2e;&#x6c;&#x6f;&#100;&#x64;&#101;&#x72;&#x73;&#x74;&#x65;&#100;&#116;&#64;&#x74;&#x65;&#108;&#x65;&#107;&#x6f;&#x6d;&#x2e;&#100;&#101;\">&#116;&#x2e;&#x6c;&#x6f;&#100;&#x64;&#101;&#x72;&#x73;&#x74;&#x65;&#100;&#116;&#64;&#x74;&#x65;&#108;&#x65;&#107;&#x6f;&#x6d;&#x2e;&#100;&#101;</a>), Deutsche Telekom</p>\n<p>Nov Matake (<a href=\"mailto:&#x6e;&#111;&#x76;&#x40;&#109;&#x61;&#116;&#x61;&#107;&#101;&#46;&#106;&#112;\">&#x6e;&#111;&#x76;&#x40;&#109;&#x61;&#116;&#x61;&#107;&#101;&#46;&#106;&#112;</a>), Independent</p>\n<p>Chuck Mortimore (<a href=\"mailto:&#x63;&#x6d;&#x6f;&#x72;&#116;&#x69;&#109;&#111;&#x72;&#x65;&#64;&#x73;&#x61;&#x6c;&#x65;&#115;&#x66;&#111;&#114;&#99;&#101;&#x2e;&#x63;&#111;&#x6d;\">&#x63;&#x6d;&#x6f;&#x72;&#116;&#x69;&#109;&#111;&#x72;&#x65;&#64;&#x73;&#x61;&#x6c;&#x65;&#115;&#x66;&#111;&#114;&#99;&#101;&#x2e;&#x63;&#111;&#x6d;</a>), Salesforce</p>\n<p>Anthony Nadalin (<a href=\"mailto:&#116;&#x6f;&#110;&#121;&#x6e;&#97;&#x64;&#64;&#x6d;&#105;&#99;&#114;&#111;&#x73;&#111;&#x66;&#x74;&#x2e;&#x63;&#x6f;&#x6d;\">&#116;&#x6f;&#110;&#121;&#x6e;&#97;&#x64;&#64;&#x6d;&#105;&#99;&#114;&#111;&#x73;&#111;&#x66;&#x74;&#x2e;&#x63;&#x6f;&#x6d;</a>), Microsoft</p>\n<p>Hideki Nara (<a href=\"mailto:&#x68;&#100;&#x6b;&#110;&#114;&#x40;&#x69;&#99;&#x2d;&#x74;&#x61;&#99;&#x74;&#46;&#x63;&#x6f;&#46;&#106;&#112;\">&#x68;&#100;&#x6b;&#110;&#114;&#x40;&#x69;&#99;&#x2d;&#x74;&#x61;&#99;&#x74;&#46;&#x63;&#x6f;&#46;&#106;&#112;</a>), Tact Communications</p>\n<p>Axel Nennker (<a href=\"mailto:&#x61;&#x78;&#x65;&#108;&#46;&#110;&#x65;&#110;&#110;&#107;&#x65;&#114;&#x40;&#116;&#101;&#x6c;&#101;&#107;&#111;&#x6d;&#x2e;&#100;&#x65;\">&#x61;&#x78;&#x65;&#108;&#46;&#110;&#x65;&#110;&#110;&#107;&#x65;&#114;&#x40;&#116;&#101;&#x6c;&#101;&#107;&#111;&#x6d;&#x2e;&#100;&#x65;</a>), Deutsche Telekom</p>\n<p>David Recordon (<a href=\"mailto:&#100;&#114;&#x40;&#x66;&#98;&#x2e;&#99;&#111;&#109;\">&#100;&#114;&#x40;&#x66;&#98;&#x2e;&#99;&#111;&#109;</a>), Facebook</p>\n<p>Justin Richer (<a href=\"mailto:&#x6a;&#x72;&#x69;&#99;&#x68;&#101;&#x72;&#64;&#109;&#105;&#116;&#x72;&#x65;&#46;&#111;&#x72;&#x67;\">&#x6a;&#x72;&#x69;&#99;&#x68;&#101;&#x72;&#64;&#109;&#105;&#116;&#x72;&#x65;&#46;&#111;&#x72;&#x67;</a>), MITRE</p>\n<p>Nat Sakimura (<a href=\"mailto:&#110;&#45;&#x73;&#97;&#107;&#105;&#x6d;&#117;&#114;&#x61;&#x40;&#x6e;&#x72;&#105;&#46;&#x63;&#111;&#x2e;&#106;&#112;\">&#110;&#45;&#x73;&#97;&#107;&#105;&#x6d;&#117;&#114;&#x61;&#x40;&#x6e;&#x72;&#105;&#46;&#x63;&#111;&#x2e;&#106;&#112;</a>), Nomura Research Institute, Ltd.</p>\n<p>Luke Shepard (<a href=\"mailto:&#x6c;&#115;&#x68;&#101;&#112;&#x61;&#114;&#x64;&#x40;&#x66;&#98;&#x2e;&#x63;&#111;&#x6d;\">&#x6c;&#115;&#x68;&#101;&#112;&#x61;&#114;&#x64;&#x40;&#x66;&#98;&#x2e;&#x63;&#111;&#x6d;</a>), Facebook</p>\n<p>Andreas Åkre Solberg (<a href=\"mailto:&#97;&#110;&#100;&#114;&#x65;&#97;&#115;&#46;&#115;&#111;&#108;&#98;&#x65;&#x72;&#103;&#64;&#x75;&#x6e;&#x69;&#110;&#101;&#116;&#116;&#x2e;&#110;&#111;\">&#97;&#110;&#100;&#114;&#x65;&#97;&#115;&#46;&#115;&#111;&#108;&#98;&#x65;&#x72;&#103;&#64;&#x75;&#x6e;&#x69;&#110;&#101;&#116;&#116;&#x2e;&#110;&#111;</a>), UNINET</p>\n<p>Paul Tarjan (<a href=\"mailto:&#x70;&#116;&#64;&#102;&#98;&#46;&#99;&#x6f;&#x6d;\">&#x70;&#116;&#64;&#102;&#98;&#46;&#99;&#x6f;&#x6d;</a>), Facebook</p>\n</blockquote>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"Appendix-C-Notices\"><a href=\"#Appendix-C-Notices\" class=\"headerlink\" title=\"Appendix C. Notices\"></a>Appendix C. Notices</h3><p>Copyright (c) 2014 The OpenID Foundation.</p>\n<p>The OpenID Foundation (OIDF) grants to any Contributor, developer, implementer, or other interested party a non-exclusive, royalty free, worldwide copyright license to reproduce, prepare derivative works from, distribute, perform and display, this Implementers Draft or Final Specification solely for the purposes of (i) developing specifications, and (ii) implementing Implementers Drafts and Final Specifications based on such documents, provided that attribution be made to the OIDF as the source of the material, but that such attribution does not indicate an endorsement by the OIDF.</p>\n<p>The technology described in this specification was made available from contributions from various sources, including members of the OpenID Foundation and others. Although the OpenID Foundation has taken steps to help ensure that the technology is available for distribution, it takes no position regarding the validity or scope of any intellectual property or other rights that might be claimed to pertain to the implementation or use of the technology described in this specification or the extent to which any license under such rights might or might not be available; neither does it represent that it has made any independent effort to identify any such rights. The OpenID Foundation and the contributors to this specification make no (and hereby expressly disclaim any) warranties (express, implied, or otherwise), including implied warranties of merchantability, non-infringement, fitness for a particular purpose, or title, related to this specification, and the entire risk as to implementing this specification is assumed by the implementer. The OpenID Intellectual Property Rights policy requires contributors to offer a patent promise not to assert certain patent claims against other contributors and against implementers. The OpenID Foundation invites any interested party to bring to its attention any copyrights, patents, patent applications, or other proprietary rights that may cover technology that may be required to practice this specification.</p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}},"cover":"/img/default_cover/geomeric10.png","cover_type":"img","excerpt":"","more":"<h3 id=\"1-介绍\"><a href=\"#1-介绍\" class=\"headerlink\" title=\"1. 介绍\"></a>1. 介绍</h3><p>OpenID Connect 1.0 is a simple identity layer on top of the OAuth 2.0 [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">RFC6749]</a> protocol. It enables Clients to verify the identity of the End-User based on the authentication performed by an Authorization Server, as well as to obtain basic profile information about the End-User in an interoperable and REST-like manner.</p>\n<p>The OpenID Connect Core 1.0 specification defines the core OpenID Connect functionality: authentication built on top of OAuth 2.0 and the use of Claims to communicate information about the End-User. It also describes the security and privacy considerations for using OpenID Connect.</p>\n<p>As background, the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0 Authorization Framework</a> [RFC6749] and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6750\">OAuth 2.0 Bearer Token Usage</a> [RFC6750] specifications provide a general framework for third-party applications to obtain and use limited access to HTTP resources. They define mechanisms to obtain and use Access Tokens to access resources but do not define standard methods to provide identity information. Notably, without profiling OAuth 2.0, it is incapable of providing information about the authentication of an End-User. Readers are expected to be familiar with these specifications.</p>\n<p>OpenID Connect implements authentication as an extension to the OAuth 2.0 authorization process. Use of this extension is requested by Clients by including the <code>openid</code> scope value in the Authorization Request. Information about the authentication performed is returned in a <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JSON Web Token (JWT)</a> [JWT] called an ID Token (see <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a>). OAuth 2.0 Authentication Servers implementing OpenID Connect are also referred to as OpenID Providers (OPs). OAuth 2.0 Clients using OpenID Connect are also referred to as Relying Parties (RPs).</p>\n<p>This specification assumes that the Relying Party has already obtained configuration information about the OpenID Provider, including its Authorization Endpoint and Token Endpoint locations. This information is normally obtained via Discovery, as described in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Discovery\">OpenID Connect Discovery 1.0</a> [OpenID.Discovery], or may be obtained via other mechanisms.</p>\n<p>Likewise, this specification assumes that the Relying Party has already obtained sufficient credentials and provided information needed to use the OpenID Provider. This is normally done via Dynamic Registration, as described in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration\">OpenID Connect Dynamic Client Registration 1.0</a> [OpenID.Registration], or may be obtained via other mechanisms.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"1-1-需求符号和约定\"><a href=\"#1-1-需求符号和约定\" class=\"headerlink\" title=\"1.1. 需求符号和约定\"></a>1.1. 需求符号和约定</h3><p>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC2119\">RFC 2119</a> [RFC2119].</p>\n<p>In the .txt version of this document, values are quoted to indicate that they are to be taken literally. When using these values in protocol messages, the quotes MUST NOT be used as part of the value. In the HTML version of this document, values to be taken literally are indicated by the use of <code>this fixed-width font</code>.</p>\n<p>All uses of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWS\">JSON Web Signature (JWS)</a> [JWS] and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWE\">JSON Web Encryption (JWE)</a> [JWE] data structures in this specification utilize the JWS Compact Serialization or the JWE Compact Serialization; the JWS JSON Serialization and the JWE JSON Serialization are not used.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"1-2-术语\"><a href=\"#1-2-术语\" class=\"headerlink\" title=\"1.2. 术语\"></a>1.2. 术语</h3><p>This specification uses the terms “Access Token”, “Authorization Code”, “Authorization Endpoint”, “Authorization Grant”, “Authorization Server”, “Client”, “Client Authentication”, “Client Identifier”, “Client Secret”, “Grant Type”, “Protected Resource”, “Redirection URI”, “Refresh Token”, “Resource Owner”, “Resource Server”, “Response Type”, and “Token Endpoint” defined by <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749], the terms “Claim Name”, “Claim Value”, “JSON Web Token (JWT)”, “JWT Claims Set”, and “Nested JWT” defined by <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JSON Web Token (JWT)</a> [JWT], the terms “Header Parameter” and “JOSE Header” defined by <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWS\">JSON Web Signature (JWS)</a> [JWS], the term “User Agent” defined by <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC2616\">RFC 2616</a> [RFC2616], and the term “Response Mode” defined by <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses\">OAuth 2.0 Multiple Response Type Encoding Practices</a> [OAuth.Responses].</p>\n<p>This specification also defines the following terms:</p>\n<blockquote>\n<ul>\n<li><p>Authentication</p>\n<p>Process used to achieve sufficient confidence in the binding between the Entity and the presented Identity.</p>\n</li>\n<li><p>Authentication Request</p>\n<p>OAuth 2.0 Authorization Request using extension parameters and scopes defined by OpenID Connect to request that the End-User be authenticated by the Authorization Server, which is an OpenID Connect Provider, to the Client, which is an OpenID Connect Relying Party.</p>\n</li>\n<li><p>Authentication Context</p>\n<p>Information that the Relying Party can require before it makes an entitlement decision with respect to an authentication response. Such context can include, but is not limited to, the actual authentication method used or level of assurance such as <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ISO29115\">ISO&#x2F;IEC 29115</a> [ISO29115] entity authentication assurance level.</p>\n</li>\n<li><p>Authentication Context Class</p>\n<p>Set of authentication methods or procedures that are considered to be equivalent to each other in a particular context.</p>\n</li>\n<li><p>Authentication Context Class Reference</p>\n<p>Identifier for an Authentication Context Class.</p>\n</li>\n<li><p>Authorization Code Flow</p>\n<p>OAuth 2.0 flow in which an Authorization Code is returned from the Authorization Endpoint and all tokens are returned from the Token Endpoint.</p>\n</li>\n<li><p>Authorization Request</p>\n<p>OAuth 2.0 Authorization Request as defined by [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">RFC6749]</a>.</p>\n</li>\n<li><p>Claim</p>\n<p>Piece of information asserted about an Entity.</p>\n</li>\n<li><p>Claim Type</p>\n<p>Syntax used for representing a Claim Value. This specification defines Normal, Aggregated, and Distributed Claim Types.</p>\n</li>\n<li><p>Claims Provider</p>\n<p>Server that can return Claims about an Entity.</p>\n</li>\n<li><p>Credential</p>\n<p>Data presented as evidence of the right to use an identity or other resources.</p>\n</li>\n<li><p>End-User</p>\n<p>Human participant.</p>\n</li>\n<li><p>Entity</p>\n<p>Something that has a separate and distinct existence and that can be identified in a context. An End-User is one example of an Entity.</p>\n</li>\n<li><p>Essential Claim</p>\n<p>Claim specified by the Client as being necessary to ensure a smooth authorization experience for the specific task requested by the End-User.</p>\n</li>\n<li><p>Hybrid Flow</p>\n<p>OAuth 2.0 flow in which an Authorization Code is returned from the Authorization Endpoint, some tokens are returned from the Authorization Endpoint, and others are returned from the Token Endpoint.</p>\n</li>\n<li><p>ID Token</p>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JSON Web Token (JWT)</a> [JWT] that contains Claims about the Authentication event. It MAY contain other Claims.</p>\n</li>\n<li><p>Identifier</p>\n<p>Value that uniquely characterizes an Entity in a specific context.</p>\n</li>\n<li><p>Identity</p>\n<p>Set of attributes related to an Entity.</p>\n</li>\n<li><p>Implicit Flow</p>\n<p>OAuth 2.0 flow in which all tokens are returned from the Authorization Endpoint and neither the Token Endpoint nor an Authorization Code are used.</p>\n</li>\n<li><p>Issuer</p>\n<p>Entity that issues a set of Claims.</p>\n</li>\n<li><p>Issuer Identifier</p>\n<p>Verifiable Identifier for an Issuer. An Issuer Identifier is a case sensitive URL using the <code>https</code> scheme that contains scheme, host, and optionally, port number and path components and no query or fragment components.</p>\n</li>\n<li><p>Message</p>\n<p>Request or a response between an OpenID Relying Party and an OpenID Provider.</p>\n</li>\n<li><p>OpenID Provider (OP)</p>\n<p>OAuth 2.0 Authorization Server that is capable of Authenticating the End-User and providing Claims to a Relying Party about the Authentication event and the End-User.</p>\n</li>\n<li><p>Request Object</p>\n<p>JWT that contains a set of request parameters as its Claims.</p>\n</li>\n<li><p>Request URI</p>\n<p>URL that references a resource containing a Request Object. The Request URI contents MUST be retrievable by the Authorization Server.</p>\n</li>\n<li><p>Pairwise Pseudonymous Identifier (PPID)</p>\n<p>Identifier that identifies the Entity to a Relying Party that cannot be correlated with the Entity’s PPID at another Relying Party.</p>\n</li>\n<li><p>Personally Identifiable Information (PII)</p>\n<p>Information that (a) can be used to identify the natural person to whom such information relates, or (b) is or might be directly or indirectly linked to a natural person to whom such information relates.</p>\n</li>\n<li><p>Relying Party (RP)</p>\n<p>OAuth 2.0 Client application requiring End-User Authentication and Claims from an OpenID Provider.</p>\n</li>\n<li><p>Sector Identifier</p>\n<p>Host component of a URL used by the Relying Party’s organization that is an input to the computation of pairwise Subject Identifiers for that Relying Party.</p>\n</li>\n<li><p>Self-Issued OpenID Provider</p>\n<p>Personal, self-hosted OpenID Provider that issues self-signed ID Tokens.</p>\n</li>\n<li><p>Subject Identifier</p>\n<p>Locally unique and never reassigned identifier within the Issuer for the End-User, which is intended to be consumed by the Client.</p>\n</li>\n<li><p>UserInfo Endpoint</p>\n<p>Protected Resource that, when presented with an Access Token by the Client, returns authorized information about the End-User represented by the corresponding Authorization Grant. The UserInfo Endpoint URL MUST use the <code>https</code> scheme and MAY contain port, path, and query parameter components.</p>\n</li>\n<li><p>Validation</p>\n<p>Process intended to establish the soundness or correctness of a construct.</p>\n</li>\n<li><p>Verification</p>\n<p>Process intended to test or prove the truth or accuracy of a fact or value.</p>\n</li>\n<li><p>Voluntary Claim</p>\n<p>Claim specified by the Client as being useful but not Essential for the specific task requested by the End-User.</p>\n</li>\n</ul>\n</blockquote>\n<p>IMPORTANT NOTE TO READERS: The terminology definitions in this section are a normative portion of this specification, imposing requirements upon implementations. All the capitalized words in the text of this specification, such as “Issuer Identifier”, reference these defined terms. Whenever the reader encounters them, their definitions found in this section must be followed.</p>\n<p>For more background on some of the terminology used, see <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC4949\">Internet Security Glossary, Version 2</a> [RFC4949], <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ISO29115\">ISO&#x2F;IEC 29115 Entity Authentication Assurance</a> [ISO29115], and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#X.1252\">ITU-T X.1252</a> [X.1252].</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"1-3-概述\"><a href=\"#1-3-概述\" class=\"headerlink\" title=\"1.3. 概述\"></a>1.3. 概述</h3><p>The OpenID Connect protocol, in abstract, follows the following steps.</p>\n<ol>\n<li>The RP (Client) sends a request to the OpenID Provider (OP).</li>\n<li>The OP authenticates the End-User and obtains authorization.</li>\n<li>The OP responds with an ID Token and usually an Access Token.</li>\n<li>The RP can send a request with the Access Token to the UserInfo Endpoint.</li>\n<li>The UserInfo Endpoint returns Claims about the End-User.</li>\n</ol>\n<p>These steps are illustrated in the following diagram:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">+--------+                                   +--------+\n|        |                                   |        |\n|        |---------(1) AuthN Request--------&gt;|        |\n|        |                                   |        |\n|        |  +--------+                       |        |\n|        |  |        |                       |        |\n|        |  |  End-  |&lt;--(2) AuthN &amp; AuthZ--&gt;|        |\n|        |  |  User  |                       |        |\n|   RP   |  |        |                       |   OP   |\n|        |  +--------+                       |        |\n|        |                                   |        |\n|        |&lt;--------(3) AuthN Response--------|        |\n|        |                                   |        |\n|        |---------(4) UserInfo Request-----&gt;|        |\n|        |                                   |        |\n|        |&lt;--------(5) UserInfo Response-----|        |\n|        |                                   |        |\n+--------+                                   +--------+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"2-ID-Token\"><a href=\"#2-ID-Token\" class=\"headerlink\" title=\"2. ID Token\"></a>2. ID Token</h3><p>The primary extension that OpenID Connect makes to OAuth 2.0 to enable End-Users to be Authenticated is the ID Token data structure. The ID Token is a security token that contains Claims about the Authentication of an End-User by an Authorization Server when using a Client, and potentially other requested Claims. The ID Token is represented as a <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JSON Web Token (JWT)</a> [JWT].</p>\n<p>The following Claims are used within the ID Token for all OAuth 2.0 flows used by OpenID Connect:</p>\n<blockquote>\n<ul>\n<li><p>iss</p>\n<p>REQUIRED. Issuer Identifier for the Issuer of the response. The <code>iss</code> value is a case sensitive URL using the <code>https</code> scheme that contains scheme, host, and optionally, port number and path components and no query or fragment components.</p>\n</li>\n<li><p>sub</p>\n<p>REQUIRED. Subject Identifier. A locally unique and never reassigned identifier within the Issuer for the End-User, which is intended to be consumed by the Client, e.g., <code>24400320</code> or <code>AItOawmwtWwcT0k51BayewNvutrJUqsvl6qs7A4</code>. It MUST NOT exceed 255 ASCII characters in length. The <code>sub</code> value is a case sensitive string.</p>\n</li>\n<li><p>aud</p>\n<p>REQUIRED. Audience(s) that this ID Token is intended for. It MUST contain the OAuth 2.0 <code>client_id</code> of the Relying Party as an audience value. It MAY also contain identifiers for other audiences. In the general case, the <code>aud</code> value is an array of case sensitive strings. In the common special case when there is one audience, the <code>aud</code> value MAY be a single case sensitive string.</p>\n</li>\n<li><p>exp</p>\n<p>REQUIRED. Expiration time on or after which the ID Token MUST NOT be accepted for processing. The processing of this parameter requires that the current date&#x2F;time MUST be before the expiration date&#x2F;time listed in the value. Implementers MAY provide for some small leeway, usually no more than a few minutes, to account for clock skew. Its value is a JSON number representing the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the date&#x2F;time. See <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC3339\">RFC 3339</a> [RFC3339] for details regarding date&#x2F;times in general and UTC in particular.</p>\n</li>\n<li><p>iat</p>\n<p>REQUIRED. Time at which the JWT was issued. Its value is a JSON number representing the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the date&#x2F;time.</p>\n</li>\n<li><p>auth_time</p>\n<p>Time when the End-User authentication occurred. Its value is a JSON number representing the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the date&#x2F;time. When a <code>max_age</code> request is made or when <code>auth_time</code> is requested as an Essential Claim, then this Claim is REQUIRED; otherwise, its inclusion is OPTIONAL. (The <code>auth_time</code> Claim semantically corresponds to the OpenID 2.0 <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.PAPE\">PAPE</a> [OpenID.PAPE] <code>auth_time</code> response parameter.)</p>\n</li>\n<li><p>nonce</p>\n<p>String value used to associate a Client session with an ID Token, and to mitigate replay attacks. The value is passed through unmodified from the Authentication Request to the ID Token. If present in the ID Token, Clients MUST verify that the <code>nonce</code> Claim Value is equal to the value of the <code>nonce</code> parameter sent in the Authentication Request. If present in the Authentication Request, Authorization Servers MUST include a <code>nonce</code> Claim in the ID Token with the Claim Value being the nonce value sent in the Authentication Request. Authorization Servers SHOULD perform no other processing on <code>nonce</code> values used. The <code>nonce</code> value is a case sensitive string.</p>\n</li>\n<li><p>acr</p>\n<p>OPTIONAL. Authentication Context Class Reference. String specifying an Authentication Context Class Reference value that identifies the Authentication Context Class that the authentication performed satisfied. The value “0” indicates the End-User authentication did not meet the requirements of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ISO29115\">ISO&#x2F;IEC 29115</a> [ISO29115] level 1. Authentication using a long-lived browser cookie, for instance, is one example where the use of “level 0” is appropriate. Authentications with level 0 SHOULD NOT be used to authorize access to any resource of any monetary value. (This corresponds to the OpenID 2.0 <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.PAPE\">PAPE</a> [OpenID.PAPE] <code>nist_auth_level</code> 0.) An absolute URI or an <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6711\">RFC 6711</a> [RFC6711] registered name SHOULD be used as the <code>acr</code> value; registered names MUST NOT be used with a different meaning than that which is registered. Parties using this claim will need to agree upon the meanings of the values used, which may be context-specific. The <code>acr</code> value is a case sensitive string.</p>\n</li>\n<li><p>amr</p>\n<p>OPTIONAL. Authentication Methods References. JSON array of strings that are identifiers for authentication methods used in the authentication. For instance, values might indicate that both password and OTP authentication methods were used. The definition of particular values to be used in the <code>amr</code> Claim is beyond the scope of this specification. Parties using this claim will need to agree upon the meanings of the values used, which may be context-specific. The <code>amr</code> value is an array of case sensitive strings.</p>\n</li>\n<li><p>azp</p>\n<p>OPTIONAL. Authorized party - the party to which the ID Token was issued. If present, it MUST contain the OAuth 2.0 Client ID of this party. This Claim is only needed when the ID Token has a single audience value and that audience is different than the authorized party. It MAY be included even when the authorized party is the same as the sole audience. The <code>azp</code> value is a case sensitive string containing a StringOrURI value.</p>\n</li>\n</ul>\n</blockquote>\n<p>ID Tokens MAY contain other Claims. Any Claims used that are not understood MUST be ignored. See Sections <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#CodeIDToken\">3.1.3.6</a>, <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#HybridIDToken\">3.3.2.11</a>, <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">5.1</a>, and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#SelfIssuedResponse\">7.4</a> for additional Claims defined by this specification.</p>\n<p>ID Tokens MUST be signed using <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWS\">JWS</a> [JWS] and optionally both signed and then encrypted using <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWS\">JWS</a> [JWS] and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWE\">JWE</a> [JWE] respectively, thereby providing authentication, integrity, non-repudiation, and optionally, confidentiality, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#SigningOrder\">Section 16.14</a>. If the ID Token is encrypted, it MUST be signed then encrypted, with the result being a Nested JWT, as defined in [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JWT]</a>. ID Tokens MUST NOT use <code>none</code> as the <code>alg</code> value unless the Response Type used returns no ID Token from the Authorization Endpoint (such as when using the Authorization Code Flow) and the Client explicitly requested the use of <code>none</code> at Registration time.</p>\n<p>ID Tokens SHOULD NOT use the JWS or JWE <code>x5u</code>, <code>x5c</code>, <code>jku</code>, or <code>jwk</code> Header Parameter fields. Instead, references to keys used are communicated in advance using Discovery and Registration parameters, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#SigEnc\">Section 10</a>.</p>\n<p>The following is a non-normative example of the set of Claims (the JWT Claims Set) in an ID Token:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;iss&quot;: &quot;https:&#x2F;&#x2F;server.example.com&quot;,\n &quot;sub&quot;: &quot;24400320&quot;,\n &quot;aud&quot;: &quot;s6BhdRkqt3&quot;,\n &quot;nonce&quot;: &quot;n-0S6_WzA2Mj&quot;,\n &quot;exp&quot;: 1311281970,\n &quot;iat&quot;: 1311280970,\n &quot;auth_time&quot;: 1311280969,\n &quot;acr&quot;: &quot;urn:mace:incommon:iap:silver&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-身份验证\"><a href=\"#3-身份验证\" class=\"headerlink\" title=\"3. 身份验证\"></a>3. 身份验证</h3><p>OpenID Connect执行身份验证，用于登录终端用户或确定终端用户已经登录。OpenID Connect以安全的方式将服务器执行的身份验证结果返回给客户端，以便客户端可以依赖它。因此，在这种情况下，客户端被称为Relying Party（RP）。</p>\n<p>The Authentication result is returned in an ID Token, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a>. It has Claims expressing such information as the Issuer, the Subject Identifier, when the authentication expires, etc.</p>\n<p>Authentication can follow one of three paths: the Authorization Code Flow (<code>response_type=code</code>), the Implicit Flow (<code>response_type=id_token token</code> or <code>response_type=id_token</code>), or the Hybrid Flow (using other Response Type values defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses\">OAuth 2.0 Multiple Response Type Encoding Practices</a> [OAuth.Responses]). The flows determine how the ID Token and Access Token are returned to the Client.</p>\n<p>The characteristics of the three flows are summarized in the following non-normative table. The table is intended to provide some guidance on which flow to choose in particular contexts.</p>\n<hr>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Authorization Code Flow</th>\n<th>Implicit Flow</th>\n<th>Hybrid Flow</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>All tokens returned from Authorization Endpoint</td>\n<td>no</td>\n<td>yes</td>\n<td>no</td>\n</tr>\n<tr>\n<td>All tokens returned from Token Endpoint</td>\n<td>yes</td>\n<td>no</td>\n<td>no</td>\n</tr>\n<tr>\n<td>Tokens not revealed to User Agent</td>\n<td>yes</td>\n<td>no</td>\n<td>no</td>\n</tr>\n<tr>\n<td>Client can be authenticated</td>\n<td>yes</td>\n<td>no</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>Refresh Token possible</td>\n<td>yes</td>\n<td>no</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>Communication in one round trip</td>\n<td>no</td>\n<td>yes</td>\n<td>no</td>\n</tr>\n<tr>\n<td>Most communication server-to-server</td>\n<td>yes</td>\n<td>no</td>\n<td>varies</td>\n</tr>\n</tbody></table>\n<p> <strong>OpenID Connect Authentication Flows</strong>  </p>\n<hr>\n<p>The flow used is determined by the <code>response_type</code> value contained in the Authorization Request. These <code>response_type</code> values select these flows:</p>\n<hr>\n<table>\n<thead>\n<tr>\n<th>“response_type” value</th>\n<th>Flow</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>code</code></td>\n<td>Authorization Code Flow</td>\n</tr>\n<tr>\n<td><code>id_token</code></td>\n<td>Implicit Flow</td>\n</tr>\n<tr>\n<td><code>id_token token</code></td>\n<td>Implicit Flow</td>\n</tr>\n<tr>\n<td><code>code id_token</code></td>\n<td>Hybrid Flow</td>\n</tr>\n<tr>\n<td><code>code token</code></td>\n<td>Hybrid Flow</td>\n</tr>\n<tr>\n<td><code>code id_token token</code></td>\n<td>Hybrid Flow</td>\n</tr>\n</tbody></table>\n<p> <strong>OpenID Connect “response_type” Values</strong>  </p>\n<hr>\n<p>All but the <code>code</code> Response Type value, which is defined by <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749], are defined in the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses\">OAuth 2.0 Multiple Response Type Encoding Practices</a> [OAuth.Responses] specification. NOTE: While OAuth 2.0 also defines the <code>token</code> Response Type value for the Implicit Flow, OpenID Connect does not use this Response Type, since no ID Token would be returned.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-使用授权码流（Authorization-Code-Flow）进行身份验证\"><a href=\"#3-1-使用授权码流（Authorization-Code-Flow）进行身份验证\" class=\"headerlink\" title=\"3.1. 使用授权码流（Authorization Code Flow）进行身份验证\"></a>3.1. 使用授权码流（Authorization Code Flow）进行身份验证</h3><p>This section describes how to perform authentication using the Authorization Code Flow. When using the Authorization Code Flow, all tokens are returned from the Token Endpoint.</p>\n<p>The Authorization Code Flow returns an Authorization Code to the Client, which can then exchange it for an ID Token and an Access Token directly. This provides the benefit of not exposing any tokens to the User Agent and possibly other malicious applications with access to the User Agent. The Authorization Server can also authenticate the Client before exchanging the Authorization Code for an Access Token. The Authorization Code flow is suitable for Clients that can securely maintain a Client Secret between themselves and the Authorization Server.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-1-授权码流（Authorization-Code-Flow）的步骤\"><a href=\"#3-1-1-授权码流（Authorization-Code-Flow）的步骤\" class=\"headerlink\" title=\"3.1.1. 授权码流（Authorization Code Flow）的步骤\"></a>3.1.1. 授权码流（Authorization Code Flow）的步骤</h3><p>The Authorization Code Flow goes through the following steps.</p>\n<ol>\n<li>Client prepares an Authentication Request containing the desired request parameters.</li>\n<li>Client sends the request to the Authorization Server.</li>\n<li>Authorization Server Authenticates the End-User.</li>\n<li>Authorization Server obtains End-User Consent&#x2F;Authorization.</li>\n<li>Authorization Server sends the End-User back to the Client with an Authorization Code.</li>\n<li>Client requests a response using the Authorization Code at the Token Endpoint.</li>\n<li>Client receives a response that contains an ID Token and Access Token in the response body.</li>\n<li>Client validates the ID token and retrieves the End-User’s Subject Identifier.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-2-授权端点\"><a href=\"#3-1-2-授权端点\" class=\"headerlink\" title=\"3.1.2. 授权端点\"></a>3.1.2. 授权端点</h3><p>The Authorization Endpoint performs Authentication of the End-User. This is done by sending the User Agent to the Authorization Server’s Authorization Endpoint for Authentication and Authorization, using request parameters defined by OAuth 2.0 and additional parameters and parameter values defined by OpenID Connect.</p>\n<p>Communication with the Authorization Endpoint MUST utilize TLS. See <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#TLSRequirements\">Section 16.17</a> for more information on using TLS.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-2-1-身份验证请求\"><a href=\"#3-1-2-1-身份验证请求\" class=\"headerlink\" title=\"3.1.2.1. 身份验证请求\"></a>3.1.2.1. 身份验证请求</h3><p>An Authentication Request is an OAuth 2.0 Authorization Request that requests that the End-User be authenticated by the Authorization Server.</p>\n<p>Authorization Servers MUST support the use of the HTTP <code>GET</code> and <code>POST</code> methods defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC2616\">RFC 2616</a> [RFC2616] at the Authorization Endpoint. Clients MAY use the HTTP <code>GET</code> or <code>POST</code> methods to send the Authorization Request to the Authorization Server. If using the HTTP <code>GET</code> method, the request parameters are serialized using URI Query String Serialization, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#QuerySerialization\">Section 13.1</a>. If using the HTTP <code>POST</code> method, the request parameters are serialized using Form Serialization, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#FormSerialization\">Section 13.2</a>.</p>\n<p>OpenID Connect uses the following OAuth 2.0 request parameters with the Authorization Code Flow:</p>\n<blockquote>\n<ul>\n<li><p>scope</p>\n<p>REQUIRED. OpenID Connect requests MUST contain the <code>openid</code> scope value. If the <code>openid</code> scope value is not present, the behavior is entirely unspecified. Other scope values MAY be present. Scope values used that are not understood by an implementation SHOULD be ignored. See Sections <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims\">5.4</a> and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OfflineAccess\">11</a> for additional scope values defined by this specification.</p>\n</li>\n<li><p>response_type</p>\n<p>REQUIRED. OAuth 2.0 Response Type value that determines the authorization processing flow to be used, including what parameters are returned from the endpoints used. When using the Authorization Code Flow, this value is <code>code</code>.</p>\n</li>\n<li><p>client_id</p>\n<p>REQUIRED. OAuth 2.0 Client Identifier valid at the Authorization Server.</p>\n</li>\n<li><p>redirect_uri</p>\n<p>REQUIRED. Redirection URI to which the response will be sent. This URI MUST exactly match one of the Redirection URI values for the Client pre-registered at the OpenID Provider, with the matching performed as described in Section 6.2.1 of [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC3986\">RFC3986]</a> (Simple String Comparison). When using this flow, the Redirection URI SHOULD use the <code>https</code> scheme; however, it MAY use the <code>http</code> scheme, provided that the Client Type is <code>confidential</code>, as defined in Section 2.1 of OAuth 2.0, and provided the OP allows the use of <code>http</code> Redirection URIs in this case. The Redirection URI MAY use an alternate scheme, such as one that is intended to identify a callback into a native application.</p>\n</li>\n<li><p>state</p>\n<p>RECOMMENDED. Opaque value used to maintain state between the request and the callback. Typically, Cross-Site Request Forgery (CSRF, XSRF) mitigation is done by cryptographically binding the value of this parameter with a browser cookie.</p>\n</li>\n</ul>\n</blockquote>\n<p>OpenID Connect also uses the following OAuth 2.0 request parameter, which is defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses\">OAuth 2.0 Multiple Response Type Encoding Practices</a> [OAuth.Responses]:</p>\n<blockquote>\n<ul>\n<li><p>response_mode</p>\n<p>OPTIONAL. Informs the Authorization Server of the mechanism to be used for returning parameters from the Authorization Endpoint. This use of this parameter is NOT RECOMMENDED when the Response Mode that would be requested is the default mode specified for the Response Type.</p>\n</li>\n</ul>\n</blockquote>\n<p>This specification also defines the following request parameters:</p>\n<blockquote>\n<ul>\n<li><p>nonce</p>\n<p>OPTIONAL. String value used to associate a Client session with an ID Token, and to mitigate replay attacks. The value is passed through unmodified from the Authentication Request to the ID Token. Sufficient entropy MUST be present in the <code>nonce</code> values used to prevent attackers from guessing values. For implementation notes, see <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#NonceNotes\">Section 15.5.2</a>.</p>\n</li>\n<li><p>display</p>\n<p>OPTIONAL. ASCII string value that specifies how the Authorization Server displays the authentication and consent user interface pages to the End-User. The defined values are:pageThe Authorization Server SHOULD display the authentication and consent UI consistent with a full User Agent page view. If the display parameter is not specified, this is the default display mode.popupThe Authorization Server SHOULD display the authentication and consent UI consistent with a popup User Agent window. The popup User Agent window should be of an appropriate size for a login-focused dialog and should not obscure the entire window that it is popping up over.touchThe Authorization Server SHOULD display the authentication and consent UI consistent with a device that leverages a touch interface.wapThe Authorization Server SHOULD display the authentication and consent UI consistent with a “feature phone” type display.The Authorization Server MAY also attempt to detect the capabilities of the User Agent and present an appropriate display.</p>\n</li>\n<li><p>prompt</p>\n<p>OPTIONAL. Space delimited, case sensitive list of ASCII string values that specifies whether the Authorization Server prompts the End-User for reauthentication and consent. The defined values are:noneThe Authorization Server MUST NOT display any authentication or consent user interface pages. An error is returned if an End-User is not already authenticated or the Client does not have pre-configured consent for the requested Claims or does not fulfill other conditions for processing the request. The error code will typically be <code>login_required</code>, <code>interaction_required</code>, or another code defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthError\">Section 3.1.2.6</a>. This can be used as a method to check for existing authentication and&#x2F;or consent.loginThe Authorization Server SHOULD prompt the End-User for reauthentication. If it cannot reauthenticate the End-User, it MUST return an error, typically <code>login_required</code>.consentThe Authorization Server SHOULD prompt the End-User for consent before returning information to the Client. If it cannot obtain consent, it MUST return an error, typically <code>consent_required</code>.select_accountThe Authorization Server SHOULD prompt the End-User to select a user account. This enables an End-User who has multiple accounts at the Authorization Server to select amongst the multiple accounts that they might have current sessions for. If it cannot obtain an account selection choice made by the End-User, it MUST return an error, typically <code>account_selection_required</code>.The <code>prompt</code> parameter can be used by the Client to make sure that the End-User is still present for the current session or to bring attention to the request. If this parameter contains <code>none</code> with any other value, an error is returned.</p>\n</li>\n<li><p>max_age</p>\n<p>OPTIONAL. Maximum Authentication Age. Specifies the allowable elapsed time in seconds since the last time the End-User was actively authenticated by the OP. If the elapsed time is greater than this value, the OP MUST attempt to actively re-authenticate the End-User. (The <code>max_age</code> request parameter corresponds to the OpenID 2.0 <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.PAPE\">PAPE</a> [OpenID.PAPE] <code>max_auth_age</code> request parameter.) When <code>max_age</code> is used, the ID Token returned MUST include an <code>auth_time</code> Claim Value.</p>\n</li>\n<li><p>ui_locales</p>\n<p>OPTIONAL. End-User’s preferred languages and scripts for the user interface, represented as a space-separated list of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC5646\">BCP47</a> [RFC5646] language tag values, ordered by preference. For instance, the value “fr-CA fr en” represents a preference for French as spoken in Canada, then French (without a region designation), followed by English (without a region designation). An error SHOULD NOT result if some or all of the requested locales are not supported by the OpenID Provider.</p>\n</li>\n<li><p>id_token_hint</p>\n<p>OPTIONAL. ID Token previously issued by the Authorization Server being passed as a hint about the End-User’s current or past authenticated session with the Client. If the End-User identified by the ID Token is logged in or is logged in by the request, then the Authorization Server returns a positive response; otherwise, it SHOULD return an error, such as <code>login_required</code>. When possible, an <code>id_token_hint</code> SHOULD be present when <code>prompt=none</code> is used and an <code>invalid_request</code> error MAY be returned if it is not; however, the server SHOULD respond successfully when possible, even if it is not present. The Authorization Server need not be listed as an audience of the ID Token when it is used as an <code>id_token_hint</code> value.</p>\n</li>\n<li><p>If the ID Token received by the RP from the OP is encrypted, to use it as an <code>id_token_hint</code>, the Client MUST decrypt the signed ID Token contained within the encrypted ID Token. The Client MAY re-encrypt the signed ID token to the Authentication Server using a key that enables the server to decrypt the ID Token, and use the re-encrypted ID token as the <code>id_token_hint</code> value.</p>\n</li>\n<li><p>login_hint</p>\n<p>OPTIONAL. Hint to the Authorization Server about the login identifier the End-User might use to log in (if necessary). This hint can be used by an RP if it first asks the End-User for their e-mail address (or other identifier) and then wants to pass that value as a hint to the discovered authorization service. It is RECOMMENDED that the hint value match the value used for discovery. This value MAY also be a phone number in the format specified for the <code>phone_number</code> Claim. The use of this parameter is left to the OP’s discretion.</p>\n</li>\n<li><p>acr_values</p>\n<p>OPTIONAL. Requested Authentication Context Class Reference values. Space-separated string that specifies the <code>acr</code> values that the Authorization Server is being requested to use for processing this Authentication Request, with the values appearing in order of preference. The Authentication Context Class satisfied by the authentication performed is returned as the <code>acr</code> Claim Value, as specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a>. The <code>acr</code> Claim is requested as a Voluntary Claim by this parameter.</p>\n</li>\n</ul>\n</blockquote>\n<p>Other parameters MAY be sent. See Sections <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ImplicitAuthorizationEndpoint\">3.2.2</a>, <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#HybridAuthorizationEndpoint\">3.3.2</a>, <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts\">5.2</a>, <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter\">5.5</a>, <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWTRequests\">6</a>, and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RegistrationParameter\">7.2.1</a> for additional Authorization Request parameters and parameter values defined by this specification.</p>\n<p>The following is a non-normative example HTTP 302 redirect response by the Client, which triggers the User Agent to make an Authentication Request to the Authorization Endpoint (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">HTTP&#x2F;1.1 302 Found\nLocation: https:&#x2F;&#x2F;server.example.com&#x2F;authorize?\n  response_type&#x3D;code\n  &amp;scope&#x3D;openid%20profile%20email\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;state&#x3D;af0ifjsldkj\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>The following is the non-normative example request that would be sent by the User Agent to the Authorization Server in response to the HTTP 302 redirect response by the Client above (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;authorize?\n  response_type&#x3D;code\n  &amp;scope&#x3D;openid%20profile%20email\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;state&#x3D;af0ifjsldkj\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb HTTP&#x2F;1.1\nHost: server.example.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-2-2-Authentication-Request-Validation\"><a href=\"#3-1-2-2-Authentication-Request-Validation\" class=\"headerlink\" title=\"3.1.2.2. Authentication Request Validation\"></a>3.1.2.2. Authentication Request Validation</h3><p>The Authorization Server MUST validate the request received as follows:</p>\n<ol>\n<li>The Authorization Server MUST validate all the OAuth 2.0 parameters according to the OAuth 2.0 specification.</li>\n<li>Verify that a <code>scope</code> parameter is present and contains the <code>openid</code> scope value. (If no <code>openid</code> scope value is present, the request may still be a valid OAuth 2.0 request, but is not an OpenID Connect request.)</li>\n<li>The Authorization Server MUST verify that all the REQUIRED parameters are present and their usage conforms to this specification.</li>\n<li>If the <code>sub</code> (subject) Claim is requested with a specific value for the ID Token, the Authorization Server MUST only send a positive response if the End-User identified by that <code>sub</code> value has an active session with the Authorization Server or has been Authenticated as a result of the request. The Authorization Server MUST NOT reply with an ID Token or Access Token for a different user, even if they have an active session with the Authorization Server. Such a request can be made either using an <code>id_token_hint</code> parameter or by requesting a specific Claim Value as described in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IndividualClaimsRequests\">Section 5.5.1</a>, if the <code>claims</code> parameter is supported by the implementation.</li>\n</ol>\n<p>As specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749], Authorization Servers SHOULD ignore unrecognized request parameters.</p>\n<p>If the Authorization Server encounters any error, it MUST return an error response, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthError\">Section 3.1.2.6</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-2-3-Authorization-Server-Authenticates-End-User\"><a href=\"#3-1-2-3-Authorization-Server-Authenticates-End-User\" class=\"headerlink\" title=\"3.1.2.3. Authorization Server Authenticates End-User\"></a>3.1.2.3. Authorization Server Authenticates End-User</h3><p>If the request is valid, the Authorization Server attempts to Authenticate the End-User or determines whether the End-User is Authenticated, depending upon the request parameter values used. The methods used by the Authorization Server to Authenticate the End-User (e.g. username and password, session cookies, etc.) are beyond the scope of this specification. An Authentication user interface MAY be displayed by the Authorization Server, depending upon the request parameter values used and the authentication methods used.</p>\n<p>The Authorization Server MUST attempt to Authenticate the End-User in the following cases:</p>\n<ul>\n<li>The End-User is not already Authenticated.</li>\n<li>The Authentication Request contains the <code>prompt</code> parameter with the value <code>login</code>. In this case, the Authorization Server MUST reauthenticate the End-User even if the End-User is already authenticated.</li>\n</ul>\n<p>The Authorization Server MUST NOT interact with the End-User in the following case:</p>\n<ul>\n<li>The Authentication Request contains the <code>prompt</code> parameter with the value <code>none</code>. In this case, the Authorization Server MUST return an error if an End-User is not already Authenticated or could not be silently Authenticated.</li>\n</ul>\n<p>When interacting with the End-User, the Authorization Server MUST employ appropriate measures against Cross-Site Request Forgery and Clickjacking as, described in Sections 10.12 and 10.13 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749].</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-2-4-Authorization-Server-Obtains-End-User-Consent-x2F-Authorization\"><a href=\"#3-1-2-4-Authorization-Server-Obtains-End-User-Consent-x2F-Authorization\" class=\"headerlink\" title=\"3.1.2.4. Authorization Server Obtains End-User Consent&#x2F;Authorization\"></a>3.1.2.4. Authorization Server Obtains End-User Consent&#x2F;Authorization</h3><p>Once the End-User is authenticated, the Authorization Server MUST obtain an authorization decision before releasing information to the Relying Party. When permitted by the request parameters used, this MAY be done through an interactive dialogue with the End-User that makes it clear what is being consented to or by establishing consent via conditions for processing the request or other means (for example, via previous administrative consent). Sections <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">2</a> and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#UserInfo\">5.3</a> describe information release mechanisms.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-2-5-Successful-Authentication-Response\"><a href=\"#3-1-2-5-Successful-Authentication-Response\" class=\"headerlink\" title=\"3.1.2.5. Successful Authentication Response\"></a>3.1.2.5. Successful Authentication Response</h3><p>An Authentication Response is an OAuth 2.0 Authorization Response message returned from the OP’s Authorization Endpoint in response to the Authorization Request message sent by the RP.</p>\n<p>When using the Authorization Code Flow, the Authorization Response MUST return the parameters defined in Section 4.1.2 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749] by adding them as query parameters to the <code>redirect_uri</code> specified in the Authorization Request using the <code>application/x-www-form-urlencoded</code> format, unless a different Response Mode was specified.</p>\n<p>The following is a non-normative example successful response using this flow (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">HTTP&#x2F;1.1 302 Found\nLocation: https:&#x2F;&#x2F;client.example.org&#x2F;cb?\n  code&#x3D;SplxlOBeZQQYbYS6WxSbIA\n  &amp;state&#x3D;af0ifjsldkj<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>For implementation notes on the contents of the Authorization Code, see <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#CodeNotes\">Section 15.5.1</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-2-6-Authentication-Error-Response\"><a href=\"#3-1-2-6-Authentication-Error-Response\" class=\"headerlink\" title=\"3.1.2.6. Authentication Error Response\"></a>3.1.2.6. Authentication Error Response</h3><p>An Authentication Error Response is an OAuth 2.0 Authorization Error Response message returned from the OP’s Authorization Endpoint in response to the Authorization Request message sent by the RP.</p>\n<p>If the End-User denies the request or the End-User authentication fails, the OP (Authorization Server) informs the RP (Client) by using the Error Response parameters defined in Section 4.1.2.1 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749]. (HTTP errors unrelated to RFC 6749 are returned to the User Agent using the appropriate HTTP status code.)</p>\n<p>Unless the Redirection URI is invalid, the Authorization Server returns the Client to the Redirection URI specified in the Authorization Request with the appropriate error and state parameters. Other parameters SHOULD NOT be returned.</p>\n<p>In addition to the error codes defined in Section 4.1.2.1 of OAuth 2.0, this specification also defines the following error codes:</p>\n<blockquote>\n<ul>\n<li><p>interaction_required</p>\n<p>The Authorization Server requires End-User interaction of some form to proceed. This error MAY be returned when the <code>prompt</code> parameter value in the Authentication Request is <code>none</code>, but the Authentication Request cannot be completed without displaying a user interface for End-User interaction.</p>\n</li>\n<li><p>login_required</p>\n<p>The Authorization Server requires End-User authentication. This error MAY be returned when the <code>prompt</code> parameter value in the Authentication Request is <code>none</code>, but the Authentication Request cannot be completed without displaying a user interface for End-User authentication.</p>\n</li>\n<li><p>account_selection_required</p>\n<p>The End-User is REQUIRED to select a session at the Authorization Server. The End-User MAY be authenticated at the Authorization Server with different associated accounts, but the End-User did not select a session. This error MAY be returned when the <code>prompt</code> parameter value in the Authentication Request is <code>none</code>, but the Authentication Request cannot be completed without displaying a user interface to prompt for a session to use.</p>\n</li>\n<li><p>consent_required</p>\n<p>The Authorization Server requires End-User consent. This error MAY be returned when the <code>prompt</code> parameter value in the Authentication Request is <code>none</code>, but the Authentication Request cannot be completed without displaying a user interface for End-User consent.</p>\n</li>\n<li><p>invalid_request_uri</p>\n<p>The <code>request_uri</code> in the Authorization Request returns an error or contains invalid data.</p>\n</li>\n<li><p>invalid_request_object</p>\n<p>The <code>request</code> parameter contains an invalid Request Object.</p>\n</li>\n<li><p>request_not_supported</p>\n<p>The OP does not support use of the <code>request</code> parameter defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWTRequests\">Section 6</a>.</p>\n</li>\n<li><p>request_uri_not_supported</p>\n<p>The OP does not support use of the <code>request_uri</code> parameter defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWTRequests\">Section 6</a>.</p>\n</li>\n<li><p>registration_not_supported</p>\n<p>The OP does not support use of the <code>registration</code> parameter defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RegistrationParameter\">Section 7.2.1</a>.</p>\n</li>\n</ul>\n</blockquote>\n<p>The error response parameters are the following:</p>\n<blockquote>\n<ul>\n<li><p>error</p>\n<p>REQUIRED. Error code.</p>\n</li>\n<li><p>error_description</p>\n<p>OPTIONAL. Human-readable ASCII encoded text description of the error.</p>\n</li>\n<li><p>error_uri</p>\n<p>OPTIONAL. URI of a web page that includes additional information about the error.</p>\n</li>\n<li><p>state</p>\n<p>OAuth 2.0 state value. REQUIRED if the Authorization Request included the <code>state</code> parameter. Set to the value received from the Client.</p>\n</li>\n</ul>\n</blockquote>\n<p>When using the Authorization Code Flow, the error response parameters are added to the query component of the Redirection URI, unless a different Response Mode was specified.</p>\n<p>The following is a non-normative example error response using this flow (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">HTTP&#x2F;1.1 302 Found\nLocation: https:&#x2F;&#x2F;client.example.org&#x2F;cb?\n  error&#x3D;invalid_request\n  &amp;error_description&#x3D;\n    Unsupported%20response_type%20value\n  &amp;state&#x3D;af0ifjsldkj<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-2-7-Authentication-Response-Validation\"><a href=\"#3-1-2-7-Authentication-Response-Validation\" class=\"headerlink\" title=\"3.1.2.7. Authentication Response Validation\"></a>3.1.2.7. Authentication Response Validation</h3><p>When using the Authorization Code Flow, the Client MUST validate the response according to RFC 6749, especially Sections 4.1.2 and 10.12.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-3-Token-Endpoint\"><a href=\"#3-1-3-Token-Endpoint\" class=\"headerlink\" title=\"3.1.3. Token Endpoint\"></a>3.1.3. Token Endpoint</h3><p>To obtain an Access Token, an ID Token, and optionally a Refresh Token, the RP (Client) sends a Token Request to the Token Endpoint to obtain a Token Response, as described in Section 3.2 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749], when using the Authorization Code Flow.</p>\n<p>Communication with the Token Endpoint MUST utilize TLS. See <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#TLSRequirements\">Section 16.17</a> for more information on using TLS.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-3-1-Token-Request\"><a href=\"#3-1-3-1-Token-Request\" class=\"headerlink\" title=\"3.1.3.1. Token Request\"></a>3.1.3.1. Token Request</h3><p>A Client makes a Token Request by presenting its Authorization Grant (in the form of an Authorization Code) to the Token Endpoint using the <code>grant_type</code> value <code>authorization_code</code>, as described in Section 4.1.3 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749]. If the Client is a Confidential Client, then it MUST authenticate to the Token Endpoint using the authentication method registered for its <code>client_id</code>, as described in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication\">Section 9</a>.</p>\n<p>The Client sends the parameters to the Token Endpoint using the HTTP <code>POST</code> method and the Form Serialization, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#FormSerialization\">Section 13.2</a>, as described in Section 4.1.3 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749].</p>\n<p>The following is a non-normative example of a Token Request (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">POST &#x2F;token HTTP&#x2F;1.1\nHost: server.example.com\nContent-Type: application&#x2F;x-www-form-urlencoded\nAuthorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW\n\ngrant_type&#x3D;authorization_code&amp;code&#x3D;SplxlOBeZQQYbYS6WxSbIA\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-3-2-Token-Request-Validation\"><a href=\"#3-1-3-2-Token-Request-Validation\" class=\"headerlink\" title=\"3.1.3.2. Token Request Validation\"></a>3.1.3.2. Token Request Validation</h3><p>The Authorization Server MUST validate the Token Request as follows:</p>\n<ul>\n<li>Authenticate the Client if it was issued Client Credentials or if it uses another Client Authentication method, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication\">Section 9</a>.</li>\n<li>Ensure the Authorization Code was issued to the authenticated Client.</li>\n<li>Verify that the Authorization Code is valid.</li>\n<li>If possible, verify that the Authorization Code has not been previously used.</li>\n<li>Ensure that the <code>redirect_uri</code> parameter value is identical to the <code>redirect_uri</code> parameter value that was included in the initial Authorization Request. If the <code>redirect_uri</code> parameter value is not present when there is only one registered <code>redirect_uri</code> value, the Authorization Server MAY return an error (since the Client should have included the parameter) or MAY proceed without an error (since OAuth 2.0 permits the parameter to be omitted in this case).</li>\n<li>Verify that the Authorization Code used was issued in response to an OpenID Connect Authentication Request (so that an ID Token will be returned from the Token Endpoint).</li>\n</ul>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-3-3-Successful-Token-Response\"><a href=\"#3-1-3-3-Successful-Token-Response\" class=\"headerlink\" title=\"3.1.3.3. Successful Token Response\"></a>3.1.3.3. Successful Token Response</h3><p>After receiving and validating a valid and authorized Token Request from the Client, the Authorization Server returns a successful response that includes an ID Token and an Access Token. The parameters in the successful response are defined in Section 4.1.4 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749]. The response uses the <code>application/json</code> media type.</p>\n<p>The OAuth 2.0 <code>token_type</code> response parameter value MUST be <code>Bearer</code>, as specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6750\">OAuth 2.0 Bearer Token Usage</a> [RFC6750], unless another Token Type has been negotiated with the Client. Servers SHOULD support the <code>Bearer</code> Token Type; use of other Token Types is outside the scope of this specification.</p>\n<p>In addition to the response parameters specified by OAuth 2.0, the following parameters MUST be included in the response:</p>\n<blockquote>\n<ul>\n<li><p>id_token</p>\n<p>ID Token value associated with the authenticated session.</p>\n</li>\n</ul>\n</blockquote>\n<p>All Token Responses that contain tokens, secrets, or other sensitive information MUST include the following HTTP response header fields and values:</p>\n<hr>\n<table>\n<thead>\n<tr>\n<th>Header Name</th>\n<th>Header Value</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Cache-Control</td>\n<td>no-store</td>\n</tr>\n<tr>\n<td>Pragma</td>\n<td>no-cache</td>\n</tr>\n</tbody></table>\n<p> <strong>HTTP Response Headers and Values</strong>  </p>\n<hr>\n<p>The following is a non-normative example of a successful Token Response. The ID Token signature in the example can be verified with the key at <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ExampleRSAKey\">Appendix A.7</a>.</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">HTTP&#x2F;1.1 200 OK\nContent-Type: application&#x2F;json\nCache-Control: no-store\nPragma: no-cache\n\n&#123;\n &quot;access_token&quot;: &quot;SlAV32hkKG&quot;,\n &quot;token_type&quot;: &quot;Bearer&quot;,\n &quot;refresh_token&quot;: &quot;8xLOxBtZp8&quot;,\n &quot;expires_in&quot;: 3600,\n &quot;id_token&quot;: &quot;eyJhbGciOiJSUzI1NiIsImtpZCI6IjFlOWdkazcifQ.ewogImlzc\n   yI6ICJodHRwOi8vc2VydmVyLmV4YW1wbGUuY29tIiwKICJzdWIiOiAiMjQ4Mjg5\n   NzYxMDAxIiwKICJhdWQiOiAiczZCaGRSa3F0MyIsCiAibm9uY2UiOiAibi0wUzZ\n   fV3pBMk1qIiwKICJleHAiOiAxMzExMjgxOTcwLAogImlhdCI6IDEzMTEyODA5Nz\n   AKfQ.ggW8hZ1EuVLuxNuuIJKX_V8a_OMXzR0EHR9R6jgdqrOOF4daGU96Sr_P6q\n   Jp6IcmD3HP99Obi1PRs-cwh3LO-p146waJ8IhehcwL7F09JdijmBqkvPeB2T9CJ\n   NqeGpe-gccMg4vfKjkM8FcGvnzZUN4_KSP0aAp1tOJ1zZwgjxqGByKHiOtX7Tpd\n   QyHE5lcMiKPXfEIQILVq0pc_E2DzL7emopWoaoZTF_m0_N0YzFC6g6EJbOEoRoS\n   K5hoDalrcvRYLSrQAZZKflyuVCyixEoV9GfNQC3_osjzw2PAithfubEEBLuVVk4\n   XUVrWOLrLl0nx7RkKU8NXNHq-rvKMzqg&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>As specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749], Clients SHOULD ignore unrecognized response parameters.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-3-4-Token-Error-Response\"><a href=\"#3-1-3-4-Token-Error-Response\" class=\"headerlink\" title=\"3.1.3.4. Token Error Response\"></a>3.1.3.4. Token Error Response</h3><p>If the Token Request is invalid or unauthorized, the Authorization Server constructs the error response. The parameters of the Token Error Response are defined as in Section 5.2 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749]. The HTTP response body uses the <code>application/json</code> media type with HTTP response code of 400.</p>\n<p>The following is a non-normative example Token Error Response:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">HTTP&#x2F;1.1 400 Bad Request\nContent-Type: application&#x2F;json\nCache-Control: no-store\nPragma: no-cache\n\n&#123;\n &quot;error&quot;: &quot;invalid_request&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-3-5-Token-Response-Validation\"><a href=\"#3-1-3-5-Token-Response-Validation\" class=\"headerlink\" title=\"3.1.3.5. Token Response Validation\"></a>3.1.3.5. Token Response Validation</h3><p>The Client MUST validate the Token Response as follows:</p>\n<ol>\n<li>Follow the validation rules in RFC 6749, especially those in Sections 5.1 and 10.12.</li>\n<li>Follow the ID Token validation rules in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation\">Section 3.1.3.7</a>.</li>\n<li>Follow the Access Token validation rules in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowTokenValidation\">Section 3.1.3.8</a>.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-3-6-ID-Token\"><a href=\"#3-1-3-6-ID-Token\" class=\"headerlink\" title=\"3.1.3.6. ID Token\"></a>3.1.3.6. ID Token</h3><p>The contents of the ID Token are as described in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a>. When using the Authorization Code Flow, these additional requirements for the following ID Token Claims apply:</p>\n<blockquote>\n<ul>\n<li><p>at_hash</p>\n<p>OPTIONAL. Access Token hash value. Its value is the base64url encoding of the left-most half of the hash of the octets of the ASCII representation of the <code>access_token</code> value, where the hash algorithm used is the hash algorithm used in the <code>alg</code> Header Parameter of the ID Token’s JOSE Header. For instance, if the <code>alg</code> is <code>RS256</code>, hash the <code>access_token</code> value with SHA-256, then take the left-most 128 bits and base64url encode them. The <code>at_hash</code> value is a case sensitive string.</p>\n</li>\n</ul>\n</blockquote>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-3-7-ID-Token-Validation\"><a href=\"#3-1-3-7-ID-Token-Validation\" class=\"headerlink\" title=\"3.1.3.7. ID Token Validation\"></a>3.1.3.7. ID Token Validation</h3><p>Clients MUST validate the ID Token in the Token Response in the following manner:</p>\n<ol>\n<li>If the ID Token is encrypted, decrypt it using the keys and algorithms that the Client specified during Registration that the OP was to use to encrypt the ID Token. If encryption was negotiated with the OP at Registration time and the ID Token is not encrypted, the RP SHOULD reject it.</li>\n<li>The Issuer Identifier for the OpenID Provider (which is typically obtained during Discovery) MUST exactly match the value of the <code>iss</code> (issuer) Claim.</li>\n<li>The Client MUST validate that the <code>aud</code> (audience) Claim contains its <code>client_id</code> value registered at the Issuer identified by the <code>iss</code> (issuer) Claim as an audience. The <code>aud</code> (audience) Claim MAY contain an array with more than one element. The ID Token MUST be rejected if the ID Token does not list the Client as a valid audience, or if it contains additional audiences not trusted by the Client.</li>\n<li>If the ID Token contains multiple audiences, the Client SHOULD verify that an <code>azp</code> Claim is present.</li>\n<li>If an <code>azp</code> (authorized party) Claim is present, the Client SHOULD verify that its <code>client_id</code> is the Claim Value.</li>\n<li>If the ID Token is received via direct communication between the Client and the Token Endpoint (which it is in this flow), the TLS server validation MAY be used to validate the issuer in place of checking the token signature. The Client MUST validate the signature of all other ID Tokens according to <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWS\">JWS</a> [JWS] using the algorithm specified in the JWT <code>alg</code> Header Parameter. The Client MUST use the keys provided by the Issuer.</li>\n<li>The <code>alg</code> value SHOULD be the default of <code>RS256</code> or the algorithm sent by the Client in the <code>id_token_signed_response_alg</code> parameter during Registration.</li>\n<li>If the JWT <code>alg</code> Header Parameter uses a MAC based algorithm such as <code>HS256</code>, <code>HS384</code>, or <code>HS512</code>, the octets of the UTF-8 representation of the <code>client_secret</code> corresponding to the <code>client_id</code> contained in the <code>aud</code> (audience) Claim are used as the key to validate the signature. For MAC based algorithms, the behavior is unspecified if the <code>aud</code> is multi-valued or if an <code>azp</code> value is present that is different than the <code>aud</code> value.</li>\n<li>The current time MUST be before the time represented by the <code>exp</code> Claim.</li>\n<li>The <code>iat</code> Claim can be used to reject tokens that were issued too far away from the current time, limiting the amount of time that nonces need to be stored to prevent attacks. The acceptable range is Client specific.</li>\n<li>If a nonce value was sent in the Authentication Request, a <code>nonce</code> Claim MUST be present and its value checked to verify that it is the same value as the one that was sent in the Authentication Request. The Client SHOULD check the <code>nonce</code> value for replay attacks. The precise method for detecting replay attacks is Client specific.</li>\n<li>If the <code>acr</code> Claim was requested, the Client SHOULD check that the asserted Claim Value is appropriate. The meaning and processing of <code>acr</code> Claim Values is out of scope for this specification.</li>\n<li>If the <code>auth_time</code> Claim was requested, either through a specific request for this Claim or by using the <code>max_age</code> parameter, the Client SHOULD check the <code>auth_time</code> Claim value and request re-authentication if it determines too much time has elapsed since the last End-User authentication.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-1-3-8-Access-Token-Validation\"><a href=\"#3-1-3-8-Access-Token-Validation\" class=\"headerlink\" title=\"3.1.3.8. Access Token Validation\"></a>3.1.3.8. Access Token Validation</h3><p>When using the Authorization Code Flow, if the ID Token contains an <code>at_hash</code> Claim, the Client MAY use it to validate the Access Token in the same manner as for the Implicit Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ImplicitTokenValidation\">Section 3.2.2.9</a>, but using the ID Token and Access Token returned from the Token Endpoint.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-Authentication-using-the-Implicit-Flow\"><a href=\"#3-2-Authentication-using-the-Implicit-Flow\" class=\"headerlink\" title=\"3.2. Authentication using the Implicit Flow\"></a>3.2. Authentication using the Implicit Flow</h3><p>This section describes how to perform authentication using the Implicit Flow. When using the Implicit Flow, all tokens are returned from the Authorization Endpoint; the Token Endpoint is not used.</p>\n<p>The Implicit Flow is mainly used by Clients implemented in a browser using a scripting language. The Access Token and ID Token are returned directly to the Client, which may expose them to the End-User and applications that have access to the End-User’s User Agent. The Authorization Server does not perform Client Authentication.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-1-Implicit-Flow-Steps\"><a href=\"#3-2-1-Implicit-Flow-Steps\" class=\"headerlink\" title=\"3.2.1. Implicit Flow Steps\"></a>3.2.1. Implicit Flow Steps</h3><p>The Implicit Flow follows the following steps:</p>\n<ol>\n<li>Client prepares an Authentication Request containing the desired request parameters.</li>\n<li>Client sends the request to the Authorization Server.</li>\n<li>Authorization Server Authenticates the End-User.</li>\n<li>Authorization Server obtains End-User Consent&#x2F;Authorization.</li>\n<li>Authorization Server sends the End-User back to the Client with an ID Token and, if requested, an Access Token.</li>\n<li>Client validates the ID token and retrieves the End-User’s Subject Identifier.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-2-Authorization-Endpoint\"><a href=\"#3-2-2-Authorization-Endpoint\" class=\"headerlink\" title=\"3.2.2. Authorization Endpoint\"></a>3.2.2. Authorization Endpoint</h3><p>When using the Implicit Flow, the Authorization Endpoint is used in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a>, with the exception of the differences specified in this section.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-2-1-Authentication-Request\"><a href=\"#3-2-2-1-Authentication-Request\" class=\"headerlink\" title=\"3.2.2.1. Authentication Request\"></a>3.2.2.1. Authentication Request</h3><p>Authentication Requests are made as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest\">Section 3.1.2.1</a>, except that these Authentication Request parameters are used as follows:</p>\n<blockquote>\n<ul>\n<li><p>response_type</p>\n<p>REQUIRED. OAuth 2.0 Response Type value that determines the authorization processing flow to be used, including what parameters are returned from the endpoints used. When using the Implicit Flow, this value is <code>id_token token</code> or <code>id_token</code>. The meanings of both of these values are defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses\">OAuth 2.0 Multiple Response Type Encoding Practices</a> [OAuth.Responses]. No Access Token is returned when the value is <code>id_token</code>.</p>\n</li>\n<li><p>NOTE: While OAuth 2.0 also defines the <code>token</code> Response Type value for the Implicit Flow, OpenID Connect does not use this Response Type, since no ID Token would be returned.</p>\n</li>\n<li><p>redirect_uri</p>\n<p>REQUIRED. Redirection URI to which the response will be sent. This URI MUST exactly match one of the Redirection URI values for the Client pre-registered at the OpenID Provider, with the matching performed as described in Section 6.2.1 of [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC3986\">RFC3986]</a> (Simple String Comparison). When using this flow, the Redirection URI MUST NOT use the <code>http</code> scheme unless the Client is a native application, in which case it MAY use the <code>http:</code> scheme with <code>localhost</code> as the hostname.</p>\n</li>\n<li><p>nonce</p>\n<p>REQUIRED. String value used to associate a Client session with an ID Token, and to mitigate replay attacks. The value is passed through unmodified from the Authentication Request to the ID Token. Sufficient entropy MUST be present in the <code>nonce</code> values used to prevent attackers from guessing values. For implementation notes, see <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#NonceNotes\">Section 15.5.2</a>.</p>\n</li>\n</ul>\n</blockquote>\n<p>The following is a non-normative example request using the Implicit Flow that would be sent by the User Agent to the Authorization Server in response to a corresponding HTTP 302 redirect response by the Client (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;authorize?\n  response_type&#x3D;id_token%20token\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb\n  &amp;scope&#x3D;openid%20profile\n  &amp;state&#x3D;af0ifjsldkj\n  &amp;nonce&#x3D;n-0S6_WzA2Mj HTTP&#x2F;1.1\nHost: server.example.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-2-2-Authentication-Request-Validation\"><a href=\"#3-2-2-2-Authentication-Request-Validation\" class=\"headerlink\" title=\"3.2.2.2. Authentication Request Validation\"></a>3.2.2.2. Authentication Request Validation</h3><p>When using the Implicit Flow, the Authentication Request is validated in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthRequestValidation\">Section 3.1.2.2</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-2-3-Authorization-Server-Authenticates-End-User\"><a href=\"#3-2-2-3-Authorization-Server-Authenticates-End-User\" class=\"headerlink\" title=\"3.2.2.3. Authorization Server Authenticates End-User\"></a>3.2.2.3. Authorization Server Authenticates End-User</h3><p>When using the Implicit Flow, End-User Authentication is performed in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#Authenticates\">Section 3.1.2.3</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-2-4-Authorization-Server-Obtains-End-User-Consent-x2F-Authorization\"><a href=\"#3-2-2-4-Authorization-Server-Obtains-End-User-Consent-x2F-Authorization\" class=\"headerlink\" title=\"3.2.2.4. Authorization Server Obtains End-User Consent&#x2F;Authorization\"></a>3.2.2.4. Authorization Server Obtains End-User Consent&#x2F;Authorization</h3><p>When using the Implicit Flow, End-User Consent is obtained in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#Consent\">Section 3.1.2.4</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-2-5-Successful-Authentication-Response\"><a href=\"#3-2-2-5-Successful-Authentication-Response\" class=\"headerlink\" title=\"3.2.2.5. Successful Authentication Response\"></a>3.2.2.5. Successful Authentication Response</h3><p>When using the Implicit Flow, Authentication Responses are made in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthResponse\">Section 3.1.2.5</a>, with the exception of the differences specified in this section.</p>\n<p>When using the Implicit Flow, all response parameters are added to the fragment component of the Redirection URI, as specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses\">OAuth 2.0 Multiple Response Type Encoding Practices</a> [OAuth.Responses], unless a different Response Mode was specified.</p>\n<p>These parameters are returned from the Authorization Endpoint:</p>\n<blockquote>\n<ul>\n<li><p>access_token</p>\n<p>OAuth 2.0 Access Token. This is returned unless the <code>response_type</code> value used is <code>id_token</code>.</p>\n</li>\n<li><p>token_type</p>\n<p>OAuth 2.0 Token Type value. The value MUST be <code>Bearer</code> or another <code>token_type</code> value that the Client has negotiated with the Authorization Server. Clients implementing this profile MUST support the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6750\">OAuth 2.0 Bearer Token Usage</a> [RFC6750] specification. This profile only describes the use of bearer tokens. This is returned in the same cases as <code>access_token</code> is.</p>\n</li>\n<li><p>id_token</p>\n<p>REQUIRED. ID Token.</p>\n</li>\n<li><p>state</p>\n<p>OAuth 2.0 state value. REQUIRED if the <code>state</code> parameter is present in the Authorization Request. Clients MUST verify that the <code>state</code> value is equal to the value of <code>state</code> parameter in the Authorization Request.</p>\n</li>\n<li><p>expires_in</p>\n<p>OPTIONAL. Expiration time of the Access Token in seconds since the response was generated.</p>\n</li>\n</ul>\n</blockquote>\n<p>Per Section 4.2.2 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749], no <code>code</code> result is returned when using the Implicit Flow.</p>\n<p>The following is a non-normative example of a successful response using the Implicit Flow (with line wraps for the display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">HTTP&#x2F;1.1 302 Found\nLocation: https:&#x2F;&#x2F;client.example.org&#x2F;cb#\n  access_token&#x3D;SlAV32hkKG\n  &amp;token_type&#x3D;bearer\n  &amp;id_token&#x3D;eyJ0 ... NiJ9.eyJ1c ... I6IjIifX0.DeWt4Qu ... ZXso\n  &amp;expires_in&#x3D;3600\n  &amp;state&#x3D;af0ifjsldkj<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-2-6-Authentication-Error-Response\"><a href=\"#3-2-2-6-Authentication-Error-Response\" class=\"headerlink\" title=\"3.2.2.6. Authentication Error Response\"></a>3.2.2.6. Authentication Error Response</h3><p>When using the Implicit Flow, Authorization Error Responses are made in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthError\">Section 3.1.2.6</a>, with the exception of the differences specified in this section.</p>\n<p>If the End-User denies the request or the End-User authentication fails, the Authorization Server MUST return the error Authorization Response in the fragment component of the Redirection URI, as defined in 4.2.2.1 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749] and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses\">OAuth 2.0 Multiple Response Type Encoding Practices</a> [OAuth.Responses], unless a different Response Mode was specified.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-2-7-Redirect-URI-Fragment-Handling\"><a href=\"#3-2-2-7-Redirect-URI-Fragment-Handling\" class=\"headerlink\" title=\"3.2.2.7. Redirect URI Fragment Handling\"></a>3.2.2.7. Redirect URI Fragment Handling</h3><p>Since response parameters are returned in the Redirection URI fragment value, the Client needs to have the User Agent parse the fragment encoded values and pass them to on to the Client’s processing logic for consumption. See <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#FragmentNotes\">Section 15.5.3</a> for implementation notes on URI fragment handling.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-2-8-Authentication-Response-Validation\"><a href=\"#3-2-2-8-Authentication-Response-Validation\" class=\"headerlink\" title=\"3.2.2.8. Authentication Response Validation\"></a>3.2.2.8. Authentication Response Validation</h3><p>When using the Implicit Flow, the Client MUST validate the response as follows:</p>\n<ol>\n<li>Verify that the response conforms to Section 5 of [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses\">OAuth.Responses]</a>.</li>\n<li>Follow the validation rules in RFC 6749, especially those in Sections 4.2.2 and 10.12.</li>\n<li>Follow the ID Token validation rules in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ImplicitIDTValidation\">Section 3.2.2.11</a>.</li>\n<li>Follow the Access Token validation rules in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ImplicitTokenValidation\">Section 3.2.2.9</a>, unless the <code>response_type</code> value used is <code>id_token</code>.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-2-9-Access-Token-Validation\"><a href=\"#3-2-2-9-Access-Token-Validation\" class=\"headerlink\" title=\"3.2.2.9. Access Token Validation\"></a>3.2.2.9. Access Token Validation</h3><p>To validate an Access Token issued from the Authorization Endpoint with an ID Token, the Client SHOULD do the following:</p>\n<ol>\n<li>Hash the octets of the ASCII representation of the <code>access_token</code> with the hash algorithm specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWA\">JWA</a> [JWA] for the <code>alg</code> Header Parameter of the ID Token’s JOSE Header. For instance, if the <code>alg</code> is <code>RS256</code>, the hash algorithm used is SHA-256.</li>\n<li>Take the left-most half of the hash and base64url encode it.</li>\n<li>The value of <code>at_hash</code> in the ID Token MUST match the value produced in the previous step.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-2-10-ID-Token\"><a href=\"#3-2-2-10-ID-Token\" class=\"headerlink\" title=\"3.2.2.10. ID Token\"></a>3.2.2.10. ID Token</h3><p>The contents of the ID Token are as described in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a>. When using the Implicit Flow, these additional requirements for the following ID Token Claims apply:</p>\n<blockquote>\n<ul>\n<li><p>nonce</p>\n<p>Use of the <code>nonce</code> Claim is REQUIRED for this flow.</p>\n</li>\n<li><p>at_hash</p>\n<p>Access Token hash value. Its value is the base64url encoding of the left-most half of the hash of the octets of the ASCII representation of the <code>access_token</code> value, where the hash algorithm used is the hash algorithm used in the <code>alg</code> Header Parameter of the ID Token’s JOSE Header. For instance, if the <code>alg</code> is <code>RS256</code>, hash the <code>access_token</code> value with SHA-256, then take the left-most 128 bits and base64url encode them. The <code>at_hash</code> value is a case sensitive string.</p>\n</li>\n<li><p>If the ID Token is issued from the Authorization Endpoint with an <code>access_token</code> value, which is the case for the <code>response_type</code> value <code>id_token token</code>, this is REQUIRED; it MAY NOT be used when no Access Token is issued, which is the case for the <code>response_type</code> value <code>id_token</code>.</p>\n</li>\n</ul>\n</blockquote>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-2-2-11-ID-Token-Validation\"><a href=\"#3-2-2-11-ID-Token-Validation\" class=\"headerlink\" title=\"3.2.2.11. ID Token Validation\"></a>3.2.2.11. ID Token Validation</h3><p>When using the Implicit Flow, the contents of the ID Token MUST be validated in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation\">Section 3.1.3.7</a>, with the exception of the differences specified in this section.</p>\n<ol>\n<li>The Client MUST validate the signature of the ID Token according to <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWS\">JWS</a> [JWS] using the algorithm specified in the <code>alg</code> Header Parameter of the JOSE Header.</li>\n<li>The value of the <code>nonce</code> Claim MUST be checked to verify that it is the same value as the one that was sent in the Authentication Request. The Client SHOULD check the <code>nonce</code> value for replay attacks. The precise method for detecting replay attacks is Client specific.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-Authentication-using-the-Hybrid-Flow\"><a href=\"#3-3-Authentication-using-the-Hybrid-Flow\" class=\"headerlink\" title=\"3.3. Authentication using the Hybrid Flow\"></a>3.3. Authentication using the Hybrid Flow</h3><p>This section describes how to perform authentication using the Hybrid Flow. When using the Hybrid Flow, some tokens are returned from the Authorization Endpoint and others are returned from the Token Endpoint. The mechanisms for returning tokens in the Hybrid Flow are specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses\">OAuth 2.0 Multiple Response Type Encoding Practices</a> [OAuth.Responses].</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-1-Hybrid-Flow-Steps\"><a href=\"#3-3-1-Hybrid-Flow-Steps\" class=\"headerlink\" title=\"3.3.1. Hybrid Flow Steps\"></a>3.3.1. Hybrid Flow Steps</h3><p>The Hybrid Flow follows the following steps:</p>\n<ol>\n<li>Client prepares an Authentication Request containing the desired request parameters.</li>\n<li>Client sends the request to the Authorization Server.</li>\n<li>Authorization Server Authenticates the End-User.</li>\n<li>Authorization Server obtains End-User Consent&#x2F;Authorization.</li>\n<li>Authorization Server sends the End-User back to the Client with an Authorization Code and, depending on the Response Type, one or more additional parameters.</li>\n<li>Client requests a response using the Authorization Code at the Token Endpoint.</li>\n<li>Client receives a response that contains an ID Token and Access Token in the response body.</li>\n<li>Client validates the ID Token and retrieves the End-User’s Subject Identifier.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-2-Authorization-Endpoint\"><a href=\"#3-3-2-Authorization-Endpoint\" class=\"headerlink\" title=\"3.3.2. Authorization Endpoint\"></a>3.3.2. Authorization Endpoint</h3><p>When using the Hybrid Flow, the Authorization Endpoint is used in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a>, with the exception of the differences specified in this section.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-2-1-Authentication-Request\"><a href=\"#3-3-2-1-Authentication-Request\" class=\"headerlink\" title=\"3.3.2.1. Authentication Request\"></a>3.3.2.1. Authentication Request</h3><p>Authentication Requests are made as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest\">Section 3.1.2.1</a>, except that these Authentication Request parameters are used as follows:</p>\n<blockquote>\n<ul>\n<li><p>response_type</p>\n<p>REQUIRED. OAuth 2.0 Response Type value that determines the authorization processing flow to be used, including what parameters are returned from the endpoints used. When using the Hybrid Flow, this value is <code>code id_token</code>, <code>code token</code>, or <code>code id_token token</code>. The meanings of these values are defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses\">OAuth 2.0 Multiple Response Type Encoding Practices</a> [OAuth.Responses].</p>\n</li>\n</ul>\n</blockquote>\n<p>The following is a non-normative example request using the Hybrid Flow that would be sent by the User Agent to the Authorization Server in response to a corresponding HTTP 302 redirect response by the Client (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;authorize?\n  response_type&#x3D;code%20id_token\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb\n  &amp;scope&#x3D;openid%20profile%20email\n  &amp;nonce&#x3D;n-0S6_WzA2Mj\n  &amp;state&#x3D;af0ifjsldkj HTTP&#x2F;1.1\nHost: server.example.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-2-2-Authentication-Request-Validation\"><a href=\"#3-3-2-2-Authentication-Request-Validation\" class=\"headerlink\" title=\"3.3.2.2. Authentication Request Validation\"></a>3.3.2.2. Authentication Request Validation</h3><p>When using the Hybrid Flow, the Authentication Request is validated in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthRequestValidation\">Section 3.1.2.2</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-2-3-Authorization-Server-Authenticates-End-User\"><a href=\"#3-3-2-3-Authorization-Server-Authenticates-End-User\" class=\"headerlink\" title=\"3.3.2.3. Authorization Server Authenticates End-User\"></a>3.3.2.3. Authorization Server Authenticates End-User</h3><p>When using the Hybrid Flow, End-User Authentication is performed in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#Authenticates\">Section 3.1.2.3</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-2-4-Authorization-Server-Obtains-End-User-Consent-x2F-Authorization\"><a href=\"#3-3-2-4-Authorization-Server-Obtains-End-User-Consent-x2F-Authorization\" class=\"headerlink\" title=\"3.3.2.4. Authorization Server Obtains End-User Consent&#x2F;Authorization\"></a>3.3.2.4. Authorization Server Obtains End-User Consent&#x2F;Authorization</h3><p>When using the Hybrid Flow, End-User Consent is obtained in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#Consent\">Section 3.1.2.4</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-2-5-Successful-Authentication-Response\"><a href=\"#3-3-2-5-Successful-Authentication-Response\" class=\"headerlink\" title=\"3.3.2.5. Successful Authentication Response\"></a>3.3.2.5. Successful Authentication Response</h3><p>When using the Hybrid Flow, Authentication Responses are made in the same manner as for the Implicit Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ImplicitAuthResponse\">Section 3.2.2.5</a>, with the exception of the differences specified in this section.</p>\n<p>These Authorization Endpoint results are used in the following manner:</p>\n<blockquote>\n<ul>\n<li><p>access_token</p>\n<p>OAuth 2.0 Access Token. This is returned when the <code>response_type</code> value used is <code>code token</code>, or <code>code id_token token</code>. (A <code>token_type</code> value is also returned in the same cases.)</p>\n</li>\n<li><p>id_token</p>\n<p>ID Token. This is returned when the <code>response_type</code> value used is <code>code id_token</code> or <code>code id_token token</code>.</p>\n</li>\n<li><p>code</p>\n<p>Authorization Code. This is always returned when using the Hybrid Flow.</p>\n</li>\n</ul>\n</blockquote>\n<p>The following is a non-normative example of a successful response using the Hybrid Flow (with line wraps for the display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">HTTP&#x2F;1.1 302 Found\nLocation: https:&#x2F;&#x2F;client.example.org&#x2F;cb#\n  code&#x3D;SplxlOBeZQQYbYS6WxSbIA\n  &amp;id_token&#x3D;eyJ0 ... NiJ9.eyJ1c ... I6IjIifX0.DeWt4Qu ... ZXso\n  &amp;state&#x3D;af0ifjsldkj<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-2-6-Authentication-Error-Response\"><a href=\"#3-3-2-6-Authentication-Error-Response\" class=\"headerlink\" title=\"3.3.2.6. Authentication Error Response\"></a>3.3.2.6. Authentication Error Response</h3><p>When using the Hybrid Flow, Authorization Error Responses are made in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthError\">Section 3.1.2.6</a>, with the exception of the differences specified in this section.</p>\n<p>If the End-User denies the request or the End-User authentication fails, the Authorization Server MUST return the error Authorization Response in the fragment component of the Redirection URI, as defined in 4.2.2.1 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749] and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses\">OAuth 2.0 Multiple Response Type Encoding Practices</a> [OAuth.Responses], unless a different Response Mode was specified.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-2-7-Redirect-URI-Fragment-Handling\"><a href=\"#3-3-2-7-Redirect-URI-Fragment-Handling\" class=\"headerlink\" title=\"3.3.2.7. Redirect URI Fragment Handling\"></a>3.3.2.7. Redirect URI Fragment Handling</h3><p>When using the Hybrid Flow, the same requirements for Redirection URI fragment parameter handling apply as do for the Implicit Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ImplicitCallback\">Section 3.2.2.7</a>. Also see <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#FragmentNotes\">Section 15.5.3</a> for implementation notes on URI fragment handling.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-2-8-Authentication-Response-Validation\"><a href=\"#3-3-2-8-Authentication-Response-Validation\" class=\"headerlink\" title=\"3.3.2.8. Authentication Response Validation\"></a>3.3.2.8. Authentication Response Validation</h3><p>When using the Hybrid Flow, the Client MUST validate the response as follows:</p>\n<ol>\n<li>Verify that the response conforms to Section 5 of [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Responses\">OAuth.Responses]</a>.</li>\n<li>Follow the validation rules in RFC 6749, especially those in Sections 4.2.2 and 10.12.</li>\n<li>Follow the ID Token validation rules in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#HybridIDTValidation\">Section 3.3.2.12</a> when the <code>response_type</code> value used is <code>code id_token</code> or <code>code id_token token</code>.</li>\n<li>Follow the Access Token validation rules in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#HybridTokenValidation\">Section 3.3.2.9</a> when the <code>response_type</code> value used is <code>code token</code> or <code>code id_token token</code>.</li>\n<li>Follow the Authorization Code validation rules in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#CodeValidation\">Section 3.3.2.10</a> when the <code>response_type</code> value used is <code>code id_token</code> or <code>code id_token token</code>.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-2-9-Access-Token-Validation\"><a href=\"#3-3-2-9-Access-Token-Validation\" class=\"headerlink\" title=\"3.3.2.9. Access Token Validation\"></a>3.3.2.9. Access Token Validation</h3><p>When using the Hybrid Flow, Access Tokens returned from the Authorization Endpoint are validated in the same manner as for the Implicit Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ImplicitTokenValidation\">Section 3.2.2.9</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-2-10-Authorization-Code-Validation\"><a href=\"#3-3-2-10-Authorization-Code-Validation\" class=\"headerlink\" title=\"3.3.2.10. Authorization Code Validation\"></a>3.3.2.10. Authorization Code Validation</h3><p>To validate an Authorization Code issued from the Authorization Endpoint with an ID Token, the Client SHOULD do the following:</p>\n<ol>\n<li>Hash the octets of the ASCII representation of the <code>code</code> with the hash algorithm specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWA\">JWA</a> [JWA] for the <code>alg</code> Header Parameter of the ID Token’s JOSE Header. For instance, if the <code>alg</code> is <code>RS256</code>, the hash algorithm used is SHA-256.</li>\n<li>Take the left-most half of the hash and base64url encode it.</li>\n<li>The value of <code>c_hash</code> in the ID Token MUST match the value produced in the previous step if <code>c_hash</code> is present in the ID Token.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-2-11-ID-Token\"><a href=\"#3-3-2-11-ID-Token\" class=\"headerlink\" title=\"3.3.2.11. ID Token\"></a>3.3.2.11. ID Token</h3><p>The contents of the ID Token are as described in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a>. When using the Hybrid Flow, these additional requirements for the following ID Token Claims apply to an ID Token returned from the Authorization Endpoint:</p>\n<blockquote>\n<ul>\n<li><p>nonce</p>\n<p>Use of the <code>nonce</code> Claim is REQUIRED for this flow.</p>\n</li>\n<li><p>at_hash</p>\n<p>Access Token hash value. Its value is the base64url encoding of the left-most half of the hash of the octets of the ASCII representation of the <code>access_token</code> value, where the hash algorithm used is the hash algorithm used in the <code>alg</code> Header Parameter of the ID Token’s JOSE Header. For instance, if the <code>alg</code> is <code>RS256</code>, hash the <code>access_token</code> value with SHA-256, then take the left-most 128 bits and base64url encode them. The <code>at_hash</code> value is a case sensitive string.</p>\n</li>\n<li><p>If the ID Token is issued from the Authorization Endpoint with an <code>access_token</code> value, which is the case for the <code>response_type</code> value <code>code id_token token</code>, this is REQUIRED; otherwise, its inclusion is OPTIONAL.</p>\n</li>\n<li><p>c_hash</p>\n<p>Code hash value. Its value is the base64url encoding of the left-most half of the hash of the octets of the ASCII representation of the <code>code</code> value, where the hash algorithm used is the hash algorithm used in the <code>alg</code> Header Parameter of the ID Token’s JOSE Header. For instance, if the <code>alg</code> is <code>HS512</code>, hash the <code>code</code> value with SHA-512, then take the left-most 256 bits and base64url encode them. The <code>c_hash</code> value is a case sensitive string.</p>\n</li>\n<li><p>If the ID Token is issued from the Authorization Endpoint with a <code>code</code>, which is the case for the <code>response_type</code> values <code>code id_token</code> and <code>code id_token token</code>, this is REQUIRED; otherwise, its inclusion is OPTIONAL.</p>\n</li>\n</ul>\n</blockquote>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-2-12-ID-Token-Validation\"><a href=\"#3-3-2-12-ID-Token-Validation\" class=\"headerlink\" title=\"3.3.2.12. ID Token Validation\"></a>3.3.2.12. ID Token Validation</h3><p>When using the Hybrid Flow, the contents of an ID Token returned from the Authorization Endpoint MUST be validated in the same manner as for the Implicit Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ImplicitIDTValidation\">Section 3.2.2.11</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-3-Token-Endpoint\"><a href=\"#3-3-3-Token-Endpoint\" class=\"headerlink\" title=\"3.3.3. Token Endpoint\"></a>3.3.3. Token Endpoint</h3><p>When using the Hybrid Flow, the Token Endpoint is used in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\">Section 3.1.3</a>, with the exception of the differences specified in this section.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-3-1-Token-Request\"><a href=\"#3-3-3-1-Token-Request\" class=\"headerlink\" title=\"3.3.3.1. Token Request\"></a>3.3.3.1. Token Request</h3><p>When using the Hybrid Flow, Token Requests are made in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#TokenRequest\">Section 3.1.3.1</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-3-2-Token-Request-Validation\"><a href=\"#3-3-3-2-Token-Request-Validation\" class=\"headerlink\" title=\"3.3.3.2. Token Request Validation\"></a>3.3.3.2. Token Request Validation</h3><p>When using the Hybrid Flow, Token Requests are validated in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#TokenRequestValidation\">Section 3.1.3.2</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-3-3-Successful-Token-Response\"><a href=\"#3-3-3-3-Successful-Token-Response\" class=\"headerlink\" title=\"3.3.3.3. Successful Token Response\"></a>3.3.3.3. Successful Token Response</h3><p>When using the Hybrid Flow, Token Responses are made in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#TokenResponse\">Section 3.1.3.3</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-3-4-Token-Error-Response\"><a href=\"#3-3-3-4-Token-Error-Response\" class=\"headerlink\" title=\"3.3.3.4. Token Error Response\"></a>3.3.3.4. Token Error Response</h3><p>When using the Hybrid Flow, Token Error Responses are made in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#TokenErrorResponse\">Section 3.1.3.4</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-3-5-Token-Response-Validation\"><a href=\"#3-3-3-5-Token-Response-Validation\" class=\"headerlink\" title=\"3.3.3.5. Token Response Validation\"></a>3.3.3.5. Token Response Validation</h3><p>When using the Hybrid Flow, Token Responses are validated in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#TokenResponseValidation\">Section 3.1.3.5</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-3-6-ID-Token\"><a href=\"#3-3-3-6-ID-Token\" class=\"headerlink\" title=\"3.3.3.6. ID Token\"></a>3.3.3.6. ID Token</h3><p>When using the Hybrid Flow, the contents of an ID Token returned from the Token Endpoint are the same as for an ID Token returned from the Authorization Endpoint, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#HybridIDToken\">Section 3.3.2.11</a>, with the exception of the differences specified in this section.</p>\n<p>If an ID Token is returned from both the Authorization Endpoint and from the Token Endpoint, which is the case for the <code>response_type</code> values <code>code id_token</code> and <code>code id_token token</code>, the <code>iss</code> and <code>sub</code> Claim Values MUST be identical in both ID Tokens. All Claims about the Authentication event present in either SHOULD be present in both. If either ID Token contains Claims about the End-User, any that are present in both SHOULD have the same values in both. Note that the OP MAY choose to return fewer Claims about the End-User from the Authorization Endpoint, for instance, for privacy reasons. The <code>at_hash</code> and <code>c_hash</code> Claims MAY be omitted from the ID Token returned from the Token Endpoint even when these Claims are present in the ID Token returned from the Authorization Endpoint, because the ID Token and Access Token values returned from the Token Endpoint are already cryptographically bound together by the TLS encryption performed by the Token Endpoint.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-3-7-ID-Token-Validation\"><a href=\"#3-3-3-7-ID-Token-Validation\" class=\"headerlink\" title=\"3.3.3.7. ID Token Validation\"></a>3.3.3.7. ID Token Validation</h3><p>When using the Hybrid Flow, the contents of an ID Token returned from the Token Endpoint MUST be validated in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation\">Section 3.1.3.7</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-3-8-Access-Token\"><a href=\"#3-3-3-8-Access-Token\" class=\"headerlink\" title=\"3.3.3.8. Access Token\"></a>3.3.3.8. Access Token</h3><p>If an Access Token is returned from both the Authorization Endpoint and from the Token Endpoint, which is the case for the <code>response_type</code> values <code>code token</code> and <code>code id_token token</code>, their values MAY be the same or they MAY be different. Note that different Access Tokens might be returned be due to the different security characteristics of the two endpoints and the lifetimes and the access to resources granted by them might also be different.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"3-3-3-9-Access-Token-Validation\"><a href=\"#3-3-3-9-Access-Token-Validation\" class=\"headerlink\" title=\"3.3.3.9. Access Token Validation\"></a>3.3.3.9. Access Token Validation</h3><p>When using the Hybrid Flow, the Access Token returned from the Token Endpoint is validated in the same manner as for the Authorization Code Flow, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowTokenValidation\">Section 3.1.3.8</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"4-Initiating-Login-from-a-Third-Party\"><a href=\"#4-Initiating-Login-from-a-Third-Party\" class=\"headerlink\" title=\"4. Initiating Login from a Third Party\"></a>4. Initiating Login from a Third Party</h3><p>In some cases, the login flow is initiated by an OpenID Provider or another party, rather than the Relying Party. In this case, the initiator redirects to the RP at its login initiation endpoint, which requests that the RP send an Authentication Request to a specified OP. This login initiation endpoint can be a deep link at the RP, rather than a default landing page. RPs supporting <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration\">OpenID Connect Dynamic Client Registration 1.0</a> [OpenID.Registration] register this endpoint value using the <code>initiate_login_uri</code> Registration parameter.</p>\n<p>The party initiating the login request does so by redirecting to the login initiation endpoint at the RP, passing the following parameters:</p>\n<blockquote>\n<ul>\n<li><p>iss</p>\n<p>REQUIRED. Issuer Identifier for the OP that the RP is to send the Authentication Request to. Its value MUST be a URL using the <code>https</code> scheme.</p>\n</li>\n<li><p>login_hint</p>\n<p>OPTIONAL. Hint to the Authorization Server about the login identifier the End-User might use to log in. If the client receives a value for this string-valued parameter, it MUST include it in the Authentication Request as the <code>login_hint</code> parameter value.</p>\n</li>\n<li><p>target_link_uri</p>\n<p>OPTIONAL. URL that the RP is requested to redirect to after authentication. RPs MUST verify the value of the <code>target_link_uri</code> to prevent being used as an open redirector to external sites.</p>\n</li>\n</ul>\n</blockquote>\n<p>The parameters can either be passed as query parameters using the HTTP <code>GET</code> method or be passed as HTML form values that are auto-submitted in the User Agent, and thus are transmitted via the HTTP <code>POST</code> method.</p>\n<p>Other parameters MAY be sent, if defined by extensions. Any parameters used that are not understood MUST be ignored by the Client.</p>\n<p>Clients SHOULD employ frame busting and other techniques to prevent End-Users from being logged in by third party sites without their knowledge through attacks such as Clickjacking. Refer to Section 4.4.1.9 of [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6819\">RFC6819]</a> for more details.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-Claims\"><a href=\"#5-Claims\" class=\"headerlink\" title=\"5. Claims\"></a>5. Claims</h3><p>This section specifies how the Client can obtain Claims about the End-User and the Authentication event. It also defines a standard set of basic profile Claims. Pre-defined sets of Claims can be requested using specific scope values or individual Claims can be requested using the <code>claims</code> request parameter. The Claims can come directly from the OpenID Provider or from distributed sources as well.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-1-Standard-Claims\"><a href=\"#5-1-Standard-Claims\" class=\"headerlink\" title=\"5.1. Standard Claims\"></a>5.1. Standard Claims</h3><p>This specification defines a set of standard Claims. They can be requested to be returned either in the UserInfo Response, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#UserInfoResponse\">Section 5.3.2</a>, or in the ID Token, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a>.</p>\n<hr>\n<table>\n<thead>\n<tr>\n<th>Member</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>sub</td>\n<td>string</td>\n<td>Subject - Identifier for the End-User at the Issuer.</td>\n</tr>\n<tr>\n<td>name</td>\n<td>string</td>\n<td>End-User’s full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User’s locale and preferences.</td>\n</tr>\n<tr>\n<td>given_name</td>\n<td>string</td>\n<td>Given name(s) or first name(s) of the End-User. Note that in some cultures, people can have multiple given names; all can be present, with the names being separated by space characters.</td>\n</tr>\n<tr>\n<td>family_name</td>\n<td>string</td>\n<td>Surname(s) or last name(s) of the End-User. Note that in some cultures, people can have multiple family names or no family name; all can be present, with the names being separated by space characters.</td>\n</tr>\n<tr>\n<td>middle_name</td>\n<td>string</td>\n<td>Middle name(s) of the End-User. Note that in some cultures, people can have multiple middle names; all can be present, with the names being separated by space characters. Also note that in some cultures, middle names are not used.</td>\n</tr>\n<tr>\n<td>nickname</td>\n<td>string</td>\n<td>Casual name of the End-User that may or may not be the same as the <code>given_name</code>. For instance, a <code>nickname</code> value of <code>Mike</code> might be returned alongside a <code>given_name</code> value of <code>Michael</code>.</td>\n</tr>\n<tr>\n<td>preferred_username</td>\n<td>string</td>\n<td>Shorthand name by which the End-User wishes to be referred to at the RP, such as <code>janedoe</code> or <code>j.doe</code>. This value MAY be any valid JSON string including special characters such as <code>@</code>, <code>/</code>, or whitespace. The RP MUST NOT rely upon this value being unique, as discussed in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClaimStability\">Section 5.7</a>.</td>\n</tr>\n<tr>\n<td>profile</td>\n<td>string</td>\n<td>URL of the End-User’s profile page. The contents of this Web page SHOULD be about the End-User.</td>\n</tr>\n<tr>\n<td>picture</td>\n<td>string</td>\n<td>URL of the End-User’s profile picture. This URL MUST refer to an image file (for example, a PNG, JPEG, or GIF image file), rather than to a Web page containing an image. Note that this URL SHOULD specifically reference a profile photo of the End-User suitable for displaying when describing the End-User, rather than an arbitrary photo taken by the End-User.</td>\n</tr>\n<tr>\n<td>website</td>\n<td>string</td>\n<td>URL of the End-User’s Web page or blog. This Web page SHOULD contain information published by the End-User or an organization that the End-User is affiliated with.</td>\n</tr>\n<tr>\n<td>email</td>\n<td>string</td>\n<td>End-User’s preferred e-mail address. Its value MUST conform to the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC5322\">RFC 5322</a> [RFC5322] addr-spec syntax. The RP MUST NOT rely upon this value being unique, as discussed in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClaimStability\">Section 5.7</a>.</td>\n</tr>\n<tr>\n<td>email_verified</td>\n<td>boolean</td>\n<td>True if the End-User’s e-mail address has been verified; otherwise false. When this Claim Value is <code>true</code>, this means that the OP took affirmative steps to ensure that this e-mail address was controlled by the End-User at the time the verification was performed. The means by which an e-mail address is verified is context-specific, and dependent upon the trust framework or contractual agreements within which the parties are operating.</td>\n</tr>\n<tr>\n<td>gender</td>\n<td>string</td>\n<td>End-User’s gender. Values defined by this specification are <code>female</code> and <code>male</code>. Other values MAY be used when neither of the defined values are applicable.</td>\n</tr>\n<tr>\n<td>birthdate</td>\n<td>string</td>\n<td>End-User’s birthday, represented as an <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ISO8601-2004\">ISO 8601:2004</a> [ISO8601‑2004] <code>YYYY-MM-DD</code> format. The year MAY be <code>0000</code>, indicating that it is omitted. To represent only the year, <code>YYYY</code> format is allowed. Note that depending on the underlying platform’s date related function, providing just year can result in varying month and day, so the implementers need to take this factor into account to correctly process the dates.</td>\n</tr>\n<tr>\n<td>zoneinfo</td>\n<td>string</td>\n<td>String from zoneinfo [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#zoneinfo\">zoneinfo]</a> time zone database representing the End-User’s time zone. For example, <code>Europe/Paris</code> or <code>America/Los_Angeles</code>.</td>\n</tr>\n<tr>\n<td>locale</td>\n<td>string</td>\n<td>End-User’s locale, represented as a <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC5646\">BCP47</a> [RFC5646] language tag. This is typically an <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ISO639-1\">ISO 639-1 Alpha-2</a> [ISO639‑1] language code in lowercase and an <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ISO3166-1\">ISO 3166-1 Alpha-2</a> [ISO3166‑1] country code in uppercase, separated by a dash. For example, <code>en-US</code> or <code>fr-CA</code>. As a compatibility note, some implementations have used an underscore as the separator rather than a dash, for example, <code>en_US</code>; Relying Parties MAY choose to accept this locale syntax as well.</td>\n</tr>\n<tr>\n<td>phone_number</td>\n<td>string</td>\n<td>End-User’s preferred telephone number. <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#E.164\">E.164</a> [E.164] is RECOMMENDED as the format of this Claim, for example, <code>+1 (425) 555-1212</code> or <code>+56 (2) 687 2400</code>. If the phone number contains an extension, it is RECOMMENDED that the extension be represented using the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC3966\">RFC 3966</a> [RFC3966] extension syntax, for example, <code>+1 (604) 555-1234;ext=5678</code>.</td>\n</tr>\n<tr>\n<td>phone_number_verified</td>\n<td>boolean</td>\n<td>True if the End-User’s phone number has been verified; otherwise false. When this Claim Value is <code>true</code>, this means that the OP took affirmative steps to ensure that this phone number was controlled by the End-User at the time the verification was performed. The means by which a phone number is verified is context-specific, and dependent upon the trust framework or contractual agreements within which the parties are operating. When true, the <code>phone_number</code> Claim MUST be in E.164 format and any extensions MUST be represented in RFC 3966 format.</td>\n</tr>\n<tr>\n<td>address</td>\n<td>JSON object</td>\n<td>End-User’s preferred postal address. The value of the <code>address</code> member is a JSON [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC4627\">RFC4627]</a> structure containing some or all of the members defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim\">Section 5.1.1</a>.</td>\n</tr>\n<tr>\n<td>updated_at</td>\n<td>number</td>\n<td>Time the End-User’s information was last updated. Its value is a JSON number representing the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the date&#x2F;time.</td>\n</tr>\n</tbody></table>\n<p> <strong>Table 1: Registered Member Definitions</strong>  </p>\n<hr>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-1-1-Address-Claim\"><a href=\"#5-1-1-Address-Claim\" class=\"headerlink\" title=\"5.1.1. Address Claim\"></a>5.1.1. Address Claim</h3><p>The Address Claim represents a physical mailing address. Implementations MAY return only a subset of the fields of an <code>address</code>, depending upon the information available and the End-User’s privacy preferences. For example, the <code>country</code> and <code>region</code> might be returned without returning more fine-grained address information.</p>\n<p>Implementations MAY return just the full address as a single string in the formatted sub-field, or they MAY return just the individual component fields using the other sub-fields, or they MAY return both. If both variants are returned, they SHOULD be describing the same address, with the formatted address indicating how the component fields are combined.</p>\n<blockquote>\n<ul>\n<li><p>formatted</p>\n<p>Full mailing address, formatted for display or use on a mailing label. This field MAY contain multiple lines, separated by newlines. Newlines can be represented either as a carriage return&#x2F;line feed pair (“\\r\\n”) or as a single line feed character (“\\n”).</p>\n</li>\n<li><p>street_address</p>\n<p>Full street address component, which MAY include house number, street name, Post Office Box, and multi-line extended street address information. This field MAY contain multiple lines, separated by newlines. Newlines can be represented either as a carriage return&#x2F;line feed pair (“\\r\\n”) or as a single line feed character (“\\n”).</p>\n</li>\n<li><p>locality</p>\n<p>City or locality component.</p>\n</li>\n<li><p>region</p>\n<p>State, province, prefecture, or region component.</p>\n</li>\n<li><p>postal_code</p>\n<p>Zip code or postal code component.</p>\n</li>\n<li><p>country</p>\n<p>Country name component.</p>\n</li>\n</ul>\n</blockquote>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-1-2-Additional-Claims\"><a href=\"#5-1-2-Additional-Claims\" class=\"headerlink\" title=\"5.1.2. Additional Claims\"></a>5.1.2. Additional Claims</h3><p>While this specification defines only a small set of Claims as standard Claims, other Claims MAY be used in conjunction with the standard Claims. When using such Claims, it is RECOMMENDED that collision-resistant names be used for the Claim Names, as described in the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JSON Web Token (JWT)</a> [JWT] specification. Alternatively, Private Claim Names can be safely used when naming conflicts are unlikely to arise, as described in the JWT specification. Or, if specific additional Claims will have broad and general applicability, they can be registered with Registered Claim Names, per the JWT specification.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-2-Claims-Languages-and-Scripts\"><a href=\"#5-2-Claims-Languages-and-Scripts\" class=\"headerlink\" title=\"5.2. Claims Languages and Scripts\"></a>5.2. Claims Languages and Scripts</h3><p>Human-readable Claim Values and Claim Values that reference human-readable values MAY be represented in multiple languages and scripts. To specify the languages and scripts, <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC5646\">BCP47</a> [RFC5646] language tags are added to member names, delimited by a <code>#</code> character. For example, <code>family_name#ja-Kana-JP</code> expresses the Family Name in Katakana in Japanese, which is commonly used to index and represent the phonetics of the Kanji representation of the same represented as <code>family_name#ja-Hani-JP</code>. As another example, both <code>website</code> and <code>website#de</code> Claim Values might be returned, referencing a Web site in an unspecified language and a Web site in German.</p>\n<p>Since Claim Names are case sensitive, it is strongly RECOMMENDED that language tag values used in Claim Names be spelled using the character case with which they are registered in the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IANA.Language\">IANA Language Subtag Registry</a> [IANA.Language]. In particular, normally language names are spelled with lowercase characters, region names are spelled with uppercase characters, and scripts are spelled with mixed case characters. However, since BCP47 language tag values are case insensitive, implementations SHOULD interpret the language tag values supplied in a case insensitive manner.</p>\n<p>Per the recommendations in BCP47, language tag values for Claims SHOULD only be as specific as necessary. For instance, using <code>fr</code> might be sufficient in many contexts, rather than <code>fr-CA</code> or <code>fr-FR</code>. Where possible, OPs SHOULD try to match requested Claim locales with Claims it has. For instance, if the Client asks for a Claim with a <code>de</code> (German) language tag and the OP has a value tagged with <code>de-CH</code> (Swiss German) and no generic German value, it would be appropriate for the OP to return the Swiss German value to the Client. (This intentionally moves as much of the complexity of language tag matching to the OP as possible, to simplify Clients.)</p>\n<p>OpenID Connect defines the following Authorization Request parameter to enable specify the preferred languages and scripts to be used for the returned Claims:</p>\n<blockquote>\n<ul>\n<li><p>claims_locales</p>\n<p>OPTIONAL. End-User’s preferred languages and scripts for Claims being returned, represented as a space-separated list of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC5646\">BCP47</a> [RFC5646] language tag values, ordered by preference. An error SHOULD NOT result if some or all of the requested locales are not supported by the OpenID Provider.</p>\n</li>\n</ul>\n</blockquote>\n<p>When the OP determines, either through the <code>claims_locales</code> parameter, or by other means, that the End-User and Client are requesting Claims in only one set of languages and scripts, it is RECOMMENDED that OPs return Claims without language tags when they employ this language and script. It is also RECOMMENDED that Clients be written in a manner that they can handle and utilize Claims using language tags.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-3-UserInfo-Endpoint\"><a href=\"#5-3-UserInfo-Endpoint\" class=\"headerlink\" title=\"5.3. UserInfo Endpoint\"></a>5.3. UserInfo Endpoint</h3><p>The UserInfo Endpoint is an OAuth 2.0 Protected Resource that returns Claims about the authenticated End-User. To obtain the requested Claims about the End-User, the Client makes a request to the UserInfo Endpoint using an Access Token obtained through OpenID Connect Authentication. These Claims are normally represented by a JSON object that contains a collection of name and value pairs for the Claims.</p>\n<p>Communication with the UserInfo Endpoint MUST utilize TLS. See <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#TLSRequirements\">Section 16.17</a> for more information on using TLS.</p>\n<p>The UserInfo Endpoint MUST support the use of the HTTP <code>GET</code> and HTTP <code>POST</code> methods defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC2616\">RFC 2616</a> [RFC2616].</p>\n<p>The UserInfo Endpoint MUST accept Access Tokens as <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6750\">OAuth 2.0 Bearer Token Usage</a> [RFC6750].</p>\n<p>The UserInfo Endpoint SHOULD support the use of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#CORS\">Cross Origin Resource Sharing (CORS)</a> [CORS] and or other methods as appropriate to enable Java Script Clients to access the endpoint.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-3-1-UserInfo-Request\"><a href=\"#5-3-1-UserInfo-Request\" class=\"headerlink\" title=\"5.3.1. UserInfo Request\"></a>5.3.1. UserInfo Request</h3><p>The Client sends the UserInfo Request using either HTTP <code>GET</code> or HTTP <code>POST</code>. The Access Token obtained from an OpenID Connect Authentication Request MUST be sent as a Bearer Token, per Section 2 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6750\">OAuth 2.0 Bearer Token Usage</a> [RFC6750].</p>\n<p>It is RECOMMENDED that the request use the HTTP <code>GET</code> method and the Access Token be sent using the <code>Authorization</code> header field.</p>\n<p>The following is a non-normative example of a UserInfo Request:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;userinfo HTTP&#x2F;1.1\nHost: server.example.com\nAuthorization: Bearer SlAV32hkKG<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-3-2-Successful-UserInfo-Response\"><a href=\"#5-3-2-Successful-UserInfo-Response\" class=\"headerlink\" title=\"5.3.2. Successful UserInfo Response\"></a>5.3.2. Successful UserInfo Response</h3><p>The UserInfo Claims MUST be returned as the members of a JSON object unless a signed or encrypted response was requested during Client Registration. The Claims defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> can be returned, as can additional Claims not specified there.</p>\n<p>For privacy reasons, OpenID Providers MAY elect to not return values for some requested Claims.</p>\n<p>If a Claim is not returned, that Claim Name SHOULD be omitted from the JSON object representing the Claims; it SHOULD NOT be present with a null or empty string value.</p>\n<p>The <code>sub</code> (subject) Claim MUST always be returned in the UserInfo Response.</p>\n<p>NOTE: Due to the possibility of token substitution attacks (see <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#TokenSubstitution\">Section 16.11</a>), the UserInfo Response is not guaranteed to be about the End-User identified by the <code>sub</code> (subject) element of the ID Token. The <code>sub</code> Claim in the UserInfo Response MUST be verified to exactly match the <code>sub</code> Claim in the ID Token; if they do not match, the UserInfo Response values MUST NOT be used.</p>\n<p>Upon receipt of the UserInfo Request, the UserInfo Endpoint MUST return the JSON Serialization of the UserInfo Response as in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JSONSerialization\">Section 13.3</a> in the HTTP response body unless a different format was specified during Registration [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration\">OpenID.Registration]</a>. The UserInfo Endpoint MUST return a content-type header to indicate which format is being returned. The content-type of the HTTP response MUST be <code>application/json</code> if the response body is a text JSON object; the response body SHOULD be encoded using UTF-8.</p>\n<p>If the UserInfo Response is signed and&#x2F;or encrypted, then the Claims are returned in a JWT and the content-type MUST be <code>application/jwt</code>. The response MAY be encrypted without also being signed. If both signing and encryption are requested, the response MUST be signed then encrypted, with the result being a Nested JWT, as defined in [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JWT]</a>.</p>\n<p>If signed, the UserInfo Response SHOULD contain the Claims <code>iss</code> (issuer) and <code>aud</code> (audience) as members. The <code>iss</code> value SHOULD be the OP’s Issuer Identifier URL. The <code>aud</code> value SHOULD be or include the RP’s Client ID value.</p>\n<p>The following is a non-normative example of a UserInfo Response:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">HTTP&#x2F;1.1 200 OK\nContent-Type: application&#x2F;json\n\n&#123;\n &quot;sub&quot;: &quot;248289761001&quot;,\n &quot;name&quot;: &quot;Jane Doe&quot;,\n &quot;given_name&quot;: &quot;Jane&quot;,\n &quot;family_name&quot;: &quot;Doe&quot;,\n &quot;preferred_username&quot;: &quot;j.doe&quot;,\n &quot;email&quot;: &quot;janedoe@example.com&quot;,\n &quot;picture&quot;: &quot;http:&#x2F;&#x2F;example.com&#x2F;janedoe&#x2F;me.jpg&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-3-3-UserInfo-Error-Response\"><a href=\"#5-3-3-UserInfo-Error-Response\" class=\"headerlink\" title=\"5.3.3. UserInfo Error Response\"></a>5.3.3. UserInfo Error Response</h3><p>When an error condition occurs, the UserInfo Endpoint returns an Error Response as defined in Section 3 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6750\">OAuth 2.0 Bearer Token Usage</a> [RFC6750]. (HTTP errors unrelated to RFC 6750 are returned to the User Agent using the appropriate HTTP status code.)</p>\n<p>The following is a non-normative example of a UserInfo Error Response:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">HTTP&#x2F;1.1 401 Unauthorized\nWWW-Authenticate: error&#x3D;&quot;invalid_token&quot;,\n  error_description&#x3D;&quot;The Access Token expired&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-3-4-UserInfo-Response-Validation\"><a href=\"#5-3-4-UserInfo-Response-Validation\" class=\"headerlink\" title=\"5.3.4. UserInfo Response Validation\"></a>5.3.4. UserInfo Response Validation</h3><p>The Client MUST validate the UserInfo Response as follows:</p>\n<ol>\n<li>Verify that the OP that responded was the intended OP through a TLS server certificate check, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6125\">RFC 6125</a> [RFC6125].</li>\n<li>If the Client has provided a <code>userinfo_encrypted_response_alg</code> parameter during Registration, decrypt the UserInfo Response using the keys specified during Registration.</li>\n<li>If the response was signed, the Client SHOULD validate the signature according to <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWS\">JWS</a> [JWS].</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-4-Requesting-Claims-using-Scope-Values\"><a href=\"#5-4-Requesting-Claims-using-Scope-Values\" class=\"headerlink\" title=\"5.4. Requesting Claims using Scope Values\"></a>5.4. Requesting Claims using Scope Values</h3><p>OpenID Connect Clients use <code>scope</code> values, as defined in Section 3.3 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749], to specify what access privileges are being requested for Access Tokens. The scopes associated with Access Tokens determine what resources will be available when they are used to access OAuth 2.0 protected endpoints. Protected Resource endpoints MAY perform different actions and return different information based on the scope values and other parameters used when requesting the presented Access Token.</p>\n<p>For OpenID Connect, scopes can be used to request that specific sets of information be made available as Claim Values.</p>\n<p>Claims requested by the following scopes are treated by Authorization Servers as Voluntary Claims.</p>\n<p>OpenID Connect defines the following <code>scope</code> values that are used to request Claims:</p>\n<blockquote>\n<ul>\n<li><p>profile</p>\n<p>OPTIONAL. This scope value requests access to the End-User’s default profile Claims, which are: <code>name</code>, <code>family_name</code>, <code>given_name</code>, <code>middle_name</code>, <code>nickname</code>, <code>preferred_username</code>, <code>profile</code>, <code>picture</code>, <code>website</code>, <code>gender</code>, <code>birthdate</code>, <code>zoneinfo</code>, <code>locale</code>, and <code>updated_at</code>.</p>\n</li>\n<li><p>email</p>\n<p>OPTIONAL. This scope value requests access to the <code>email</code> and <code>email_verified</code> Claims.</p>\n</li>\n<li><p>address</p>\n<p>OPTIONAL. This scope value requests access to the <code>address</code> Claim.</p>\n</li>\n<li><p>phone</p>\n<p>OPTIONAL. This scope value requests access to the <code>phone_number</code> and <code>phone_number_verified</code> Claims.</p>\n</li>\n</ul>\n</blockquote>\n<p>Multiple scope values MAY be used by creating a space delimited, case sensitive list of ASCII scope values.</p>\n<p>The Claims requested by the <code>profile</code>, <code>email</code>, <code>address</code>, and <code>phone</code> scope values are returned from the UserInfo Endpoint, as described in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#UserInfoResponse\">Section 5.3.2</a>, when a <code>response_type</code> value is used that results in an Access Token being issued. However, when no Access Token is issued (which is the case for the <code>response_type</code> value <code>id_token</code>), the resulting Claims are returned in the ID Token.</p>\n<p>In some cases, the End-User will be given the option to have the OpenID Provider decline to provide some or all information requested by RPs. To minimize the amount of information that the End-User is being asked to disclose, an RP can elect to only request a subset of the information available from the UserInfo Endpoint.</p>\n<p>The following is a non-normative example of an unencoded <code>scope</code> request:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">scope&#x3D;openid profile email phone<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-5-Requesting-Claims-using-the-“claims”-Request-Parameter\"><a href=\"#5-5-Requesting-Claims-using-the-“claims”-Request-Parameter\" class=\"headerlink\" title=\"5.5. Requesting Claims using the “claims” Request Parameter\"></a>5.5. Requesting Claims using the “claims” Request Parameter</h3><p>OpenID Connect defines the following Authorization Request parameter to enable requesting individual Claims and specifying parameters that apply to the requested Claims:</p>\n<blockquote>\n<ul>\n<li><p>claims</p>\n<p>OPTIONAL. This parameter is used to request that specific Claims be returned. The value is a JSON object listing the requested Claims.</p>\n</li>\n</ul>\n</blockquote>\n<p>The <code>claims</code> Authentication Request parameter requests that specific Claims be returned from the UserInfo Endpoint and&#x2F;or in the ID Token. It is represented as a JSON object containing lists of Claims being requested from these locations. Properties of the Claims being requested MAY also be specified.</p>\n<p>Support for the <code>claims</code> parameter is OPTIONAL. Should an OP not support this parameter and an RP uses it, the OP SHOULD return a set of Claims to the RP that it believes would be useful to the RP and the End-User using whatever heuristics it believes are appropriate. The <code>claims_parameter_supported</code> Discovery result indicates whether the OP supports this parameter.</p>\n<p>The <code>claims</code> parameter value is represented in an OAuth 2.0 request as UTF-8 encoded JSON (which ends up being form-urlencoded when passed as an OAuth parameter). When used in a Request Object value, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RequestObject\">Section 6.1</a>, the JSON is used as the value of the <code>claims</code> member.</p>\n<p>The top-level members of the Claims request JSON object are:</p>\n<blockquote>\n<ul>\n<li><p>userinfo</p>\n<p>OPTIONAL. Requests that the listed individual Claims be returned from the UserInfo Endpoint. If present, the listed Claims are being requested to be added to any Claims that are being requested using <code>scope</code> values. If not present, the Claims being requested from the UserInfo Endpoint are only those requested using <code>scope</code> values.</p>\n</li>\n<li><p>When the <code>userinfo</code> member is used, the request MUST also use a <code>response_type</code> value that results in an Access Token being issued to the Client for use at the UserInfo Endpoint.</p>\n</li>\n<li><p>id_token</p>\n<p>OPTIONAL. Requests that the listed individual Claims be returned in the ID Token. If present, the listed Claims are being requested to be added to the default Claims in the ID Token. If not present, the default ID Token Claims are requested, as per the ID Token definition in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a> and per the additional per-flow ID Token requirements in Sections <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#CodeIDToken\">3.1.3.6</a>, <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ImplicitIDToken\">3.2.2.10</a>, <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#HybridIDToken\">3.3.2.11</a>, and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#HybridIDToken2\">3.3.3.6</a>.</p>\n</li>\n</ul>\n</blockquote>\n<p>Other members MAY be present. Any members used that are not understood MUST be ignored.</p>\n<p>An example Claims request is as follows:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;userinfo&quot;:\n  &#123;\n   &quot;given_name&quot;: &#123;&quot;essential&quot;: true&#125;,\n   &quot;nickname&quot;: null,\n   &quot;email&quot;: &#123;&quot;essential&quot;: true&#125;,\n   &quot;email_verified&quot;: &#123;&quot;essential&quot;: true&#125;,\n   &quot;picture&quot;: null,\n   &quot;http:&#x2F;&#x2F;example.info&#x2F;claims&#x2F;groups&quot;: null\n  &#125;,\n &quot;id_token&quot;:\n  &#123;\n   &quot;auth_time&quot;: &#123;&quot;essential&quot;: true&#125;,\n   &quot;acr&quot;: &#123;&quot;values&quot;: [&quot;urn:mace:incommon:iap:silver&quot;] &#125;\n  &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>Note that a Claim that is not in the standard set defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a>, the (example) <code>http://example.info/claims/groups</code> Claim, is being requested. Using the <code>claims</code> parameter is the only way to request Claims outside the standard set. It is also the only way to request specific combinations of the standard Claims that cannot be specified using scope values.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-5-1-Individual-Claims-Requests\"><a href=\"#5-5-1-Individual-Claims-Requests\" class=\"headerlink\" title=\"5.5.1. Individual Claims Requests\"></a>5.5.1. Individual Claims Requests</h3><p>The <code>userinfo</code> and <code>id_token</code> members of the <code>claims</code> request both are JSON objects with the names of the individual Claims being requested as the member names. The member values MUST be one of the following:</p>\n<blockquote>\n<ul>\n<li><p>null</p>\n<p>Indicates that this Claim is being requested in the default manner. In particular, this is a Voluntary Claim. For instance, the Claim request:<code> &quot;given_name&quot;: null</code>requests the <code>given_name</code> Claim in the default manner.</p>\n</li>\n<li><p>JSON Object</p>\n<p>Used to provide additional information about the Claim being requested. This specification defines the following members:essentialOPTIONAL. Indicates whether the Claim being requested is an Essential Claim. If the value is <code>true</code>, this indicates that the Claim is an Essential Claim. For instance, the Claim request:<code> &quot;auth_time&quot;: &#123;&quot;essential&quot;: true&#125;</code>can be used to specify that it is Essential to return an <code>auth_time</code> Claim Value.If the value is <code>false</code>, it indicates that it is a Voluntary Claim. The default is <code>false</code>.By requesting Claims as Essential Claims, the RP indicates to the End-User that releasing these Claims will ensure a smooth authorization for the specific task requested by the End-User. Note that even if the Claims are not available because the End-User did not authorize their release or they are not present, the Authorization Server MUST NOT generate an error when Claims are not returned, whether they are Essential or Voluntary, unless otherwise specified in the description of the specific claim.valueOPTIONAL. Requests that the Claim be returned with a particular value. For instance the Claim request:<code> &quot;sub&quot;: &#123;&quot;value&quot;: &quot;248289761001&quot;&#125;</code>can be used to specify that the request apply to the End-User with Subject Identifier <code>248289761001</code>.The value of the <code>value</code> member MUST be a valid value for the Claim being requested. Definitions of individual Claims can include requirements on how and whether the <code>value</code> qualifier is to be used when requesting that Claim.valuesOPTIONAL. Requests that the Claim be returned with one of a set of values, with the values appearing in order of preference. For instance the Claim request:<code> &quot;acr&quot;: &#123;&quot;essential&quot;: true,          &quot;values&quot;: [&quot;urn:mace:incommon:iap:silver&quot;,                     &quot;urn:mace:incommon:iap:bronze&quot;]&#125;</code>specifies that it is Essential that the <code>acr</code> Claim be returned with either the value <code>urn:mace:incommon:iap:silver</code> or <code>urn:mace:incommon:iap:bronze</code>.The values in the <code>values</code> member array MUST be valid values for the Claim being requested. Definitions of individual Claims can include requirements on how and whether the <code>values</code> qualifier is to be used when requesting that Claim.Other members MAY be defined to provide additional information about the requested Claims. Any members used that are not understood MUST be ignored.</p>\n</li>\n</ul>\n</blockquote>\n<p>Note that when the <code>claims</code> request parameter is supported, the scope values that request Claims, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims\">Section 5.4</a>, are effectively shorthand methods for requesting sets of individual Claims. For example, using the scope value <code>openid email</code> and a <code>response_type</code> that returns an Access Token is equivalent to using the scope value <code>openid</code> and the following request for individual Claims.</p>\n<p>Equivalent of using the <code>email</code> scope value:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;userinfo&quot;:\n  &#123;\n   &quot;email&quot;: null,\n   &quot;email_verified&quot;: null\n  &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-5-1-1-Requesting-the-“acr”-Claim\"><a href=\"#5-5-1-1-Requesting-the-“acr”-Claim\" class=\"headerlink\" title=\"5.5.1.1. Requesting the “acr” Claim\"></a>5.5.1.1. Requesting the “acr” Claim</h3><p>If the <code>acr</code> Claim is requested as an Essential Claim for the ID Token with a <code>values</code> parameter requesting specific Authentication Context Class Reference values and the implementation supports the <code>claims</code> parameter, the Authorization Server MUST return an <code>acr</code> Claim Value that matches one of the requested values. The Authorization Server MAY ask the End-User to re-authenticate with additional factors to meet this requirement. If this is an Essential Claim and the requirement cannot be met, then the Authorization Server MUST treat that outcome as a failed authentication attempt.</p>\n<p>Note that the RP MAY request the <code>acr</code> Claim as a Voluntary Claim by using the <code>acr_values</code> request parameter or by not including “essential”: true in an individual <code>acr</code> Claim request. If the Claim is not Essential and a requested value cannot be provided, the Authorization Server SHOULD return the session’s current <code>acr</code> as the value of the <code>acr</code> Claim. If the Claim is not Essential, the Authorization Server is not required to provide this Claim in its response.</p>\n<p>If the client requests the <code>acr</code> Claim using both the <code>acr_values</code> request parameter and an individual <code>acr</code> Claim request for the ID Token listing specific requested values, the resulting behavior is unspecified.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-5-2-Languages-and-Scripts-for-Individual-Claims\"><a href=\"#5-5-2-Languages-and-Scripts-for-Individual-Claims\" class=\"headerlink\" title=\"5.5.2. Languages and Scripts for Individual Claims\"></a>5.5.2. Languages and Scripts for Individual Claims</h3><p>As described in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts\">Section 5.2</a>, human-readable Claim Values and Claim Values that reference human-readable values MAY be represented in multiple languages and scripts. Within a request for individual Claims, requested languages and scripts for particular Claims MAY be requested by including Claim Names that contain <code>#</code>-separated <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC5646\">BCP47</a> [RFC5646] language tags in the Claims request, using the Claim Name syntax specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts\">Section 5.2</a>. For example, a Family Name in Katakana in Japanese can be requested using the Claim Name <code>family_name#ja-Kana-JP</code> and a Kanji representation of the Family Name in Japanese can be requested using the Claim Name <code>family_name#ja-Hani-JP</code>. A German-language Web site can be requested with the Claim Name <code>website#de</code>.</p>\n<p>If an OP receives a request for human-readable Claims in a language and script that it doesn’t have, any versions of those Claims returned that don’t use the requested language and script SHOULD use a language tag in the Claim Name.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-6-Claim-Types\"><a href=\"#5-6-Claim-Types\" class=\"headerlink\" title=\"5.6. Claim Types\"></a>5.6. Claim Types</h3><p>Three representations of Claim Values are defined by this specification:</p>\n<blockquote>\n<ul>\n<li><p>Normal Claims</p>\n<p>Claims that are directly asserted by the OpenID Provider.</p>\n</li>\n<li><p>Aggregated Claims</p>\n<p>Claims that are asserted by a Claims Provider other than the OpenID Provider but are returned by OpenID Provider.</p>\n</li>\n<li><p>Distributed Claims</p>\n<p>Claims that are asserted by a Claims Provider other than the OpenID Provider but are returned as references by the OpenID Provider.</p>\n</li>\n</ul>\n</blockquote>\n<p>Normal Claims MUST be supported. Support for Aggregated Claims and Distributed Claims is OPTIONAL.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-6-1-Normal-Claims\"><a href=\"#5-6-1-Normal-Claims\" class=\"headerlink\" title=\"5.6.1. Normal Claims\"></a>5.6.1. Normal Claims</h3><p>Normal Claims are represented as members in a JSON object. The Claim Name is the member name and the Claim Value is the member value.</p>\n<p>The following is a non-normative response containing Normal Claims:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;name&quot;: &quot;Jane Doe&quot;,\n &quot;given_name&quot;: &quot;Jane&quot;,\n &quot;family_name&quot;: &quot;Doe&quot;,\n &quot;email&quot;: &quot;janedoe@example.com&quot;,\n &quot;picture&quot;: &quot;http:&#x2F;&#x2F;example.com&#x2F;janedoe&#x2F;me.jpg&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-6-2-Aggregated-and-Distributed-Claims\"><a href=\"#5-6-2-Aggregated-and-Distributed-Claims\" class=\"headerlink\" title=\"5.6.2. Aggregated and Distributed Claims\"></a>5.6.2. Aggregated and Distributed Claims</h3><p>Aggregated and distributed Claims are represented by using special <code>_claim_names</code> and <code>_claim_sources</code> members of the JSON object containing the Claims.</p>\n<blockquote>\n<ul>\n<li><p>_claim_names</p>\n<p>JSON object whose member names are the Claim Names for the Aggregated and Distributed Claims. The member values are references to the member names in the <code>_claim_sources</code> member from which the actual Claim Values can be retrieved.</p>\n</li>\n<li><p>_claim_sources</p>\n<p>JSON object whose member names are referenced by the member values of the <code>_claim_names</code> member. The member values contain sets of Aggregated Claims or reference locations for Distributed Claims. The member values can have one of the following formats depending on whether it is providing Aggregated or Distributed Claims:Aggregated ClaimsJSON object that MUST contain the <code>JWT</code> member whose value is a <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JWT</a> [JWT] that MUST contain all the Claims in the <code>_claim_names</code> object that references the corresponding <code>_claim_sources</code> member. Other members MAY be present. Any members used that are not understood MUST be ignored.JWTREQUIRED. JWT containing Claim Values.The JWT SHOULD NOT contain a <code>sub</code> (subject) Claim unless its value is an identifier for the End-User at the Claims Provider (and not for the OpenID Provider or another party); this typically means that a <code>sub</code> Claim SHOULD NOT be provided.Distributed ClaimsJSON object that contains the following members and values:endpointREQUIRED. OAuth 2.0 resource endpoint from which the associated Claim can be retrieved. The endpoint URL MUST return the Claim as a JWT.access_tokenOPTIONAL. Access Token enabling retrieval of the Claims from the endpoint URL by using the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6750\">OAuth 2.0 Bearer Token Usage</a> [RFC6750] protocol. Claims SHOULD be requested using the Authorization Request header field and Claims Providers MUST support this method. If the Access Token is not available, RPs MAY need to retrieve the Access Token out of band or use an Access Token that was pre-negotiated between the Claims Provider and RP, or the Claims Provider MAY reauthenticate the End-User and&#x2F;or reauthorize the RP.A <code>sub</code> (subject) Claim SHOULD NOT be returned from the Claims Provider unless its value is an identifier for the End-User at the Claims Provider (and not for the OpenID Provider or another party); this typically means that a <code>sub</code> Claim SHOULD NOT be provided.</p>\n</li>\n</ul>\n</blockquote>\n<p>In general, it is up to the OP when it is appropriate to use Aggregated Claims and Distributed Claims. In some cases, information about when to use what Claim Types might be negotiated out of band between RPs and OPs.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-6-2-1-Example-of-Aggregated-Claims\"><a href=\"#5-6-2-1-Example-of-Aggregated-Claims\" class=\"headerlink\" title=\"5.6.2.1. Example of Aggregated Claims\"></a>5.6.2.1. Example of Aggregated Claims</h3><p>In this non-normative example, Claims from Claims Provider A are combined with other Claims held by the OpenID provider, with the Claims from Claims Provider A being returned as Aggregated Claims.</p>\n<p>In this example, these Claims about Jane Doe have been issued by Claims Provider A:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;address&quot;: &#123;\n   &quot;street_address&quot;: &quot;1234 Hollywood Blvd.&quot;,\n   &quot;locality&quot;: &quot;Los Angeles&quot;,\n   &quot;region&quot;: &quot;CA&quot;,\n   &quot;postal_code&quot;: &quot;90210&quot;,\n   &quot;country&quot;: &quot;US&quot;&#125;,\n &quot;phone_number&quot;: &quot;+1 (310) 123-4567&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>Claims Provider A signs the JSON Claims, representing them in a signed JWT: jwt_header.jwt_part2.jwt_part3. It is this JWT that is used by the OpenID Provider.</p>\n<p>In this example, this JWT containing Jane Doe’s Aggregated Claims from Claims Provider A is combined with other Normal Claims, and returned as the following set of Claims:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;name&quot;: &quot;Jane Doe&quot;,\n &quot;given_name&quot;: &quot;Jane&quot;,\n &quot;family_name&quot;: &quot;Doe&quot;,\n &quot;birthdate&quot;: &quot;0000-03-22&quot;,\n &quot;eye_color&quot;: &quot;blue&quot;,\n &quot;email&quot;: &quot;janedoe@example.com&quot;,\n &quot;_claim_names&quot;: &#123;\n   &quot;address&quot;: &quot;src1&quot;,\n   &quot;phone_number&quot;: &quot;src1&quot;\n &#125;,\n &quot;_claim_sources&quot;: &#123;\n   &quot;src1&quot;: &#123;&quot;JWT&quot;: &quot;jwt_header.jwt_part2.jwt_part3&quot;&#125;\n &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-6-2-2-Example-of-Distributed-Claims\"><a href=\"#5-6-2-2-Example-of-Distributed-Claims\" class=\"headerlink\" title=\"5.6.2.2. Example of Distributed Claims\"></a>5.6.2.2. Example of Distributed Claims</h3><p>In this non-normative example, the OpenID Provider combines Normal Claims that it holds with references to Claims held by two different Claims Providers, B and C, incorporating references to some of the Claims held by B and C as Distributed Claims.</p>\n<p>In this example, these Claims about Jane Doe are held by Claims Provider B (Jane Doe’s bank):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;shipping_address&quot;: &#123;\n   &quot;street_address&quot;: &quot;1234 Hollywood Blvd.&quot;,\n   &quot;locality&quot;: &quot;Los Angeles&quot;,\n   &quot;region&quot;: &quot;CA&quot;,\n   &quot;postal_code&quot;: &quot;90210&quot;,\n   &quot;country&quot;: &quot;US&quot;&#125;,\n &quot;payment_info&quot;: &quot;Some_Card 1234 5678 9012 3456&quot;,\n &quot;phone_number&quot;: &quot;+1 (310) 123-4567&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>Also in this example, this Claim about Jane Doe is held by Claims Provider C (a credit agency):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;credit_score&quot;: 650\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>The OpenID Provider returns Jane Doe’s Claims along with references to the Distributed Claims from Claims Provider B and Claims Provider C by sending the Access Tokens and URLs of locations from which the Distributed Claims can be retrieved:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;name&quot;: &quot;Jane Doe&quot;,\n &quot;given_name&quot;: &quot;Jane&quot;,\n &quot;family_name&quot;: &quot;Doe&quot;,\n &quot;email&quot;: &quot;janedoe@example.com&quot;,\n &quot;birthdate&quot;: &quot;0000-03-22&quot;,\n &quot;eye_color&quot;: &quot;blue&quot;,\n &quot;_claim_names&quot;: &#123;\n   &quot;payment_info&quot;: &quot;src1&quot;,\n   &quot;shipping_address&quot;: &quot;src1&quot;,\n   &quot;credit_score&quot;: &quot;src2&quot;\n  &#125;,\n &quot;_claim_sources&quot;: &#123;\n   &quot;src1&quot;: &#123;&quot;endpoint&quot;:\n              &quot;https:&#x2F;&#x2F;bank.example.com&#x2F;claim_source&quot;&#125;,\n   &quot;src2&quot;: &#123;&quot;endpoint&quot;:\n              &quot;https:&#x2F;&#x2F;creditagency.example.com&#x2F;claims_here&quot;,\n            &quot;access_token&quot;: &quot;ksj3n283dke&quot;&#125;\n &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"5-7-Claim-Stability-and-Uniqueness\"><a href=\"#5-7-Claim-Stability-and-Uniqueness\" class=\"headerlink\" title=\"5.7. Claim Stability and Uniqueness\"></a>5.7. Claim Stability and Uniqueness</h3><p>The <code>sub</code> (subject) and <code>iss</code> (issuer) Claims, used together, are the only Claims that an RP can rely upon as a stable identifier for the End-User, since the <code>sub</code> Claim MUST be locally unique and never reassigned within the Issuer for a particular End-User, as described in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a>. Therefore, the only guaranteed unique identifier for a given End-User is the combination of the <code>iss</code> Claim and the <code>sub</code> Claim.</p>\n<p>All other Claims carry no such guarantees across different issuers in terms of stability over time or uniqueness across users, and Issuers are permitted to apply local restrictions and policies. For instance, an Issuer MAY re-use an <code>email</code> Claim Value across different End-Users at different points in time, and the claimed <code>email</code> address for a given End-User MAY change over time. Therefore, other Claims such as <code>email</code>, <code>phone_number</code>, and <code>preferred_username</code> and MUST NOT be used as unique identifiers for the End-User.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"6-Passing-Request-Parameters-as-JWTs\"><a href=\"#6-Passing-Request-Parameters-as-JWTs\" class=\"headerlink\" title=\"6. Passing Request Parameters as JWTs\"></a>6. Passing Request Parameters as JWTs</h3><p>OpenID Connect defines the following Authorization Request parameters to enable Authentication Requests to be signed and optionally encrypted:</p>\n<blockquote>\n<ul>\n<li><p>request</p>\n<p>OPTIONAL. This parameter enables OpenID Connect requests to be passed in a single, self-contained parameter and to be optionally signed and&#x2F;or encrypted. The parameter value is a Request Object value, as specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RequestObject\">Section 6.1</a>. It represents the request as a JWT whose Claims are the request parameters.</p>\n</li>\n<li><p>request_uri</p>\n<p>OPTIONAL. This parameter enables OpenID Connect requests to be passed by reference, rather than by value. The <code>request_uri</code> value is a URL using the <code>https</code> scheme referencing a resource containing a Request Object value, which is a JWT containing the request parameters.</p>\n</li>\n</ul>\n</blockquote>\n<p>Requests using these parameters are represented as JWTs, which are respectively passed by value or by reference. The ability to pass requests by reference is particularly useful for large requests. If one of these parameters is used, the other MUST NOT be used in the same request.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"6-1-Passing-a-Request-Object-by-Value\"><a href=\"#6-1-Passing-a-Request-Object-by-Value\" class=\"headerlink\" title=\"6.1. Passing a Request Object by Value\"></a>6.1. Passing a Request Object by Value</h3><p>The <code>request</code> Authorization Request parameter enables OpenID Connect requests to be passed in a single, self-contained parameter and to be optionally signed and&#x2F;or encrypted. It represents the request as a JWT whose Claims are the request parameters specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a>. This JWT is called a Request Object.</p>\n<p>Support for the <code>request</code> parameter is OPTIONAL. The <code>request_parameter_supported</code> Discovery result indicates whether the OP supports this parameter. Should an OP not support this parameter and an RP uses it, the OP MUST return the <code>request_not_supported</code> error.</p>\n<p>When the <code>request</code> parameter is used, the OpenID Connect request parameter values contained in the JWT supersede those passed using the OAuth 2.0 request syntax. However, parameters MAY also be passed using the OAuth 2.0 request syntax even when a Request Object is used; this would typically be done to enable a cached, pre-signed (and possibly pre-encrypted) Request Object value to be used containing the fixed request parameters, while parameters that can vary with each request, such as <code>state</code> and <code>nonce</code>, are passed as OAuth 2.0 parameters.</p>\n<p>So that the request is a valid OAuth 2.0 Authorization Request, values for the <code>response_type</code> and <code>client_id</code> parameters MUST be included using the OAuth 2.0 request syntax, since they are REQUIRED by OAuth 2.0. The values for these parameters MUST match those in the Request Object, if present.</p>\n<p>Even if a <code>scope</code> parameter is present in the Request Object value, a <code>scope</code> parameter MUST always be passed using the OAuth 2.0 request syntax containing the <code>openid</code> scope value to indicate to the underlying OAuth 2.0 logic that this is an OpenID Connect request.</p>\n<p>The Request Object MAY be signed or unsigned (plaintext). When it is plaintext, this is indicated by use of the <code>none</code> algorithm [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWA\">JWA]</a> in the JOSE Header. If signed, the Request Object SHOULD contain the Claims <code>iss</code> (issuer) and <code>aud</code> (audience) as members. The <code>iss</code> value SHOULD be the Client ID of the RP, unless it was signed by a different party than the RP. The <code>aud</code> value SHOULD be or include the OP’s Issuer Identifier URL.</p>\n<p>The Request Object MAY also be encrypted using <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWE\">JWE</a> [JWE] and MAY be encrypted without also being signed. If both signing and encryption are performed, it MUST be signed then encrypted, with the result being a Nested JWT, as defined in [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JWT]</a>.</p>\n<p><code>request</code> and <code>request_uri</code> parameters MUST NOT be included in Request Objects.</p>\n<p>The following is a non-normative example of the Claims in a Request Object before base64url encoding and signing:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;iss&quot;: &quot;s6BhdRkqt3&quot;,\n &quot;aud&quot;: &quot;https:&#x2F;&#x2F;server.example.com&quot;,\n &quot;response_type&quot;: &quot;code id_token&quot;,\n &quot;client_id&quot;: &quot;s6BhdRkqt3&quot;,\n &quot;redirect_uri&quot;: &quot;https:&#x2F;&#x2F;client.example.org&#x2F;cb&quot;,\n &quot;scope&quot;: &quot;openid&quot;,\n &quot;state&quot;: &quot;af0ifjsldkj&quot;,\n &quot;nonce&quot;: &quot;n-0S6_WzA2Mj&quot;,\n &quot;max_age&quot;: 86400,\n &quot;claims&quot;:\n  &#123;\n   &quot;userinfo&quot;:\n    &#123;\n     &quot;given_name&quot;: &#123;&quot;essential&quot;: true&#125;,\n     &quot;nickname&quot;: null,\n     &quot;email&quot;: &#123;&quot;essential&quot;: true&#125;,\n     &quot;email_verified&quot;: &#123;&quot;essential&quot;: true&#125;,\n     &quot;picture&quot;: null\n    &#125;,\n   &quot;id_token&quot;:\n    &#123;\n     &quot;gender&quot;: null,\n     &quot;birthdate&quot;: &#123;&quot;essential&quot;: true&#125;,\n     &quot;acr&quot;: &#123;&quot;values&quot;: [&quot;urn:mace:incommon:iap:silver&quot;]&#125;\n    &#125;\n  &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>Signing it with the <code>RS256</code> algorithm results in this Request Object value (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">eyJhbGciOiJSUzI1NiIsImtpZCI6ImsyYmRjIn0.ew0KICJpc3MiOiAiczZCaGRSa3\nF0MyIsDQogImF1ZCI6ICJodHRwczovL3NlcnZlci5leGFtcGxlLmNvbSIsDQogInJl\nc3BvbnNlX3R5cGUiOiAiY29kZSBpZF90b2tlbiIsDQogImNsaWVudF9pZCI6ICJzNk\nJoZFJrcXQzIiwNCiAicmVkaXJlY3RfdXJpIjogImh0dHBzOi8vY2xpZW50LmV4YW1w\nbGUub3JnL2NiIiwNCiAic2NvcGUiOiAib3BlbmlkIiwNCiAic3RhdGUiOiAiYWYwaW\nZqc2xka2oiLA0KICJub25jZSI6ICJuLTBTNl9XekEyTWoiLA0KICJtYXhfYWdlIjog\nODY0MDAsDQogImNsYWltcyI6IA0KICB7DQogICAidXNlcmluZm8iOiANCiAgICB7DQ\nogICAgICJnaXZlbl9uYW1lIjogeyJlc3NlbnRpYWwiOiB0cnVlfSwNCiAgICAgIm5p\nY2tuYW1lIjogbnVsbCwNCiAgICAgImVtYWlsIjogeyJlc3NlbnRpYWwiOiB0cnVlfS\nwNCiAgICAgImVtYWlsX3ZlcmlmaWVkIjogeyJlc3NlbnRpYWwiOiB0cnVlfSwNCiAg\nICAgInBpY3R1cmUiOiBudWxsDQogICAgfSwNCiAgICJpZF90b2tlbiI6IA0KICAgIH\nsNCiAgICAgImdlbmRlciI6IG51bGwsDQogICAgICJiaXJ0aGRhdGUiOiB7ImVzc2Vu\ndGlhbCI6IHRydWV9LA0KICAgICAiYWNyIjogeyJ2YWx1ZXMiOiBbInVybjptYWNlOm\nluY29tbW9uOmlhcDpzaWx2ZXIiXX0NCiAgICB9DQogIH0NCn0.nwwnNsk1-Zkbmnvs\nF6zTHm8CHERFMGQPhos-EJcaH4Hh-sMgk8ePrGhw_trPYs8KQxsn6R9Emo_wHwajyF\nKzuMXZFSZ3p6Mb8dkxtVyjoy2GIzvuJT_u7PkY2t8QU9hjBcHs68PkgjDVTrG1uRTx\n0GxFbuPbj96tVuj11pTnmFCUR6IEOXKYr7iGOCRB3btfJhM0_AKQUfqKnRlrRscc8K\nol-cSLWoYE9l5QqholImzjT_cMnNIznW9E7CDyWXTsO70xnB4SkG6pXfLSjLLlxmPG\niyon_-Te111V8uE83IlzCYIb_NMXvtTIVc1jpspnTSD7xMbpL-2QgwUsAlMGzw<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>The following RSA public key, represented in JWK format, can be used to validate the Request Object signature in this and subsequent Request Object examples (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;kty&quot;:&quot;RSA&quot;,\n &quot;kid&quot;:&quot;k2bdc&quot;,\n &quot;n&quot;:&quot;y9Lqv4fCp6Ei-u2-ZCKq83YvbFEk6JMs_pSj76eMkddWRuWX2aBKGHAtKlE5P\n      7_vn__PCKZWePt3vGkB6ePgzAFu08NmKemwE5bQI0e6kIChtt_6KzT5OaaXDF\n      I6qCLJmk51Cc4VYFaxgqevMncYrzaW_50mZ1yGSFIQzLYP8bijAHGVjdEFgZa\n      ZEN9lsn_GdWLaJpHrB3ROlS50E45wxrlg9xMncVb8qDPuXZarvghLL0HzOuYR\n      adBJVoWZowDNTpKpk2RklZ7QaBO7XDv3uR7s_sf2g-bAjSYxYUGsqkNA9b3xV\n      W53am_UZZ3tZbFTIh557JICWKHlWj5uzeJXaw&quot;,\n &quot;e&quot;:&quot;AQAB&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"6-1-1-Request-using-the-“request”-Request-Parameter\"><a href=\"#6-1-1-Request-using-the-“request”-Request-Parameter\" class=\"headerlink\" title=\"6.1.1. Request using the “request” Request Parameter\"></a>6.1.1. Request using the “request” Request Parameter</h3><p>The Client sends the Authorization Request to the Authorization Endpoint.</p>\n<p>The following is a non-normative example of an Authorization Request using the <code>request</code> parameter (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">https:&#x2F;&#x2F;server.example.com&#x2F;authorize?\n  response_type&#x3D;code%20id_token\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb\n  &amp;scope&#x3D;openid\n  &amp;state&#x3D;af0ifjsldkj\n  &amp;nonce&#x3D;n-0S6_WzA2Mj\n  &amp;request&#x3D;eyJhbGciOiJSUzI1NiIsImtpZCI6ImsyYmRjIn0.ew0KICJpc3MiOiA\n  iczZCaGRSa3F0MyIsDQogImF1ZCI6ICJodHRwczovL3NlcnZlci5leGFtcGxlLmN\n  vbSIsDQogInJlc3BvbnNlX3R5cGUiOiAiY29kZSBpZF90b2tlbiIsDQogImNsaWV\n  udF9pZCI6ICJzNkJoZFJrcXQzIiwNCiAicmVkaXJlY3RfdXJpIjogImh0dHBzOi8\n  vY2xpZW50LmV4YW1wbGUub3JnL2NiIiwNCiAic2NvcGUiOiAib3BlbmlkIiwNCiA\n  ic3RhdGUiOiAiYWYwaWZqc2xka2oiLA0KICJub25jZSI6ICJuLTBTNl9XekEyTWo\n  iLA0KICJtYXhfYWdlIjogODY0MDAsDQogImNsYWltcyI6IA0KICB7DQogICAidXN\n  lcmluZm8iOiANCiAgICB7DQogICAgICJnaXZlbl9uYW1lIjogeyJlc3NlbnRpYWw\n  iOiB0cnVlfSwNCiAgICAgIm5pY2tuYW1lIjogbnVsbCwNCiAgICAgImVtYWlsIjo\n  geyJlc3NlbnRpYWwiOiB0cnVlfSwNCiAgICAgImVtYWlsX3ZlcmlmaWVkIjogeyJ\n  lc3NlbnRpYWwiOiB0cnVlfSwNCiAgICAgInBpY3R1cmUiOiBudWxsDQogICAgfSw\n  NCiAgICJpZF90b2tlbiI6IA0KICAgIHsNCiAgICAgImdlbmRlciI6IG51bGwsDQo\n  gICAgICJiaXJ0aGRhdGUiOiB7ImVzc2VudGlhbCI6IHRydWV9LA0KICAgICAiYWN\n  yIjogeyJ2YWx1ZXMiOiBbInVybjptYWNlOmluY29tbW9uOmlhcDpzaWx2ZXIiXX0\n  NCiAgICB9DQogIH0NCn0.nwwnNsk1-ZkbmnvsF6zTHm8CHERFMGQPhos-EJcaH4H\n  h-sMgk8ePrGhw_trPYs8KQxsn6R9Emo_wHwajyFKzuMXZFSZ3p6Mb8dkxtVyjoy2\n  GIzvuJT_u7PkY2t8QU9hjBcHs68PkgjDVTrG1uRTx0GxFbuPbj96tVuj11pTnmFC\n  UR6IEOXKYr7iGOCRB3btfJhM0_AKQUfqKnRlrRscc8Kol-cSLWoYE9l5QqholImz\n  jT_cMnNIznW9E7CDyWXTsO70xnB4SkG6pXfLSjLLlxmPGiyon_-Te111V8uE83Il\n  zCYIb_NMXvtTIVc1jpspnTSD7xMbpL-2QgwUsAlMGzw<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"6-2-Passing-a-Request-Object-by-Reference\"><a href=\"#6-2-Passing-a-Request-Object-by-Reference\" class=\"headerlink\" title=\"6.2. Passing a Request Object by Reference\"></a>6.2. Passing a Request Object by Reference</h3><p>The <code>request_uri</code> Authorization Request parameter enables OpenID Connect requests to be passed by reference, rather than by value. This parameter is used identically to the <code>request</code> parameter, other than that the Request Object value is retrieved from the resource at the specified URL, rather than passed by value.</p>\n<p>The <code>request_uri_parameter_supported</code> Discovery result indicates whether the OP supports this parameter. Should an OP not support this parameter and an RP uses it, the OP MUST return the <code>request_uri_not_supported</code> error.</p>\n<p>When the <code>request_uri</code> parameter is used, the OpenID Connect request parameter values contained in the referenced JWT supersede those passed using the OAuth 2.0 request syntax. However, parameters MAY also be passed using the OAuth 2.0 request syntax even when a <code>request_uri</code> is used; this would typically be done to enable a cached, pre-signed (and possibly pre-encrypted) Request Object value to be used containing the fixed request parameters, while parameters that can vary with each request, such as <code>state</code> and <code>nonce</code>, are passed as OAuth 2.0 parameters.</p>\n<p>So that the request is a valid OAuth 2.0 Authorization Request, values for the <code>response_type</code> and <code>client_id</code> parameters MUST be included using the OAuth 2.0 request syntax, since they are REQUIRED by OAuth 2.0. The values for these parameters MUST match those in the Request Object, if present.</p>\n<p>Even if a <code>scope</code> parameter is present in the referenced Request Object, a <code>scope</code> parameter MUST always be passed using the OAuth 2.0 request syntax containing the <code>openid</code> scope value to indicate to the underlying OAuth 2.0 logic that this is an OpenID Connect request.</p>\n<p>Servers MAY cache the contents of the resources referenced by Request URIs. If the contents of the referenced resource could ever change, the URI SHOULD include the base64url encoded SHA-256 hash of the referenced resource contents as the fragment component of the URI. If the fragment value used for a URI changes, that signals the server that any cached value for that URI with the old fragment value is no longer valid.</p>\n<p>Note that Clients MAY pre-register <code>request_uri</code> values using the <code>request_uris</code> parameter defined in Section 2.1 of the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration\">OpenID Connect Dynamic Client Registration 1.0</a> [OpenID.Registration] specification. OPs can require that <code>request_uri</code> values used be pre-registered with the <code>require_request_uri_registration</code> discovery parameter.</p>\n<p>The entire Request URI MUST NOT exceed 512 ASCII characters.</p>\n<p>The contents of the resource referenced by the URL MUST be a Request Object. The scheme used in the <code>request_uri</code> value MUST be <code>https</code>, unless the target Request Object is signed in a way that is verifiable by the Authorization Server. The <code>request_uri</code> value MUST be reachable by the Authorization Server, and SHOULD be reachable by the Client.</p>\n<p>The following is a non-normative example of the contents of a Request Object resource that can be referenced by a <code>request_uri</code> (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">eyJhbGciOiJSUzI1NiIsImtpZCI6ImsyYmRjIn0.ew0KICJpc3MiOiAiczZCaGRSa3\nF0MyIsDQogImF1ZCI6ICJodHRwczovL3NlcnZlci5leGFtcGxlLmNvbSIsDQogInJl\nc3BvbnNlX3R5cGUiOiAiY29kZSBpZF90b2tlbiIsDQogImNsaWVudF9pZCI6ICJzNk\nJoZFJrcXQzIiwNCiAicmVkaXJlY3RfdXJpIjogImh0dHBzOi8vY2xpZW50LmV4YW1w\nbGUub3JnL2NiIiwNCiAic2NvcGUiOiAib3BlbmlkIiwNCiAic3RhdGUiOiAiYWYwaW\nZqc2xka2oiLA0KICJub25jZSI6ICJuLTBTNl9XekEyTWoiLA0KICJtYXhfYWdlIjog\nODY0MDAsDQogImNsYWltcyI6IA0KICB7DQogICAidXNlcmluZm8iOiANCiAgICB7DQ\nogICAgICJnaXZlbl9uYW1lIjogeyJlc3NlbnRpYWwiOiB0cnVlfSwNCiAgICAgIm5p\nY2tuYW1lIjogbnVsbCwNCiAgICAgImVtYWlsIjogeyJlc3NlbnRpYWwiOiB0cnVlfS\nwNCiAgICAgImVtYWlsX3ZlcmlmaWVkIjogeyJlc3NlbnRpYWwiOiB0cnVlfSwNCiAg\nICAgInBpY3R1cmUiOiBudWxsDQogICAgfSwNCiAgICJpZF90b2tlbiI6IA0KICAgIH\nsNCiAgICAgImdlbmRlciI6IG51bGwsDQogICAgICJiaXJ0aGRhdGUiOiB7ImVzc2Vu\ndGlhbCI6IHRydWV9LA0KICAgICAiYWNyIjogeyJ2YWx1ZXMiOiBbInVybjptYWNlOm\nluY29tbW9uOmlhcDpzaWx2ZXIiXX0NCiAgICB9DQogIH0NCn0.nwwnNsk1-Zkbmnvs\nF6zTHm8CHERFMGQPhos-EJcaH4Hh-sMgk8ePrGhw_trPYs8KQxsn6R9Emo_wHwajyF\nKzuMXZFSZ3p6Mb8dkxtVyjoy2GIzvuJT_u7PkY2t8QU9hjBcHs68PkgjDVTrG1uRTx\n0GxFbuPbj96tVuj11pTnmFCUR6IEOXKYr7iGOCRB3btfJhM0_AKQUfqKnRlrRscc8K\nol-cSLWoYE9l5QqholImzjT_cMnNIznW9E7CDyWXTsO70xnB4SkG6pXfLSjLLlxmPG\niyon_-Te111V8uE83IlzCYIb_NMXvtTIVc1jpspnTSD7xMbpL-2QgwUsAlMGzw<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"6-2-1-URL-Referencing-the-Request-Object\"><a href=\"#6-2-1-URL-Referencing-the-Request-Object\" class=\"headerlink\" title=\"6.2.1. URL Referencing the Request Object\"></a>6.2.1. URL Referencing the Request Object</h3><p>The Client stores the Request Object resource either locally or remotely at a URL the Server can access. This URL is the Request URI, <code>request_uri</code>.</p>\n<p>If the Request Object includes requested values for Claims, it MUST NOT be revealed to anybody but the Authorization Server. As such, the <code>request_uri</code> MUST have appropriate entropy for its lifetime. It is RECOMMENDED that it be removed if it is known that it will not be used again or after a reasonable timeout unless access control measures are taken.</p>\n<p>The following is a non-normative example of a Request URI value (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">https:&#x2F;&#x2F;client.example.org&#x2F;request.jwt#\n  GkurKxf5T0Y-mnPFCHqWOMiZi4VS138cQO_V7PZHAdM<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"6-2-2-Request-using-the-“request-uri”-Request-Parameter\"><a href=\"#6-2-2-Request-using-the-“request-uri”-Request-Parameter\" class=\"headerlink\" title=\"6.2.2. Request using the “request_uri” Request Parameter\"></a>6.2.2. Request using the “request_uri” Request Parameter</h3><p>The Client sends the Authorization Request to the Authorization Endpoint.</p>\n<p>The following is a non-normative example of an Authorization Request using the <code>request_uri</code> parameter (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">https:&#x2F;&#x2F;server.example.com&#x2F;authorize?\n  response_type&#x3D;code%20id_token\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;request_uri&#x3D;https%3A%2F%2Fclient.example.org%2Frequest.jwt\n  %23GkurKxf5T0Y-mnPFCHqWOMiZi4VS138cQO_V7PZHAdM\n  &amp;state&#x3D;af0ifjsldkj&amp;nonce&#x3D;n-0S6_WzA2Mj\n  &amp;scope&#x3D;openid<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"6-2-3-Authorization-Server-Fetches-Request-Object\"><a href=\"#6-2-3-Authorization-Server-Fetches-Request-Object\" class=\"headerlink\" title=\"6.2.3. Authorization Server Fetches Request Object\"></a>6.2.3. Authorization Server Fetches Request Object</h3><p>Upon receipt of the Request, the Authorization Server MUST send an HTTP <code>GET</code> request to the <code>request_uri</code> to retrieve the referenced Request Object, unless it is already cached, and parse it to recreate the Authorization Request parameters.</p>\n<p>Note that the RP SHOULD use a unique URI for each request utilizing distinct parameters, or otherwise prevent the Authorization Server from caching the <code>request_uri</code>.</p>\n<p>The following is a non-normative example of this fetch process:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;request.jwt HTTP&#x2F;1.1\nHost: client.example.org<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"6-2-4-“request-uri”-Rationale\"><a href=\"#6-2-4-“request-uri”-Rationale\" class=\"headerlink\" title=\"6.2.4. “request_uri” Rationale\"></a>6.2.4. “request_uri” Rationale</h3><p>There are several reasons that one might choose to use the <code>request_uri</code> parameter:</p>\n<ol>\n<li>The set of request parameters can become large, and can exceed browser URI size limitations. Passing the request parameters by reference can solve this problem.</li>\n<li>Passing a <code>request_uri</code> value, rather than a complete request by value, can reduce request latency.</li>\n<li>Most requests for Claims from an RP are constant. The <code>request_uri</code> is a way of creating and sometimes also signing and encrypting a constant set of request parameters in advance. (The <code>request_uri</code> value becomes an “artifact” representing a particular fixed set of request parameters.)</li>\n<li>Pre-registering a fixed set of request parameters at Registration time enables OPs to cache and pre-validate the request parameters at Registration time, meaning they need not be retrieved at request time.</li>\n<li>Pre-registering a fixed set of request parameters at Registration time enables OPs to vet the contents of the request from consumer protection and other points of views, either itself or by utilizing a third party.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"6-3-Validating-JWT-Based-Requests\"><a href=\"#6-3-Validating-JWT-Based-Requests\" class=\"headerlink\" title=\"6.3. Validating JWT-Based Requests\"></a>6.3. Validating JWT-Based Requests</h3><p>When the <code>request</code> or <code>request_uri</code> Authorization Request parameters are used, additional steps must be performed to validate the Authentication Request beyond those specified in Sections <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthRequestValidation\">3.1.2.2</a>, <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ImplicitValidation\">3.2.2.2</a>, or <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#HybridValidation\">3.3.2.2</a>. These steps are to validate the JWT containing the Request Object and to validate the Request Object itself.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"6-3-1-Encrypted-Request-Object\"><a href=\"#6-3-1-Encrypted-Request-Object\" class=\"headerlink\" title=\"6.3.1. Encrypted Request Object\"></a>6.3.1. Encrypted Request Object</h3><p>If the Authorization Server has advertised JWE encryption algorithms in the <code>request_object_encryption_alg_values_supported</code> and <code>request_object_encryption_enc_values_supported</code> elements of its Discovery document [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Discovery\">OpenID.Discovery]</a>, or has supplied encryption algorithms by other means, these are used by the Client to encrypt the JWT.</p>\n<p>The Authorization Server MUST decrypt the JWT in accordance with the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWE\">JSON Web Encryption</a> [JWE] specification. The result MAY be either a signed or unsigned (plaintext) Request Object. In the former case, signature validation MUST be performed as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#SignedRequestObject\">Section 6.3.2</a>.</p>\n<p>The Authorization Server MUST return an error if decryption fails.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"6-3-2-Signed-Request-Object\"><a href=\"#6-3-2-Signed-Request-Object\" class=\"headerlink\" title=\"6.3.2. Signed Request Object\"></a>6.3.2. Signed Request Object</h3><p>To perform Signature Validation, the <code>alg</code> Header Parameter in the JOSE Header MUST match the value of the <code>request_object_signing_alg</code> set during Client Registration [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration\">OpenID.Registration]</a> or a value that was pre-registered by other means. The signature MUST be validated against the appropriate key for that <code>client_id</code> and algorithm.</p>\n<p>The Authorization Server MUST return an error if signature validation fails.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"6-3-3-Request-Parameter-Assembly-and-Validation\"><a href=\"#6-3-3-Request-Parameter-Assembly-and-Validation\" class=\"headerlink\" title=\"6.3.3. Request Parameter Assembly and Validation\"></a>6.3.3. Request Parameter Assembly and Validation</h3><p>The Authorization Server MUST assemble the set of Authorization Request parameters to be used from the Request Object value and the OAuth 2.0 Authorization Request parameters (minus the <code>request</code> or <code>request_uri</code> parameters). If the same parameter exists both in the Request Object and the OAuth Authorization Request parameters, the parameter in the Request Object is used. Using the assembled set of Authorization Request parameters, the Authorization Server then validates the request the normal manner for the flow being used, as specified in Sections <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthRequestValidation\">3.1.2.2</a>, <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ImplicitValidation\">3.2.2.2</a>, or <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#HybridValidation\">3.3.2.2</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"7-Self-Issued-OpenID-Provider\"><a href=\"#7-Self-Issued-OpenID-Provider\" class=\"headerlink\" title=\"7. Self-Issued OpenID Provider\"></a>7. Self-Issued OpenID Provider</h3><p>OpenID Connect supports Self-Issued OpenID Providers - personal, self-hosted OPs that issue self-signed ID Tokens. Self-Issued OPs use the special Issuer Identifier <code>https://self-issued.me</code>.</p>\n<p>The messages used to communicate with Self-Issued OPs are mostly the same as those used to communicate with other OPs. Specifications for the few additional parameters used and for the values of some parameters in the Self-Issued case are defined in this section.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"7-1-Self-Issued-OpenID-Provider-Discovery\"><a href=\"#7-1-Self-Issued-OpenID-Provider-Discovery\" class=\"headerlink\" title=\"7.1. Self-Issued OpenID Provider Discovery\"></a>7.1. Self-Issued OpenID Provider Discovery</h3><p>If the input identifier for the discovery process contains the domain self-issued.me, dynamic discovery is not performed. Instead, then the following static configuration values are used:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;authorization_endpoint&quot;:\n   &quot;openid:&quot;,\n &quot;issuer&quot;:\n   &quot;https:&#x2F;&#x2F;self-issued.me&quot;,\n &quot;scopes_supported&quot;:\n   [&quot;openid&quot;, &quot;profile&quot;, &quot;email&quot;, &quot;address&quot;, &quot;phone&quot;],\n &quot;response_types_supported&quot;:\n   [&quot;id_token&quot;],\n &quot;subject_types_supported&quot;:\n   [&quot;pairwise&quot;],\n &quot;id_token_signing_alg_values_supported&quot;:\n   [&quot;RS256&quot;],\n &quot;request_object_signing_alg_values_supported&quot;:\n   [&quot;none&quot;, &quot;RS256&quot;]\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>NOTE: The OpenID Foundation plans to host the OpenID Provider site <code>https://self-issued.me/</code>, including its WebFinger service, so that performing discovery on it returns the above static discovery information, enabling RPs to not need any special processing for discovery of the Self-Issued OP. This site will be hosted on an experimental basis. Production implementations should not take a dependency upon it without a subsequent commitment by the OpenID Foundation to host the site in a manner intended for production use.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"7-2-Self-Issued-OpenID-Provider-Registration\"><a href=\"#7-2-Self-Issued-OpenID-Provider-Registration\" class=\"headerlink\" title=\"7.2. Self-Issued OpenID Provider Registration\"></a>7.2. Self-Issued OpenID Provider Registration</h3><p>When using a Self-Issued OP, registration is not required. The Client can proceed without registration as if it had registered with the OP and obtained the following Client Registration Response:</p>\n<blockquote>\n<ul>\n<li><p>client_id</p>\n<p><code>redirect_uri</code> value of the Client.</p>\n</li>\n<li><p>client_secret_expires_at</p>\n<p>0</p>\n</li>\n</ul>\n</blockquote>\n<p>NOTE: The OpenID Foundation plans to host the (stateless) endpoint <code>https://self-issued.me/registration/1.0/</code> that returns the response above, enabling RPs to not need any special processing for registration with the Self-Issued OP. This site will be hosted on an experimental basis. Production implementations should not take a dependency upon it without a subsequent commitment by the OpenID Foundation to host the site in a manner intended for production use.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"7-2-1-Providing-Information-with-the-“registration”-Request-Parameter\"><a href=\"#7-2-1-Providing-Information-with-the-“registration”-Request-Parameter\" class=\"headerlink\" title=\"7.2.1. Providing Information with the “registration” Request Parameter\"></a>7.2.1. Providing Information with the “registration” Request Parameter</h3><p>OpenID Connect defines the following Authorization Request parameter to enable Clients to provide additional registration information to Self-Issued OpenID Providers:</p>\n<blockquote>\n<ul>\n<li><p>registration</p>\n<p>OPTIONAL. This parameter is used by the Client to provide information about itself to a Self-Issued OP that would normally be provided to an OP during Dynamic Client Registration. The value is a JSON object containing Client metadata values, as defined in Section 2.1 of the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration\">OpenID Connect Dynamic Client Registration 1.0</a> [OpenID.Registration] specification. The <code>registration</code> parameter SHOULD NOT be used when the OP is not a Self-Issued OP.</p>\n</li>\n</ul>\n</blockquote>\n<p>None of this information is REQUIRED by Self-Issued OPs, so the use of this parameter is OPTIONAL.</p>\n<p>The <code>registration</code> parameter value is represented in an OAuth 2.0 request as a UTF-8 encoded JSON object (which ends up being form-urlencoded when passed as an OAuth parameter). When used in a Request Object value, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RequestObject\">Section 6.1</a>, the JSON object is used as the value of the <code>registration</code> member.</p>\n<p>The Registration parameters that would typically be used in requests to Self-Issued OPs are <code>policy_uri</code>, <code>tos_uri</code>, and <code>logo_uri</code>. If the Client uses more than one Redirection URI, the <code>redirect_uris</code> parameter would be used to register them. Finally, if the Client is requesting encrypted responses, it would typically use the <code>jwks_uri</code>, <code>id_token_encrypted_response_alg</code> and <code>id_token_encrypted_response_enc</code> parameters.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"7-3-Self-Issued-OpenID-Provider-Request\"><a href=\"#7-3-Self-Issued-OpenID-Provider-Request\" class=\"headerlink\" title=\"7.3. Self-Issued OpenID Provider Request\"></a>7.3. Self-Issued OpenID Provider Request</h3><p>The Client sends the Authentication Request to the Authorization Endpoint with the following parameters:</p>\n<blockquote>\n<ul>\n<li><p>scope</p>\n<p>REQUIRED. <code>scope</code> parameter value, as specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a>.</p>\n</li>\n<li><p>response_type</p>\n<p>REQUIRED. Constant string value <code>id_token</code>.</p>\n</li>\n<li><p>client_id</p>\n<p>REQUIRED. Client ID value for the Client, which in this case contains the <code>redirect_uri</code> value of the Client. Since the Client’s <code>redirect_uri</code> URI value is communicated as the Client ID, a <code>redirect_uri</code> parameter is NOT REQUIRED to also be included in the request.</p>\n</li>\n<li><p>id_token_hint</p>\n<p>OPTIONAL. <code>id_token_hint</code> parameter value, as specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a>. If the ID Token is encrypted to the Self-Issued OP, the <code>sub</code> (subject) of the signed ID Token MUST be sent as the <code>kid</code> (Key ID) of the JWE. Encrypting content to Self-Issued OPs is currently only supported when the OP’s JWK key type is <code>RSA</code> and the encryption algorithm used is <code>RSA1_5</code>.</p>\n</li>\n<li><p>claims</p>\n<p>OPTIONAL. <code>claims</code> parameter value, as specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter\">Section 5.5</a>.</p>\n</li>\n<li><p>registration</p>\n<p>OPTIONAL. This parameter is used by the Client to provide information about itself to a Self-Issued OP that would normally be provided to an OP during Dynamic Client Registration, as specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RegistrationParameter\">Section 7.2.1</a>.</p>\n</li>\n<li><p>request</p>\n<p>OPTIONAL. Request Object value, as specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RequestObject\">Section 6.1</a>. The Request Object MAY be encrypted to the Self-Issued OP by the Client. In this case, the <code>sub</code> (subject) of a previously issued ID Token for this Client MUST be sent as the <code>kid</code> (Key ID) of the JWE. Encrypting content to Self-Issued OPs is currently only supported when the OP’s JWK key type is <code>RSA</code> and the encryption algorithm used is <code>RSA1_5</code>.</p>\n</li>\n</ul>\n</blockquote>\n<p>Other parameters MAY be sent. Note that all Claims are returned in the ID Token.</p>\n<p>The entire URL MUST NOT exceed 2048 ASCII characters.</p>\n<p>The following is a non-normative example HTTP 302 redirect response by the Client, which triggers the User Agent to make an Authentication Request to the Self-Issued OpenID Provider (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">HTTP&#x2F;1.1 302 Found\nLocation: openid:&#x2F;&#x2F;?\n  response_type&#x3D;id_token\n  &amp;client_id&#x3D;https%3A%2F%2Fclient.example.org%2Fcb\n  &amp;scope&#x3D;openid%20profile\n  &amp;state&#x3D;af0ifjsldkj\n  &amp;nonce&#x3D;n-0S6_WzA2Mj\n  &amp;registration&#x3D;%7B%22logo_uri%22%3A%22https%3A%2F%2F\n    client.example.org%2Flogo.png%22%7D<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"7-4-Self-Issued-OpenID-Provider-Response\"><a href=\"#7-4-Self-Issued-OpenID-Provider-Response\" class=\"headerlink\" title=\"7.4. Self-Issued OpenID Provider Response\"></a>7.4. Self-Issued OpenID Provider Response</h3><p>OpenID Connect defines the following Claim for use in Self-Issued OpenID Provider Responses:</p>\n<blockquote>\n<ul>\n<li><p>sub_jwk</p>\n<p>REQUIRED. Public key used to check the signature of an ID Token issued by a Self-Issued OpenID Provider, as specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#SelfIssued\">Section 7</a>. The key is a bare key in JWK [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWK\">JWK]</a> format (not an X.509 certificate value). The <code>sub_jwk</code> value is a JSON object. Use of the <code>sub_jwk</code> Claim is NOT RECOMMENDED when the OP is not Self-Issued.</p>\n</li>\n</ul>\n</blockquote>\n<p>The Self-Issued OpenID Provider response is the same as the normal Implicit Flow response with the following refinements. Since it is an Implicit Flow response, the response parameters will be returned in the URL fragment component, unless a different Response Mode was specified.</p>\n<ol>\n<li>The <code>iss</code> (issuer) Claim Value is <code>https://self-issued.me</code>.</li>\n<li>A <code>sub_jwk</code> Claim is present, with its value being the public key used to check the signature of the ID Token.</li>\n<li>The <code>sub</code> (subject) Claim value is the base64url encoded representation of the thumbprint of the key in the <code>sub_jwk</code> Claim. This thumbprint value is computed as the SHA-256 hash of the octets of the UTF-8 representation of a JWK constructed containing only the REQUIRED members to represent the key, with the member names sorted into lexicographic order, and with no white space or line breaks. For instance, when the <code>kty</code> value is <code>RSA</code>, the member names <code>e</code>, <code>kty</code>, and <code>n</code> are the ones present in the constructed JWK used in the thumbprint computation and appear in that order; when the <code>kty</code> value is <code>EC</code>, the member names <code>crv</code>, <code>kty</code>, <code>x</code>, and <code>y</code> are present in that order. Note that this thumbprint calculation is the same as that defined in the JWK Thumbprint [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWK.Thumbprint\">JWK.Thumbprint]</a> specification.</li>\n<li>No Access Token is returned for accessing a UserInfo Endpoint, so all Claims returned MUST be in the ID Token.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"7-5-Self-Issued-ID-Token-Validation\"><a href=\"#7-5-Self-Issued-ID-Token-Validation\" class=\"headerlink\" title=\"7.5. Self-Issued ID Token Validation\"></a>7.5. Self-Issued ID Token Validation</h3><p>To validate the ID Token received, the Client MUST do the following:</p>\n<ol>\n<li>The Client MUST validate that the value of the <code>iss</code> (issuer) Claim is <code>https://self-isued.me</code>. If <code>iss</code> contains a different value, the ID Token is not Self-Issued, and instead it MUST be validated according to <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation\">Section 3.1.3.7</a>.</li>\n<li>The Client MUST validate that the <code>aud</code> (audience) Claim contains the value of the <code>redirect_uri</code> that the Client sent in the Authentication Request as an audience.</li>\n<li>The Client MUST validate the signature of the ID Token according to <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWS\">JWS</a> [JWS] using the algorithm specified in the <code>alg</code> Header Parameter of the JOSE Header, using the key in the <code>sub_jwk</code> Claim; the key is a bare key in JWK format (not an X.509 certificate value).</li>\n<li>The <code>alg</code> value SHOULD be the default of <code>RS256</code>. It MAY also be <code>ES256</code>.</li>\n<li>The Client MUST validate that the <code>sub</code> Claim value is the base64url encoded representation of the thumbprint of the key in the <code>sub_jwk</code> Claim, as specified in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#SelfIssuedResponse\">Section 7.4</a>.</li>\n<li>The current time MUST be before the time represented by the <code>exp</code> Claim (possibly allowing for some small leeway to account for clock skew).</li>\n<li>The <code>iat</code> Claim can be used to reject tokens that were issued too far away from the current time, limiting the amount of time that nonces need to be stored to prevent attacks. The acceptable range is Client specific.</li>\n<li>If a nonce value was sent in the Authentication Request, a <code>nonce</code> Claim MUST be present and its value checked to verify that it is the same value as the one that was sent in the Authentication Request. The Client SHOULD check the <code>nonce</code> value for replay attacks. The precise method for detecting replay attacks is Client specific.</li>\n</ol>\n<p>The following is a non-normative example of a base64url decoded Self-Issued ID Token (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;iss&quot;: &quot;https:&#x2F;&#x2F;self-issued.me&quot;,\n &quot;sub&quot;: &quot;NzbLsXh8uDCcd-6MNwXF4W_7noWXFZAfHkxZsRGC9Xs&quot;,\n &quot;aud&quot;: &quot;https:&#x2F;&#x2F;client.example.org&#x2F;cb&quot;,\n &quot;nonce&quot;: &quot;n-0S6_WzA2Mj&quot;,\n &quot;exp&quot;: 1311281970,\n &quot;iat&quot;: 1311280970,\n &quot;sub_jwk&quot;: &#123;\n   &quot;kty&quot;:&quot;RSA&quot;,\n   &quot;n&quot;: &quot;0vx7agoebGcQSuuPiLJXZptN9nndrQmbXEps2aiAFbWhM78LhWx\n   4cbbfAAtVT86zwu1RK7aPFFxuhDR1L6tSoc_BJECPebWKRXjBZCiFV4n3oknjhMs\n   tn64tZ_2W-5JsGY4Hc5n9yBXArwl93lqt7_RN5w6Cf0h4QyQ5v-65YGjQR0_FDW2\n   QvzqY368QQMicAtaSqzs8KJZgnYb9c7d0zgdAZHzu6qMQvRL5hajrn1n91CbOpbI\n   SD08qNLyrdkt-bFTWhAI4vMQFh6WeZu0fM4lFd2NcRwr3XPksINHaQ-G_xBniIqb\n   w0Ls1jF44-csFCur-kEgU8awapJzKnqDKgw&quot;,\n   &quot;e&quot;:&quot;AQAB&quot;\n  &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"8-Subject-Identifier-Types\"><a href=\"#8-Subject-Identifier-Types\" class=\"headerlink\" title=\"8. Subject Identifier Types\"></a>8. Subject Identifier Types</h3><p>A Subject Identifier is a locally unique and never reassigned identifier within the Issuer for the End-User, which is intended to be consumed by the Client. Two Subject Identifier types are defined by this specification:</p>\n<blockquote>\n<ul>\n<li><p>public</p>\n<p>This provides the same <code>sub</code> (subject) value to all Clients. It is the default if the provider has no <code>subject_types_supported</code> element in its discovery document.</p>\n</li>\n<li><p>pairwise</p>\n<p>This provides a different <code>sub</code> value to each Client, so as not to enable Clients to correlate the End-User’s activities without permission.</p>\n</li>\n</ul>\n</blockquote>\n<p>The OpenID Provider’s Discovery document SHOULD list its supported Subject Identifier types in the <code>subject_types_supported</code> element. If there is more than one type listed in the array, the Client MAY elect to provide its preferred identifier type using the <code>subject_type</code> parameter during Registration.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"8-1-Pairwise-Identifier-Algorithm\"><a href=\"#8-1-Pairwise-Identifier-Algorithm\" class=\"headerlink\" title=\"8.1. Pairwise Identifier Algorithm\"></a>8.1. Pairwise Identifier Algorithm</h3><p>When pairwise Subject Identifiers are used, the OpenID Provider MUST calculate a unique <code>sub</code> (subject) value for each Sector Identifier. The Subject Identifier value MUST NOT be reversible by any party other than the OpenID Provider.</p>\n<p>Providers that use pairwise <code>sub</code> values and support <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration\">Dynamic Client Registration</a> [OpenID.Registration] SHOULD use the <code>sector_identifier_uri</code> parameter. It provides a way for a group of websites under common administrative control to have consistent pairwise <code>sub</code> values independent of the individual domain names. It also provides a way for Clients to change <code>redirect_uri</code> domains without having to reregister all of their users.</p>\n<p>If the Client has not provided a value for <code>sector_identifier_uri</code> in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration\">Dynamic Client Registration</a> [OpenID.Registration], the Sector Identifier used for pairwise identifier calculation is the host component of the registered <code>redirect_uri</code>. If there are multiple hostnames in the registered <code>redirect_uris</code>, the Client MUST register a <code>sector_identifier_uri</code>.</p>\n<p>When a <code>sector_identifier_uri</code> is provided, the host component of that URL is used as the Sector Identifier for the pairwise identifier calculation. The value of the <code>sector_identifier_uri</code> MUST be a URL using the <code>https</code> scheme that points to a JSON file containing an array of <code>redirect_uri</code> values. The values of the registered <code>redirect_uris</code> MUST be included in the elements of the array.</p>\n<p>Any algorithm with the following properties can be used by OpenID Providers to calculate pairwise Subject Identifiers:</p>\n<ul>\n<li>The Subject Identifier value MUST NOT be reversible by any party other than the OpenID Provider.</li>\n<li>Distinct Sector Identifier values MUST result in distinct Subject Identifier values.</li>\n<li>The algorithm MUST be deterministic.</li>\n</ul>\n<p>Three example methods are:</p>\n<ol>\n<li><p>The Sector Identifier can be concatenated with a local account ID and a salt value that is kept secret by the Provider. The concatenated string is then hashed using an appropriate algorithm.</p>\n<p>Calculate <code>sub</code> &#x3D; SHA-256 ( sector_identifier || local_account_id || salt ).</p>\n</li>\n<li><p>The Sector Identifier can be concatenated with a local account ID and a salt value that is kept secret by the Provider. The concatenated string is then encrypted using an appropriate algorithm.</p>\n<p>Calculate <code>sub</code> &#x3D; AES-128 ( sector_identifier || local_account_id || salt ).</p>\n</li>\n<li><p>The Issuer creates a Globally Unique Identifier (GUID) for the pair of Sector Identifier and local account ID and stores this value.</p>\n</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"9-Client-Authentication\"><a href=\"#9-Client-Authentication\" class=\"headerlink\" title=\"9. Client Authentication\"></a>9. Client Authentication</h3><p>This section defines a set of Client Authentication methods that are used by Clients to authenticate to the Authorization Server when using the Token Endpoint. During Client Registration, the RP (Client) MAY register a Client Authentication method. If no method is registered, the default method is <code>client_secret_basic</code>.</p>\n<p>These Client Authentication methods are:</p>\n<blockquote>\n<ul>\n<li><p>client_secret_basic</p>\n<p>Clients that have received a <code>client_secret</code> value from the Authorization Server authenticate with the Authorization Server in accordance with Section 2.3.1 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749] using the HTTP Basic authentication scheme.</p>\n</li>\n<li><p>client_secret_post</p>\n<p>Clients that have received a <code>client_secret</code> value from the Authorization Server, authenticate with the Authorization Server in accordance with Section 2.3.1 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749] by including the Client Credentials in the request body.</p>\n</li>\n<li><p>client_secret_jwt</p>\n<p>Clients that have received a <code>client_secret</code> value from the Authorization Server create a JWT using an HMAC SHA algorithm, such as HMAC SHA-256. The HMAC (Hash-based Message Authentication Code) is calculated using the octets of the UTF-8 representation of the <code>client_secret</code> as the shared key.</p>\n</li>\n<li><p>The Client authenticates in accordance with <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.JWT\">JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants</a> [OAuth.JWT] and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions\">Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants</a> [OAuth.Assertions]. The JWT MUST contain the following REQUIRED Claim Values and MAY contain the following OPTIONAL Claim Values:</p>\n</li>\n<li><p>issREQUIRED. Issuer. This MUST contain the <code>client_id</code> of the OAuth Client.subREQUIRED. Subject. This MUST contain the <code>client_id</code> of the OAuth Client.audREQUIRED. Audience. The <code>aud</code> (audience) Claim. Value that identifies the Authorization Server as an intended audience. The Authorization Server MUST verify that it is an intended audience for the token. The Audience SHOULD be the URL of the Authorization Server’s Token Endpoint.jtiREQUIRED. JWT ID. A unique identifier for the token, which can be used to prevent reuse of the token. These tokens MUST only be used once, unless conditions for reuse were negotiated between the parties; any such negotiation is beyond the scope of this specification.expREQUIRED. Expiration time on or after which the ID Token MUST NOT be accepted for processing.iatOPTIONAL. Time at which the JWT was issued.</p>\n</li>\n<li><p>The JWT MAY contain other Claims. Any Claims used that are not understood MUST be ignored.</p>\n</li>\n<li><p>The authentication token MUST be sent as the value of the [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions\">OAuth.Assertions]</a> <code>client_assertion</code> parameter.</p>\n</li>\n<li><p>The value of the [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions\">OAuth.Assertions]</a> <code>client_assertion_type</code> parameter MUST be “urn:ietf:params:oauth:client-assertion-type:jwt-bearer”, per [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.JWT\">OAuth.JWT]</a>.</p>\n</li>\n<li><p>private_key_jwt</p>\n<p>Clients that have registered a public key sign a JWT using that key. The Client authenticates in accordance with <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.JWT\">JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants</a> [OAuth.JWT] and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions\">Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants</a> [OAuth.Assertions]. The JWT MUST contain the following REQUIRED Claim Values and MAY contain the following OPTIONAL Claim Values:</p>\n</li>\n<li><p>issREQUIRED. Issuer. This MUST contain the <code>client_id</code> of the OAuth Client.subREQUIRED. Subject. This MUST contain the <code>client_id</code> of the OAuth Client.audREQUIRED. Audience. The <code>aud</code> (audience) Claim. Value that identifies the Authorization Server as an intended audience. The Authorization Server MUST verify that it is an intended audience for the token. The Audience SHOULD be the URL of the Authorization Server’s Token Endpoint.jtiREQUIRED. JWT ID. A unique identifier for the token, which can be used to prevent reuse of the token. These tokens MUST only be used once, unless conditions for reuse were negotiated between the parties; any such negotiation is beyond the scope of this specification.expREQUIRED. Expiration time on or after which the ID Token MUST NOT be accepted for processing.iatOPTIONAL. Time at which the JWT was issued.</p>\n</li>\n<li><p>The JWT MAY contain other Claims. Any Claims used that are not understood MUST be ignored.</p>\n</li>\n<li><p>The authentication token MUST be sent as the value of the [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions\">OAuth.Assertions]</a> <code>client_assertion</code> parameter.</p>\n</li>\n<li><p>The value of the [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions\">OAuth.Assertions]</a> <code>client_assertion_type</code> parameter MUST be “urn:ietf:params:oauth:client-assertion-type:jwt-bearer”, per [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.JWT\">OAuth.JWT]</a>.</p>\n</li>\n<li><p>For example (with line wraps within values for display purposes only):<code> POST /token HTTP/1.1  Host: server.example.com  Content-Type: application/x-www-form-urlencoded   grant_type=authorization_code&amp;    code=i1WsRn1uB1&amp;    client_id=s6BhdRkqt3&amp;    client_assertion_type=    urn%3Aietf%3Aparams%3Aoauth%3Aclient-assertion-type%3Ajwt-bearer&amp;    client_assertion=PHNhbWxwOl ... ZT</code></p>\n</li>\n<li><p>none</p>\n<p>The Client does not authenticate itself at the Token Endpoint, either because it uses only the Implicit Flow (and so does not use the Token Endpoint) or because it is a Public Client with no Client Secret or other authentication mechanism.</p>\n</li>\n</ul>\n</blockquote>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"10-Signatures-and-Encryption\"><a href=\"#10-Signatures-and-Encryption\" class=\"headerlink\" title=\"10. Signatures and Encryption\"></a>10. Signatures and Encryption</h3><p>Depending on the transport through which the messages are sent, the integrity of the message might not be guaranteed and the originator of the message might not be authenticated. To mitigate these risks, ID Token, UserInfo Response, Request Object, and Client Authentication JWT values can utilize <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWS\">JSON Web Signature (JWS)</a> [JWS] to sign their contents. To achieve message confidentiality, these values can also use <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWE\">JSON Web Encryption (JWE)</a> [JWE] to encrypt their contents.</p>\n<p>When the message is both signed and encrypted, it MUST be signed first and then encrypted, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#SigningOrder\">Section 16.14</a>, with the result being a Nested JWT, as specified in [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JWT]</a>. Note that all JWE encryption methods perform integrity checking.</p>\n<p>The OP advertises its supported signing and encryption algorithms in its Discovery document, or may supply this information by other means. The RP declares its required signing and encryption algorithms in its Dynamic Registration request, or may communicate this information by other means.</p>\n<p>The OP advertises its public keys via its Discovery document, or may supply this information by other means. The RP declares its public keys via its Dynamic Registration request, or may communicate this information by other means.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"10-1-Signing\"><a href=\"#10-1-Signing\" class=\"headerlink\" title=\"10.1. Signing\"></a>10.1. Signing</h3><p>The signing party MUST select a signature algorithm based on the algorithms supported by the recipient.</p>\n<blockquote>\n<ul>\n<li><p>Asymmetric Signatures</p>\n<p>When using RSA or ECDSA Signatures, the <code>alg</code> Header Parameter value of the JOSE Header MUST be set to an appropriate algorithm as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWA\">JSON Web Algorithms</a> [JWA]. The private key used to sign the content MUST be associated with a public key used for signature verification published by the sender in its JWK Set document. If there are multiple keys in the referenced JWK Set document, a <code>kid</code> value MUST be provided in the JOSE Header. The key usage of the respective keys MUST support signing.</p>\n</li>\n<li><p>Symmetric Signatures</p>\n<p>When using MAC-based signatures, the <code>alg</code> Header Parameter value of the JOSE Header MUST be set to a MAC algorithm, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWA\">JSON Web Algorithms</a> [JWA]. The MAC key used is the octets of the UTF-8 representation of the <code>client_secret</code> value. See <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#SymmetricKeyEntropy\">Section 16.19</a> for a discussion of entropy requirements for <code>client_secret</code> values. Symmetric signatures MUST NOT be used by public (non-confidential) Clients because of their inability to keep secrets.</p>\n</li>\n</ul>\n</blockquote>\n<p>See <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#NeedForSignedRequests\">Section 16.20</a> for Security Considerations about the need for signed requests.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"10-1-1-Rotation-of-Asymmetric-Signing-Keys\"><a href=\"#10-1-1-Rotation-of-Asymmetric-Signing-Keys\" class=\"headerlink\" title=\"10.1.1. Rotation of Asymmetric Signing Keys\"></a>10.1.1. Rotation of Asymmetric Signing Keys</h3><p>Rotation of signing keys can be accomplished with the following approach. The signer publishes its keys in a JWK Set at its <code>jwks_uri</code> location and includes the <code>kid</code> of the signing key in the JOSE Header of each message to indicate to the verifier which key is to be used to validate the signature. Keys can be rolled over by periodically adding new keys to the JWK Set at the <code>jwks_uri</code> location. The signer can begin using a new key at its discretion and signals the change to the verifier using the <code>kid</code> value. The verifier knows to go back to the <code>jwks_uri</code> location to re-retrieve the keys when it sees an unfamiliar <code>kid</code> value. The JWK Set document at the <code>jwks_uri</code> SHOULD retain recently decommissioned signing keys for a reasonable period of time to facilitate a smooth transition.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"10-2-Encryption\"><a href=\"#10-2-Encryption\" class=\"headerlink\" title=\"10.2. Encryption\"></a>10.2. Encryption</h3><p>The encrypting party MUST select an encryption algorithm based on the algorithms supported by the recipient.</p>\n<blockquote>\n<ul>\n<li><p>Asymmetric Encryption: RSA</p>\n<p>The public key to which the content was encrypted MUST be a public key used for encryption published by the recipient in its JWK Set document. If there are multiple keys in the referenced JWK Set document, a <code>kid</code> value MUST be provided in the JOSE Header. Use the supported RSA encryption algorithm to encrypt a random Content Encryption Key to be used for encrypting the signed JWT. The key usage of the respective keys MUST include encryption.</p>\n</li>\n<li><p>Asymmetric Encryption: Elliptic Curve</p>\n<p>Create an ephemeral Elliptic Curve public key for the <code>epk</code> element of the JOSE Header. The other public key used for the key agreement computation MUST be a public key published by the recipient in its JWK Set document. If there are multiple keys in the referenced JWK Set document, a <code>kid</code> value MUST be provided in the JOSE Header. Use the ECDH-ES algorithm to agree upon a Content Encryption Key to be used for encrypting the signed JWT. The key usage of the respective keys MUST support encryption.</p>\n</li>\n<li><p>Symmetric Encryption</p>\n<p>The symmetric encryption key is derived from the <code>client_secret</code> value by using a left truncated SHA-2 hash of the octets of the UTF-8 representation of the <code>client_secret</code>. For keys of 256 or fewer bits, SHA-256 is used; for keys of 257-384 bits, SHA-384 is used; for keys of 385-512 bits, SHA-512 is used. The hash value MUST be left truncated to the appropriate bit length for the AES key wrapping or direct encryption algorithm used, for instance, truncating the SHA-256 hash to 128 bits for <code>A128KW</code>. If a symmetric key with greater than 512 bits is needed, a different method of deriving the key from the <code>client_secret</code> would have to be defined by an extension. Symmetric encryption MUST NOT be used by public (non-confidential) Clients because of their inability to keep secrets.</p>\n</li>\n</ul>\n</blockquote>\n<p>See <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#NeedForEncryptedRequests\">Section 16.21</a> for Security Considerations about the need for encrypted requests.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"10-2-1-Rotation-of-Asymmetric-Encryption-Keys\"><a href=\"#10-2-1-Rotation-of-Asymmetric-Encryption-Keys\" class=\"headerlink\" title=\"10.2.1. Rotation of Asymmetric Encryption Keys\"></a>10.2.1. Rotation of Asymmetric Encryption Keys</h3><p>Rotating encryption keys necessarily uses a different process than the one for signing keys because the encrypting party starts the process and thus cannot rely on a change in <code>kid</code> as a signal that keys need to change. The encrypting party still uses the <code>kid</code> Header Parameter in the JWE to tell the decrypting party which private key to use to decrypt, however, the encrypting party needs to first select the most appropriate key from those provided in the JWK Set at the recipient’s <code>jwks_uri</code> location.</p>\n<p>To rotate keys, the decrypting party can publish new keys at its <code>jwks_uri</code> location and remove from the JWK Set those that are being decommissioned. The <code>jwks_uri</code> SHOULD include a <code>Cache-Control</code> header in the response that contains a <code>max-age</code> directive, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC2616\">RFC 2616</a> [RFC2616], which enables the encrypting party to safely cache the JWK Set and not have to re-retrieve the document for every encryption event. The decrypting party SHOULD remove decommissioned keys from the JWK Set referenced by <code>jwks_uri</code> but retain them internally for some reasonable period of time, coordinated with the cache duration, to facilitate a smooth transition between keys by allowing the encrypting party some time to obtain the new keys. The cache duration SHOULD also be coordinated with the issuance of new signing keys, as described in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RotateSigKeys\">Section 10.1.1</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"11-Offline-Access\"><a href=\"#11-Offline-Access\" class=\"headerlink\" title=\"11. Offline Access\"></a>11. Offline Access</h3><p>OpenID Connect defines the following <code>scope</code> value to request offline access:</p>\n<blockquote>\n<ul>\n<li><p>offline_access</p>\n<p>OPTIONAL. This scope value requests that an OAuth 2.0 Refresh Token be issued that can be used to obtain an Access Token that grants access to the End-User’s UserInfo Endpoint even when the End-User is not present (not logged in).</p>\n</li>\n</ul>\n</blockquote>\n<p>When offline access is requested, a <code>prompt</code> parameter value of <code>consent</code> MUST be used unless other conditions for processing the request permitting offline access to the requested resources are in place. The OP MUST always obtain consent to returning a Refresh Token that enables offline access to the requested resources. A previously saved user consent is not always sufficient to grant offline access.</p>\n<p>Upon receipt of a scope parameter containing the <code>offline_access</code> value, the Authorization Server:</p>\n<ul>\n<li>MUST ensure that the prompt parameter contains <code>consent</code> unless other conditions for processing the request permitting offline access to the requested resources are in place; unless one or both of these conditions are fulfilled, then it MUST ignore the <code>offline_access</code> request,</li>\n<li>MUST ignore the <code>offline_access</code> request unless the Client is using a <code>response_type</code> value that would result in an Authorization Code being returned,</li>\n<li>MUST explicitly receive or have consent for all Clients when the registered <code>application_type</code> is <code>web</code>,</li>\n<li>SHOULD explicitly receive or have consent for all Clients when the registered <code>application_type</code> is <code>native</code>.</li>\n</ul>\n<p>The use of Refresh Tokens is not exclusive to the <code>offline_access</code> use case. The Authorization Server MAY grant Refresh Tokens in other contexts that are beyond the scope of this specification.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"12-Using-Refresh-Tokens\"><a href=\"#12-Using-Refresh-Tokens\" class=\"headerlink\" title=\"12. Using Refresh Tokens\"></a>12. Using Refresh Tokens</h3><p>A request to the Token Endpoint can also use a Refresh Token by using the <code>grant_type</code> value <code>refresh_token</code>, as described in Section 6 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749]. This section defines the behaviors for OpenID Connect Authorization Servers when Refresh Tokens are used.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"12-1-Refresh-Request\"><a href=\"#12-1-Refresh-Request\" class=\"headerlink\" title=\"12.1. Refresh Request\"></a>12.1. Refresh Request</h3><p>To refresh an Access Token, the Client MUST authenticate to the Token Endpoint using the authentication method registered for its <code>client_id</code>, as documented in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication\">Section 9</a>. The Client sends the parameters via HTTP <code>POST</code> to the Token Endpoint using Form Serialization, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#FormSerialization\">Section 13.2</a>.</p>\n<p>The following is a non-normative example of a Refresh Request (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">POST &#x2F;token HTTP&#x2F;1.1\nHost: server.example.com\nContent-Type: application&#x2F;x-www-form-urlencoded\n\nclient_id&#x3D;s6BhdRkqt3\n  &amp;client_secret&#x3D;some_secret12345\n  &amp;grant_type&#x3D;refresh_token\n  &amp;refresh_token&#x3D;8xLOxBtZp8\n  &amp;scope&#x3D;openid%20profile<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>The Authorization Server MUST validate the Refresh Token, MUST verify that it was issued to the Client, and must verify that the Client successfully authenticated it has a Client Authentication method.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"12-2-Successful-Refresh-Response\"><a href=\"#12-2-Successful-Refresh-Response\" class=\"headerlink\" title=\"12.2. Successful Refresh Response\"></a>12.2. Successful Refresh Response</h3><p>Upon successful validation of the Refresh Token, the response body is the Token Response of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#TokenResponse\">Section 3.1.3.3</a> except that it might not contain an <code>id_token</code>.</p>\n<p>If an ID Token is returned as a result of a token refresh request, the following requirements apply:</p>\n<ul>\n<li>its <code>iss</code> Claim Value MUST be the same as in the ID Token issued when the original authentication occurred,</li>\n<li>its <code>sub</code> Claim Value MUST be the same as in the ID Token issued when the original authentication occurred,</li>\n<li>its <code>iat</code> Claim MUST represent the time that the new ID Token is issued,</li>\n<li>its <code>aud</code> Claim Value MUST be the same as in the ID Token issued when the original authentication occurred,</li>\n<li>if the ID Token contains an <code>auth_time</code> Claim, its value MUST represent the time of the original authentication - not the time that the new ID token is issued,</li>\n<li>its <code>azp</code> Claim Value MUST be the same as in the ID Token issued when the original authentication occurred; if no <code>azp</code> Claim was present in the original ID Token, one MUST NOT be present in the new ID Token, and</li>\n<li>otherwise, the same rules apply as apply when issuing an ID Token at the time of the original authentication.</li>\n</ul>\n<p>The following is a non-normative example of a Refresh Response:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">HTTP&#x2F;1.1 200 OK\nContent-Type: application&#x2F;json\nCache-Control: no-store\nPragma: no-cache\n\n&#123;\n &quot;access_token&quot;: &quot;TlBN45jURg&quot;,\n &quot;token_type&quot;: &quot;Bearer&quot;,\n &quot;refresh_token&quot;: &quot;9yNOxJtZa5&quot;,\n &quot;expires_in&quot;: 3600\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"12-3-Refresh-Error-Response\"><a href=\"#12-3-Refresh-Error-Response\" class=\"headerlink\" title=\"12.3. Refresh Error Response\"></a>12.3. Refresh Error Response</h3><p>If the Refresh Request is invalid or unauthorized, the Authorization Server returns the Token Error Response as defined in Section 5.2 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749].</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"13-Serializations\"><a href=\"#13-Serializations\" class=\"headerlink\" title=\"13. Serializations\"></a>13. Serializations</h3><p>Messages are serialized using one of the following methods:</p>\n<ol>\n<li>Query String Serialization</li>\n<li>Form Serialization</li>\n<li>JSON Serialization</li>\n</ol>\n<p>This section describes the syntax of these serialization methods; other sections describe when they can and must be used. Note that not all methods can be used for all messages.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"13-1-Query-String-Serialization\"><a href=\"#13-1-Query-String-Serialization\" class=\"headerlink\" title=\"13.1. Query String Serialization\"></a>13.1. Query String Serialization</h3><p>In order to serialize the parameters using the Query String Serialization, the Client constructs the string by adding the parameters and values to the query component of a URL using the <code>application/x-www-form-urlencoded</code> format as defined by [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#W3C.REC-html401-19991224\">W3C.REC‑html401‑19991224]</a>. Query String Serialization is typically used in HTTP <code>GET</code> requests. The same serialization method is also used when adding parameters to the fragment component of a URL.</p>\n<p>The following is a non-normative example of this serialization (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;authorize?\n  response_type&#x3D;code\n  &amp;scope&#x3D;openid\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb HTTP&#x2F;1.1\nHost: server.example.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"13-2-Form-Serialization\"><a href=\"#13-2-Form-Serialization\" class=\"headerlink\" title=\"13.2. Form Serialization\"></a>13.2. Form Serialization</h3><p>Parameters and their values are Form Serialized by adding the parameter names and values to the entity body of the HTTP request using the <code>application/x-www-form-urlencoded</code> format as defined by [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#W3C.REC-html401-19991224\">W3C.REC‑html401‑19991224]</a>. Form Serialization is typically used in HTTP <code>POST</code> requests.</p>\n<p>The following is a non-normative example of this serialization (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">POST &#x2F;authorize HTTP&#x2F;1.1\nHost: server.example.com\nContent-Type: application&#x2F;x-www-form-urlencoded\n\nresponse_type&#x3D;code\n  &amp;scope&#x3D;openid\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"13-3-JSON-Serialization\"><a href=\"#13-3-JSON-Serialization\" class=\"headerlink\" title=\"13.3. JSON Serialization\"></a>13.3. JSON Serialization</h3><p>The parameters are serialized into a JSON object structure by adding each parameter at the highest structure level. Parameter names and string values are represented as JSON strings. Numerical values are represented as JSON numbers. Boolean values are represented as JSON booleans. Omitted parameters and parameters with no value SHOULD be omitted from the object and not represented by a JSON <code>null</code> value, unless otherwise specified. A parameter MAY have a JSON object or a JSON array as its value.</p>\n<p>The following is a non-normative example of this serialization:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;access_token&quot;: &quot;SlAV32hkKG&quot;,\n &quot;token_type&quot;: &quot;Bearer&quot;,\n &quot;expires_in&quot;: 3600,\n &quot;refresh_token&quot;: &quot;8xLOxBtZp8&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"14-String-Operations\"><a href=\"#14-String-Operations\" class=\"headerlink\" title=\"14. String Operations\"></a>14. String Operations</h3><p>Processing some OpenID Connect messages requires comparing values in the messages to known values. For example, the Claim Names returned by the UserInfo Endpoint might be compared to specific Claim Names such as <code>sub</code>. Comparing Unicode strings, however, has significant security implications.</p>\n<p>Therefore, comparisons between JSON strings and other Unicode strings MUST be performed as specified below:</p>\n<ol>\n<li>Remove any JSON applied escaping to produce an array of Unicode code points.</li>\n<li>Unicode Normalization [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#USA15\">USA15]</a> MUST NOT be applied at any point to either the JSON string or to the string it is to be compared against.</li>\n<li>Comparisons between the two strings MUST be performed as a Unicode code point to code point equality comparison.</li>\n</ol>\n<p>In several places, this specification uses space delimited lists of strings. In all such cases, a single ASCII space character (0x20) MUST be used as the delimiter.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"15-Implementation-Considerations\"><a href=\"#15-Implementation-Considerations\" class=\"headerlink\" title=\"15. Implementation Considerations\"></a>15. Implementation Considerations</h3><p>This specification defines features used by both Relying Parties and OpenID Providers. It is expected that some OpenID Providers will require static, out-of-band configuration of RPs using them, whereas others will support dynamic usage by RPs without a pre-established relationship between them. For that reason, the mandatory-to-implement features for OPs are listed below in two groups: the first for all OPs and the second for “Dynamic” OpenID Providers.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"15-1-Mandatory-to-Implement-Features-for-All-OpenID-Providers\"><a href=\"#15-1-Mandatory-to-Implement-Features-for-All-OpenID-Providers\" class=\"headerlink\" title=\"15.1. Mandatory to Implement Features for All OpenID Providers\"></a>15.1. Mandatory to Implement Features for All OpenID Providers</h3><p>All OpenID Providers MUST implement the following features defined in this specification. This list augments the set of features that are already listed elsewhere as being “REQUIRED” or are described with a “MUST”, and so is not, by itself, a comprehensive set of implementation requirements for OPs.</p>\n<blockquote>\n<ul>\n<li><p>Signing ID Tokens with RSA SHA-256</p>\n<p>OPs MUST support signing ID Tokens with the RSA SHA-256 algorithm (an <code>alg</code> value of <code>RS256</code>), unless the OP only supports returning ID Tokens from the Token Endpoint (as is the case for the Authorization Code Flow) and only allows Clients to register specifying <code>none</code> as the requested ID Token signing algorithm.</p>\n</li>\n<li><p>Prompt Parameter</p>\n<p>OPs MUST support the <code>prompt</code> parameter, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a>, including the specified user interface behaviors such as <code>none</code> and <code>login</code>.</p>\n</li>\n<li><p>Display Parameter</p>\n<p>OPs MUST support the <code>display</code> parameter, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a>. (Note that the minimum level of support required for this parameter is simply that its use must not result in an error.)</p>\n</li>\n<li><p>Preferred Locales</p>\n<p>OPs MUST support requests for preferred languages and scripts for the user interface and for Claims via the <code>ui_locales</code> and <code>claims_locales</code> request parameters, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a>. (Note that the minimum level of support required for these parameters is simply to have their use not result in errors.)</p>\n</li>\n<li><p>Authentication Time</p>\n<p>OPs MUST support returning the time at which the End-User authenticated via the <code>auth_time</code> Claim, when requested, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a>.</p>\n</li>\n<li><p>Maximum Authentication Age</p>\n<p>OPs MUST support enforcing a maximum authentication age via the <code>max_age</code> parameter, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a>.</p>\n</li>\n<li><p>Authentication Context Class Reference</p>\n<p>OPs MUST support requests for specific Authentication Context Class Reference values via the <code>acr_values</code> parameter, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a>. (Note that the minimum level of support required for this parameter is simply to have its use not result in an error.)</p>\n</li>\n</ul>\n</blockquote>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"15-2-Mandatory-to-Implement-Features-for-Dynamic-OpenID-Providers\"><a href=\"#15-2-Mandatory-to-Implement-Features-for-Dynamic-OpenID-Providers\" class=\"headerlink\" title=\"15.2. Mandatory to Implement Features for Dynamic OpenID Providers\"></a>15.2. Mandatory to Implement Features for Dynamic OpenID Providers</h3><p>In addition to the features listed above, OpenID Providers supporting dynamic establishment of relationships with RPs that they do not have a pre-configured relationship with MUST also implement the following features defined in this and related specifications.</p>\n<blockquote>\n<ul>\n<li><p>Response Types</p>\n<p>These OpenID Providers MUST support the <code>id_token</code> Response Type and all that are not Self-Issued OPs MUST also support the <code>code</code> and <code>id_token token</code> Response Types.</p>\n</li>\n<li><p>Discovery</p>\n<p>These OPs MUST support Discovery, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Discovery\">OpenID Connect Discovery 1.0</a> [OpenID.Discovery].</p>\n</li>\n<li><p>Dynamic Registration</p>\n<p>These OPs MUST support Dynamic Client Registration, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration\">OpenID Connect Dynamic Client Registration 1.0</a> [OpenID.Registration].</p>\n</li>\n<li><p>UserInfo Endpoint</p>\n<p>All dynamic OPs that issue Access Tokens MUST support the UserInfo Endpoint, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#UserInfo\">Section 5.3</a>. (Self-Issued OPs do not issue Access Tokens.)</p>\n</li>\n<li><p>Public Keys Published as Bare Keys</p>\n<p>These OPs MUST publish their public keys as bare JWK keys (which MAY also be accompanied by X.509 representations of those keys).</p>\n</li>\n<li><p>Request URI</p>\n<p>These OPs MUST support requests made using a Request Object value that is retrieved from a Request URI that is provided with the <code>request_uri</code> parameter, as defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a>.</p>\n</li>\n</ul>\n</blockquote>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"15-3-Discovery-and-Registration\"><a href=\"#15-3-Discovery-and-Registration\" class=\"headerlink\" title=\"15.3. Discovery and Registration\"></a>15.3. Discovery and Registration</h3><p>Some OpenID Connect installations can use a pre-configured set of OpenID Providers and&#x2F;or Relying Parties. In those cases, it might not be necessary to support dynamic discovery of information about identities or services or dynamic registration of Clients.</p>\n<p>However, if installations choose to support unanticipated interactions between Relying Parties and OpenID Providers that do not have pre-configured relationships, they SHOULD accomplish this by implementing the facilities defined in the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Discovery\">OpenID Connect Discovery 1.0</a> [OpenID.Discovery] and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration\">OpenID Connect Dynamic Client Registration 1.0</a> [OpenID.Registration] specifications.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"15-4-Mandatory-to-Implement-Features-for-Relying-Parties\"><a href=\"#15-4-Mandatory-to-Implement-Features-for-Relying-Parties\" class=\"headerlink\" title=\"15.4. Mandatory to Implement Features for Relying Parties\"></a>15.4. Mandatory to Implement Features for Relying Parties</h3><p>In general, it is up to Relying Parties which features they use when interacting with OpenID Providers. However, some choices are dictated by the nature of their OAuth Client, such as whether it is a Confidential Client, capable of keeping secrets, in which case the Authorization Code Flow may be appropriate, or whether it is a Public Client, for instance, a User Agent Based Application or a statically registered Native Application, in which case the Implicit Flow may be appropriate.</p>\n<p>When using OpenID Connect features, those listed as being “REQUIRED” or are described with a “MUST” are mandatory to implement, when used by a Relying Party. Likewise, those features that are described as “OPTIONAL” need not be used or supported unless they provide value in the particular application context. Finally, when interacting with OpenID Providers that support Discovery, the OP’s Discovery document can be used to dynamically determine which OP features are available for use by the RP.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"15-5-Implementation-Notes\"><a href=\"#15-5-Implementation-Notes\" class=\"headerlink\" title=\"15.5. Implementation Notes\"></a>15.5. Implementation Notes</h3><hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"15-5-1-Authorization-Code-Implementation-Notes\"><a href=\"#15-5-1-Authorization-Code-Implementation-Notes\" class=\"headerlink\" title=\"15.5.1. Authorization Code Implementation Notes\"></a>15.5.1. Authorization Code Implementation Notes</h3><p>When using the Authorization Code or Hybrid flows, an ID Token is returned from the Token Endpoint in response to a Token Request using an Authorization Code. Some implementations may choose to encode state about the ID Token to be returned in the Authorization Code value. Others may use the Authorization Code value as an index into a database storing this state.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"15-5-2-Nonce-Implementation-Notes\"><a href=\"#15-5-2-Nonce-Implementation-Notes\" class=\"headerlink\" title=\"15.5.2. Nonce Implementation Notes\"></a>15.5.2. Nonce Implementation Notes</h3><p>The <code>nonce</code> parameter value needs to include per-session state and be unguessable to attackers. One method to achieve this for Web Server Clients is to store a cryptographically random value as an HttpOnly session cookie and use a cryptographic hash of the value as the <code>nonce</code> parameter. In that case, the <code>nonce</code> in the returned ID Token is compared to the hash of the session cookie to detect ID Token replay by third parties. A related method applicable to JavaScript Clients is to store the cryptographically random value in HTML5 local storage and use a cryptographic hash of this value.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"15-5-3-Redirect-URI-Fragment-Handling-Implementation-Notes\"><a href=\"#15-5-3-Redirect-URI-Fragment-Handling-Implementation-Notes\" class=\"headerlink\" title=\"15.5.3. Redirect URI Fragment Handling Implementation Notes\"></a>15.5.3. Redirect URI Fragment Handling Implementation Notes</h3><p>When response parameters are returned in the Redirection URI fragment value, the Client needs to have the User Agent parse the fragment encoded values and pass them to on to the Client’s processing logic for consumption. User Agents that have direct access to cryptographic APIs may be able to be self-contained, for instance, with all Client code being written in JavaScript.</p>\n<p>However, if the Client does not run entirely in the User Agent, one way to achieve this is to post them to a Web Server Client for validation.</p>\n<p>The following is an example of a JavaScript file that a Client might host at its <code>redirect_uri</code>. This is loaded by the redirect from the Authorization Server. The fragment component is parsed and then sent by <code>POST</code> to a URI that will validate and use the information received.</p>\n<p>Following is a non-normative example of a Redirect URI response:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;cb HTTP&#x2F;1.1\nHost: client.example.org\n\nHTTP&#x2F;1.1 200 OK\nContent-Type: text&#x2F;html\n\n&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;\n\n&#x2F;&#x2F; First, parse the query string\nvar params &#x3D; &#123;&#125;, postBody &#x3D; location.hash.substring(1),\n    regex &#x3D; &#x2F;([^&amp;&#x3D;]+)&#x3D;([^&amp;]*)&#x2F;g, m;\nwhile (m &#x3D; regex.exec(postBody)) &#123;\n  params[decodeURIComponent(m[1])] &#x3D; decodeURIComponent(m[2]);\n&#125;\n\n&#x2F;&#x2F; And send the token over to the server\nvar req &#x3D; new XMLHttpRequest();\n&#x2F;&#x2F; using POST so query isn&#39;t logged\nreq.open(&#39;POST&#39;, &#39;https:&#x2F;&#x2F;&#39; + window.location.host +\n                 &#39;&#x2F;catch_response&#39;, true);\nreq.setRequestHeader(&#39;Content-Type&#39;,\n                     &#39;application&#x2F;x-www-form-urlencoded&#39;);\n\nreq.onreadystatechange &#x3D; function (e) &#123;\n  if (req.readyState &#x3D;&#x3D; 4) &#123;\n    if (req.status &#x3D;&#x3D; 200) &#123;\n&#x2F;&#x2F; If the response from the POST is 200 OK, perform a redirect\n      window.location &#x3D; &#39;https:&#x2F;&#x2F;&#39;\n        + window.location.host + &#39;&#x2F;redirect_after_login&#39;\n    &#125;\n&#x2F;&#x2F; if the OAuth response is invalid, generate an error message\n    else if (req.status &#x3D;&#x3D; 400) &#123;\n      alert(&#39;There was an error processing the token&#39;)\n    &#125; else &#123;\n      alert(&#39;Something other than 200 was returned&#39;)\n    &#125;\n  &#125;\n&#125;;\nreq.send(postBody);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"15-6-Compatibility-Notes\"><a href=\"#15-6-Compatibility-Notes\" class=\"headerlink\" title=\"15.6. Compatibility Notes\"></a>15.6. Compatibility Notes</h3><hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"15-6-1-Pre-Final-IETF-Specifications\"><a href=\"#15-6-1-Pre-Final-IETF-Specifications\" class=\"headerlink\" title=\"15.6.1. Pre-Final IETF Specifications\"></a>15.6.1. Pre-Final IETF Specifications</h3><p>Implementers should be aware that this specification uses several IETF specifications that are not yet final specifications. Those specifications are:</p>\n<ul>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JSON Web Token (JWT) draft -25</a> [JWT]</li>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWS\">JSON Web Signature (JWS) draft -31</a> [JWS]</li>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWE\">JSON Web Encryption (JWE) draft -31</a> [JWE]</li>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWK\">JSON Web Key (JWK) draft -31</a> [JWK]</li>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWA\">JSON Web Algorithms draft -31</a> [JWA]</li>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Assertions\">Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants draft -17</a> [OAuth.Assertions]</li>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.JWT\">JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants draft -10</a> [OAuth.JWT]</li>\n</ul>\n<p>While every effort will be made to prevent breaking changes to these specifications, should they occur, OpenID Connect implementations should continue to use the specifically referenced draft versions above in preference to the final versions, unless using a possible future OpenID Connect profile or specification that updates some or all of these references.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"15-6-2-Google-“iss”-Value\"><a href=\"#15-6-2-Google-“iss”-Value\" class=\"headerlink\" title=\"15.6.2. Google “iss” Value\"></a>15.6.2. Google “iss” Value</h3><p>Implementers may want to be aware that, as of the time of this writing, Google’s deployed OpenID Connect implementation issues ID Tokens that omit the required <code>https://</code> scheme prefix from the <code>iss</code> (issuer) Claim Value. Relying Party implementations wishing to work with Google will therefore need to have code to work around this, until such time as their implementation is updated. Any such workaround code should be written in a manner that will not break at such point Google adds the missing prefix to their issuer values.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"15-7-Related-Specifications-and-Implementer’s-Guides\"><a href=\"#15-7-Related-Specifications-and-Implementer’s-Guides\" class=\"headerlink\" title=\"15.7. Related Specifications and Implementer’s Guides\"></a>15.7. Related Specifications and Implementer’s Guides</h3><p>These related OPTIONAL specifications MAY be used in combination with this specification to provide additional functionality:</p>\n<ul>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Discovery\">OpenID Connect Discovery 1.0</a> [OpenID.Discovery] - Defines how Relying Parties dynamically discover information about OpenID Providers</li>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Registration\">OpenID Connect Dynamic Client Registration 1.0</a> [OpenID.Registration] - Defines how Relying Parties dynamically register with OpenID Providers</li>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Session\">OpenID Connect Session Management 1.0</a> [OpenID.Session] - Defines how to manage OpenID Connect sessions, including logout functionality</li>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OAuth.Post\">OAuth 2.0 Form Post Response Mode</a> [OAuth.Post] - Defines how to return OAuth 2.0 Authorization Response parameters (including OpenID Connect Authentication Response parameters) using HTML form values that are auto-submitted by the User Agent using HTTP <code>POST</code></li>\n</ul>\n<p>These implementer’s guides are intended to serve as self-contained references for implementers of basic Web-based Relying Parties:</p>\n<ul>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Basic\">OpenID Connect Basic Client Implementer’s Guide 1.0</a> [OpenID.Basic] - Implementer’s guide containing a subset of this specification that is intended for use by basic Web-based Relying Parties using the OAuth Authorization Code Flow</li>\n<li><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.Implicit\">OpenID Connect Implicit Client Implementer’s Guide 1.0</a> [OpenID.Implicit] - Implementer’s guide containing a subset of this specification that is intended for use by basic Web-based Relying Parties using the OAuth Implicit Flow</li>\n</ul>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-Security-Considerations\"><a href=\"#16-Security-Considerations\" class=\"headerlink\" title=\"16. Security Considerations\"></a>16. Security Considerations</h3><p>This specification references the security considerations defined in Section 10 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749], and Section 5 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6750\">OAuth 2.0 Bearer Token Usage</a> [RFC6750]. Furthermore, the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6819\">OAuth 2.0 Threat Model and Security Considerations</a> [RFC6819] specification provides an extensive list of threats and controls that apply to this specification as well, given that it is based upon OAuth 2.0. <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ISO29115\">ISO&#x2F;IEC 29115</a> [ISO29115] also provides threats and controls that implementers need to take into account. Implementers are highly advised to read these references in detail and apply the countermeasures described therein.</p>\n<p>In addition, the following list of attack vectors and remedies are also considered.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-1-Request-Disclosure\"><a href=\"#16-1-Request-Disclosure\" class=\"headerlink\" title=\"16.1. Request Disclosure\"></a>16.1. Request Disclosure</h3><p>If appropriate measures are not taken, a request might be disclosed to an attacker, posing security and privacy threats.</p>\n<p>In addition to what is stated in Section 5.1.1 of [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6819\">RFC6819]</a>, this standard provides a way to provide the confidentiality of the request end to end through the use of <code>request</code> or <code>request_uri</code> parameters, where the content of the <code>request</code> is an encrypted JWT with the appropriate key and cipher. This protects even against a compromised User Agent in the case of indirect request.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-2-Server-Masquerading\"><a href=\"#16-2-Server-Masquerading\" class=\"headerlink\" title=\"16.2. Server Masquerading\"></a>16.2. Server Masquerading</h3><p>A malicious Server might masquerade as the legitimate server using various means. To detect such an attack, the Client needs to authenticate the server.</p>\n<p>In addition to what is stated in Section 5.1.2 of [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6819\">RFC6819]</a>, this standard provides a way to authenticate the Server through either the use of Signed or Encrypted JWTs with an appropriate key and cipher.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-3-Token-Manufacture-x2F-Modification\"><a href=\"#16-3-Token-Manufacture-x2F-Modification\" class=\"headerlink\" title=\"16.3. Token Manufacture&#x2F;Modification\"></a>16.3. Token Manufacture&#x2F;Modification</h3><p>An Attacker might generate a bogus token or modify the token contents (such as Claims values or the signature) of an existing parseable token, causing the RP to grant inappropriate access to the Client. For example, an Attacker might modify the parseable token to extend the validity period; a Client might modify the parseable token to have access to information that they should not be able to view.</p>\n<p>There are two ways to mitigate this attack:</p>\n<ol>\n<li>The token can be digitally signed by the OP. The Relying Party SHOULD validate the digital signature to verify that it was issued by a legitimate OP.</li>\n<li>The token can be sent over a protected channel such as TLS. See <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#TLSRequirements\">Section 16.17</a> for more information on using TLS. In this specification, the token is always sent over a TLS protected channel. Note however, that this measure is only a defense against third party attackers and is not applicable to the case where the Client is the attacker.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-4-Access-Token-Disclosure\"><a href=\"#16-4-Access-Token-Disclosure\" class=\"headerlink\" title=\"16.4. Access Token Disclosure\"></a>16.4. Access Token Disclosure</h3><p>Access Tokens are credentials used to access Protected Resources, as defined in Section 1.4 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749]. Access Tokens represent an End-User’s authorization and MUST NOT be exposed to unauthorized parties.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-5-Server-Response-Disclosure\"><a href=\"#16-5-Server-Response-Disclosure\" class=\"headerlink\" title=\"16.5. Server Response Disclosure\"></a>16.5. Server Response Disclosure</h3><p>The server response might contain authentication data and Claims that include sensitive Client information. Disclosure of the response contents can make the Client vulnerable to other types of attacks.</p>\n<p>The server response disclosure can be mitigated in the following two ways:</p>\n<ol>\n<li>Using the <code>code</code> Response Type. The response is sent over a TLS protected channel, where the Client is authenticated by the <code>client_id</code> and <code>client_secret</code>.</li>\n<li>For other Response Types, the signed response can be encrypted with the Client’s public key or a shared secret as an encrypted JWT with an appropriate key and cipher.</li>\n</ol>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-6-Server-Response-Repudiation\"><a href=\"#16-6-Server-Response-Repudiation\" class=\"headerlink\" title=\"16.6. Server Response Repudiation\"></a>16.6. Server Response Repudiation</h3><p>A response might be repudiated by the server if the proper mechanisms are not in place. For example, if a Server does not digitally sign a response, the Server can claim that it was not generated through the services of the Server.</p>\n<p>To mitigate this threat, the response MAY be digitally signed by the Server using a key that supports non-repudiation. The Client SHOULD validate the digital signature to verify that it was issued by a legitimate Server and its integrity is intact.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-7-Request-Repudiation\"><a href=\"#16-7-Request-Repudiation\" class=\"headerlink\" title=\"16.7. Request Repudiation\"></a>16.7. Request Repudiation</h3><p>Since it is possible for a compromised or malicious Client to send a request to the wrong party, a Client that was authenticated using only a bearer token can repudiate any transaction.</p>\n<p>To mitigate this threat, the Server MAY require that the request be digitally signed by the Client using a key that supports non-repudiation. The Server SHOULD validate the digital signature to verify that it was issued by a legitimate Client and the integrity is intact.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-8-Access-Token-Redirect\"><a href=\"#16-8-Access-Token-Redirect\" class=\"headerlink\" title=\"16.8. Access Token Redirect\"></a>16.8. Access Token Redirect</h3><p>An Attacker uses the Access Token generated for one resource to obtain access to a second resource.</p>\n<p>To mitigate this threat, the Access Token SHOULD be audience and scope restricted. One way of implementing it is to include the identifier of the resource for whom it was generated as audience. The resource verifies that incoming tokens include its identifier as the audience of the token.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-9-Token-Reuse\"><a href=\"#16-9-Token-Reuse\" class=\"headerlink\" title=\"16.9. Token Reuse\"></a>16.9. Token Reuse</h3><p>An Attacker attempts to use a one-time use token such as an Authorization Code that has already been used once with the intended Resource. To mitigate this threat, the token SHOULD include a timestamp and a short validity lifetime. The Relying Party then checks the timestamp and lifetime values to ensure that the token is currently valid.</p>\n<p>Alternatively, the server MAY record the state of the use of the token and check the status for each request.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-10-Eavesdropping-or-Leaking-Authorization-Codes-Secondary-Authenticator-Capture\"><a href=\"#16-10-Eavesdropping-or-Leaking-Authorization-Codes-Secondary-Authenticator-Capture\" class=\"headerlink\" title=\"16.10. Eavesdropping or Leaking Authorization Codes (Secondary Authenticator Capture)\"></a>16.10. Eavesdropping or Leaking Authorization Codes (Secondary Authenticator Capture)</h3><p>In addition to the attack patterns described in Section 4.4.1.1 of [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6819\">RFC6819]</a>, an Authorization Code can be captured in the User Agent where the TLS session is terminated if the User Agent is infected by malware. However, capturing it is not useful as long as either Client Authentication or an encrypted response is used.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-11-Token-Substitution\"><a href=\"#16-11-Token-Substitution\" class=\"headerlink\" title=\"16.11. Token Substitution\"></a>16.11. Token Substitution</h3><p>Token Substitution is a class of attacks in which a malicious user swaps various tokens, including swapping an Authorization Code for a legitimate user with another token that the attacker has. One means of accomplishing this is for the attacker to copy a token out one session and use it in an HTTP message for a different session, which is easy to do when the token is available to the browser; this is known as the “cut and paste” attack.</p>\n<p>The Implicit Flow of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">OAuth 2.0</a> [RFC6749] is not designed to mitigate this risk. In Section 10.16, it normatively requires that any use of the authorization process as a form of delegated End-User authentication to the Client MUST NOT use the Implicit Flow without employing additional security mechanisms that enable the Client to determine whether the ID Token and Access Token were issued for its use.</p>\n<p>In OpenID Connect, this is mitigated through mechanisms provided through the ID Token. The ID Token is a signed security token that provides Claims such as <code>iss</code> (issuer), <code>sub</code> (subject), <code>aud</code> (audience), <code>azp</code> (authorized party), <code>at_hash</code> (access token hash), and <code>c_hash</code> (code hash). Using the ID Token, the Client is capable of detecting the Token Substitution Attack.</p>\n<p>The <code>c_hash</code> in the ID Token enables Clients to prevent Authorization Code substitution. The <code>at_hash</code> in the ID Token enables Clients to prevent Access Token substitution.</p>\n<p>Also, a malicious user may attempt to impersonate a more privileged user by subverting the communication channel between the Authorization Endpoint and Client, or the Token Endpoint and Client, for example by swapping the Authorization Code or reordering the messages, to convince the Token Endpoint that the attacker’s authorization grant corresponds to a grant sent on behalf of a more privileged user.</p>\n<p>For the HTTP binding defined by this specification, the responses to Token Requests are bound to the corresponding requests by message order in HTTP, as both the response containing the token and requests are protected by TLS, which will detect and prevent packet reordering.</p>\n<p>When designing another binding of this specification to a protocol incapable of strongly binding Token Endpoint requests to responses, additional mechanisms to address this issue MUST be utilized. One such mechanism could be to include an ID Token with a <code>c_hash</code> Claim in the token request and response.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-12-Timing-Attack\"><a href=\"#16-12-Timing-Attack\" class=\"headerlink\" title=\"16.12. Timing Attack\"></a>16.12. Timing Attack</h3><p>A timing attack enables the attacker to obtain an unnecessary large amount of information through the elapsed time differences in the code paths taken by successful and unsuccessful decryption operations or successful and unsuccessful signature validation of a message. It can be used to reduce the effective key length of the cipher used.</p>\n<p>Implementations SHOULD NOT terminate the validation process at the instant of the finding an error but SHOULD continue running until all the octets have been processed to avoid this attack.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-13-Other-Crypto-Related-Attacks\"><a href=\"#16-13-Other-Crypto-Related-Attacks\" class=\"headerlink\" title=\"16.13. Other Crypto Related Attacks\"></a>16.13. Other Crypto Related Attacks</h3><p>There are various crypto related attacks possible depending on the method used for encryption and signature &#x2F; integrity checking. Implementers need to consult the Security Considerations for the <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JWT</a> [JWT] specification and specifications that it references to avoid the vulnerabilities identified in these specifications.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-14-Signing-and-Encryption-Order\"><a href=\"#16-14-Signing-and-Encryption-Order\" class=\"headerlink\" title=\"16.14. Signing and Encryption Order\"></a>16.14. Signing and Encryption Order</h3><p>Signatures over encrypted text are not considered valid in many jurisdictions. Therefore, for integrity and non-repudiation, this specification requires signing the plain text JSON Claims, when signing is performed. If both signing and encryption are desired, it is performed on the JWS containing the signed Claims, with the result being a Nested JWT, as specified in [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JWT]</a>. Note that since all JWE encryption algorithms provide integrity protection, there is no need to separately sign the encrypted content.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-15-Issuer-Identifier\"><a href=\"#16-15-Issuer-Identifier\" class=\"headerlink\" title=\"16.15. Issuer Identifier\"></a>16.15. Issuer Identifier</h3><p>OpenID Connect supports multiple Issuers per Host and Port combination. The issuer returned by discovery MUST exactly match the value of <code>iss</code> in the ID Token.</p>\n<p>OpenID Connect treats the path component of any Issuer URI as being part of the Issuer Identifier. For instance, the subject “1234” with an Issuer Identifier of “<a href=\"https://example.com/\">https://example.com</a>“ is not equivalent to the subject “1234” with an Issuer Identifier of “<a href=\"https://example.com/sales\">https://example.com/sales</a>“.</p>\n<p>It is RECOMMENDED that only a single Issuer per host be used. However, if a host supports multiple tenants, multiple Issuers for that host may be needed.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-16-Implicit-Flow-Threats\"><a href=\"#16-16-Implicit-Flow-Threats\" class=\"headerlink\" title=\"16.16. Implicit Flow Threats\"></a>16.16. Implicit Flow Threats</h3><p>In the Implicit Flow, the Access Token is returned in the fragment component of the Client’s <code>redirect_uri</code> through HTTPS, thus it is protected between the OP and the User Agent, and between the User Agent and the RP. The only place it can be captured is the User Agent where the TLS session is terminated, which is possible if the User Agent is infected by malware or under the control of a malicious party.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-17-TLS-Requirements\"><a href=\"#16-17-TLS-Requirements\" class=\"headerlink\" title=\"16.17. TLS Requirements\"></a>16.17. TLS Requirements</h3><p>Implementations MUST support TLS. Which version(s) ought to be implemented will vary over time, and depend on the widespread deployment and known security vulnerabilities at the time of implementation. At the time of this writing, TLS version 1.2 [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC5246\">RFC5246]</a> is the most recent version, but has very limited actual deployment, and might not be readily available in implementation toolkits. TLS version 1.0 [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC2246\">RFC2246]</a> is the most widely deployed version, and will give the broadest interoperability.</p>\n<p>To protect against information disclosure and tampering, confidentiality protection MUST be applied using TLS with a ciphersuite that provides confidentiality and integrity protection.</p>\n<p>Whenever TLS is used, a TLS server certificate check MUST be performed, per <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6125\">RFC 6125</a> [RFC6125].</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-18-Lifetimes-of-Access-Tokens-and-Refresh-Tokens\"><a href=\"#16-18-Lifetimes-of-Access-Tokens-and-Refresh-Tokens\" class=\"headerlink\" title=\"16.18. Lifetimes of Access Tokens and Refresh Tokens\"></a>16.18. Lifetimes of Access Tokens and Refresh Tokens</h3><p>Access Tokens might not be revocable by the Authorization Server. Access Token lifetimes SHOULD therefore be kept to single use or very short lifetimes.</p>\n<p>If ongoing access to the UserInfo Endpoint or other Protected Resources is required, a Refresh Token can be used. The Client can then exchange the Refresh Token at the Token Endpoint for a fresh short-lived Access Token that can be used to access the resource.</p>\n<p>The Authorization Server SHOULD clearly identify long-term grants to the User during Authorization. The Authorization Server SHOULD provide a mechanism for the End-User to revoke Access Tokens and Refresh Tokens granted to a Client.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-19-Symmetric-Key-Entropy\"><a href=\"#16-19-Symmetric-Key-Entropy\" class=\"headerlink\" title=\"16.19. Symmetric Key Entropy\"></a>16.19. Symmetric Key Entropy</h3><p>In <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#Signing\">Section 10.1</a> and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#Encryption\">Section 10.2</a>, keys are derived from the <code>client_secret</code> value. Thus, when used with symmetric signing or encryption operations, <code>client_secret</code> values MUST contain sufficient entropy to generate cryptographically strong keys. Also, <code>client_secret</code> values MUST also contain at least the minimum of number of octets required for MAC keys for the particular algorithm used. So for instance, for <code>HS256</code>, the <code>client_secret</code> value MUST contain at least 32 octets (and almost certainly SHOULD contain more, since <code>client_secret</code> values are likely to use a restricted alphabet).</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-20-Need-for-Signed-Requests\"><a href=\"#16-20-Need-for-Signed-Requests\" class=\"headerlink\" title=\"16.20. Need for Signed Requests\"></a>16.20. Need for Signed Requests</h3><p>In some situations, Clients might need to use signed requests to ensure that the desired request parameters are delivered to the OP without having been tampered with. For instance, the <code>max_age</code> and <code>acr_values</code> provide more assurance about the nature of the authentication performed when delivered in signed requests.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"16-21-Need-for-Encrypted-Requests\"><a href=\"#16-21-Need-for-Encrypted-Requests\" class=\"headerlink\" title=\"16.21. Need for Encrypted Requests\"></a>16.21. Need for Encrypted Requests</h3><p>In some situations, knowing the contents of an OpenID Connect request can, in and of itself, reveal sensitive information about the End-User. For instance, knowing that the Client is requesting a particular Claim or that it is requesting that a particular authentication method be used can reveal sensitive information about the End-User. OpenID Connect enables requests to be encrypted to the OpenID Provider to prevent such potentially sensitive information from being revealed.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"17-Privacy-Considerations\"><a href=\"#17-Privacy-Considerations\" class=\"headerlink\" title=\"17. Privacy Considerations\"></a>17. Privacy Considerations</h3><hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"17-1-Personally-Identifiable-Information\"><a href=\"#17-1-Personally-Identifiable-Information\" class=\"headerlink\" title=\"17.1. Personally Identifiable Information\"></a>17.1. Personally Identifiable Information</h3><p>The UserInfo Response typically contains Personally Identifiable Information (PII). As such, End-User consent for the release of the information for the specified purpose should be obtained at or prior to the authorization time in accordance with relevant regulations. The purpose of use is typically registered in association with the <code>redirect_uris</code>.</p>\n<p>Only necessary UserInfo data should be stored at the Client and the Client SHOULD associate the received data with the purpose of use statement.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"17-2-Data-Access-Monitoring\"><a href=\"#17-2-Data-Access-Monitoring\" class=\"headerlink\" title=\"17.2. Data Access Monitoring\"></a>17.2. Data Access Monitoring</h3><p>The Resource Server SHOULD make End-Users’ UserInfo access logs available to them so that they can monitor who accessed their data.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"17-3-Correlation\"><a href=\"#17-3-Correlation\" class=\"headerlink\" title=\"17.3. Correlation\"></a>17.3. Correlation</h3><p>To protect the End-User from a possible correlation among Clients, the use of a Pairwise Pseudonymous Identifier (PPID) as the <code>sub</code> (subject) SHOULD be considered.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"17-4-Offline-Access\"><a href=\"#17-4-Offline-Access\" class=\"headerlink\" title=\"17.4. Offline Access\"></a>17.4. Offline Access</h3><p>Offline access enables access to Claims when the user is not present, posing greater privacy risk than the Claims transfer when the user is present. Therefore, it is prudent to obtain explicit consent for offline access to resources. This specification mandates the use of the <code>prompt</code> parameter to obtain consent unless it is already known that the request complies with the conditions for processing the request in each jurisdiction.</p>\n<p>When an Access Token is returned via the User Agent using the Implicit Flow or Hybrid Flow, there is a greater risk of it being exposed to an attacker, who could later use it to access the UserInfo endpoint. If the Access Token does not enable offline access and the server can differentiate whether the Client request has been made offline or online, the risk will be substantially reduced. Therefore, this specification mandates ignoring the offline access request when the Access Token is transmitted through the User Agent. Note that differentiating between online and offline access from the server can be difficult especially for native clients. The server may well have to rely on heuristics. Also, the risk of exposure for the Access Token delivered through the User Agent for the Response Types of <code>code token</code> and <code>token</code> is the same. Thus, the implementations should be prepared to detect whether the Access Token was issued through the User Agent or directly from the Token Endpoint and deny offline access if the token was issued through the User Agent.</p>\n<p>Note that although these provisions require an explicit consent dialogue through the <code>prompt</code> parameter, the mere fact that the user pressed an “accept” button etc., might not constitute a valid consent. Developers should be aware that for the act of consent to be valid, typically, the impact of the terms have to be understood by the End-User, the consent must be freely given and not forced (i.e., other options have to be available), and the terms must fair and equitable. In general, it is advisable for the service to follow the required privacy principles in each jurisdiction and rely on other conditions for processing the request than simply explicit consent, as online self-service “explicit consent” often does not form a valid consent in some jurisdictions.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"18-IANA-Considerations\"><a href=\"#18-IANA-Considerations\" class=\"headerlink\" title=\"18. IANA Considerations\"></a>18. IANA Considerations</h3><hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"18-1-JSON-Web-Token-Claims-Registration\"><a href=\"#18-1-JSON-Web-Token-Claims-Registration\" class=\"headerlink\" title=\"18.1. JSON Web Token Claims Registration\"></a>18.1. JSON Web Token Claims Registration</h3><p>This specification registers the Claims defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> and <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a> in the IANA JSON Web Token Claims registry defined in [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWT\">JWT]</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"18-1-1-Registry-Contents\"><a href=\"#18-1-1-Registry-Contents\" class=\"headerlink\" title=\"18.1.1. Registry Contents\"></a>18.1.1. Registry Contents</h3><ul>\n<li><p>Claim Name: <code>name</code></p>\n</li>\n<li><p>Claim Description: Full name</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#112;&#x65;&#110;&#x69;&#x64;&#45;&#115;&#112;&#x65;&#99;&#x73;&#45;&#97;&#98;&#x40;&#x6c;&#x69;&#x73;&#116;&#115;&#46;&#x6f;&#x70;&#101;&#x6e;&#105;&#100;&#x2e;&#x6e;&#101;&#x74;\">&#111;&#112;&#x65;&#110;&#x69;&#x64;&#45;&#115;&#112;&#x65;&#99;&#x73;&#45;&#97;&#98;&#x40;&#x6c;&#x69;&#x73;&#116;&#115;&#46;&#x6f;&#x70;&#101;&#x6e;&#105;&#100;&#x2e;&#x6e;&#101;&#x74;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>given_name</code></p>\n</li>\n<li><p>Claim Description: Given name(s) or first name(s)</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#101;&#110;&#105;&#100;&#x2d;&#x73;&#x70;&#101;&#99;&#x73;&#45;&#x61;&#98;&#x40;&#x6c;&#105;&#115;&#x74;&#115;&#x2e;&#x6f;&#112;&#x65;&#x6e;&#105;&#x64;&#x2e;&#x6e;&#101;&#116;\">&#x6f;&#x70;&#101;&#110;&#105;&#100;&#x2d;&#x73;&#x70;&#101;&#99;&#x73;&#45;&#x61;&#98;&#x40;&#x6c;&#105;&#115;&#x74;&#115;&#x2e;&#x6f;&#112;&#x65;&#x6e;&#105;&#x64;&#x2e;&#x6e;&#101;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>family_name</code></p>\n</li>\n<li><p>Claim Description: Surname(s) or last name(s)</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#x70;&#x65;&#110;&#105;&#x64;&#45;&#115;&#x70;&#101;&#x63;&#115;&#x2d;&#x61;&#98;&#x40;&#x6c;&#105;&#115;&#x74;&#x73;&#x2e;&#111;&#x70;&#x65;&#110;&#105;&#x64;&#x2e;&#110;&#101;&#x74;\">&#111;&#x70;&#x65;&#110;&#105;&#x64;&#45;&#115;&#x70;&#101;&#x63;&#115;&#x2d;&#x61;&#98;&#x40;&#x6c;&#105;&#115;&#x74;&#x73;&#x2e;&#111;&#x70;&#x65;&#110;&#105;&#x64;&#x2e;&#110;&#101;&#x74;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>middle_name</code></p>\n</li>\n<li><p>Claim Description: Middle name(s)</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#101;&#x6e;&#105;&#100;&#x2d;&#115;&#x70;&#101;&#99;&#115;&#45;&#97;&#x62;&#x40;&#x6c;&#105;&#115;&#x74;&#x73;&#46;&#x6f;&#x70;&#101;&#110;&#105;&#100;&#46;&#x6e;&#x65;&#x74;\">&#x6f;&#x70;&#101;&#x6e;&#105;&#100;&#x2d;&#115;&#x70;&#101;&#99;&#115;&#45;&#97;&#x62;&#x40;&#x6c;&#105;&#115;&#x74;&#x73;&#46;&#x6f;&#x70;&#101;&#110;&#105;&#100;&#46;&#x6e;&#x65;&#x74;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>nickname</code></p>\n</li>\n<li><p>Claim Description: Casual name</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#x70;&#101;&#x6e;&#105;&#x64;&#x2d;&#115;&#x70;&#x65;&#99;&#x73;&#45;&#97;&#98;&#x40;&#x6c;&#105;&#115;&#116;&#x73;&#46;&#x6f;&#112;&#101;&#110;&#x69;&#x64;&#46;&#110;&#101;&#116;\">&#111;&#x70;&#101;&#x6e;&#105;&#x64;&#x2d;&#115;&#x70;&#x65;&#99;&#x73;&#45;&#97;&#98;&#x40;&#x6c;&#105;&#115;&#116;&#x73;&#46;&#x6f;&#112;&#101;&#110;&#x69;&#x64;&#46;&#110;&#101;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>preferred_username</code></p>\n</li>\n<li><p>Claim Description: Shorthand name by which the End-User wishes to be referred to</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#112;&#101;&#110;&#105;&#x64;&#45;&#x73;&#112;&#x65;&#99;&#115;&#45;&#x61;&#x62;&#x40;&#x6c;&#105;&#x73;&#116;&#x73;&#x2e;&#x6f;&#x70;&#x65;&#110;&#105;&#100;&#x2e;&#110;&#101;&#116;\">&#111;&#112;&#101;&#110;&#105;&#x64;&#45;&#x73;&#112;&#x65;&#99;&#115;&#45;&#x61;&#x62;&#x40;&#x6c;&#105;&#x73;&#116;&#x73;&#x2e;&#x6f;&#x70;&#x65;&#110;&#105;&#100;&#x2e;&#110;&#101;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>profile</code></p>\n</li>\n<li><p>Claim Description: Profile page URL</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#x70;&#101;&#110;&#x69;&#100;&#x2d;&#115;&#x70;&#101;&#99;&#115;&#45;&#x61;&#98;&#x40;&#108;&#105;&#x73;&#116;&#x73;&#x2e;&#111;&#112;&#101;&#x6e;&#x69;&#100;&#46;&#110;&#101;&#116;\">&#111;&#x70;&#101;&#110;&#x69;&#100;&#x2d;&#115;&#x70;&#101;&#99;&#115;&#45;&#x61;&#98;&#x40;&#108;&#105;&#x73;&#116;&#x73;&#x2e;&#111;&#112;&#101;&#x6e;&#x69;&#100;&#46;&#110;&#101;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>picture</code></p>\n</li>\n<li><p>Claim Description: Profile picture URL</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#101;&#x6e;&#105;&#x64;&#45;&#115;&#x70;&#101;&#99;&#x73;&#45;&#x61;&#x62;&#x40;&#108;&#105;&#115;&#116;&#x73;&#46;&#x6f;&#x70;&#101;&#110;&#105;&#100;&#46;&#110;&#x65;&#116;\">&#x6f;&#112;&#101;&#x6e;&#105;&#x64;&#45;&#115;&#x70;&#101;&#99;&#x73;&#45;&#x61;&#x62;&#x40;&#108;&#105;&#115;&#116;&#x73;&#46;&#x6f;&#x70;&#101;&#110;&#105;&#100;&#46;&#110;&#x65;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>website</code></p>\n</li>\n<li><p>Claim Description: Web page or blog URL</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#101;&#x6e;&#x69;&#100;&#45;&#115;&#x70;&#101;&#99;&#x73;&#45;&#x61;&#x62;&#64;&#x6c;&#x69;&#115;&#x74;&#115;&#x2e;&#111;&#112;&#x65;&#110;&#x69;&#100;&#46;&#110;&#x65;&#116;\">&#x6f;&#x70;&#101;&#x6e;&#x69;&#100;&#45;&#115;&#x70;&#101;&#99;&#x73;&#45;&#x61;&#x62;&#64;&#x6c;&#x69;&#115;&#x74;&#115;&#x2e;&#111;&#112;&#x65;&#110;&#x69;&#100;&#46;&#110;&#x65;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>email</code></p>\n</li>\n<li><p>Claim Description: Preferred e-mail address</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#x65;&#x6e;&#105;&#x64;&#45;&#x73;&#112;&#x65;&#x63;&#115;&#x2d;&#97;&#98;&#x40;&#x6c;&#x69;&#x73;&#116;&#115;&#x2e;&#x6f;&#x70;&#x65;&#110;&#105;&#x64;&#x2e;&#x6e;&#x65;&#116;\">&#x6f;&#x70;&#x65;&#x6e;&#105;&#x64;&#45;&#x73;&#112;&#x65;&#x63;&#115;&#x2d;&#97;&#98;&#x40;&#x6c;&#x69;&#x73;&#116;&#115;&#x2e;&#x6f;&#x70;&#x65;&#110;&#105;&#x64;&#x2e;&#x6e;&#x65;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>email_verified</code></p>\n</li>\n<li><p>Claim Description: True if the e-mail address has been verified; otherwise false</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#x65;&#110;&#x69;&#100;&#45;&#x73;&#112;&#x65;&#99;&#x73;&#x2d;&#x61;&#x62;&#x40;&#x6c;&#x69;&#115;&#x74;&#115;&#46;&#111;&#112;&#101;&#110;&#x69;&#x64;&#x2e;&#x6e;&#101;&#116;\">&#x6f;&#112;&#x65;&#110;&#x69;&#100;&#45;&#x73;&#112;&#x65;&#99;&#x73;&#x2d;&#x61;&#x62;&#x40;&#x6c;&#x69;&#115;&#x74;&#115;&#46;&#111;&#112;&#101;&#110;&#x69;&#x64;&#x2e;&#x6e;&#101;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>gender</code></p>\n</li>\n<li><p>Claim Description: Gender</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#x65;&#110;&#x69;&#100;&#45;&#115;&#112;&#x65;&#x63;&#x73;&#x2d;&#97;&#x62;&#64;&#108;&#x69;&#115;&#116;&#115;&#x2e;&#111;&#112;&#x65;&#110;&#105;&#x64;&#x2e;&#x6e;&#101;&#116;\">&#x6f;&#112;&#x65;&#110;&#x69;&#100;&#45;&#115;&#112;&#x65;&#x63;&#x73;&#x2d;&#97;&#x62;&#64;&#108;&#x69;&#115;&#116;&#115;&#x2e;&#111;&#112;&#x65;&#110;&#105;&#x64;&#x2e;&#x6e;&#101;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>birthdate</code></p>\n</li>\n<li><p>Claim Description: Birthday</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#x70;&#101;&#110;&#x69;&#100;&#x2d;&#x73;&#x70;&#101;&#x63;&#115;&#x2d;&#x61;&#x62;&#x40;&#x6c;&#x69;&#115;&#x74;&#115;&#46;&#x6f;&#112;&#101;&#x6e;&#105;&#100;&#46;&#x6e;&#x65;&#116;\">&#111;&#x70;&#101;&#110;&#x69;&#100;&#x2d;&#x73;&#x70;&#101;&#x63;&#115;&#x2d;&#x61;&#x62;&#x40;&#x6c;&#x69;&#115;&#x74;&#115;&#46;&#x6f;&#112;&#101;&#x6e;&#105;&#100;&#46;&#x6e;&#x65;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>zoneinfo</code></p>\n</li>\n<li><p>Claim Description: Time zone</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#x70;&#101;&#110;&#105;&#x64;&#x2d;&#x73;&#112;&#101;&#x63;&#115;&#45;&#97;&#x62;&#x40;&#108;&#x69;&#x73;&#x74;&#115;&#46;&#111;&#112;&#x65;&#x6e;&#x69;&#100;&#x2e;&#110;&#101;&#116;\">&#111;&#x70;&#101;&#110;&#105;&#x64;&#x2d;&#x73;&#112;&#101;&#x63;&#115;&#45;&#97;&#x62;&#x40;&#108;&#x69;&#x73;&#x74;&#115;&#46;&#111;&#112;&#x65;&#x6e;&#x69;&#100;&#x2e;&#110;&#101;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>locale</code></p>\n</li>\n<li><p>Claim Description: Locale</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#x70;&#101;&#x6e;&#x69;&#100;&#x2d;&#115;&#112;&#101;&#x63;&#115;&#45;&#x61;&#98;&#x40;&#x6c;&#x69;&#x73;&#x74;&#115;&#x2e;&#x6f;&#x70;&#x65;&#x6e;&#105;&#100;&#x2e;&#110;&#x65;&#x74;\">&#111;&#x70;&#101;&#x6e;&#x69;&#100;&#x2d;&#115;&#112;&#101;&#x63;&#115;&#45;&#x61;&#98;&#x40;&#x6c;&#x69;&#x73;&#x74;&#115;&#x2e;&#x6f;&#x70;&#x65;&#x6e;&#105;&#100;&#x2e;&#110;&#x65;&#x74;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>phone_number</code></p>\n</li>\n<li><p>Claim Description: Preferred telephone number</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#112;&#101;&#x6e;&#x69;&#x64;&#45;&#x73;&#x70;&#x65;&#99;&#115;&#x2d;&#x61;&#x62;&#x40;&#x6c;&#105;&#x73;&#x74;&#x73;&#46;&#x6f;&#x70;&#x65;&#110;&#105;&#x64;&#x2e;&#x6e;&#101;&#116;\">&#111;&#112;&#101;&#x6e;&#x69;&#x64;&#45;&#x73;&#x70;&#x65;&#99;&#115;&#x2d;&#x61;&#x62;&#x40;&#x6c;&#105;&#x73;&#x74;&#x73;&#46;&#x6f;&#x70;&#x65;&#110;&#105;&#x64;&#x2e;&#x6e;&#101;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>phone_number_verified</code></p>\n</li>\n<li><p>Claim Description: True if the phone number has been verified; otherwise false</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#x65;&#x6e;&#x69;&#100;&#x2d;&#115;&#x70;&#101;&#x63;&#x73;&#x2d;&#x61;&#x62;&#64;&#x6c;&#105;&#115;&#x74;&#x73;&#x2e;&#111;&#x70;&#x65;&#110;&#x69;&#x64;&#x2e;&#x6e;&#x65;&#x74;\">&#x6f;&#112;&#x65;&#x6e;&#x69;&#100;&#x2d;&#115;&#x70;&#101;&#x63;&#x73;&#x2d;&#x61;&#x62;&#64;&#x6c;&#105;&#115;&#x74;&#x73;&#x2e;&#111;&#x70;&#x65;&#110;&#x69;&#x64;&#x2e;&#x6e;&#x65;&#x74;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>address</code></p>\n</li>\n<li><p>Claim Description: Preferred postal address</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#x70;&#101;&#110;&#105;&#100;&#x2d;&#x73;&#x70;&#101;&#x63;&#115;&#x2d;&#x61;&#98;&#x40;&#x6c;&#x69;&#x73;&#x74;&#115;&#x2e;&#x6f;&#112;&#x65;&#x6e;&#105;&#x64;&#x2e;&#110;&#101;&#x74;\">&#111;&#x70;&#101;&#110;&#105;&#100;&#x2d;&#x73;&#x70;&#101;&#x63;&#115;&#x2d;&#x61;&#98;&#x40;&#x6c;&#x69;&#x73;&#x74;&#115;&#x2e;&#x6f;&#112;&#x65;&#x6e;&#105;&#x64;&#x2e;&#110;&#101;&#x74;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>updated_at</code></p>\n</li>\n<li><p>Claim Description: Time the information was last updated</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#x65;&#x6e;&#105;&#100;&#x2d;&#x73;&#112;&#101;&#x63;&#115;&#45;&#97;&#x62;&#x40;&#x6c;&#105;&#x73;&#x74;&#x73;&#x2e;&#x6f;&#112;&#101;&#x6e;&#105;&#x64;&#46;&#x6e;&#x65;&#x74;\">&#x6f;&#112;&#x65;&#x6e;&#105;&#100;&#x2d;&#x73;&#112;&#101;&#x63;&#115;&#45;&#97;&#x62;&#x40;&#x6c;&#105;&#x73;&#x74;&#x73;&#x2e;&#x6f;&#112;&#101;&#x6e;&#105;&#x64;&#46;&#x6e;&#x65;&#x74;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">Section 5.1</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>azp</code></p>\n</li>\n<li><p>Claim Description: Authorized party - the party to which the ID Token was issued</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#x65;&#110;&#x69;&#100;&#x2d;&#115;&#x70;&#101;&#99;&#x73;&#45;&#x61;&#x62;&#64;&#x6c;&#x69;&#115;&#116;&#x73;&#x2e;&#111;&#x70;&#101;&#x6e;&#x69;&#x64;&#x2e;&#x6e;&#x65;&#116;\">&#x6f;&#112;&#x65;&#110;&#x69;&#100;&#x2d;&#115;&#x70;&#101;&#99;&#x73;&#45;&#x61;&#x62;&#64;&#x6c;&#x69;&#115;&#116;&#x73;&#x2e;&#111;&#x70;&#101;&#x6e;&#x69;&#x64;&#x2e;&#x6e;&#x65;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>nonce</code></p>\n</li>\n<li><p>Claim Description: Value used to associate a Client session with an ID Token</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#101;&#110;&#x69;&#x64;&#45;&#x73;&#x70;&#x65;&#99;&#115;&#x2d;&#x61;&#98;&#x40;&#x6c;&#105;&#115;&#116;&#115;&#46;&#111;&#x70;&#x65;&#x6e;&#105;&#x64;&#46;&#x6e;&#101;&#116;\">&#x6f;&#x70;&#101;&#110;&#x69;&#x64;&#45;&#x73;&#x70;&#x65;&#99;&#115;&#x2d;&#x61;&#98;&#x40;&#x6c;&#105;&#115;&#116;&#115;&#46;&#111;&#x70;&#x65;&#x6e;&#105;&#x64;&#46;&#x6e;&#101;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>auth_time</code></p>\n</li>\n<li><p>Claim Description: Time when the authentication occurred</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#x65;&#x6e;&#x69;&#100;&#45;&#115;&#112;&#x65;&#x63;&#x73;&#x2d;&#97;&#x62;&#x40;&#108;&#x69;&#x73;&#116;&#115;&#46;&#x6f;&#x70;&#x65;&#x6e;&#x69;&#100;&#x2e;&#110;&#101;&#x74;\">&#x6f;&#112;&#x65;&#x6e;&#x69;&#100;&#45;&#115;&#112;&#x65;&#x63;&#x73;&#x2d;&#97;&#x62;&#x40;&#108;&#x69;&#x73;&#116;&#115;&#46;&#x6f;&#x70;&#x65;&#x6e;&#x69;&#100;&#x2e;&#110;&#101;&#x74;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>at_hash</code></p>\n</li>\n<li><p>Claim Description: Access Token hash value</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#112;&#x65;&#110;&#105;&#x64;&#x2d;&#115;&#x70;&#101;&#x63;&#115;&#45;&#97;&#x62;&#64;&#x6c;&#x69;&#115;&#x74;&#x73;&#46;&#111;&#x70;&#x65;&#x6e;&#x69;&#x64;&#x2e;&#x6e;&#x65;&#x74;\">&#111;&#112;&#x65;&#110;&#105;&#x64;&#x2d;&#115;&#x70;&#101;&#x63;&#115;&#45;&#97;&#x62;&#64;&#x6c;&#x69;&#115;&#x74;&#x73;&#46;&#111;&#x70;&#x65;&#x6e;&#x69;&#x64;&#x2e;&#x6e;&#x65;&#x74;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>c_hash</code></p>\n</li>\n<li><p>Claim Description: Code hash value</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#101;&#110;&#x69;&#100;&#x2d;&#x73;&#x70;&#x65;&#99;&#x73;&#45;&#x61;&#98;&#64;&#x6c;&#x69;&#x73;&#116;&#x73;&#x2e;&#111;&#x70;&#x65;&#110;&#x69;&#100;&#46;&#x6e;&#101;&#x74;\">&#x6f;&#112;&#101;&#110;&#x69;&#100;&#x2d;&#x73;&#x70;&#x65;&#99;&#x73;&#45;&#x61;&#98;&#64;&#x6c;&#x69;&#x73;&#116;&#x73;&#x2e;&#111;&#x70;&#x65;&#110;&#x69;&#100;&#46;&#x6e;&#101;&#x74;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#HybridIDToken\">Section 3.3.2.11</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>acr</code></p>\n</li>\n<li><p>Claim Description: Authentication Context Class Reference</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#x65;&#110;&#105;&#x64;&#x2d;&#x73;&#112;&#x65;&#x63;&#x73;&#45;&#97;&#98;&#x40;&#x6c;&#x69;&#115;&#116;&#x73;&#46;&#111;&#x70;&#x65;&#110;&#105;&#100;&#x2e;&#x6e;&#101;&#116;\">&#x6f;&#112;&#x65;&#110;&#105;&#x64;&#x2d;&#x73;&#112;&#x65;&#x63;&#x73;&#45;&#97;&#98;&#x40;&#x6c;&#x69;&#115;&#116;&#x73;&#46;&#111;&#x70;&#x65;&#110;&#105;&#100;&#x2e;&#x6e;&#101;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>amr</code></p>\n</li>\n<li><p>Claim Description: Authentication Methods References</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#101;&#110;&#105;&#x64;&#45;&#x73;&#x70;&#101;&#99;&#115;&#45;&#97;&#x62;&#x40;&#x6c;&#x69;&#x73;&#x74;&#115;&#x2e;&#111;&#112;&#x65;&#110;&#105;&#x64;&#46;&#x6e;&#x65;&#116;\">&#x6f;&#112;&#101;&#110;&#105;&#x64;&#45;&#x73;&#x70;&#101;&#99;&#115;&#45;&#97;&#x62;&#x40;&#x6c;&#x69;&#x73;&#x74;&#115;&#x2e;&#111;&#112;&#x65;&#110;&#105;&#x64;&#46;&#x6e;&#x65;&#116;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDToken\">Section 2</a> of this document</p>\n</li>\n<li><p>Claim Name: <code>sub_jwk</code></p>\n</li>\n<li><p>Claim Description: Public key used to check the signature of an ID Token</p>\n</li>\n<li><p>Change Controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#x65;&#110;&#x69;&#100;&#x2d;&#x73;&#112;&#101;&#x63;&#x73;&#x2d;&#97;&#98;&#64;&#108;&#105;&#115;&#116;&#x73;&#x2e;&#111;&#112;&#x65;&#110;&#105;&#100;&#46;&#x6e;&#x65;&#x74;\">&#x6f;&#x70;&#x65;&#110;&#x69;&#100;&#x2d;&#x73;&#112;&#101;&#x63;&#x73;&#x2d;&#97;&#98;&#64;&#108;&#105;&#115;&#116;&#x73;&#x2e;&#111;&#112;&#x65;&#110;&#105;&#100;&#46;&#x6e;&#x65;&#x74;</a></p>\n</li>\n<li><p>Specification Document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#SelfIssuedResponse\">Section 7.4</a> of this document</p>\n</li>\n</ul>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"18-2-OAuth-Parameters-Registration\"><a href=\"#18-2-OAuth-Parameters-Registration\" class=\"headerlink\" title=\"18.2. OAuth Parameters Registration\"></a>18.2. OAuth Parameters Registration</h3><p>This specification registers the following parameters in the IANA OAuth Parameters registry defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">RFC 6749</a> [RFC6749].</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"18-2-1-Registry-Contents\"><a href=\"#18-2-1-Registry-Contents\" class=\"headerlink\" title=\"18.2.1. Registry Contents\"></a>18.2.1. Registry Contents</h3><ul>\n<li><p>Parameter name: <code>nonce</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Request</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#101;&#x6e;&#105;&#x64;&#x2d;&#x73;&#112;&#101;&#99;&#115;&#x2d;&#97;&#x62;&#x40;&#x6c;&#105;&#115;&#x74;&#x73;&#46;&#111;&#112;&#101;&#x6e;&#105;&#100;&#x2e;&#110;&#x65;&#116;\">&#x6f;&#112;&#101;&#x6e;&#105;&#x64;&#x2d;&#x73;&#112;&#101;&#99;&#115;&#x2d;&#97;&#x62;&#x40;&#x6c;&#105;&#115;&#x74;&#x73;&#46;&#111;&#112;&#101;&#x6e;&#105;&#100;&#x2e;&#110;&#x65;&#116;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n<li><p>Parameter name: <code>display</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Request</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#x65;&#x6e;&#105;&#x64;&#x2d;&#115;&#112;&#x65;&#99;&#x73;&#45;&#97;&#98;&#x40;&#x6c;&#105;&#x73;&#116;&#x73;&#46;&#x6f;&#x70;&#101;&#110;&#x69;&#100;&#46;&#110;&#x65;&#x74;\">&#x6f;&#112;&#x65;&#x6e;&#105;&#x64;&#x2d;&#115;&#112;&#x65;&#99;&#x73;&#45;&#97;&#98;&#x40;&#x6c;&#105;&#x73;&#116;&#x73;&#46;&#x6f;&#x70;&#101;&#110;&#x69;&#100;&#46;&#110;&#x65;&#x74;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n<li><p>Parameter name: <code>prompt</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Request</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#101;&#110;&#105;&#x64;&#45;&#115;&#112;&#101;&#x63;&#x73;&#45;&#x61;&#98;&#64;&#108;&#x69;&#x73;&#x74;&#115;&#x2e;&#111;&#112;&#101;&#x6e;&#105;&#100;&#46;&#110;&#x65;&#116;\">&#x6f;&#112;&#101;&#110;&#105;&#x64;&#45;&#115;&#112;&#101;&#x63;&#x73;&#45;&#x61;&#98;&#64;&#108;&#x69;&#x73;&#x74;&#115;&#x2e;&#111;&#112;&#101;&#x6e;&#105;&#100;&#46;&#110;&#x65;&#116;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n<li><p>Parameter name: <code>max_age</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Request</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#x65;&#110;&#105;&#x64;&#x2d;&#x73;&#112;&#x65;&#99;&#x73;&#x2d;&#97;&#x62;&#x40;&#108;&#105;&#115;&#116;&#x73;&#46;&#111;&#112;&#x65;&#110;&#105;&#100;&#46;&#110;&#101;&#116;\">&#x6f;&#x70;&#x65;&#110;&#105;&#x64;&#x2d;&#x73;&#112;&#x65;&#99;&#x73;&#x2d;&#97;&#x62;&#x40;&#108;&#105;&#115;&#116;&#x73;&#46;&#111;&#112;&#x65;&#110;&#105;&#100;&#46;&#110;&#101;&#116;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n<li><p>Parameter name: <code>ui_locales</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Request</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#x65;&#110;&#x69;&#x64;&#45;&#x73;&#112;&#x65;&#x63;&#115;&#45;&#97;&#98;&#64;&#108;&#105;&#115;&#116;&#115;&#46;&#x6f;&#112;&#101;&#110;&#105;&#100;&#46;&#x6e;&#x65;&#x74;\">&#x6f;&#112;&#x65;&#110;&#x69;&#x64;&#45;&#x73;&#112;&#x65;&#x63;&#115;&#45;&#97;&#98;&#64;&#108;&#105;&#115;&#116;&#115;&#46;&#x6f;&#112;&#101;&#110;&#105;&#100;&#46;&#x6e;&#x65;&#x74;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n<li><p>Parameter name: <code>claims_locales</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Request</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#101;&#x6e;&#x69;&#100;&#x2d;&#x73;&#x70;&#101;&#x63;&#115;&#45;&#x61;&#x62;&#x40;&#108;&#105;&#115;&#116;&#115;&#x2e;&#111;&#x70;&#x65;&#110;&#105;&#100;&#46;&#x6e;&#x65;&#x74;\">&#x6f;&#x70;&#101;&#x6e;&#x69;&#100;&#x2d;&#x73;&#x70;&#101;&#x63;&#115;&#45;&#x61;&#x62;&#x40;&#108;&#105;&#115;&#116;&#115;&#x2e;&#111;&#x70;&#x65;&#110;&#105;&#100;&#46;&#x6e;&#x65;&#x74;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts\">Section 5.2</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n<li><p>Parameter name: <code>id_token_hint</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Request</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#x65;&#110;&#x69;&#x64;&#45;&#x73;&#x70;&#101;&#99;&#x73;&#x2d;&#97;&#98;&#x40;&#108;&#x69;&#115;&#116;&#x73;&#x2e;&#x6f;&#x70;&#101;&#110;&#x69;&#x64;&#x2e;&#x6e;&#x65;&#116;\">&#x6f;&#x70;&#x65;&#110;&#x69;&#x64;&#45;&#x73;&#x70;&#101;&#99;&#x73;&#x2d;&#97;&#98;&#x40;&#108;&#x69;&#115;&#116;&#x73;&#x2e;&#x6f;&#x70;&#101;&#110;&#x69;&#x64;&#x2e;&#x6e;&#x65;&#116;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n<li><p>Parameter name: <code>login_hint</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Request</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#x65;&#x6e;&#x69;&#100;&#x2d;&#x73;&#112;&#x65;&#x63;&#x73;&#x2d;&#x61;&#x62;&#x40;&#108;&#105;&#115;&#x74;&#x73;&#46;&#111;&#x70;&#101;&#110;&#x69;&#100;&#x2e;&#110;&#101;&#x74;\">&#x6f;&#x70;&#x65;&#x6e;&#x69;&#100;&#x2d;&#x73;&#112;&#x65;&#x63;&#x73;&#x2d;&#x61;&#x62;&#x40;&#108;&#105;&#115;&#x74;&#x73;&#46;&#111;&#x70;&#101;&#110;&#x69;&#100;&#x2e;&#110;&#101;&#x74;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n<li><p>Parameter name: <code>acr_values</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Request</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#101;&#110;&#x69;&#x64;&#45;&#x73;&#112;&#x65;&#x63;&#115;&#x2d;&#97;&#98;&#x40;&#x6c;&#x69;&#x73;&#116;&#115;&#46;&#111;&#x70;&#x65;&#x6e;&#105;&#100;&#46;&#x6e;&#101;&#x74;\">&#x6f;&#x70;&#101;&#110;&#x69;&#x64;&#45;&#x73;&#112;&#x65;&#x63;&#115;&#x2d;&#97;&#98;&#x40;&#x6c;&#x69;&#x73;&#116;&#115;&#46;&#111;&#x70;&#x65;&#x6e;&#105;&#100;&#46;&#x6e;&#101;&#x74;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint\">Section 3.1.2</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n<li><p>Parameter name: <code>claims</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Request</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#x65;&#x6e;&#x69;&#100;&#45;&#115;&#x70;&#101;&#99;&#x73;&#45;&#x61;&#98;&#64;&#x6c;&#x69;&#115;&#x74;&#115;&#x2e;&#x6f;&#x70;&#101;&#x6e;&#x69;&#x64;&#46;&#x6e;&#x65;&#x74;\">&#x6f;&#x70;&#x65;&#x6e;&#x69;&#100;&#45;&#115;&#x70;&#101;&#99;&#x73;&#45;&#x61;&#98;&#64;&#x6c;&#x69;&#115;&#x74;&#115;&#x2e;&#x6f;&#x70;&#101;&#x6e;&#x69;&#x64;&#46;&#x6e;&#x65;&#x74;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter\">Section 5.5</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n<li><p>Parameter name: <code>registration</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Request</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#101;&#110;&#x69;&#100;&#45;&#115;&#112;&#x65;&#99;&#115;&#x2d;&#97;&#98;&#64;&#x6c;&#x69;&#115;&#116;&#115;&#x2e;&#x6f;&#112;&#101;&#110;&#x69;&#x64;&#x2e;&#x6e;&#101;&#x74;\">&#x6f;&#x70;&#101;&#110;&#x69;&#100;&#45;&#115;&#112;&#x65;&#99;&#115;&#x2d;&#97;&#98;&#64;&#x6c;&#x69;&#115;&#116;&#115;&#x2e;&#x6f;&#112;&#101;&#110;&#x69;&#x64;&#x2e;&#x6e;&#101;&#x74;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RegistrationParameter\">Section 7.2.1</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n<li><p>Parameter name: <code>request</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Request</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#101;&#110;&#x69;&#x64;&#x2d;&#x73;&#x70;&#101;&#99;&#115;&#45;&#x61;&#98;&#x40;&#108;&#105;&#115;&#x74;&#x73;&#x2e;&#111;&#112;&#101;&#110;&#x69;&#100;&#46;&#110;&#101;&#116;\">&#x6f;&#x70;&#101;&#110;&#x69;&#x64;&#x2d;&#x73;&#x70;&#101;&#99;&#115;&#45;&#x61;&#98;&#x40;&#108;&#105;&#115;&#x74;&#x73;&#x2e;&#111;&#112;&#101;&#110;&#x69;&#100;&#46;&#110;&#101;&#116;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWTRequests\">Section 6</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n<li><p>Parameter name: <code>request_uri</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Request</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#x65;&#x6e;&#x69;&#x64;&#45;&#x73;&#x70;&#x65;&#99;&#x73;&#45;&#97;&#x62;&#x40;&#x6c;&#x69;&#115;&#x74;&#x73;&#x2e;&#x6f;&#112;&#x65;&#x6e;&#105;&#x64;&#46;&#x6e;&#101;&#116;\">&#x6f;&#112;&#x65;&#x6e;&#x69;&#x64;&#45;&#x73;&#x70;&#x65;&#99;&#x73;&#45;&#97;&#x62;&#x40;&#x6c;&#x69;&#115;&#x74;&#x73;&#x2e;&#x6f;&#112;&#x65;&#x6e;&#105;&#x64;&#46;&#x6e;&#101;&#116;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWTRequests\">Section 6</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n<li><p>Parameter name: <code>id_token</code></p>\n</li>\n<li><p>Parameter usage location: Authorization Response, Access Token Response</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#x65;&#x6e;&#105;&#x64;&#x2d;&#115;&#112;&#x65;&#x63;&#x73;&#x2d;&#x61;&#x62;&#64;&#x6c;&#x69;&#115;&#116;&#x73;&#x2e;&#x6f;&#x70;&#101;&#x6e;&#105;&#x64;&#46;&#110;&#101;&#x74;\">&#x6f;&#112;&#x65;&#x6e;&#105;&#x64;&#x2d;&#115;&#112;&#x65;&#x63;&#x73;&#x2d;&#x61;&#x62;&#64;&#x6c;&#x69;&#115;&#116;&#x73;&#x2e;&#x6f;&#x70;&#101;&#x6e;&#105;&#x64;&#46;&#110;&#101;&#x74;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#TokenResponse\">Section 3.1.3.3</a> of this document</p>\n</li>\n<li><p>Related information: None</p>\n</li>\n</ul>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"18-3-OAuth-Extensions-Error-Registration\"><a href=\"#18-3-OAuth-Extensions-Error-Registration\" class=\"headerlink\" title=\"18.3. OAuth Extensions Error Registration\"></a>18.3. OAuth Extensions Error Registration</h3><p>This specification registers the following errors in the IANA OAuth Extensions Error registry defined in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RFC6749\">RFC 6749</a> [RFC6749].</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"18-3-1-Registry-Contents\"><a href=\"#18-3-1-Registry-Contents\" class=\"headerlink\" title=\"18.3.1. Registry Contents\"></a>18.3.1. Registry Contents</h3><ul>\n<li><p>Error name: <code>interaction_required</code></p>\n</li>\n<li><p>Error usage location: Authorization Endpoint</p>\n</li>\n<li><p>Related protocol extension: OpenID Connect</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#112;&#x65;&#110;&#x69;&#100;&#45;&#x73;&#x70;&#x65;&#99;&#x73;&#45;&#97;&#x62;&#64;&#108;&#x69;&#115;&#x74;&#x73;&#x2e;&#x6f;&#112;&#101;&#110;&#105;&#100;&#46;&#x6e;&#x65;&#116;\">&#111;&#112;&#x65;&#110;&#x69;&#100;&#45;&#x73;&#x70;&#x65;&#99;&#x73;&#45;&#97;&#x62;&#64;&#108;&#x69;&#115;&#x74;&#x73;&#x2e;&#x6f;&#112;&#101;&#110;&#105;&#100;&#46;&#x6e;&#x65;&#116;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthError\">Section 3.1.2.6</a> of this document</p>\n</li>\n<li><p>Error name: <code>login_required</code></p>\n</li>\n<li><p>Error usage location: Authorization Endpoint</p>\n</li>\n<li><p>Related protocol extension: OpenID Connect</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#x65;&#110;&#105;&#100;&#45;&#115;&#x70;&#101;&#99;&#x73;&#45;&#97;&#98;&#64;&#108;&#105;&#x73;&#116;&#115;&#46;&#111;&#x70;&#101;&#110;&#105;&#100;&#46;&#110;&#x65;&#116;\">&#x6f;&#x70;&#x65;&#110;&#105;&#100;&#45;&#115;&#x70;&#101;&#99;&#x73;&#45;&#97;&#98;&#64;&#108;&#105;&#x73;&#116;&#115;&#46;&#111;&#x70;&#101;&#110;&#105;&#100;&#46;&#110;&#x65;&#116;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthError\">Section 3.1.2.6</a> of this document</p>\n</li>\n<li><p>Error name: <code>account_selection_required</code></p>\n</li>\n<li><p>Error usage location: Authorization Endpoint</p>\n</li>\n<li><p>Related protocol extension: OpenID Connect</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#x70;&#101;&#110;&#x69;&#100;&#x2d;&#x73;&#112;&#x65;&#99;&#115;&#x2d;&#97;&#98;&#64;&#x6c;&#105;&#115;&#x74;&#x73;&#x2e;&#111;&#x70;&#x65;&#x6e;&#x69;&#100;&#x2e;&#110;&#x65;&#x74;\">&#111;&#x70;&#101;&#110;&#x69;&#100;&#x2d;&#x73;&#112;&#x65;&#99;&#115;&#x2d;&#97;&#98;&#64;&#x6c;&#105;&#115;&#x74;&#x73;&#x2e;&#111;&#x70;&#x65;&#x6e;&#x69;&#100;&#x2e;&#110;&#x65;&#x74;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthError\">Section 3.1.2.6</a> of this document</p>\n</li>\n<li><p>Error name: <code>consent_required</code></p>\n</li>\n<li><p>Error usage location: Authorization Endpoint</p>\n</li>\n<li><p>Related protocol extension: OpenID Connect</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#101;&#x6e;&#x69;&#100;&#x2d;&#115;&#x70;&#x65;&#99;&#115;&#x2d;&#97;&#98;&#x40;&#x6c;&#x69;&#115;&#116;&#x73;&#46;&#x6f;&#x70;&#x65;&#110;&#x69;&#100;&#x2e;&#110;&#x65;&#x74;\">&#x6f;&#112;&#101;&#x6e;&#x69;&#100;&#x2d;&#115;&#x70;&#x65;&#99;&#115;&#x2d;&#97;&#98;&#x40;&#x6c;&#x69;&#115;&#116;&#x73;&#46;&#x6f;&#x70;&#x65;&#110;&#x69;&#100;&#x2e;&#110;&#x65;&#x74;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthError\">Section 3.1.2.6</a> of this document</p>\n</li>\n<li><p>Error name: <code>invalid_request_uri</code></p>\n</li>\n<li><p>Error usage location: Authorization Endpoint</p>\n</li>\n<li><p>Related protocol extension: OpenID Connect</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#x70;&#x65;&#x6e;&#105;&#x64;&#45;&#115;&#112;&#x65;&#x63;&#x73;&#45;&#97;&#x62;&#x40;&#108;&#105;&#115;&#x74;&#115;&#46;&#x6f;&#112;&#101;&#110;&#105;&#100;&#46;&#x6e;&#x65;&#x74;\">&#111;&#x70;&#x65;&#x6e;&#105;&#x64;&#45;&#115;&#112;&#x65;&#x63;&#x73;&#45;&#97;&#x62;&#x40;&#108;&#105;&#115;&#x74;&#115;&#46;&#x6f;&#112;&#101;&#110;&#105;&#100;&#46;&#x6e;&#x65;&#x74;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthError\">Section 3.1.2.6</a> of this document</p>\n</li>\n<li><p>Error name: <code>invalid_request_object</code></p>\n</li>\n<li><p>Error usage location: Authorization Endpoint</p>\n</li>\n<li><p>Related protocol extension: OpenID Connect</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#112;&#x65;&#x6e;&#x69;&#100;&#x2d;&#x73;&#112;&#x65;&#x63;&#115;&#x2d;&#x61;&#x62;&#x40;&#x6c;&#105;&#x73;&#x74;&#115;&#46;&#x6f;&#112;&#101;&#x6e;&#105;&#100;&#46;&#x6e;&#101;&#116;\">&#111;&#112;&#x65;&#x6e;&#x69;&#100;&#x2d;&#x73;&#112;&#x65;&#x63;&#115;&#x2d;&#x61;&#x62;&#x40;&#x6c;&#105;&#x73;&#x74;&#115;&#46;&#x6f;&#112;&#101;&#x6e;&#105;&#100;&#46;&#x6e;&#101;&#116;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthError\">Section 3.1.2.6</a> of this document</p>\n</li>\n<li><p>Error name: <code>request_not_supported</code></p>\n</li>\n<li><p>Error usage location: Authorization Endpoint</p>\n</li>\n<li><p>Related protocol extension: OpenID Connect</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#112;&#101;&#x6e;&#x69;&#100;&#45;&#x73;&#112;&#x65;&#x63;&#115;&#45;&#97;&#98;&#64;&#x6c;&#x69;&#x73;&#x74;&#x73;&#x2e;&#x6f;&#112;&#101;&#x6e;&#105;&#100;&#46;&#110;&#101;&#116;\">&#x6f;&#112;&#101;&#x6e;&#x69;&#100;&#45;&#x73;&#112;&#x65;&#x63;&#115;&#45;&#97;&#98;&#64;&#x6c;&#x69;&#x73;&#x74;&#x73;&#x2e;&#x6f;&#112;&#101;&#x6e;&#105;&#100;&#46;&#110;&#101;&#116;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthError\">Section 3.1.2.6</a> of this document</p>\n</li>\n<li><p>Error name: <code>request_uri_not_supported</code></p>\n</li>\n<li><p>Error usage location: Authorization Endpoint</p>\n</li>\n<li><p>Related protocol extension: OpenID Connect</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#x6f;&#x70;&#x65;&#x6e;&#105;&#100;&#45;&#x73;&#112;&#101;&#x63;&#x73;&#x2d;&#97;&#x62;&#64;&#108;&#105;&#115;&#116;&#115;&#x2e;&#x6f;&#112;&#101;&#x6e;&#105;&#x64;&#46;&#x6e;&#101;&#x74;\">&#x6f;&#x70;&#x65;&#x6e;&#105;&#100;&#45;&#x73;&#112;&#101;&#x63;&#x73;&#x2d;&#97;&#x62;&#64;&#108;&#105;&#115;&#116;&#115;&#x2e;&#x6f;&#112;&#101;&#x6e;&#105;&#x64;&#46;&#x6e;&#101;&#x74;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthError\">Section 3.1.2.6</a> of this document</p>\n</li>\n<li><p>Error name: <code>registration_not_supported</code></p>\n</li>\n<li><p>Error usage location: Authorization Endpoint</p>\n</li>\n<li><p>Related protocol extension: OpenID Connect</p>\n</li>\n<li><p>Change controller: OpenID Foundation Artifact Binding Working Group - <a href=\"mailto:&#111;&#112;&#x65;&#110;&#105;&#100;&#x2d;&#115;&#112;&#101;&#99;&#x73;&#45;&#97;&#x62;&#64;&#x6c;&#x69;&#x73;&#x74;&#115;&#x2e;&#x6f;&#x70;&#101;&#110;&#105;&#100;&#46;&#x6e;&#101;&#x74;\">&#111;&#112;&#x65;&#110;&#105;&#100;&#x2d;&#115;&#112;&#101;&#99;&#x73;&#45;&#97;&#x62;&#64;&#x6c;&#x69;&#x73;&#x74;&#115;&#x2e;&#x6f;&#x70;&#101;&#110;&#105;&#100;&#46;&#x6e;&#101;&#x74;</a></p>\n</li>\n<li><p>Specification document(s): <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#AuthError\">Section 3.1.2.6</a> of this document</p>\n</li>\n</ul>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"19-References\"><a href=\"#19-References\" class=\"headerlink\" title=\"19. References\"></a>19. References</h3><hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"19-1-Normative-References\"><a href=\"#19-1-Normative-References\" class=\"headerlink\" title=\"19.1. Normative References\"></a>19.1. Normative References</h3><table>\n<thead>\n<tr>\n<th>[CORS]</th>\n<th>Opera Software ASA, “<a href=\"http://www.w3.org/TR/access-control/\">Cross-Origin Resource Sharing</a>,” July 2010.</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>[E.164]</td>\n<td>International Telecommunication Union, “<a href=\"http://www.itu.int/rec/T-REC-E.164-201011-I/en\">E.164: The international public telecommunication numbering plan</a>,” 2010.</td>\n</tr>\n<tr>\n<td>[IANA.Language]</td>\n<td>Internet Assigned Numbers Authority (IANA), “<a href=\"http://www.iana.org/assignments/language-subtag-registry\">Language Subtag Registry</a>,” 2005.</td>\n</tr>\n<tr>\n<td>[ISO29115]</td>\n<td>International Organization for Standardization, “<a href=\"http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=45138\">ISO&#x2F;IEC 29115:2013 – Information technology - Security techniques - Entity authentication assurance framework</a>,” ISO&#x2F;IEC 29115, March 2013.</td>\n</tr>\n<tr>\n<td>[ISO3166-1]</td>\n<td>International Organization for Standardization, “<a href=\"http://www.w3.org/WAI/ER/IG/ert/iso639.htm\">ISO 3166-1:1997. Codes for the representation of names of countries and their subdivisions – Part 1: Country codes</a>,” 1997.</td>\n</tr>\n<tr>\n<td>[ISO639-1]</td>\n<td>International Organization for Standardization, “ISO 639-1:2002. Codes for the representation of names of languages – Part 1: Alpha-2 code,” 2002.</td>\n</tr>\n<tr>\n<td>[ISO8601-2004]</td>\n<td>International Organization for Standardization, “ISO 8601:2004. Data elements and interchange formats - Information interchange - Representation of dates and times,” 2004.</td>\n</tr>\n<tr>\n<td>[JWA]</td>\n<td>Jones, M., “<a href=\"http://tools.ietf.org/html/draft-ietf-jose-json-web-algorithms\">JSON Web Algorithms (JWA)</a>,” draft-ietf-jose-json-web-algorithms (work in progress), July 2014 (<a href=\"http://tools.ietf.org/html/draft-ietf-jose-json-web-algorithms-31\">HTML</a>).</td>\n</tr>\n<tr>\n<td>[JWE]</td>\n<td>Jones, M., Rescorla, E., and J. Hildebrand, “<a href=\"http://tools.ietf.org/html/draft-ietf-jose-json-web-encryption\">JSON Web Encryption (JWE)</a>,” draft-ietf-jose-json-web-encryption (work in progress), July 2014 (<a href=\"http://tools.ietf.org/html/draft-ietf-jose-json-web-encryption-31\">HTML</a>).</td>\n</tr>\n<tr>\n<td>[JWK]</td>\n<td>Jones, M., “<a href=\"http://tools.ietf.org/html/draft-ietf-jose-json-web-key\">JSON Web Key (JWK)</a>,” draft-ietf-jose-json-web-key (work in progress), July 2014 (<a href=\"http://tools.ietf.org/html/draft-ietf-jose-json-web-key-31\">HTML</a>).</td>\n</tr>\n<tr>\n<td>[JWS]</td>\n<td>Jones, M., Bradley, J., and N. Sakimura, “<a href=\"http://tools.ietf.org/html/draft-ietf-jose-json-web-signature\">JSON Web Signature (JWS)</a>,” draft-ietf-jose-json-web-signature (work in progress), July 2014 (<a href=\"http://tools.ietf.org/html/draft-ietf-jose-json-web-signature-31\">HTML</a>).</td>\n</tr>\n<tr>\n<td>[JWT]</td>\n<td>Jones, M., Bradley, J., and N. Sakimura, “<a href=\"http://tools.ietf.org/html/draft-ietf-oauth-json-web-token\">JSON Web Token (JWT)</a>,” draft-ietf-oauth-json-web-token (work in progress), July 2014 (<a href=\"http://tools.ietf.org/html/draft-ietf-oauth-json-web-token-25\">HTML</a>).</td>\n</tr>\n<tr>\n<td>[OAuth.Assertions]</td>\n<td>Campbell, B., Mortimore, C., Jones, M., and Y. Goland, “<a href=\"http://tools.ietf.org/html/draft-ietf-oauth-assertions\">Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants</a>,” draft-ietf-oauth-assertions (work in progress), July 2014 (<a href=\"http://tools.ietf.org/html/draft-ietf-oauth-assertions-17\">HTML</a>).</td>\n</tr>\n<tr>\n<td>[OAuth.JWT]</td>\n<td>Jones, M., Campbell, B., and C. Mortimore, “<a href=\"http://tools.ietf.org/html/draft-ietf-oauth-jwt-bearer\">JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants</a>,” draft-ietf-oauth-jwt-bearer (work in progress), July 2014 (<a href=\"http://tools.ietf.org/html/draft-ietf-oauth-jwt-bearer-10\">HTML</a>).</td>\n</tr>\n<tr>\n<td>[OAuth.Responses]</td>\n<td>de Medeiros, B., Ed., Scurtescu, M., Tarjan, P., and M. Jones, “<a href=\"http://openid.net/specs/oauth-v2-multiple-response-types-1_0.html\">OAuth 2.0 Multiple Response Type Encoding Practices</a>,” February 2014.</td>\n</tr>\n<tr>\n<td>[OpenID.Discovery]</td>\n<td>Sakimura, N., Bradley, J., Jones, M., and E. Jay, “<a href=\"http://openid.net/specs/openid-connect-discovery-1_0.html\">OpenID Connect Discovery 1.0</a>,” November 2014.</td>\n</tr>\n<tr>\n<td>[OpenID.Registration]</td>\n<td>Sakimura, N., Bradley, J., and M. Jones, “<a href=\"http://openid.net/specs/openid-connect-registration-1_0.html\">OpenID Connect Dynamic Client Registration 1.0</a>,” November 2014.</td>\n</tr>\n<tr>\n<td>[RFC2119]</td>\n<td><a href=\"mailto:sob@harvard.edu\">Bradner, S.</a>, “<a href=\"http://tools.ietf.org/html/rfc2119\">Key words for use in RFCs to Indicate Requirement Levels</a>,” BCP 14, RFC 2119, March 1997 (<a href=\"http://www.rfc-editor.org/rfc/rfc2119.txt\">TXT</a>, <a href=\"http://xml.resource.org/public/rfc/html/rfc2119.html\">HTML</a>, <a href=\"http://xml.resource.org/public/rfc/xml/rfc2119.xml\">XML</a>).</td>\n</tr>\n<tr>\n<td>[RFC2246]</td>\n<td><a href=\"mailto:tdierks@certicom.com\">Dierks, T.</a> and <a href=\"mailto:callen@certicom.com\">C. Allen</a>, “<a href=\"http://tools.ietf.org/html/rfc2246\">The TLS Protocol Version 1.0</a>,” RFC 2246, January 1999 (<a href=\"http://www.rfc-editor.org/rfc/rfc2246.txt\">TXT</a>).</td>\n</tr>\n<tr>\n<td>[RFC2616]</td>\n<td><a href=\"mailto:fielding@ics.uci.edu\">Fielding, R.</a>, <a href=\"mailto:jg@w3.org\">Gettys, J.</a>, <a href=\"mailto:mogul@wrl.dec.com\">Mogul, J.</a>, <a href=\"mailto:frystyk@w3.org\">Frystyk, H.</a>, <a href=\"mailto:masinter@parc.xerox.com\">Masinter, L.</a>, <a href=\"mailto:paulle@microsoft.com\">Leach, P.</a>, and <a href=\"mailto:timbl@w3.org\">T. Berners-Lee</a>, “<a href=\"http://tools.ietf.org/html/rfc2616\">Hypertext Transfer Protocol – HTTP&#x2F;1.1</a>,” RFC 2616, June 1999 (<a href=\"http://www.rfc-editor.org/rfc/rfc2616.txt\">TXT</a>, <a href=\"http://www.rfc-editor.org/rfc/rfc2616.ps\">PS</a>, <a href=\"http://www.rfc-editor.org/rfc/rfc2616.pdf\">PDF</a>, <a href=\"http://xml.resource.org/public/rfc/html/rfc2616.html\">HTML</a>, <a href=\"http://xml.resource.org/public/rfc/xml/rfc2616.xml\">XML</a>).</td>\n</tr>\n<tr>\n<td>[RFC3339]</td>\n<td><a href=\"mailto:GK@ACM.ORG\">Klyne, G., Ed.</a> and <a href=\"mailto:chris.newman@sun.com\">C. Newman</a>, “<a href=\"http://tools.ietf.org/html/rfc3339\">Date and Time on the Internet: Timestamps</a>,” RFC 3339, July 2002 (<a href=\"http://www.rfc-editor.org/rfc/rfc3339.txt\">TXT</a>, <a href=\"http://xml.resource.org/public/rfc/html/rfc3339.html\">HTML</a>, <a href=\"http://xml.resource.org/public/rfc/xml/rfc3339.xml\">XML</a>).</td>\n</tr>\n<tr>\n<td>[RFC3966]</td>\n<td>Schulzrinne, H., “<a href=\"http://tools.ietf.org/html/rfc3966\">The tel URI for Telephone Numbers</a>,” RFC 3966, December 2004 (<a href=\"http://www.rfc-editor.org/rfc/rfc3966.txt\">TXT</a>).</td>\n</tr>\n<tr>\n<td>[RFC3986]</td>\n<td><a href=\"mailto:timbl@w3.org\">Berners-Lee, T.</a>, <a href=\"mailto:fielding@gbiv.com\">Fielding, R.</a>, and <a href=\"mailto:LMM@acm.org\">L. Masinter</a>, “<a href=\"http://tools.ietf.org/html/rfc3986\">Uniform Resource Identifier (URI): Generic Syntax</a>,” STD 66, RFC 3986, January 2005 (<a href=\"http://www.rfc-editor.org/rfc/rfc3986.txt\">TXT</a>, <a href=\"http://xml.resource.org/public/rfc/html/rfc3986.html\">HTML</a>, <a href=\"http://xml.resource.org/public/rfc/xml/rfc3986.xml\">XML</a>).</td>\n</tr>\n<tr>\n<td>[RFC4627]</td>\n<td>Crockford, D., “<a href=\"http://tools.ietf.org/html/rfc4627\">The application&#x2F;json Media Type for JavaScript Object Notation (JSON)</a>,” RFC 4627, July 2006 (<a href=\"http://www.rfc-editor.org/rfc/rfc4627.txt\">TXT</a>).</td>\n</tr>\n<tr>\n<td>[RFC5246]</td>\n<td>Dierks, T. and E. Rescorla, “<a href=\"http://tools.ietf.org/html/rfc5246\">The Transport Layer Security (TLS) Protocol Version 1.2</a>,” RFC 5246, August 2008 (<a href=\"http://www.rfc-editor.org/rfc/rfc5246.txt\">TXT</a>).</td>\n</tr>\n<tr>\n<td>[RFC5322]</td>\n<td><a href=\"mailto:presnick@qualcomm.com\">Resnick, P., Ed.</a>, “<a href=\"http://tools.ietf.org/html/rfc5322\">Internet Message Format</a>,” RFC 5322, October 2008 (<a href=\"http://www.rfc-editor.org/rfc/rfc5322.txt\">TXT</a>, <a href=\"http://xml.resource.org/public/rfc/html/rfc5322.html\">HTML</a>, <a href=\"http://xml.resource.org/public/rfc/xml/rfc5322.xml\">XML</a>).</td>\n</tr>\n<tr>\n<td>[RFC5646]</td>\n<td>Phillips, A. and M. Davis, “<a href=\"http://tools.ietf.org/html/rfc5646\">Tags for Identifying Languages</a>,” BCP 47, RFC 5646, September 2009 (<a href=\"http://www.rfc-editor.org/rfc/rfc5646.txt\">TXT</a>).</td>\n</tr>\n<tr>\n<td>[RFC6125]</td>\n<td>Saint-Andre, P. and J. Hodges, “<a href=\"http://tools.ietf.org/html/rfc6125\">Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</a>,” RFC 6125, March 2011 (<a href=\"http://www.rfc-editor.org/rfc/rfc6125.txt\">TXT</a>).</td>\n</tr>\n<tr>\n<td>[RFC6711]</td>\n<td>Johansson, L., “<a href=\"http://tools.ietf.org/html/rfc6711\">An IANA Registry for Level of Assurance (LoA) Profiles</a>,” RFC 6711, August 2012 (<a href=\"http://www.rfc-editor.org/rfc/rfc6711.txt\">TXT</a>).</td>\n</tr>\n<tr>\n<td>[RFC6749]</td>\n<td>Hardt, D., “<a href=\"http://tools.ietf.org/html/rfc6749\">The OAuth 2.0 Authorization Framework</a>,” RFC 6749, October 2012 (<a href=\"http://www.rfc-editor.org/rfc/rfc6749.txt\">TXT</a>).</td>\n</tr>\n<tr>\n<td>[RFC6750]</td>\n<td>Jones, M. and D. Hardt, “<a href=\"http://tools.ietf.org/html/rfc6750\">The OAuth 2.0 Authorization Framework: Bearer Token Usage</a>,” RFC 6750, October 2012 (<a href=\"http://www.rfc-editor.org/rfc/rfc6750.txt\">TXT</a>).</td>\n</tr>\n<tr>\n<td>[RFC6819]</td>\n<td>Lodderstedt, T., McGloin, M., and P. Hunt, “<a href=\"http://tools.ietf.org/html/rfc6819\">OAuth 2.0 Threat Model and Security Considerations</a>,” RFC 6819, January 2013 (<a href=\"http://www.rfc-editor.org/rfc/rfc6819.txt\">TXT</a>).</td>\n</tr>\n<tr>\n<td>[USA15]</td>\n<td><a href=\"mailto:markdavis@google.com\">Davis, M.</a>, <a href=\"mailto:ken@unicode.org\">Whistler, K.</a>, and M. Dürst, “Unicode Normalization Forms,” Unicode Standard Annex 15, 09 2009.</td>\n</tr>\n<tr>\n<td>[W3C.REC-html401-19991224]</td>\n<td>Raggett, D., Hors, A., and I. Jacobs, “<a href=\"http://www.w3.org/TR/1999/REC-html401-19991224\">HTML 4.01 Specification</a>,” World Wide Web Consortium Recommendation REC-html401-19991224, December 1999 (<a href=\"http://www.w3.org/TR/1999/REC-html401-19991224\">HTML</a>).</td>\n</tr>\n<tr>\n<td>[zoneinfo]</td>\n<td>Public Domain, “<a href=\"http://www.twinsun.com/tz/tz-link.htm\">The tz database</a>,” June 2011.</td>\n</tr>\n</tbody></table>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"19-2-Informative-References\"><a href=\"#19-2-Informative-References\" class=\"headerlink\" title=\"19.2. Informative References\"></a>19.2. Informative References</h3><table>\n<thead>\n<tr>\n<th>[JWK.Thumbprint]</th>\n<th><a href=\"mailto:mbj@microsoft.com\">Jones, M.</a>, “<a href=\"http://tools.ietf.org/html/draft-jones-jose-jwk-thumbprint\">JSON Web Key (JWK) Thumbprint</a>,” draft-jones-jose-jwk-thumbprint (work in progress), July 2014 (<a href=\"http://tools.ietf.org/html/draft-jones-jose-jwk-thumbprint-01\">HTML</a>).</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>[OAuth.Post]</td>\n<td>Jones, M. and B. Campbell, “<a href=\"http://openid.net/specs/oauth-v2-form-post-response-mode-1_0.html\">OAuth 2.0 Form Post Response Mode</a>,” February 2014.</td>\n</tr>\n<tr>\n<td>[OpenID.2.0]</td>\n<td>OpenID Foundation, “OpenID Authentication 2.0,” December 2007 (<a href=\"http://openid.net/specs/openid-authentication-2_0.txt\">TXT</a>, <a href=\"http://openid.net/specs/openid-authentication-2_0.html\">HTML</a>).</td>\n</tr>\n<tr>\n<td>[OpenID.Basic]</td>\n<td>Sakimura, N., Bradley, J., Jones, M., de Medeiros, B., and C. Mortimore, “<a href=\"http://openid.net/specs/openid-connect-basic-1_0.html\">OpenID Connect Basic Client Implementer’s Guide 1.0</a>,” November 2014.</td>\n</tr>\n<tr>\n<td>[OpenID.Implicit]</td>\n<td>Sakimura, N., Bradley, J., Jones, M., de Medeiros, B., and C. Mortimore, “<a href=\"http://openid.net/specs/openid-connect-implicit-1_0.html\">OpenID Connect Implicit Client Implementer’s Guide 1.0</a>,” November 2014.</td>\n</tr>\n<tr>\n<td>[OpenID.PAPE]</td>\n<td><a href=\"mailto:david@sixapart.com\">Recordon, D.</a>, <a href=\"mailto:mbj@microsoft.com\">Jones, M.</a>, <a href=\"mailto:johnny.bufu@gmail.com\">Bufu, J., Ed.</a>, <a href=\"mailto:cygnus@janrain.com\">Daugherty, J., Ed.</a>, and <a href=\"mailto:n-sakimura@nri.co.jp\">N. Sakimura</a>, “OpenID Provider Authentication Policy Extension 1.0,” December 2008 (<a href=\"http://openid.net/specs/openid-provider-authentication-policy-extension-1_0.txt\">TXT</a>, <a href=\"http://openid.net/specs/openid-provider-authentication-policy-extension-1_0.html\">HTML</a>).</td>\n</tr>\n<tr>\n<td>[OpenID.Session]</td>\n<td>Sakimura, N., Bradley, J., Jones, M., de Medeiros, B., Mortimore, C., and E. Jay, “<a href=\"http://openid.net/specs/openid-connect-session-1_0.html\">OpenID Connect Session Management 1.0</a>,” November 2014.</td>\n</tr>\n<tr>\n<td>[RFC4949]</td>\n<td>Shirey, R., “<a href=\"http://tools.ietf.org/html/rfc4949\">Internet Security Glossary, Version 2</a>,” RFC 4949, August 2007 (<a href=\"http://www.rfc-editor.org/rfc/rfc4949.txt\">TXT</a>).</td>\n</tr>\n<tr>\n<td>[X.1252]</td>\n<td>International Telecommunication Union, “<a href=\"http://www.itu.int/rec/dologin_pub.asp?lang=e&id=T-REC-X.1252-201004-I!!PDF-E&type=items\">ITU-T Recommendation X.1252 – Cyberspace security – Identity management – Baseline identity management terms and definitions</a>,” ITU-T X.1252, November 2010.</td>\n</tr>\n</tbody></table>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"Appendix-A-Authorization-Examples\"><a href=\"#Appendix-A-Authorization-Examples\" class=\"headerlink\" title=\"Appendix A. Authorization Examples\"></a>Appendix A. Authorization Examples</h3><p>The following are non-normative examples of Authorization Requests with different <code>response_type</code> values and their responses (with line wraps within values for display purposes only):</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"A-1-Example-using-response-type-x3D-code\"><a href=\"#A-1-Example-using-response-type-x3D-code\" class=\"headerlink\" title=\"A.1. Example using response_type&#x3D;code\"></a>A.1. Example using response_type&#x3D;code</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;authorize?\n  response_type&#x3D;code\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb\n  &amp;scope&#x3D;openid%20profile%20email\n  &amp;nonce&#x3D;n-0S6_WzA2Mj\n  &amp;state&#x3D;af0ifjsldkj HTTP&#x2F;1.1\nHost: server.example.com\n\nHTTP&#x2F;1.1 302 Found\nLocation: https:&#x2F;&#x2F;client.example.org&#x2F;cb?\n  code&#x3D;Qcb0Orv1zh30vL1MPRsbm-diHiMwcLyZvn1arpZv-Jxf_11jnpEX3Tgfvk\n  &amp;state&#x3D;af0ifjsldkj<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"A-2-Example-using-response-type-x3D-id-token\"><a href=\"#A-2-Example-using-response-type-x3D-id-token\" class=\"headerlink\" title=\"A.2. Example using response_type&#x3D;id_token\"></a>A.2. Example using response_type&#x3D;id_token</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;authorize?\n  response_type&#x3D;id_token\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb\n  &amp;scope&#x3D;openid%20profile%20email\n  &amp;nonce&#x3D;n-0S6_WzA2Mj\n  &amp;state&#x3D;af0ifjsldkj HTTP&#x2F;1.1\nHost: server.example.com\n\nHTTP&#x2F;1.1 302 Found\nLocation: https:&#x2F;&#x2F;client.example.org&#x2F;cb#\n  id_token&#x3D;eyJraWQiOiIxZTlnZGs3IiwiYWxnIjoiUlMyNTYifQ.ewogImlz\n  cyI6ICJodHRwOi8vc2VydmVyLmV4YW1wbGUuY29tIiwKICJzdWIiOiAiMjQ4\n  Mjg5NzYxMDAxIiwKICJhdWQiOiAiczZCaGRSa3F0MyIsCiAibm9uY2UiOiAi\n  bi0wUzZfV3pBMk1qIiwKICJleHAiOiAxMzExMjgxOTcwLAogImlhdCI6IDEz\n  MTEyODA5NzAsCiAibmFtZSI6ICJKYW5lIERvZSIsCiAiZ2l2ZW5fbmFtZSI6\n  ICJKYW5lIiwKICJmYW1pbHlfbmFtZSI6ICJEb2UiLAogImdlbmRlciI6ICJm\n  ZW1hbGUiLAogImJpcnRoZGF0ZSI6ICIwMDAwLTEwLTMxIiwKICJlbWFpbCI6\n  ICJqYW5lZG9lQGV4YW1wbGUuY29tIiwKICJwaWN0dXJlIjogImh0dHA6Ly9l\n  eGFtcGxlLmNvbS9qYW5lZG9lL21lLmpwZyIKfQ.rHQjEmBqn9Jre0OLykYNn\n  spA10Qql2rvx4FsD00jwlB0Sym4NzpgvPKsDjn_wMkHxcp6CilPcoKrWHcip\n  R2iAjzLvDNAReF97zoJqq880ZD1bwY82JDauCXELVR9O6_B0w3K-E7yM2mac\n  AAgNCUwtik6SjoSUZRcf-O5lygIyLENx882p6MtmwaL1hd6qn5RZOQ0TLrOY\n  u0532g9Exxcm-ChymrB4xLykpDj3lUivJt63eEGGN6DH5K6o33TcxkIjNrCD\n  4XB1CKKumZvCedgHHF3IAK4dVEDSUoGlH9z4pP_eWYNXvqQOjGs-rDaQzUHl\n  6cQQWNiDpWOl_lxXjQEvQ\n  &amp;state&#x3D;af0ifjsldkj<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>The value of the <code>id_token</code> parameter is the ID Token, which is a signed JWT, containing three base64url encoded segments separated by period (‘.’) characters. The first segment represents the JOSE Header. Base64url decoding it will result in the following set of Header Parameters:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;&quot;kid&quot;:&quot;1e9gdk7&quot;,&quot;alg&quot;:&quot;RS256&quot;&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>The <code>alg</code> value represents the algorithm that was used to sign the JWT, in this case <code>RS256</code>, representing RSASSA-PKCS-v1_5 using SHA-256. The <code>kid</code> value is a key identifier used in identifying the key to be used to verify the signature. If the <code>kid</code> value is unknown to the RP, it needs to retrieve the contents of the OP’s JWK Set again to obtain the OP’s current set of keys.</p>\n<p>The second segment represents the Claims in the ID Token. Verifying and decoding the ID Token will yield the following Claims:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;iss&quot;: &quot;http:&#x2F;&#x2F;server.example.com&quot;,\n &quot;sub&quot;: &quot;248289761001&quot;,\n &quot;aud&quot;: &quot;s6BhdRkqt3&quot;,\n &quot;nonce&quot;: &quot;n-0S6_WzA2Mj&quot;,\n &quot;exp&quot;: 1311281970,\n &quot;iat&quot;: 1311280970,\n &quot;name&quot;: &quot;Jane Doe&quot;,\n &quot;given_name&quot;: &quot;Jane&quot;,\n &quot;family_name&quot;: &quot;Doe&quot;,\n &quot;gender&quot;: &quot;female&quot;,\n &quot;birthdate&quot;: &quot;0000-10-31&quot;,\n &quot;email&quot;: &quot;janedoe@example.com&quot;,\n &quot;picture&quot;: &quot;http:&#x2F;&#x2F;example.com&#x2F;janedoe&#x2F;me.jpg&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>The third segment represents the ID Token signature, which is verified as described in [<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#JWS\">JWS]</a>.</p>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"A-3-Example-using-response-type-x3D-id-token-token\"><a href=\"#A-3-Example-using-response-type-x3D-id-token-token\" class=\"headerlink\" title=\"A.3. Example using response_type&#x3D;id_token token\"></a>A.3. Example using response_type&#x3D;id_token token</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;authorize?\n  response_type&#x3D;id_token%20token\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb\n  &amp;scope&#x3D;openid%20profile%20email\n  &amp;nonce&#x3D;n-0S6_WzA2Mj\n  &amp;state&#x3D;af0ifjsldkj HTTP&#x2F;1.1\nHost: server.example.com\n\nHTTP&#x2F;1.1 302 Found\nLocation: https:&#x2F;&#x2F;client.example.org&#x2F;cb#\n  access_token&#x3D;jHkWEdUXMU1BwAsC4vtUsZwnNvTIxEl0z9K3vx5KF0Y\n  &amp;token_type&#x3D;Bearer\n  &amp;id_token&#x3D;eyJraWQiOiIxZTlnZGs3IiwiYWxnIjoiUlMyNTYifQ.ewogIml\n  zcyI6ICJodHRwOi8vc2VydmVyLmV4YW1wbGUuY29tIiwKICJzdWIiOiAiMjQ\n  4Mjg5NzYxMDAxIiwKICJhdWQiOiAiczZCaGRSa3F0MyIsCiAibm9uY2UiOiA\n  ibi0wUzZfV3pBMk1qIiwKICJleHAiOiAxMzExMjgxOTcwLAogImlhdCI6IDE\n  zMTEyODA5NzAsCiAiYXRfaGFzaCI6ICI3N1FtVVB0alBmeld0RjJBbnBLOVJ\n  RIgp9.F9gRev0Dt2tKcrBkHy72cmRqnLdzw9FLCCSebV7mWs7o_sv2O5s6zM\n  ky2kmhHTVx9HmdvNnx9GaZ8XMYRFeYk8L5NZ7aYlA5W56nsG1iWOou_-gji0\n  ibWIuuf4Owaho3YSoi7EvsTuLFz6tq-dLyz0dKABMDsiCmJ5wqkPUDTE3QTX\n  jzbUmOzUDli-gCh5QPuZAq0cNW3pf_2n4zpvTYtbmj12cVcxGIMZby7TMWES\n  RjQ9_o3jvhVNcCGcE0KAQXejhA1ocJhNEvQNqMFGlBb6_0RxxKjDZ-Oa329e\n  GDidOvvp0h5hoES4a8IuGKS7NOcpp-aFwp0qVMDLI-Xnm-Pg\n  &amp;state&#x3D;af0ifjsldkj<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>Verifying and decoding the ID Token will yield the following Claims:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;iss&quot;: &quot;http:&#x2F;&#x2F;server.example.com&quot;,\n &quot;sub&quot;: &quot;248289761001&quot;,\n &quot;aud&quot;: &quot;s6BhdRkqt3&quot;,\n &quot;nonce&quot;: &quot;n-0S6_WzA2Mj&quot;,\n &quot;exp&quot;: 1311281970,\n &quot;iat&quot;: 1311280970,\n &quot;at_hash&quot;: &quot;77QmUPtjPfzWtF2AnpK9RQ&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"A-4-Example-using-response-type-x3D-code-id-token\"><a href=\"#A-4-Example-using-response-type-x3D-code-id-token\" class=\"headerlink\" title=\"A.4. Example using response_type&#x3D;code id_token\"></a>A.4. Example using response_type&#x3D;code id_token</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;authorize?\n  response_type&#x3D;code%20id_token\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb\n  &amp;scope&#x3D;openid%20profile%20email\n  &amp;nonce&#x3D;n-0S6_WzA2Mj\n  &amp;state&#x3D;af0ifjsldkj HTTP&#x2F;1.1\nHost: server.example.com\n\nHTTP&#x2F;1.1 302 Found\nLocation: https:&#x2F;&#x2F;client.example.org&#x2F;cb#\n  code&#x3D;Qcb0Orv1zh30vL1MPRsbm-diHiMwcLyZvn1arpZv-Jxf_11jnpEX3Tgfvk\n  &amp;id_token&#x3D;eyJraWQiOiIxZTlnZGs3IiwiYWxnIjoiUlMyNTYifQ.ewogIml\n  zcyI6ICJodHRwOi8vc2VydmVyLmV4YW1wbGUuY29tIiwKICJzdWIiOiAiMjQ\n  4Mjg5NzYxMDAxIiwKICJhdWQiOiAiczZCaGRSa3F0MyIsCiAibm9uY2UiOiA\n  ibi0wUzZfV3pBMk1qIiwKICJleHAiOiAxMzExMjgxOTcwLAogImlhdCI6IDE\n  zMTEyODA5NzAsCiAiY19oYXNoIjogIkxEa3RLZG9RYWszUGswY25YeENsdEE\n  iCn0.XW6uhdrkBgcGx6zVIrCiROpWURs-4goO1sKA4m9jhJIImiGg5muPUcN\n  egx6sSv43c5DSn37sxCRrDZZm4ZPBKKgtYASMcE20SDgvYJdJS0cyuFw7Ijp\n  _7WnIjcrl6B5cmoM6ylCvsLMwkoQAxVublMwH10oAxjzD6NEFsu9nipkszWh\n  sPePf_rM4eMpkmCbTzume-fzZIi5VjdWGGEmzTg32h3jiex-r5WTHbj-u5HL\n  7u_KP3rmbdYNzlzd1xWRYTUs4E8nOTgzAUwvwXkIQhOh5TPcSMBYy6X3E7-_\n  gr9Ue6n4ND7hTFhtjYs3cjNKIA08qm5cpVYFMFMG6PkhzLQ\n  &amp;state&#x3D;af0ifjsldkj<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>Verifying and decoding the ID Token will yield the following Claims:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;iss&quot;: &quot;http:&#x2F;&#x2F;server.example.com&quot;,\n &quot;sub&quot;: &quot;248289761001&quot;,\n &quot;aud&quot;: &quot;s6BhdRkqt3&quot;,\n &quot;nonce&quot;: &quot;n-0S6_WzA2Mj&quot;,\n &quot;exp&quot;: 1311281970,\n &quot;iat&quot;: 1311280970,\n &quot;c_hash&quot;: &quot;LDktKdoQak3Pk0cnXxCltA&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"A-5-Example-using-response-type-x3D-code-token\"><a href=\"#A-5-Example-using-response-type-x3D-code-token\" class=\"headerlink\" title=\"A.5. Example using response_type&#x3D;code token\"></a>A.5. Example using response_type&#x3D;code token</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;authorize?\n  response_type&#x3D;code%20token\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb\n  &amp;scope&#x3D;openid%20profile%20email\n  &amp;nonce&#x3D;n-0S6_WzA2Mj\n  &amp;state&#x3D;af0ifjsldkj HTTP&#x2F;1.1\nHost: server.example.com\n\nHTTP&#x2F;1.1 302 Found\nLocation: https:&#x2F;&#x2F;client.example.org&#x2F;cb#\n  code&#x3D;Qcb0Orv1zh30vL1MPRsbm-diHiMwcLyZvn1arpZv-Jxf_11jnpEX3Tgfvk\n  &amp;access_token&#x3D;jHkWEdUXMU1BwAsC4vtUsZwnNvTIxEl0z9K3vx5KF0Y\n  &amp;token_type&#x3D;Bearer\n  &amp;state&#x3D;af0ifjsldkj<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"A-6-Example-using-response-type-x3D-code-id-token-token\"><a href=\"#A-6-Example-using-response-type-x3D-code-id-token-token\" class=\"headerlink\" title=\"A.6. Example using response_type&#x3D;code id_token token\"></a>A.6. Example using response_type&#x3D;code id_token token</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;authorize?\n  response_type&#x3D;code%20id_token%20token\n  &amp;client_id&#x3D;s6BhdRkqt3\n  &amp;redirect_uri&#x3D;https%3A%2F%2Fclient.example.org%2Fcb\n  &amp;scope&#x3D;openid%20profile%20email\n  &amp;nonce&#x3D;n-0S6_WzA2Mj\n  &amp;state&#x3D;af0ifjsldkj HTTP&#x2F;1.1\nHost: server.example.com\n\nHTTP&#x2F;1.1 302 Found\nLocation: https:&#x2F;&#x2F;client.example.org&#x2F;cb#\n  code&#x3D;Qcb0Orv1zh30vL1MPRsbm-diHiMwcLyZvn1arpZv-Jxf_11jnpEX3Tgfvk\n  &amp;access_token&#x3D;jHkWEdUXMU1BwAsC4vtUsZwnNvTIxEl0z9K3vx5KF0Y\n  &amp;token_type&#x3D;Bearer\n  &amp;id_token&#x3D;eyJraWQiOiIxZTlnZGs3IiwiYWxnIjoiUlMyNTYifQ.ewogIml\n  zcyI6ICJodHRwOi8vc2VydmVyLmV4YW1wbGUuY29tIiwKICJzdWIiOiAiMjQ\n  4Mjg5NzYxMDAxIiwKICJhdWQiOiAiczZCaGRSa3F0MyIsCiAibm9uY2UiOiA\n  ibi0wUzZfV3pBMk1qIiwKICJleHAiOiAxMzExMjgxOTcwLAogImlhdCI6IDE\n  zMTEyODA5NzAsCiAiY19oYXNoIjogIkxEa3RLZG9RYWszUGswY25YeENsdEE\n  iCn0.XW6uhdrkBgcGx6zVIrCiROpWURs-4goO1sKA4m9jhJIImiGg5muPUcN\n  egx6sSv43c5DSn37sxCRrDZZm4ZPBKKgtYASMcE20SDgvYJdJS0cyuFw7Ijp\n  _7WnIjcrl6B5cmoM6ylCvsLMwkoQAxVublMwH10oAxjzD6NEFsu9nipkszWh\n  sPePf_rM4eMpkmCbTzume-fzZIi5VjdWGGEmzTg32h3jiex-r5WTHbj-u5HL\n  7u_KP3rmbdYNzlzd1xWRYTUs4E8nOTgzAUwvwXkIQhOh5TPcSMBYy6X3E7-_\n  gr9Ue6n4ND7hTFhtjYs3cjNKIA08qm5cpVYFMFMG6PkhzLQ\n  &amp;state&#x3D;af0ifjsldkj<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>Verifying and decoding the ID Token will yield the following Claims:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;iss&quot;: &quot;http:&#x2F;&#x2F;server.example.com&quot;,\n &quot;sub&quot;: &quot;248289761001&quot;,\n &quot;aud&quot;: &quot;s6BhdRkqt3&quot;,\n &quot;nonce&quot;: &quot;n-0S6_WzA2Mj&quot;,\n &quot;exp&quot;: 1311281970,\n &quot;iat&quot;: 1311280970,\n &quot;at_hash&quot;: &quot;77QmUPtjPfzWtF2AnpK9RQ&quot;,\n &quot;c_hash&quot;: &quot;LDktKdoQak3Pk0cnXxCltA&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"A-7-RSA-Key-Used-in-Examples\"><a href=\"#A-7-RSA-Key-Used-in-Examples\" class=\"headerlink\" title=\"A.7. RSA Key Used in Examples\"></a>A.7. RSA Key Used in Examples</h3><p>The following RSA public key, represented in JWK format, can be used to validate the ID Token signatures in the above examples (with line wraps within values for display purposes only):</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n &quot;kty&quot;:&quot;RSA&quot;,\n &quot;kid&quot;:&quot;1e9gdk7&quot;,\n &quot;n&quot;:&quot;w7Zdfmece8iaB0kiTY8pCtiBtzbptJmP28nSWwtdjRu0f2GFpajvWE4VhfJA\n      jEsOcwYzay7XGN0b-X84BfC8hmCTOj2b2eHT7NsZegFPKRUQzJ9wW8ipn_aD\n      JWMGDuB1XyqT1E7DYqjUCEOD1b4FLpy_xPn6oV_TYOfQ9fZdbE5HGxJUzeku\n      GcOKqOQ8M7wfYHhHHLxGpQVgL0apWuP2gDDOdTtpuld4D2LK1MZK99s9gaSj\n      RHE8JDb1Z4IGhEcEyzkxswVdPndUWzfvWBBWXWxtSUvQGBRkuy1BHOa4sP6F\n      KjWEeeF7gm7UMs2Nm2QUgNZw6xvEDGaLk4KASdIxRQ&quot;,\n &quot;e&quot;:&quot;AQAB&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"Appendix-B-Acknowledgements\"><a href=\"#Appendix-B-Acknowledgements\" class=\"headerlink\" title=\"Appendix B. Acknowledgements\"></a>Appendix B. Acknowledgements</h3><p>As a successor version of OpenID, this specification heavily relies on ideas explored in <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#OpenID.2.0\">OpenID Authentication 2.0</a> [OpenID.2.0]. Please refer to Appendix C of OpenID Authentication 2.0 for the full list of the contributors for that specification.</p>\n<p>In addition, the OpenID Community would like to thank the following people for their contributions to this specification:</p>\n<blockquote>\n<p>Naveen Agarwal (<a href=\"mailto:&#110;&#97;&#97;&#64;&#x67;&#111;&#111;&#x67;&#x6c;&#x65;&#46;&#99;&#111;&#109;\">&#110;&#97;&#97;&#64;&#x67;&#111;&#111;&#x67;&#x6c;&#x65;&#46;&#99;&#111;&#109;</a>), Google</p>\n<p>Amanda Anganes (<a href=\"mailto:&#97;&#x61;&#110;&#103;&#x61;&#110;&#x65;&#115;&#64;&#109;&#x69;&#x74;&#x72;&#101;&#46;&#x6f;&#x72;&#103;\">&#97;&#x61;&#110;&#103;&#x61;&#110;&#x65;&#115;&#64;&#109;&#x69;&#x74;&#x72;&#101;&#46;&#x6f;&#x72;&#103;</a>), MITRE</p>\n<p>Casper Biering (<a href=\"mailto:&#x63;&#98;&#x40;&#112;&#101;&#x65;&#114;&#99;&#x72;&#97;&#x66;&#x74;&#46;&#99;&#x6f;&#x6d;\">&#x63;&#98;&#x40;&#112;&#101;&#x65;&#114;&#99;&#x72;&#97;&#x66;&#x74;&#46;&#99;&#x6f;&#x6d;</a>), Peercraft</p>\n<p>John Bradley (<a href=\"mailto:&#x76;&#x65;&#x37;&#x6a;&#x74;&#x62;&#x40;&#118;&#x65;&#x37;&#x6a;&#x74;&#98;&#46;&#99;&#x6f;&#x6d;\">&#x76;&#x65;&#x37;&#x6a;&#x74;&#x62;&#x40;&#118;&#x65;&#x37;&#x6a;&#x74;&#98;&#46;&#99;&#x6f;&#x6d;</a>), Ping Identity</p>\n<p>Tim Bray (<a href=\"mailto:&#x74;&#98;&#x72;&#x61;&#x79;&#x40;&#x74;&#101;&#120;&#x74;&#117;&#x61;&#x6c;&#x69;&#116;&#121;&#x2e;&#99;&#x6f;&#109;\">&#x74;&#98;&#x72;&#x61;&#x79;&#x40;&#x74;&#101;&#120;&#x74;&#117;&#x61;&#x6c;&#x69;&#116;&#121;&#x2e;&#99;&#x6f;&#109;</a>), Google</p>\n<p>Johnny Bufu (<a href=\"mailto:&#106;&#x62;&#117;&#102;&#x75;&#64;&#106;&#x61;&#x6e;&#x72;&#x61;&#105;&#110;&#x2e;&#x63;&#111;&#x6d;\">&#106;&#x62;&#117;&#102;&#x75;&#64;&#106;&#x61;&#x6e;&#x72;&#x61;&#105;&#110;&#x2e;&#x63;&#111;&#x6d;</a>), Janrain</p>\n<p>Brian Campbell (<a href=\"mailto:&#98;&#99;&#97;&#109;&#x70;&#x62;&#101;&#x6c;&#x6c;&#x40;&#112;&#x69;&#110;&#103;&#x69;&#x64;&#x65;&#110;&#116;&#x69;&#x74;&#x79;&#46;&#x63;&#x6f;&#x6d;\">&#98;&#99;&#97;&#109;&#x70;&#x62;&#101;&#x6c;&#x6c;&#x40;&#112;&#x69;&#110;&#103;&#x69;&#x64;&#x65;&#110;&#116;&#x69;&#x74;&#x79;&#46;&#x63;&#x6f;&#x6d;</a>), Ping Identity</p>\n<p>Blaine Cook (<a href=\"mailto:&#114;&#111;&#109;&#101;&#100;&#97;&#64;&#103;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#99;&#111;&#109;\">&#114;&#111;&#109;&#101;&#100;&#97;&#64;&#103;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#99;&#111;&#109;</a>), Independent</p>\n<p>Breno de Medeiros (<a href=\"mailto:&#98;&#x72;&#x65;&#110;&#x6f;&#x40;&#103;&#x6f;&#x6f;&#103;&#x6c;&#x65;&#46;&#x63;&#111;&#109;\">&#98;&#x72;&#x65;&#110;&#x6f;&#x40;&#103;&#x6f;&#x6f;&#103;&#x6c;&#x65;&#46;&#x63;&#111;&#109;</a>), Google</p>\n<p>Pamela Dingle (<a href=\"mailto:&#112;&#x64;&#105;&#110;&#x67;&#108;&#x65;&#x40;&#112;&#x69;&#x6e;&#x67;&#105;&#100;&#x65;&#x6e;&#116;&#x69;&#116;&#121;&#x2e;&#99;&#111;&#x6d;\">&#112;&#x64;&#105;&#110;&#x67;&#108;&#x65;&#x40;&#112;&#x69;&#x6e;&#x67;&#105;&#100;&#x65;&#x6e;&#116;&#x69;&#116;&#121;&#x2e;&#99;&#111;&#x6d;</a>), Ping Identity</p>\n<p>Vladimir Dzhuvinov (<a href=\"mailto:&#x76;&#108;&#x61;&#x64;&#x69;&#x6d;&#105;&#x72;&#64;&#x6e;&#105;&#109;&#98;&#117;&#115;&#100;&#115;&#x2e;&#99;&#111;&#109;\">&#x76;&#108;&#x61;&#x64;&#x69;&#x6d;&#105;&#x72;&#64;&#x6e;&#105;&#109;&#98;&#117;&#115;&#100;&#115;&#x2e;&#99;&#111;&#109;</a>), Nimbus Directory Services</p>\n<p>George Fletcher (<a href=\"mailto:&#103;&#101;&#111;&#114;&#x67;&#101;&#x2e;&#102;&#108;&#101;&#x74;&#x63;&#x68;&#x65;&#x72;&#x40;&#x63;&#111;&#x72;&#112;&#x2e;&#x61;&#111;&#x6c;&#x2e;&#x63;&#x6f;&#109;\">&#103;&#101;&#111;&#114;&#x67;&#101;&#x2e;&#102;&#108;&#101;&#x74;&#x63;&#x68;&#x65;&#x72;&#x40;&#x63;&#111;&#x72;&#112;&#x2e;&#x61;&#111;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a>), AOL</p>\n<p>Roland Hedberg (<a href=\"mailto:&#x72;&#111;&#108;&#97;&#110;&#x64;&#46;&#104;&#x65;&#x64;&#x62;&#101;&#114;&#x67;&#64;&#x61;&#x64;&#x6d;&#46;&#x75;&#x6d;&#117;&#46;&#x73;&#x65;\">&#x72;&#111;&#108;&#97;&#110;&#x64;&#46;&#104;&#x65;&#x64;&#x62;&#101;&#114;&#x67;&#64;&#x61;&#x64;&#x6d;&#46;&#x75;&#x6d;&#117;&#46;&#x73;&#x65;</a>), University of Umea</p>\n<p>Ryo Ito (<a href=\"mailto:&#x72;&#x79;&#111;&#46;&#105;&#116;&#x6f;&#x40;&#x6d;&#105;&#x78;&#105;&#x2e;&#99;&#111;&#x2e;&#106;&#112;\">&#x72;&#x79;&#111;&#46;&#105;&#116;&#x6f;&#x40;&#x6d;&#105;&#x78;&#105;&#x2e;&#99;&#111;&#x2e;&#106;&#112;</a>), mixi, Inc.</p>\n<p>Edmund Jay (<a href=\"mailto:&#101;&#106;&#97;&#121;&#64;&#109;&#103;&#x69;&#x31;&#46;&#99;&#111;&#109;\">&#101;&#106;&#97;&#121;&#64;&#109;&#103;&#x69;&#x31;&#46;&#99;&#111;&#109;</a>), Illumila</p>\n<p>Michael B. Jones (<a href=\"mailto:&#x6d;&#98;&#106;&#x40;&#x6d;&#105;&#x63;&#x72;&#111;&#x73;&#111;&#x66;&#x74;&#x2e;&#x63;&#x6f;&#x6d;\">&#x6d;&#98;&#106;&#x40;&#x6d;&#105;&#x63;&#x72;&#111;&#x73;&#111;&#x66;&#x74;&#x2e;&#x63;&#x6f;&#x6d;</a>), Microsoft</p>\n<p>Torsten Lodderstedt (<a href=\"mailto:&#116;&#x2e;&#x6c;&#x6f;&#100;&#x64;&#101;&#x72;&#x73;&#x74;&#x65;&#100;&#116;&#64;&#x74;&#x65;&#108;&#x65;&#107;&#x6f;&#x6d;&#x2e;&#100;&#101;\">&#116;&#x2e;&#x6c;&#x6f;&#100;&#x64;&#101;&#x72;&#x73;&#x74;&#x65;&#100;&#116;&#64;&#x74;&#x65;&#108;&#x65;&#107;&#x6f;&#x6d;&#x2e;&#100;&#101;</a>), Deutsche Telekom</p>\n<p>Nov Matake (<a href=\"mailto:&#x6e;&#111;&#x76;&#x40;&#109;&#x61;&#116;&#x61;&#107;&#101;&#46;&#106;&#112;\">&#x6e;&#111;&#x76;&#x40;&#109;&#x61;&#116;&#x61;&#107;&#101;&#46;&#106;&#112;</a>), Independent</p>\n<p>Chuck Mortimore (<a href=\"mailto:&#x63;&#x6d;&#x6f;&#x72;&#116;&#x69;&#109;&#111;&#x72;&#x65;&#64;&#x73;&#x61;&#x6c;&#x65;&#115;&#x66;&#111;&#114;&#99;&#101;&#x2e;&#x63;&#111;&#x6d;\">&#x63;&#x6d;&#x6f;&#x72;&#116;&#x69;&#109;&#111;&#x72;&#x65;&#64;&#x73;&#x61;&#x6c;&#x65;&#115;&#x66;&#111;&#114;&#99;&#101;&#x2e;&#x63;&#111;&#x6d;</a>), Salesforce</p>\n<p>Anthony Nadalin (<a href=\"mailto:&#116;&#x6f;&#110;&#121;&#x6e;&#97;&#x64;&#64;&#x6d;&#105;&#99;&#114;&#111;&#x73;&#111;&#x66;&#x74;&#x2e;&#x63;&#x6f;&#x6d;\">&#116;&#x6f;&#110;&#121;&#x6e;&#97;&#x64;&#64;&#x6d;&#105;&#99;&#114;&#111;&#x73;&#111;&#x66;&#x74;&#x2e;&#x63;&#x6f;&#x6d;</a>), Microsoft</p>\n<p>Hideki Nara (<a href=\"mailto:&#x68;&#100;&#x6b;&#110;&#114;&#x40;&#x69;&#99;&#x2d;&#x74;&#x61;&#99;&#x74;&#46;&#x63;&#x6f;&#46;&#106;&#112;\">&#x68;&#100;&#x6b;&#110;&#114;&#x40;&#x69;&#99;&#x2d;&#x74;&#x61;&#99;&#x74;&#46;&#x63;&#x6f;&#46;&#106;&#112;</a>), Tact Communications</p>\n<p>Axel Nennker (<a href=\"mailto:&#x61;&#x78;&#x65;&#108;&#46;&#110;&#x65;&#110;&#110;&#107;&#x65;&#114;&#x40;&#116;&#101;&#x6c;&#101;&#107;&#111;&#x6d;&#x2e;&#100;&#x65;\">&#x61;&#x78;&#x65;&#108;&#46;&#110;&#x65;&#110;&#110;&#107;&#x65;&#114;&#x40;&#116;&#101;&#x6c;&#101;&#107;&#111;&#x6d;&#x2e;&#100;&#x65;</a>), Deutsche Telekom</p>\n<p>David Recordon (<a href=\"mailto:&#100;&#114;&#x40;&#x66;&#98;&#x2e;&#99;&#111;&#109;\">&#100;&#114;&#x40;&#x66;&#98;&#x2e;&#99;&#111;&#109;</a>), Facebook</p>\n<p>Justin Richer (<a href=\"mailto:&#x6a;&#x72;&#x69;&#99;&#x68;&#101;&#x72;&#64;&#109;&#105;&#116;&#x72;&#x65;&#46;&#111;&#x72;&#x67;\">&#x6a;&#x72;&#x69;&#99;&#x68;&#101;&#x72;&#64;&#109;&#105;&#116;&#x72;&#x65;&#46;&#111;&#x72;&#x67;</a>), MITRE</p>\n<p>Nat Sakimura (<a href=\"mailto:&#110;&#45;&#x73;&#97;&#107;&#105;&#x6d;&#117;&#114;&#x61;&#x40;&#x6e;&#x72;&#105;&#46;&#x63;&#111;&#x2e;&#106;&#112;\">&#110;&#45;&#x73;&#97;&#107;&#105;&#x6d;&#117;&#114;&#x61;&#x40;&#x6e;&#x72;&#105;&#46;&#x63;&#111;&#x2e;&#106;&#112;</a>), Nomura Research Institute, Ltd.</p>\n<p>Luke Shepard (<a href=\"mailto:&#x6c;&#115;&#x68;&#101;&#112;&#x61;&#114;&#x64;&#x40;&#x66;&#98;&#x2e;&#x63;&#111;&#x6d;\">&#x6c;&#115;&#x68;&#101;&#112;&#x61;&#114;&#x64;&#x40;&#x66;&#98;&#x2e;&#x63;&#111;&#x6d;</a>), Facebook</p>\n<p>Andreas Åkre Solberg (<a href=\"mailto:&#97;&#110;&#100;&#114;&#x65;&#97;&#115;&#46;&#115;&#111;&#108;&#98;&#x65;&#x72;&#103;&#64;&#x75;&#x6e;&#x69;&#110;&#101;&#116;&#116;&#x2e;&#110;&#111;\">&#97;&#110;&#100;&#114;&#x65;&#97;&#115;&#46;&#115;&#111;&#108;&#98;&#x65;&#x72;&#103;&#64;&#x75;&#x6e;&#x69;&#110;&#101;&#116;&#116;&#x2e;&#110;&#111;</a>), UNINET</p>\n<p>Paul Tarjan (<a href=\"mailto:&#x70;&#116;&#64;&#102;&#98;&#46;&#99;&#x6f;&#x6d;\">&#x70;&#116;&#64;&#102;&#98;&#46;&#99;&#x6f;&#x6d;</a>), Facebook</p>\n</blockquote>\n<hr>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html#toc\"> TOC </a></p>\n<h3 id=\"Appendix-C-Notices\"><a href=\"#Appendix-C-Notices\" class=\"headerlink\" title=\"Appendix C. Notices\"></a>Appendix C. Notices</h3><p>Copyright (c) 2014 The OpenID Foundation.</p>\n<p>The OpenID Foundation (OIDF) grants to any Contributor, developer, implementer, or other interested party a non-exclusive, royalty free, worldwide copyright license to reproduce, prepare derivative works from, distribute, perform and display, this Implementers Draft or Final Specification solely for the purposes of (i) developing specifications, and (ii) implementing Implementers Drafts and Final Specifications based on such documents, provided that attribution be made to the OIDF as the source of the material, but that such attribution does not indicate an endorsement by the OIDF.</p>\n<p>The technology described in this specification was made available from contributions from various sources, including members of the OpenID Foundation and others. Although the OpenID Foundation has taken steps to help ensure that the technology is available for distribution, it takes no position regarding the validity or scope of any intellectual property or other rights that might be claimed to pertain to the implementation or use of the technology described in this specification or the extent to which any license under such rights might or might not be available; neither does it represent that it has made any independent effort to identify any such rights. The OpenID Foundation and the contributors to this specification make no (and hereby expressly disclaim any) warranties (express, implied, or otherwise), including implied warranties of merchantability, non-infringement, fitness for a particular purpose, or title, related to this specification, and the entire risk as to implementing this specification is assumed by the implementer. The OpenID Intellectual Property Rights policy requires contributors to offer a patent promise not to assert certain patent claims against other contributors and against implementers. The OpenID Foundation invites any interested party to bring to its attention any copyrights, patents, patent applications, or other proprietary rights that may cover technology that may be required to practice this specification.</p>\n"},{"title":"安装 longhorn 出现的坑","date":"2023-11-03T05:00:00.000Z","updated":"2025-09-24T06:00:08.738Z","keywords":"k8s","copyright":false,"_content":"\n# 安装 longhorn 出现的坑\n## 安装 longhorn\n```bash\nkubectl apply -f https://raw.githubusercontent.com/longhorn/longhorn/v1.5.1/deploy/longhorn.yaml\n```\n观察安装情况\n```bash\nkubectl get pods \\\n--namespace longhorn-system \\\n--watch\n```\n## 出现的坑\n![Alt text](/img/image.png)\nlonghorn-manager 一直处于 CrashLoopBackOff 状态，查看日志\n```bash\nkubectl logs longhorn-manager-6f8c6f4f5f-8q9q8 -n longhorn-system\n```\n发现是因为缺少 iscsiadm/open-iscsi\n```bash\nroot@dev:~/k8s/kubevirt# kubectl logs -f longhorn-manager-4xgcq -n longhorn-system \ntime=\"2023-11-03T05:41:17Z\" level=fatal msg=\"Error starting manager: Failed environment check, please make sure you have iscsiadm/open-iscsi installed on the host: failed to execute: nsenter [--mount=/host/proc/53233/ns/mnt --net=/host/proc/53233/ns/net iscsiadm --version], output , stderr nsenter: failed to execute iscsiadm: No such file or directory\\n: exit status 127\"\n```\n\n## 解决办法\n```bash\napt install open-iscsi -y\n```\n解决后，longhorn-manager 会自动重启，然后就可以正常使用了\n再次查看状态\n```bash\nroot@dev:~/k8s/kubevirt# kubectl get po -n longhorn-system -o wide\nNAME                                                READY   STATUS    RESTARTS        AGE     IP              NODE   NOMINATED NODE   READINESS GATES\ncsi-attacher-759f487c5-46wrf                        1/1     Running   0               3m19s   10.233.113.63   dev    <none>           <none>\ncsi-attacher-759f487c5-bpdvw                        1/1     Running   0               3m19s   10.233.113.64   dev    <none>           <none>\ncsi-attacher-759f487c5-zmdhw                        1/1     Running   0               3m19s   10.233.113.62   dev    <none>           <none>\ncsi-provisioner-6df8547696-gxp2d                    1/1     Running   0               3m19s   10.233.113.66   dev    <none>           <none>\ncsi-provisioner-6df8547696-mljmk                    1/1     Running   0               3m19s   10.233.113.67   dev    <none>           <none>\ncsi-provisioner-6df8547696-x2ght                    1/1     Running   0               3m19s   10.233.113.65   dev    <none>           <none>\ncsi-resizer-6bf6dbcb4-6t6wt                         1/1     Running   0               3m19s   10.233.113.69   dev    <none>           <none>\ncsi-resizer-6bf6dbcb4-hcwvg                         1/1     Running   0               3m19s   10.233.113.70   dev    <none>           <none>\ncsi-resizer-6bf6dbcb4-shqnc                         1/1     Running   0               3m19s   10.233.113.68   dev    <none>           <none>\ncsi-snapshotter-69d7b7b84-5hspz                     1/1     Running   0               3m18s   10.233.113.72   dev    <none>           <none>\ncsi-snapshotter-69d7b7b84-892jt                     1/1     Running   0               3m18s   10.233.113.73   dev    <none>           <none>\ncsi-snapshotter-69d7b7b84-nv6rx                     1/1     Running   0               3m18s   10.233.113.71   dev    <none>           <none>\nengine-image-ei-74783864-5b96k                      1/1     Running   0               3m27s   10.233.113.59   dev    <none>           <none>\ninstance-manager-9ef5cfc110a5361efb832fc0c716ace1   1/1     Running   0               3m27s   10.233.113.60   dev    <none>           <none>\nlonghorn-csi-plugin-xfmsg                           3/3     Running   0               3m18s   10.233.113.74   dev    <none>           <none>\nlonghorn-driver-deployer-794f4fb6bb-nwdgt           1/1     Running   0               15m     10.233.113.55   dev    <none>           <none>\nlonghorn-manager-4xgcq                              1/1     Running   7 (8m46s ago)   15m     10.233.113.56   dev    <none>           <none>\nlonghorn-ui-79fbb99d7d-hh9ml                        1/1     Running   0               15m     10.233.113.58   dev    <none>           <none>\nlonghorn-ui-79fbb99d7d-kd7mk                        1/1     Running   0               15m     10.233.113.57   dev    <none>           <none>\n```\n正常了","source":"_posts/k8s/安装 longhorn 出现的坑.md","raw":"---\ntitle: 安装 longhorn 出现的坑\ndate: 2023-11-03 13:00:00\nupdated:\ntags: k8s\ncategories: 容器/虚拟化\nkeywords: k8s\ncopyright: false\n---\n\n# 安装 longhorn 出现的坑\n## 安装 longhorn\n```bash\nkubectl apply -f https://raw.githubusercontent.com/longhorn/longhorn/v1.5.1/deploy/longhorn.yaml\n```\n观察安装情况\n```bash\nkubectl get pods \\\n--namespace longhorn-system \\\n--watch\n```\n## 出现的坑\n![Alt text](/img/image.png)\nlonghorn-manager 一直处于 CrashLoopBackOff 状态，查看日志\n```bash\nkubectl logs longhorn-manager-6f8c6f4f5f-8q9q8 -n longhorn-system\n```\n发现是因为缺少 iscsiadm/open-iscsi\n```bash\nroot@dev:~/k8s/kubevirt# kubectl logs -f longhorn-manager-4xgcq -n longhorn-system \ntime=\"2023-11-03T05:41:17Z\" level=fatal msg=\"Error starting manager: Failed environment check, please make sure you have iscsiadm/open-iscsi installed on the host: failed to execute: nsenter [--mount=/host/proc/53233/ns/mnt --net=/host/proc/53233/ns/net iscsiadm --version], output , stderr nsenter: failed to execute iscsiadm: No such file or directory\\n: exit status 127\"\n```\n\n## 解决办法\n```bash\napt install open-iscsi -y\n```\n解决后，longhorn-manager 会自动重启，然后就可以正常使用了\n再次查看状态\n```bash\nroot@dev:~/k8s/kubevirt# kubectl get po -n longhorn-system -o wide\nNAME                                                READY   STATUS    RESTARTS        AGE     IP              NODE   NOMINATED NODE   READINESS GATES\ncsi-attacher-759f487c5-46wrf                        1/1     Running   0               3m19s   10.233.113.63   dev    <none>           <none>\ncsi-attacher-759f487c5-bpdvw                        1/1     Running   0               3m19s   10.233.113.64   dev    <none>           <none>\ncsi-attacher-759f487c5-zmdhw                        1/1     Running   0               3m19s   10.233.113.62   dev    <none>           <none>\ncsi-provisioner-6df8547696-gxp2d                    1/1     Running   0               3m19s   10.233.113.66   dev    <none>           <none>\ncsi-provisioner-6df8547696-mljmk                    1/1     Running   0               3m19s   10.233.113.67   dev    <none>           <none>\ncsi-provisioner-6df8547696-x2ght                    1/1     Running   0               3m19s   10.233.113.65   dev    <none>           <none>\ncsi-resizer-6bf6dbcb4-6t6wt                         1/1     Running   0               3m19s   10.233.113.69   dev    <none>           <none>\ncsi-resizer-6bf6dbcb4-hcwvg                         1/1     Running   0               3m19s   10.233.113.70   dev    <none>           <none>\ncsi-resizer-6bf6dbcb4-shqnc                         1/1     Running   0               3m19s   10.233.113.68   dev    <none>           <none>\ncsi-snapshotter-69d7b7b84-5hspz                     1/1     Running   0               3m18s   10.233.113.72   dev    <none>           <none>\ncsi-snapshotter-69d7b7b84-892jt                     1/1     Running   0               3m18s   10.233.113.73   dev    <none>           <none>\ncsi-snapshotter-69d7b7b84-nv6rx                     1/1     Running   0               3m18s   10.233.113.71   dev    <none>           <none>\nengine-image-ei-74783864-5b96k                      1/1     Running   0               3m27s   10.233.113.59   dev    <none>           <none>\ninstance-manager-9ef5cfc110a5361efb832fc0c716ace1   1/1     Running   0               3m27s   10.233.113.60   dev    <none>           <none>\nlonghorn-csi-plugin-xfmsg                           3/3     Running   0               3m18s   10.233.113.74   dev    <none>           <none>\nlonghorn-driver-deployer-794f4fb6bb-nwdgt           1/1     Running   0               15m     10.233.113.55   dev    <none>           <none>\nlonghorn-manager-4xgcq                              1/1     Running   7 (8m46s ago)   15m     10.233.113.56   dev    <none>           <none>\nlonghorn-ui-79fbb99d7d-hh9ml                        1/1     Running   0               15m     10.233.113.58   dev    <none>           <none>\nlonghorn-ui-79fbb99d7d-kd7mk                        1/1     Running   0               15m     10.233.113.57   dev    <none>           <none>\n```\n正常了","slug":"k8s/安装 longhorn 出现的坑","published":1,"_id":"cloi7akot0000s8vf7ogu62pn","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"安装-longhorn-出现的坑\"><a href=\"#安装-longhorn-出现的坑\" class=\"headerlink\" title=\"安装 longhorn 出现的坑\"></a>安装 longhorn 出现的坑</h1><h2 id=\"安装-longhorn\"><a href=\"#安装-longhorn\" class=\"headerlink\" title=\"安装 longhorn\"></a>安装 longhorn</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-f</span> https://raw.githubusercontent.com/longhorn/longhorn/v1.5.1/deploy/longhorn.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>观察安装情况</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl get pods <span class=\"token punctuation\">\\</span>\n<span class=\"token parameter variable\">--namespace</span> longhorn-system <span class=\"token punctuation\">\\</span>\n<span class=\"token parameter variable\">--watch</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"出现的坑\"><a href=\"#出现的坑\" class=\"headerlink\" title=\"出现的坑\"></a>出现的坑</h2><p><img src=\"/img/image.png\" alt=\"Alt text\"><br>longhorn-manager 一直处于 CrashLoopBackOff 状态，查看日志</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl logs longhorn-manager-6f8c6f4f5f-8q9q8 <span class=\"token parameter variable\">-n</span> longhorn-system<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>发现是因为缺少 iscsiadm&#x2F;open-iscsi</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@dev:~/k8s/kubevirt<span class=\"token comment\"># kubectl logs -f longhorn-manager-4xgcq -n longhorn-system </span>\n<span class=\"token assign-left variable\">time</span><span class=\"token operator\">=</span><span class=\"token string\">\"2023-11-03T05:41:17Z\"</span> <span class=\"token assign-left variable\">level</span><span class=\"token operator\">=</span>fatal <span class=\"token assign-left variable\">msg</span><span class=\"token operator\">=</span><span class=\"token string\">\"Error starting manager: Failed environment check, please make sure you have iscsiadm/open-iscsi installed on the host: failed to execute: nsenter [--mount=/host/proc/53233/ns/mnt --net=/host/proc/53233/ns/net iscsiadm --version], output , stderr nsenter: failed to execute iscsiadm: No such file or directory<span class=\"token entity\" title=\"\\n\">\\n</span>: exit status 127\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">apt</span> <span class=\"token function\">install</span> open-iscsi <span class=\"token parameter variable\">-y</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>解决后，longhorn-manager 会自动重启，然后就可以正常使用了<br>再次查看状态</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@dev:~/k8s/kubevirt<span class=\"token comment\"># kubectl get po -n longhorn-system -o wide</span>\nNAME                                                READY   STATUS    RESTARTS        AGE     IP              NODE   NOMINATED NODE   READINESS GATES\ncsi-attacher-759f487c5-46wrf                        <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m19s   <span class=\"token number\">10.233</span>.113.63   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\ncsi-attacher-759f487c5-bpdvw                        <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m19s   <span class=\"token number\">10.233</span>.113.64   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\ncsi-attacher-759f487c5-zmdhw                        <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m19s   <span class=\"token number\">10.233</span>.113.62   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\ncsi-provisioner-6df8547696-gxp2d                    <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m19s   <span class=\"token number\">10.233</span>.113.66   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\ncsi-provisioner-6df8547696-mljmk                    <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m19s   <span class=\"token number\">10.233</span>.113.67   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\ncsi-provisioner-6df8547696-x2ght                    <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m19s   <span class=\"token number\">10.233</span>.113.65   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\ncsi-resizer-6bf6dbcb4-6t6wt                         <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m19s   <span class=\"token number\">10.233</span>.113.69   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\ncsi-resizer-6bf6dbcb4-hcwvg                         <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m19s   <span class=\"token number\">10.233</span>.113.70   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\ncsi-resizer-6bf6dbcb4-shqnc                         <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m19s   <span class=\"token number\">10.233</span>.113.68   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\ncsi-snapshotter-69d7b7b84-5hspz                     <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m18s   <span class=\"token number\">10.233</span>.113.72   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\ncsi-snapshotter-69d7b7b84-892jt                     <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m18s   <span class=\"token number\">10.233</span>.113.73   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\ncsi-snapshotter-69d7b7b84-nv6rx                     <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m18s   <span class=\"token number\">10.233</span>.113.71   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nengine-image-ei-74783864-5b96k                      <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m27s   <span class=\"token number\">10.233</span>.113.59   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\ninstance-manager-9ef5cfc110a5361efb832fc0c716ace1   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m27s   <span class=\"token number\">10.233</span>.113.60   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nlonghorn-csi-plugin-xfmsg                           <span class=\"token number\">3</span>/3     Running   <span class=\"token number\">0</span>               3m18s   <span class=\"token number\">10.233</span>.113.74   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nlonghorn-driver-deployer-794f4fb6bb-nwdgt           <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               15m     <span class=\"token number\">10.233</span>.113.55   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nlonghorn-manager-4xgcq                              <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">7</span> <span class=\"token punctuation\">(</span>8m46s ago<span class=\"token punctuation\">)</span>   15m     <span class=\"token number\">10.233</span>.113.56   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nlonghorn-ui-79fbb99d7d-hh9ml                        <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               15m     <span class=\"token number\">10.233</span>.113.58   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nlonghorn-ui-79fbb99d7d-kd7mk                        <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               15m     <span class=\"token number\">10.233</span>.113.57   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>正常了</p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}},"cover":"/img/default_cover/geomeric2.png","cover_type":"img","excerpt":"","more":"<h1 id=\"安装-longhorn-出现的坑\"><a href=\"#安装-longhorn-出现的坑\" class=\"headerlink\" title=\"安装 longhorn 出现的坑\"></a>安装 longhorn 出现的坑</h1><h2 id=\"安装-longhorn\"><a href=\"#安装-longhorn\" class=\"headerlink\" title=\"安装 longhorn\"></a>安装 longhorn</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-f</span> https://raw.githubusercontent.com/longhorn/longhorn/v1.5.1/deploy/longhorn.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>观察安装情况</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl get pods <span class=\"token punctuation\">\\</span>\n<span class=\"token parameter variable\">--namespace</span> longhorn-system <span class=\"token punctuation\">\\</span>\n<span class=\"token parameter variable\">--watch</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"出现的坑\"><a href=\"#出现的坑\" class=\"headerlink\" title=\"出现的坑\"></a>出现的坑</h2><p><img src=\"/img/image.png\" alt=\"Alt text\"><br>longhorn-manager 一直处于 CrashLoopBackOff 状态，查看日志</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl logs longhorn-manager-6f8c6f4f5f-8q9q8 <span class=\"token parameter variable\">-n</span> longhorn-system<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>发现是因为缺少 iscsiadm&#x2F;open-iscsi</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@dev:~/k8s/kubevirt<span class=\"token comment\"># kubectl logs -f longhorn-manager-4xgcq -n longhorn-system </span>\n<span class=\"token assign-left variable\">time</span><span class=\"token operator\">=</span><span class=\"token string\">\"2023-11-03T05:41:17Z\"</span> <span class=\"token assign-left variable\">level</span><span class=\"token operator\">=</span>fatal <span class=\"token assign-left variable\">msg</span><span class=\"token operator\">=</span><span class=\"token string\">\"Error starting manager: Failed environment check, please make sure you have iscsiadm/open-iscsi installed on the host: failed to execute: nsenter [--mount=/host/proc/53233/ns/mnt --net=/host/proc/53233/ns/net iscsiadm --version], output , stderr nsenter: failed to execute iscsiadm: No such file or directory<span class=\"token entity\" title=\"\\n\">\\n</span>: exit status 127\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">apt</span> <span class=\"token function\">install</span> open-iscsi <span class=\"token parameter variable\">-y</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>解决后，longhorn-manager 会自动重启，然后就可以正常使用了<br>再次查看状态</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">root@dev:~/k8s/kubevirt<span class=\"token comment\"># kubectl get po -n longhorn-system -o wide</span>\nNAME                                                READY   STATUS    RESTARTS        AGE     IP              NODE   NOMINATED NODE   READINESS GATES\ncsi-attacher-759f487c5-46wrf                        <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m19s   <span class=\"token number\">10.233</span>.113.63   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\ncsi-attacher-759f487c5-bpdvw                        <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m19s   <span class=\"token number\">10.233</span>.113.64   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\ncsi-attacher-759f487c5-zmdhw                        <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m19s   <span class=\"token number\">10.233</span>.113.62   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\ncsi-provisioner-6df8547696-gxp2d                    <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m19s   <span class=\"token number\">10.233</span>.113.66   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\ncsi-provisioner-6df8547696-mljmk                    <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m19s   <span class=\"token number\">10.233</span>.113.67   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\ncsi-provisioner-6df8547696-x2ght                    <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m19s   <span class=\"token number\">10.233</span>.113.65   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\ncsi-resizer-6bf6dbcb4-6t6wt                         <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m19s   <span class=\"token number\">10.233</span>.113.69   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\ncsi-resizer-6bf6dbcb4-hcwvg                         <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m19s   <span class=\"token number\">10.233</span>.113.70   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\ncsi-resizer-6bf6dbcb4-shqnc                         <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m19s   <span class=\"token number\">10.233</span>.113.68   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\ncsi-snapshotter-69d7b7b84-5hspz                     <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m18s   <span class=\"token number\">10.233</span>.113.72   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\ncsi-snapshotter-69d7b7b84-892jt                     <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m18s   <span class=\"token number\">10.233</span>.113.73   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\ncsi-snapshotter-69d7b7b84-nv6rx                     <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m18s   <span class=\"token number\">10.233</span>.113.71   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nengine-image-ei-74783864-5b96k                      <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m27s   <span class=\"token number\">10.233</span>.113.59   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\ninstance-manager-9ef5cfc110a5361efb832fc0c716ace1   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               3m27s   <span class=\"token number\">10.233</span>.113.60   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nlonghorn-csi-plugin-xfmsg                           <span class=\"token number\">3</span>/3     Running   <span class=\"token number\">0</span>               3m18s   <span class=\"token number\">10.233</span>.113.74   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nlonghorn-driver-deployer-794f4fb6bb-nwdgt           <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               15m     <span class=\"token number\">10.233</span>.113.55   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nlonghorn-manager-4xgcq                              <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">7</span> <span class=\"token punctuation\">(</span>8m46s ago<span class=\"token punctuation\">)</span>   15m     <span class=\"token number\">10.233</span>.113.56   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nlonghorn-ui-79fbb99d7d-hh9ml                        <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               15m     <span class=\"token number\">10.233</span>.113.58   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nlonghorn-ui-79fbb99d7d-kd7mk                        <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               15m     <span class=\"token number\">10.233</span>.113.57   dev    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>正常了</p>\n"},{"title":"OAuth 2.0 的一个简单解释","date":"2023-11-01T16:00:00.000Z","updated":"2025-09-24T06:00:08.741Z","keywords":null,"copyright":false,"_content":"\n# OAuth 2.0 的一个简单解释\n\n作者： [阮一峰](https://www.ruanyifeng.com/)\n\n日期： [2019年4月 4日](https://www.ruanyifeng.com/blog/2019/04/)\n\n[OAuth 2.0](https://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html) 是目前最流行的授权机制，用来授权第三方应用，获取用户数据。\n\n这个标准比较抽象，使用了很多术语，初学者不容易理解。其实说起来并不复杂，下面我就通过一个简单的类比，帮助大家轻松理解，OAuth 2.0 到底是什么。\n\n## 一、快递员问题\n\n我住在一个大型的居民小区。\n\n![img](https://www.wangbase.com/blogimg/asset/201904/bg2019040401.jpg)\n\n小区有门禁系统。\n\n![img](https://www.wangbase.com/blogimg/asset/201904/bg2019040402.jpg)\n\n进入的时候需要输入密码。\n\n![img](https://www.wangbase.com/blogimg/asset/201904/bg2019040403.jpg)\n\n我经常网购和外卖，每天都有快递员来送货。我必须找到一个办法，让快递员通过门禁系统，进入小区。\n\n![img](https://www.wangbase.com/blogimg/asset/201904/bg2019040404.jpg)\n\n如果我把自己的密码，告诉快递员，他就拥有了与我同样的权限，这样好像不太合适。万一我想取消他进入小区的权力，也很麻烦，我自己的密码也得跟着改了，还得通知其他的快递员。\n\n有没有一种办法，让快递员能够自由进入小区，又不必知道小区居民的密码，而且他的唯一权限就是送货，其他需要密码的场合，他都没有权限？\n\n## 二、授权机制的设计\n\n于是，我设计了一套授权机制。\n\n第一步，门禁系统的密码输入器下面，增加一个按钮，叫做\"获取授权\"。快递员需要首先按这个按钮，去申请授权。\n\n第二步，他按下按钮以后，屋主（也就是我）的手机就会跳出对话框：有人正在要求授权。系统还会显示该快递员的姓名、工号和所属的快递公司。\n\n我确认请求属实，就点击按钮，告诉门禁系统，我同意给予他进入小区的授权。\n\n第三步，门禁系统得到我的确认以后，向快递员显示一个进入小区的令牌（access token）。令牌就是类似密码的一串数字，只在短期内（比如七天）有效。\n\n第四步，快递员向门禁系统输入令牌，进入小区。\n\n有人可能会问，为什么不是远程为快递员开门，而要为他单独生成一个令牌？这是因为快递员可能每天都会来送货，第二天他还可以复用这个令牌。另外，有的小区有多重门禁，快递员可以使用同一个令牌通过它们。\n\n## 三、互联网场景\n\n我们把上面的例子搬到互联网，就是 OAuth 的设计了。\n\n首先，居民小区就是储存用户数据的网络服务。比如，微信储存了我的好友信息，获取这些信息，就必须经过微信的\"门禁系统\"。\n\n其次，快递员（或者说快递公司）就是第三方应用，想要穿过门禁系统，进入小区。\n\n最后，我就是用户本人，同意授权第三方应用进入小区，获取我的数据。\n\n**简单说，OAuth 就是一种授权机制。数据的所有者告诉系统，同意授权第三方应用进入系统，获取这些数据。系统从而产生一个短期的进入令牌（token），用来代替密码，供第三方应用使用。**\n\n## 四、令牌与密码\n\n令牌（token）与密码（password）的作用是一样的，都可以进入系统，但是有三点差异。\n\n（1）令牌是短期的，到期会自动失效，用户自己无法修改。密码一般长期有效，用户不修改，就不会发生变化。\n\n（2）令牌可以被数据所有者撤销，会立即失效。以上例而言，屋主可以随时取消快递员的令牌。密码一般不允许被他人撤销。\n\n（3）令牌有权限范围（scope），比如只能进小区的二号门。对于网络服务来说，只读令牌就比读写令牌更安全。密码一般是完整权限。\n\n上面这些设计，保证了令牌既可以让第三方应用获得权限，同时又随时可控，不会危及系统安全。这就是 OAuth 2.0 的优点。\n\n注意，只要知道了令牌，就能进入系统。系统一般不会再次确认身份，所以**令牌必须保密，泄漏令牌与泄漏密码的后果是一样的。** 这也是为什么令牌的有效期，一般都设置得很短的原因。\n\nOAuth 2.0 对于如何颁发令牌的细节，规定得非常详细。具体来说，一共分成四种授权类型（authorization grant），即四种颁发令牌的方式，适用于不同的互联网场景。[下一篇文章](https://www.ruanyifeng.com/blog/2019/04/oauth-grant-types.html)，我就来介绍这四种类型，并给出代码实例。","source":"_posts/oauth2/OAuth2 的简单解释.md","raw":"---\ntitle: OAuth 2.0 的一个简单解释\ndate: 2023-11-02\nupdated:\ntags:\n  - OAuth 2.0\ncategories: 标准化文档\nkeywords:\ncopyright: false\n---\n\n# OAuth 2.0 的一个简单解释\n\n作者： [阮一峰](https://www.ruanyifeng.com/)\n\n日期： [2019年4月 4日](https://www.ruanyifeng.com/blog/2019/04/)\n\n[OAuth 2.0](https://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html) 是目前最流行的授权机制，用来授权第三方应用，获取用户数据。\n\n这个标准比较抽象，使用了很多术语，初学者不容易理解。其实说起来并不复杂，下面我就通过一个简单的类比，帮助大家轻松理解，OAuth 2.0 到底是什么。\n\n## 一、快递员问题\n\n我住在一个大型的居民小区。\n\n![img](https://www.wangbase.com/blogimg/asset/201904/bg2019040401.jpg)\n\n小区有门禁系统。\n\n![img](https://www.wangbase.com/blogimg/asset/201904/bg2019040402.jpg)\n\n进入的时候需要输入密码。\n\n![img](https://www.wangbase.com/blogimg/asset/201904/bg2019040403.jpg)\n\n我经常网购和外卖，每天都有快递员来送货。我必须找到一个办法，让快递员通过门禁系统，进入小区。\n\n![img](https://www.wangbase.com/blogimg/asset/201904/bg2019040404.jpg)\n\n如果我把自己的密码，告诉快递员，他就拥有了与我同样的权限，这样好像不太合适。万一我想取消他进入小区的权力，也很麻烦，我自己的密码也得跟着改了，还得通知其他的快递员。\n\n有没有一种办法，让快递员能够自由进入小区，又不必知道小区居民的密码，而且他的唯一权限就是送货，其他需要密码的场合，他都没有权限？\n\n## 二、授权机制的设计\n\n于是，我设计了一套授权机制。\n\n第一步，门禁系统的密码输入器下面，增加一个按钮，叫做\"获取授权\"。快递员需要首先按这个按钮，去申请授权。\n\n第二步，他按下按钮以后，屋主（也就是我）的手机就会跳出对话框：有人正在要求授权。系统还会显示该快递员的姓名、工号和所属的快递公司。\n\n我确认请求属实，就点击按钮，告诉门禁系统，我同意给予他进入小区的授权。\n\n第三步，门禁系统得到我的确认以后，向快递员显示一个进入小区的令牌（access token）。令牌就是类似密码的一串数字，只在短期内（比如七天）有效。\n\n第四步，快递员向门禁系统输入令牌，进入小区。\n\n有人可能会问，为什么不是远程为快递员开门，而要为他单独生成一个令牌？这是因为快递员可能每天都会来送货，第二天他还可以复用这个令牌。另外，有的小区有多重门禁，快递员可以使用同一个令牌通过它们。\n\n## 三、互联网场景\n\n我们把上面的例子搬到互联网，就是 OAuth 的设计了。\n\n首先，居民小区就是储存用户数据的网络服务。比如，微信储存了我的好友信息，获取这些信息，就必须经过微信的\"门禁系统\"。\n\n其次，快递员（或者说快递公司）就是第三方应用，想要穿过门禁系统，进入小区。\n\n最后，我就是用户本人，同意授权第三方应用进入小区，获取我的数据。\n\n**简单说，OAuth 就是一种授权机制。数据的所有者告诉系统，同意授权第三方应用进入系统，获取这些数据。系统从而产生一个短期的进入令牌（token），用来代替密码，供第三方应用使用。**\n\n## 四、令牌与密码\n\n令牌（token）与密码（password）的作用是一样的，都可以进入系统，但是有三点差异。\n\n（1）令牌是短期的，到期会自动失效，用户自己无法修改。密码一般长期有效，用户不修改，就不会发生变化。\n\n（2）令牌可以被数据所有者撤销，会立即失效。以上例而言，屋主可以随时取消快递员的令牌。密码一般不允许被他人撤销。\n\n（3）令牌有权限范围（scope），比如只能进小区的二号门。对于网络服务来说，只读令牌就比读写令牌更安全。密码一般是完整权限。\n\n上面这些设计，保证了令牌既可以让第三方应用获得权限，同时又随时可控，不会危及系统安全。这就是 OAuth 2.0 的优点。\n\n注意，只要知道了令牌，就能进入系统。系统一般不会再次确认身份，所以**令牌必须保密，泄漏令牌与泄漏密码的后果是一样的。** 这也是为什么令牌的有效期，一般都设置得很短的原因。\n\nOAuth 2.0 对于如何颁发令牌的细节，规定得非常详细。具体来说，一共分成四种授权类型（authorization grant），即四种颁发令牌的方式，适用于不同的互联网场景。[下一篇文章](https://www.ruanyifeng.com/blog/2019/04/oauth-grant-types.html)，我就来介绍这四种类型，并给出代码实例。","slug":"oauth2/OAuth2 的简单解释","published":1,"_id":"cloi7akow0001s8vf0grb2y0e","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"OAuth-2-0-的一个简单解释\"><a href=\"#OAuth-2-0-的一个简单解释\" class=\"headerlink\" title=\"OAuth 2.0 的一个简单解释\"></a>OAuth 2.0 的一个简单解释</h1><p>作者： <a href=\"https://www.ruanyifeng.com/\">阮一峰</a></p>\n<p>日期： <a href=\"https://www.ruanyifeng.com/blog/2019/04/\">2019年4月 4日</a></p>\n<p><a href=\"https://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html\">OAuth 2.0</a> 是目前最流行的授权机制，用来授权第三方应用，获取用户数据。</p>\n<p>这个标准比较抽象，使用了很多术语，初学者不容易理解。其实说起来并不复杂，下面我就通过一个简单的类比，帮助大家轻松理解，OAuth 2.0 到底是什么。</p>\n<h2 id=\"一、快递员问题\"><a href=\"#一、快递员问题\" class=\"headerlink\" title=\"一、快递员问题\"></a>一、快递员问题</h2><p>我住在一个大型的居民小区。</p>\n<p><img src=\"https://www.wangbase.com/blogimg/asset/201904/bg2019040401.jpg\" alt=\"img\"></p>\n<p>小区有门禁系统。</p>\n<p><img src=\"https://www.wangbase.com/blogimg/asset/201904/bg2019040402.jpg\" alt=\"img\"></p>\n<p>进入的时候需要输入密码。</p>\n<p><img src=\"https://www.wangbase.com/blogimg/asset/201904/bg2019040403.jpg\" alt=\"img\"></p>\n<p>我经常网购和外卖，每天都有快递员来送货。我必须找到一个办法，让快递员通过门禁系统，进入小区。</p>\n<p><img src=\"https://www.wangbase.com/blogimg/asset/201904/bg2019040404.jpg\" alt=\"img\"></p>\n<p>如果我把自己的密码，告诉快递员，他就拥有了与我同样的权限，这样好像不太合适。万一我想取消他进入小区的权力，也很麻烦，我自己的密码也得跟着改了，还得通知其他的快递员。</p>\n<p>有没有一种办法，让快递员能够自由进入小区，又不必知道小区居民的密码，而且他的唯一权限就是送货，其他需要密码的场合，他都没有权限？</p>\n<h2 id=\"二、授权机制的设计\"><a href=\"#二、授权机制的设计\" class=\"headerlink\" title=\"二、授权机制的设计\"></a>二、授权机制的设计</h2><p>于是，我设计了一套授权机制。</p>\n<p>第一步，门禁系统的密码输入器下面，增加一个按钮，叫做”获取授权”。快递员需要首先按这个按钮，去申请授权。</p>\n<p>第二步，他按下按钮以后，屋主（也就是我）的手机就会跳出对话框：有人正在要求授权。系统还会显示该快递员的姓名、工号和所属的快递公司。</p>\n<p>我确认请求属实，就点击按钮，告诉门禁系统，我同意给予他进入小区的授权。</p>\n<p>第三步，门禁系统得到我的确认以后，向快递员显示一个进入小区的令牌（access token）。令牌就是类似密码的一串数字，只在短期内（比如七天）有效。</p>\n<p>第四步，快递员向门禁系统输入令牌，进入小区。</p>\n<p>有人可能会问，为什么不是远程为快递员开门，而要为他单独生成一个令牌？这是因为快递员可能每天都会来送货，第二天他还可以复用这个令牌。另外，有的小区有多重门禁，快递员可以使用同一个令牌通过它们。</p>\n<h2 id=\"三、互联网场景\"><a href=\"#三、互联网场景\" class=\"headerlink\" title=\"三、互联网场景\"></a>三、互联网场景</h2><p>我们把上面的例子搬到互联网，就是 OAuth 的设计了。</p>\n<p>首先，居民小区就是储存用户数据的网络服务。比如，微信储存了我的好友信息，获取这些信息，就必须经过微信的”门禁系统”。</p>\n<p>其次，快递员（或者说快递公司）就是第三方应用，想要穿过门禁系统，进入小区。</p>\n<p>最后，我就是用户本人，同意授权第三方应用进入小区，获取我的数据。</p>\n<p><strong>简单说，OAuth 就是一种授权机制。数据的所有者告诉系统，同意授权第三方应用进入系统，获取这些数据。系统从而产生一个短期的进入令牌（token），用来代替密码，供第三方应用使用。</strong></p>\n<h2 id=\"四、令牌与密码\"><a href=\"#四、令牌与密码\" class=\"headerlink\" title=\"四、令牌与密码\"></a>四、令牌与密码</h2><p>令牌（token）与密码（password）的作用是一样的，都可以进入系统，但是有三点差异。</p>\n<p>（1）令牌是短期的，到期会自动失效，用户自己无法修改。密码一般长期有效，用户不修改，就不会发生变化。</p>\n<p>（2）令牌可以被数据所有者撤销，会立即失效。以上例而言，屋主可以随时取消快递员的令牌。密码一般不允许被他人撤销。</p>\n<p>（3）令牌有权限范围（scope），比如只能进小区的二号门。对于网络服务来说，只读令牌就比读写令牌更安全。密码一般是完整权限。</p>\n<p>上面这些设计，保证了令牌既可以让第三方应用获得权限，同时又随时可控，不会危及系统安全。这就是 OAuth 2.0 的优点。</p>\n<p>注意，只要知道了令牌，就能进入系统。系统一般不会再次确认身份，所以<strong>令牌必须保密，泄漏令牌与泄漏密码的后果是一样的。</strong> 这也是为什么令牌的有效期，一般都设置得很短的原因。</p>\n<p>OAuth 2.0 对于如何颁发令牌的细节，规定得非常详细。具体来说，一共分成四种授权类型（authorization grant），即四种颁发令牌的方式，适用于不同的互联网场景。<a href=\"https://www.ruanyifeng.com/blog/2019/04/oauth-grant-types.html\">下一篇文章</a>，我就来介绍这四种类型，并给出代码实例。</p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}},"cover":"/img/default_cover/geomeric3.png","cover_type":"img","excerpt":"","more":"<h1 id=\"OAuth-2-0-的一个简单解释\"><a href=\"#OAuth-2-0-的一个简单解释\" class=\"headerlink\" title=\"OAuth 2.0 的一个简单解释\"></a>OAuth 2.0 的一个简单解释</h1><p>作者： <a href=\"https://www.ruanyifeng.com/\">阮一峰</a></p>\n<p>日期： <a href=\"https://www.ruanyifeng.com/blog/2019/04/\">2019年4月 4日</a></p>\n<p><a href=\"https://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html\">OAuth 2.0</a> 是目前最流行的授权机制，用来授权第三方应用，获取用户数据。</p>\n<p>这个标准比较抽象，使用了很多术语，初学者不容易理解。其实说起来并不复杂，下面我就通过一个简单的类比，帮助大家轻松理解，OAuth 2.0 到底是什么。</p>\n<h2 id=\"一、快递员问题\"><a href=\"#一、快递员问题\" class=\"headerlink\" title=\"一、快递员问题\"></a>一、快递员问题</h2><p>我住在一个大型的居民小区。</p>\n<p><img src=\"https://www.wangbase.com/blogimg/asset/201904/bg2019040401.jpg\" alt=\"img\"></p>\n<p>小区有门禁系统。</p>\n<p><img src=\"https://www.wangbase.com/blogimg/asset/201904/bg2019040402.jpg\" alt=\"img\"></p>\n<p>进入的时候需要输入密码。</p>\n<p><img src=\"https://www.wangbase.com/blogimg/asset/201904/bg2019040403.jpg\" alt=\"img\"></p>\n<p>我经常网购和外卖，每天都有快递员来送货。我必须找到一个办法，让快递员通过门禁系统，进入小区。</p>\n<p><img src=\"https://www.wangbase.com/blogimg/asset/201904/bg2019040404.jpg\" alt=\"img\"></p>\n<p>如果我把自己的密码，告诉快递员，他就拥有了与我同样的权限，这样好像不太合适。万一我想取消他进入小区的权力，也很麻烦，我自己的密码也得跟着改了，还得通知其他的快递员。</p>\n<p>有没有一种办法，让快递员能够自由进入小区，又不必知道小区居民的密码，而且他的唯一权限就是送货，其他需要密码的场合，他都没有权限？</p>\n<h2 id=\"二、授权机制的设计\"><a href=\"#二、授权机制的设计\" class=\"headerlink\" title=\"二、授权机制的设计\"></a>二、授权机制的设计</h2><p>于是，我设计了一套授权机制。</p>\n<p>第一步，门禁系统的密码输入器下面，增加一个按钮，叫做”获取授权”。快递员需要首先按这个按钮，去申请授权。</p>\n<p>第二步，他按下按钮以后，屋主（也就是我）的手机就会跳出对话框：有人正在要求授权。系统还会显示该快递员的姓名、工号和所属的快递公司。</p>\n<p>我确认请求属实，就点击按钮，告诉门禁系统，我同意给予他进入小区的授权。</p>\n<p>第三步，门禁系统得到我的确认以后，向快递员显示一个进入小区的令牌（access token）。令牌就是类似密码的一串数字，只在短期内（比如七天）有效。</p>\n<p>第四步，快递员向门禁系统输入令牌，进入小区。</p>\n<p>有人可能会问，为什么不是远程为快递员开门，而要为他单独生成一个令牌？这是因为快递员可能每天都会来送货，第二天他还可以复用这个令牌。另外，有的小区有多重门禁，快递员可以使用同一个令牌通过它们。</p>\n<h2 id=\"三、互联网场景\"><a href=\"#三、互联网场景\" class=\"headerlink\" title=\"三、互联网场景\"></a>三、互联网场景</h2><p>我们把上面的例子搬到互联网，就是 OAuth 的设计了。</p>\n<p>首先，居民小区就是储存用户数据的网络服务。比如，微信储存了我的好友信息，获取这些信息，就必须经过微信的”门禁系统”。</p>\n<p>其次，快递员（或者说快递公司）就是第三方应用，想要穿过门禁系统，进入小区。</p>\n<p>最后，我就是用户本人，同意授权第三方应用进入小区，获取我的数据。</p>\n<p><strong>简单说，OAuth 就是一种授权机制。数据的所有者告诉系统，同意授权第三方应用进入系统，获取这些数据。系统从而产生一个短期的进入令牌（token），用来代替密码，供第三方应用使用。</strong></p>\n<h2 id=\"四、令牌与密码\"><a href=\"#四、令牌与密码\" class=\"headerlink\" title=\"四、令牌与密码\"></a>四、令牌与密码</h2><p>令牌（token）与密码（password）的作用是一样的，都可以进入系统，但是有三点差异。</p>\n<p>（1）令牌是短期的，到期会自动失效，用户自己无法修改。密码一般长期有效，用户不修改，就不会发生变化。</p>\n<p>（2）令牌可以被数据所有者撤销，会立即失效。以上例而言，屋主可以随时取消快递员的令牌。密码一般不允许被他人撤销。</p>\n<p>（3）令牌有权限范围（scope），比如只能进小区的二号门。对于网络服务来说，只读令牌就比读写令牌更安全。密码一般是完整权限。</p>\n<p>上面这些设计，保证了令牌既可以让第三方应用获得权限，同时又随时可控，不会危及系统安全。这就是 OAuth 2.0 的优点。</p>\n<p>注意，只要知道了令牌，就能进入系统。系统一般不会再次确认身份，所以<strong>令牌必须保密，泄漏令牌与泄漏密码的后果是一样的。</strong> 这也是为什么令牌的有效期，一般都设置得很短的原因。</p>\n<p>OAuth 2.0 对于如何颁发令牌的细节，规定得非常详细。具体来说，一共分成四种授权类型（authorization grant），即四种颁发令牌的方式，适用于不同的互联网场景。<a href=\"https://www.ruanyifeng.com/blog/2019/04/oauth-grant-types.html\">下一篇文章</a>，我就来介绍这四种类型，并给出代码实例。</p>\n"},{"title":"mysql 查看表字段注释","date":"2023-12-26T16:00:00.000Z","updated":"2025-09-24T06:00:08.741Z","keywords":null,"copyright":false,"_content":"\n1. **查看列注释**：\n\n   - 您可以通过两种方式查看 MySQL 列的注释：\n\n     - 使用`SHOW FULL COLUMNS`查询：\n\n       ```sql\n       SHOW FULL COLUMNS FROM employee_designation;\n       ```\n     - 使用 MySQL Workbench：\n       - 在 SCHEMAS 部分选择表，然后点击信息图标。\n       - 切换到 COLUMNS 标签，即可查看列的注释。","source":"_posts/mysql/mysql 查看表字段注释.md","raw":"---\ntitle: mysql 查看表字段注释\ndate: 2023-12-27\nupdated:\ntags:\n  - mysql\ncategories: mysql\nkeywords:\ncopyright: false\n---\n\n1. **查看列注释**：\n\n   - 您可以通过两种方式查看 MySQL 列的注释：\n\n     - 使用`SHOW FULL COLUMNS`查询：\n\n       ```sql\n       SHOW FULL COLUMNS FROM employee_designation;\n       ```\n     - 使用 MySQL Workbench：\n       - 在 SCHEMAS 部分选择表，然后点击信息图标。\n       - 切换到 COLUMNS 标签，即可查看列的注释。","slug":"mysql/mysql 查看表字段注释","published":1,"_id":"clqn5fifg0000mg7h3d4w07v0","comments":1,"layout":"post","photos":[],"link":"","content":"<ol>\n<li><p><strong>查看列注释</strong>：</p>\n<ul>\n<li><p>您可以通过两种方式查看 MySQL 列的注释：</p>\n<ul>\n<li><p>使用<code>SHOW FULL COLUMNS</code>查询：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SHOW</span> <span class=\"token keyword\">FULL</span> <span class=\"token keyword\">COLUMNS</span> <span class=\"token keyword\">FROM</span> employee_designation<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>使用 MySQL Workbench：</p>\n<ul>\n<li>在 SCHEMAS 部分选择表，然后点击信息图标。</li>\n<li>切换到 COLUMNS 标签，即可查看列的注释。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}},"cover":"/img/default_cover/geomeric7.jpg","cover_type":"img","excerpt":"","more":"<ol>\n<li><p><strong>查看列注释</strong>：</p>\n<ul>\n<li><p>您可以通过两种方式查看 MySQL 列的注释：</p>\n<ul>\n<li><p>使用<code>SHOW FULL COLUMNS</code>查询：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SHOW</span> <span class=\"token keyword\">FULL</span> <span class=\"token keyword\">COLUMNS</span> <span class=\"token keyword\">FROM</span> employee_designation<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>使用 MySQL Workbench：</p>\n<ul>\n<li>在 SCHEMAS 部分选择表，然后点击信息图标。</li>\n<li>切换到 COLUMNS 标签，即可查看列的注释。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n"},{"title":"技术文章梳理","date":"2023-12-27T16:00:00.000Z","_content":"\n# 技术文章\n## 计算机基础\n- <a href=\"https://www.cnblogs.com/itdragon/p/13700939.html\" target=\"_blank\">Socket 核心原理分享</a>\n- <a href=\"https://www.cnblogs.com/jingmoxukong/p/7755643.html\" target=\"_blank\">WebSocket 详解教程</a>\n- <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\" target=\"_blank\">常见 MIME 类型列表</a>\n## linux\n- <a href=\"https://blog.csdn.net/xingyegt/article/details/61548601\" target=\"_blank\">Vi 常用命令</a>\n- <a href=\"https://blog.csdn.net/u010452388/article/details/86481868\" target=\"_blank\">Linux固定IP地址</a>\n- <a href=\"https://www.cnblogs.com/liaojie970/p/6746230.html\" target=\"_blank\">linux如何复制文件夹和移动文件夹</a>\n- <a href=\"https://www.cnblogs.com/jiftle/p/9707518.html\" target=\"_blank\">linux find 命令查找文件和文件夹</a>\n- <a href=\"https://www.cnblogs.com/wmhuang/p/7516273.html\" target=\"_blank\">HTTPS静态服务搭建过程详解</a>\n- <a href=\"https://www.linuxidc.com/Linux/2017-04/143031.htm\" target=\"_blank\">Linux中查询当前用户的命令总结</a>\n- <a href=\"http://www.178linux.com/86931?utm_source=tuicool&amp;utm_medium=referral\" target=\"_blank\">OpenSSL 及创建私有CA</a>\n## 对象存储\n- <a href=\"https://www.cnblogs.com/chris-cp/p/4835507.html\" target=\"_blank\">Amazon S3 API</a>\n- <a href=\"https://www.cnblogs.com/web424/p/6840207.html\" target=\"_blank\">Amazon S3 功能介绍</a>\n- <a href=\"https://blog.csdn.net/r_12xq/article/details/88424894\" target=\"_blank\">OOS对象存储</a>\n## Nginx\n- <a href=\"https://www.cnblogs.com/bjlhx/p/10477099.html\" target=\"_blank\">idea-常用插件-nginx</a>\n- <a href=\"https://www.runoob.com/w3cnote/nginx-setup-intro.html\" target=\"_blank\">Nginx 配置详解</a>\n- <a href=\"https://www.cnblogs.com/kevingrace/p/9512287.html\" target=\"_blank\">Nginx支持WebSocket反向代理-学习小结</a>\n## 数据库\n- <a href=\"https://www.cnblogs.com/takumicx/p/9998844.html\" target=\"_blank\">数据库事务的概念及其实现原理</a>\n- <a href=\"https://www.cnblogs.com/dong897812629/archive/2013/03/27/2981142.html\" target=\"_blank\">视图、索引、存储过程 、触发器、游标及事务</a>\n### MongoDB\n- <a href=\"https://www.cnblogs.com/TM0831/p/10606624.html\" target=\"_blank\">最详细的Windows平台安装MongoDB教程</a>\n### MySQL\n#### 基础\n- <a href=\"https://www.cnblogs.com/mycapple-zgs-111411/p/7680529.html\" target=\"_blank\">mysql创建存储过程</a>\n- <a href=\"https://blog.csdn.net/wuhuagu_wuhuaguo/article/details/90522435\" target=\"_blank\">MySQL 字符串截取函数</a>\n- <a href=\"https://www.cnblogs.com/boothsun/p/7792341.html\" target=\"_blank\">MySQL的七种join</a>\n- <a href=\"https://www.cnblogs.com/chenqionghe/p/4675844.html\" target=\"_blank\">MySQL CAST与CONVERT 函数的用法</a>\n- <a href=\"https://www.cnblogs.com/ggjucheng/p/3352280.html\" target=\"_blank\"> MySQL 获得当前日期时间 函数</a>\n- <a href=\"https://www.cnblogs.com/kaiwen1/p/6869025.html\" target=\"_blank\">MySQL外键设置中的的 Cascade、NO ACTION、Restrict、SET NULL&nbsp;</a>\n- <a href=\"https://blog.csdn.net/hry2015/article/details/76359281\" target=\"_blank\">mysql语法总结</a>\n- <a href=\"https://www.cnblogs.com/yang82/p/7794712.html\" target=\"_blank\">MySQL如何修改密码</a>\n- <a href=\"https://blog.csdn.net/mary19920410/article/details/76545053\" target=\"_blank\">浅析MySQL中concat以及group_concat的使用</a>\n#### 进阶\n- <a href=\"https://www.cnblogs.com/boothsun/p/8970952.html#autoid-7-1-0\" target=\"_blank\">MySQL索引底层实现原理 \n</a>\n- <a href=\"https://www.cnblogs.com/boothsun/p/8480909.html\" target=\"_blank\">MySQL查询性能优化&nbsp;</a>\n- <a href=\"https://www.cnblogs.com/vicenteforever/articles/1613119.html\" target=\"_blank\">InnoDB与Myisam的六大区别</a>\n- <a href=\"https://www.cnblogs.com/boothsun/p/7872669.html\" target=\"_blank\">MySQL 主从复制 \n</a>\n- <a href=\"https://www.cnblogs.com/boothsun/p/7774019.html\" target=\"_blank\">MySQL建立高性能索引策略 \n</a>\n- <a href=\"https://www.cnblogs.com/hustcat/archive/2009/10/28/1591648.html\" target=\"_blank\">理解MySQL——索引与优化</a>\n- <a href=\"https://www.cnblogs.com/zongyl/p/6021097.html\" target=\"_blank\">通过乐观锁（版本号）降低并发时的锁竞争问题</a>\n##### MySQL 优化\n- <a href=\"https://www.cnblogs.com/zhanjindong/p/3439042.html\" target=\"_blank\">MySQL优化—工欲善其事，必先利其器之EXPLAIN</a>\n- <a href=\"https://www.cnblogs.com/zhanjindong/p/3472804.html\" target=\"_blank\">MySQL优化—工欲善其事，必先利其器（2）</a>\n### Oracle\n- <a href=\"https://www.jb51.net/article/187271.htm\" target=\"_blank\">Windows10安装Oracle19c数据库详细记录</a>\n#### 授权\n- <a href=\"http://blog.itpub.net/29500582/viewspace-1314555/\" target=\"_blank\">Oracle查看当前登陆用户的权限或者角色</a>\n- <a href=\"https://www.cnblogs.com/roger112/p/7685307.html\" target=\"_blank\">Oracle创建用户、角色、授权、建表&nbsp;</a>\n- <a href=\"https://www.cnblogs.com/rosesmall/p/5767605.html\" target=\"_blank\">查看Oracle数据库的用户名和密码</a>\n### Redis\n- <a href=\"https://www.runoob.com/redis/redis-install.html\" target=\"_blank\">Redis 安装</a>\n- <a href=\"https://blog.csdn.net/yejingtao703/article/details/78484151\" target=\"_blank\">三张图秒懂Redis集群设计原理</a>\n- 在windows上搭建redis集群（Redis-Cluster）</a>\n- <a href=\"https://www.cnblogs.com/tommy-huang/p/6240083.html\" target=\"_blank\">Windows下搭建Redis集群</a>\n### SQL Server\n- <a href=\"https://www.cnblogs.com/wuyifu/p/3447870.html\" target=\"_blank\">SQL Server中的锁 详解 nolock,rowlock,tablock,xlock,paglock</a>\n- <a href=\"https://www.cnblogs.com/Brambling/p/6754993.html\" target=\"_blank\">SQL Server 创建索引（index）</a>\n- <a href=\"https://www.cnblogs.com/CreateMyself/p/6512692.html\" target=\"_blank\">SQL Server-聚焦NOLOCK、UPDLOCK、HOLDLOCK、READPAST你弄懂多少？</a>\n- <a href=\"https://www.w3school.com.cn/sql/func_datediff.asp\" target=\"_blank\">SQL Server DATEDIFF() 函数</a>\n- <a href=\"https://www.cnblogs.com/xwdreamer/archive/2012/06/23/2559344.html\" target=\"_blank\">查看sqlserver的端口号</a>\n- <a href=\"https://www.cnblogs.com/JohnnyBao/p/3799054.html\" target=\"_blank\">sql server 判断是否存在数据库，表，列，视图</a>\n- <a href=\"https://www.cnblogs.com/zhangpengnike/p/6122588.html\" target=\"_blank\">SQLServer 日期函数大全</a>\n## NodeJS\n- <a href=\"https://blog.csdn.net/uzizi/article/details/81046646\" target=\"_blank\">windows安装nvm的两种方式</a>\n## 分布式\n- <a href=\"https://www.cnblogs.com/jasontec/p/9698774.html\" target=\"_blank\">分布式系统理论--CAP理论、BASE理论</a>\n- <a href=\"https://www.cnblogs.com/boothsun/p/8976409.html\" target=\"_blank\">分布式事务解决办法 </a>\n## 面试题\n- Solr和ES对比</a>\n- <a href=\"https://juejin.cn/post/6844903955722403848#heading-0\" target=\"_blank\">9月腾讯、百度、阿里高频的29道SSM框架面试题解析</a>\n- <a href=\"https://blog.csdn.net/shmnh/article/details/42833291\" target=\"_blank\">28个MongoDB经典面试题</a>\n- <a href=\"https://blog.csdn.net/cliper9768/article/details/82870163\" target=\"_blank\">Dubbo面试题</a>\n- <a href=\"https://blog.csdn.net/qq_42629110/article/details/84963815\" target=\"_blank\">SpringCloud面试题</a>\n- <a href=\"https://blog.csdn.net/suxiexingchen/article/details/82020430\" target=\"_blank\">springBoot应用启动器基本的一共有44种</a>\n- <a href=\"https://blog.csdn.net/qq_34337272/article/details/81072874\" target=\"_blank\">面试必备之乐观锁与悲观锁</a>\n- <a href=\"https://juejin.cn/post/6844903809613840398\" target=\"_blank\">比较全面的中级Java面试题</a>\n## Java\n### 基础知识\n- <a href=\"https://mp.weixin.qq.com/s?__biz=Mzg2OTA0Njk0OA==&amp;mid=2247484920&amp;amp;idx=1&amp;amp;sn=c7167df0b36522935896565973d02cc9&amp;source=41#wechat_redirect\" target=\"_blank\">后端必备——数据通信知识(RPC、消息队列)一站式总结</a>\n#### JSR330\n- <a href=\"https://blog.csdn.net/u010278882/article/details/50773687\" target=\"_blank\">Java 依赖注入标准 JSR-330 简介</a>\n- <a href=\"https://www.chkui.com/article/java/java_jsr330\" target=\"_blank\">Java JSR330</a>\n- <a href=\"https://www.cnblogs.com/hhhshct/p/8523697.html\" target=\"_blank\">java实现HTTP请求的三种方式</a>\n- <a href=\"https://www.cnblogs.com/super-chao/p/6118739.html\" target=\"_blank\">java中cookie存取值</a>\n- <a href=\"https://baijiahao.baidu.com/s?id=1647621616629561468&amp;wfr=spider&amp;for=pc\" target=\"_blank\">详解java并发原子类AtomicInteger（基于jdk1.8源码分析）</a>\n- <a href=\"https://blog.csdn.net/weixin_38111667/article/details/81630290\" target=\"_blank\">JAVA &amp;&amp; java.lang.UnsatisfiedLinkError: The specified module could not be found.找不到指定模块</a>\n#### JVM\n- <a href=\"https://blog.csdn.net/weixin_40792878/article/details/82154402\" target=\"_blank\">Java虚拟机内存参数设置</a>\n#### 多线程\n- <a href=\"https://www.cnblogs.com/XHJT/p/3897440.html\" target=\"_blank\">线程同步的7种方式</a>\n### Spring\n- <a href=\"https://www.cnblogs.com/redcool/p/6426173.html\" target=\"_blank\">Spring线程池ThreadPoolTaskExecutor配置及详情</a>\n- <a href=\"https://www.cnblogs.com/pjfmeng/p/7551340.html\" target=\"_blank\">annotation之@Autowired、@Inject、@Resource三者区别</a>\n- <a href=\"https://blog.csdn.net/m0_37626813/article/details/78558010\" target=\"_blank\">Spring中@Component的作用</a>\n### SpringMVC\n- <a href=\"https://blog.csdn.net/littleskey/article/details/52841148\" target=\"_blank\">Spring Mvc @ResponseBody String返回中文字符串乱码</a>\n- <a href=\"https://www.cnblogs.com/WJ-163/p/6269409.html\" target=\"_blank\">SpringMVC文件上传与下载</a>\n- <a href=\"https://blog.csdn.net/liuxiao723846/article/details/46006275\" target=\"_blank\">jackson详解</a>\n### Spring Boot\n- <a href=\"https://www.cnblogs.com/itdragon/p/8686554.html\" target=\"_blank\">Spring Boot配置文件详解</a>\n- <a href=\"https://www.cnblogs.com/yuansc/p/9076604.html\" target=\"_blank\">SpringBoot配置Cors解决跨域请求问题</a>\n### Spring Cloud\n- <a href=\"https://blog.csdn.net/loushuiyifan/article/details/82702522\" target=\"_blank\">Hystrix原理与实战</a>\n### MyBatis\n- <a href=\"https://www.cnblogs.com/happyflyingpig/p/7739749.html\" target=\"_blank\">mybatis一级缓存二级缓存&nbsp;&nbsp;</a>\n### ShardingSpare\n- <a href=\"https://shardingsphere.apache.org/document/legacy/4.x/document/cn/overview/\" target=\"_blank\">shardingsphere 官方文档</a>\n### Zookeeper\n- <a href=\"https://www.cnblogs.com/jasontec/p/9651820.html\" target=\"_blank\">Zookeeper 与 Eureka 对比</a>\n- <a href=\"https://www.cnblogs.com/boothsun/p/8976502.html\" target=\"_blank\">ZooKeeper的典型应用场景 \n</a>\n- <a href=\"https://www.cnblogs.com/boothsun/p/8976829.html\" target=\"_blank\">ZK分布式锁（未完 待续）&nbsp;</a>\n### Druid\n- <a href=\"https://www.cnblogs.com/niejunlei/p/5977895.html\" target=\"_blank\">Druid 介绍及配置</a>\n### Log4j\n- <a href=\"http://www.blogjava.net/zJun/archive/2006/06/28/55511.html\" target=\"_blank\">配置Log4j(很详细)</a>\n### 日志分析\n- &nbsp;\n","source":"_posts/java/技术文章梳理.md","raw":"---\ntitle: 技术文章梳理\ndate: 2023-12-28\ncategories: 技术栈\n---\n\n# 技术文章\n## 计算机基础\n- <a href=\"https://www.cnblogs.com/itdragon/p/13700939.html\" target=\"_blank\">Socket 核心原理分享</a>\n- <a href=\"https://www.cnblogs.com/jingmoxukong/p/7755643.html\" target=\"_blank\">WebSocket 详解教程</a>\n- <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\" target=\"_blank\">常见 MIME 类型列表</a>\n## linux\n- <a href=\"https://blog.csdn.net/xingyegt/article/details/61548601\" target=\"_blank\">Vi 常用命令</a>\n- <a href=\"https://blog.csdn.net/u010452388/article/details/86481868\" target=\"_blank\">Linux固定IP地址</a>\n- <a href=\"https://www.cnblogs.com/liaojie970/p/6746230.html\" target=\"_blank\">linux如何复制文件夹和移动文件夹</a>\n- <a href=\"https://www.cnblogs.com/jiftle/p/9707518.html\" target=\"_blank\">linux find 命令查找文件和文件夹</a>\n- <a href=\"https://www.cnblogs.com/wmhuang/p/7516273.html\" target=\"_blank\">HTTPS静态服务搭建过程详解</a>\n- <a href=\"https://www.linuxidc.com/Linux/2017-04/143031.htm\" target=\"_blank\">Linux中查询当前用户的命令总结</a>\n- <a href=\"http://www.178linux.com/86931?utm_source=tuicool&amp;utm_medium=referral\" target=\"_blank\">OpenSSL 及创建私有CA</a>\n## 对象存储\n- <a href=\"https://www.cnblogs.com/chris-cp/p/4835507.html\" target=\"_blank\">Amazon S3 API</a>\n- <a href=\"https://www.cnblogs.com/web424/p/6840207.html\" target=\"_blank\">Amazon S3 功能介绍</a>\n- <a href=\"https://blog.csdn.net/r_12xq/article/details/88424894\" target=\"_blank\">OOS对象存储</a>\n## Nginx\n- <a href=\"https://www.cnblogs.com/bjlhx/p/10477099.html\" target=\"_blank\">idea-常用插件-nginx</a>\n- <a href=\"https://www.runoob.com/w3cnote/nginx-setup-intro.html\" target=\"_blank\">Nginx 配置详解</a>\n- <a href=\"https://www.cnblogs.com/kevingrace/p/9512287.html\" target=\"_blank\">Nginx支持WebSocket反向代理-学习小结</a>\n## 数据库\n- <a href=\"https://www.cnblogs.com/takumicx/p/9998844.html\" target=\"_blank\">数据库事务的概念及其实现原理</a>\n- <a href=\"https://www.cnblogs.com/dong897812629/archive/2013/03/27/2981142.html\" target=\"_blank\">视图、索引、存储过程 、触发器、游标及事务</a>\n### MongoDB\n- <a href=\"https://www.cnblogs.com/TM0831/p/10606624.html\" target=\"_blank\">最详细的Windows平台安装MongoDB教程</a>\n### MySQL\n#### 基础\n- <a href=\"https://www.cnblogs.com/mycapple-zgs-111411/p/7680529.html\" target=\"_blank\">mysql创建存储过程</a>\n- <a href=\"https://blog.csdn.net/wuhuagu_wuhuaguo/article/details/90522435\" target=\"_blank\">MySQL 字符串截取函数</a>\n- <a href=\"https://www.cnblogs.com/boothsun/p/7792341.html\" target=\"_blank\">MySQL的七种join</a>\n- <a href=\"https://www.cnblogs.com/chenqionghe/p/4675844.html\" target=\"_blank\">MySQL CAST与CONVERT 函数的用法</a>\n- <a href=\"https://www.cnblogs.com/ggjucheng/p/3352280.html\" target=\"_blank\"> MySQL 获得当前日期时间 函数</a>\n- <a href=\"https://www.cnblogs.com/kaiwen1/p/6869025.html\" target=\"_blank\">MySQL外键设置中的的 Cascade、NO ACTION、Restrict、SET NULL&nbsp;</a>\n- <a href=\"https://blog.csdn.net/hry2015/article/details/76359281\" target=\"_blank\">mysql语法总结</a>\n- <a href=\"https://www.cnblogs.com/yang82/p/7794712.html\" target=\"_blank\">MySQL如何修改密码</a>\n- <a href=\"https://blog.csdn.net/mary19920410/article/details/76545053\" target=\"_blank\">浅析MySQL中concat以及group_concat的使用</a>\n#### 进阶\n- <a href=\"https://www.cnblogs.com/boothsun/p/8970952.html#autoid-7-1-0\" target=\"_blank\">MySQL索引底层实现原理 \n</a>\n- <a href=\"https://www.cnblogs.com/boothsun/p/8480909.html\" target=\"_blank\">MySQL查询性能优化&nbsp;</a>\n- <a href=\"https://www.cnblogs.com/vicenteforever/articles/1613119.html\" target=\"_blank\">InnoDB与Myisam的六大区别</a>\n- <a href=\"https://www.cnblogs.com/boothsun/p/7872669.html\" target=\"_blank\">MySQL 主从复制 \n</a>\n- <a href=\"https://www.cnblogs.com/boothsun/p/7774019.html\" target=\"_blank\">MySQL建立高性能索引策略 \n</a>\n- <a href=\"https://www.cnblogs.com/hustcat/archive/2009/10/28/1591648.html\" target=\"_blank\">理解MySQL——索引与优化</a>\n- <a href=\"https://www.cnblogs.com/zongyl/p/6021097.html\" target=\"_blank\">通过乐观锁（版本号）降低并发时的锁竞争问题</a>\n##### MySQL 优化\n- <a href=\"https://www.cnblogs.com/zhanjindong/p/3439042.html\" target=\"_blank\">MySQL优化—工欲善其事，必先利其器之EXPLAIN</a>\n- <a href=\"https://www.cnblogs.com/zhanjindong/p/3472804.html\" target=\"_blank\">MySQL优化—工欲善其事，必先利其器（2）</a>\n### Oracle\n- <a href=\"https://www.jb51.net/article/187271.htm\" target=\"_blank\">Windows10安装Oracle19c数据库详细记录</a>\n#### 授权\n- <a href=\"http://blog.itpub.net/29500582/viewspace-1314555/\" target=\"_blank\">Oracle查看当前登陆用户的权限或者角色</a>\n- <a href=\"https://www.cnblogs.com/roger112/p/7685307.html\" target=\"_blank\">Oracle创建用户、角色、授权、建表&nbsp;</a>\n- <a href=\"https://www.cnblogs.com/rosesmall/p/5767605.html\" target=\"_blank\">查看Oracle数据库的用户名和密码</a>\n### Redis\n- <a href=\"https://www.runoob.com/redis/redis-install.html\" target=\"_blank\">Redis 安装</a>\n- <a href=\"https://blog.csdn.net/yejingtao703/article/details/78484151\" target=\"_blank\">三张图秒懂Redis集群设计原理</a>\n- 在windows上搭建redis集群（Redis-Cluster）</a>\n- <a href=\"https://www.cnblogs.com/tommy-huang/p/6240083.html\" target=\"_blank\">Windows下搭建Redis集群</a>\n### SQL Server\n- <a href=\"https://www.cnblogs.com/wuyifu/p/3447870.html\" target=\"_blank\">SQL Server中的锁 详解 nolock,rowlock,tablock,xlock,paglock</a>\n- <a href=\"https://www.cnblogs.com/Brambling/p/6754993.html\" target=\"_blank\">SQL Server 创建索引（index）</a>\n- <a href=\"https://www.cnblogs.com/CreateMyself/p/6512692.html\" target=\"_blank\">SQL Server-聚焦NOLOCK、UPDLOCK、HOLDLOCK、READPAST你弄懂多少？</a>\n- <a href=\"https://www.w3school.com.cn/sql/func_datediff.asp\" target=\"_blank\">SQL Server DATEDIFF() 函数</a>\n- <a href=\"https://www.cnblogs.com/xwdreamer/archive/2012/06/23/2559344.html\" target=\"_blank\">查看sqlserver的端口号</a>\n- <a href=\"https://www.cnblogs.com/JohnnyBao/p/3799054.html\" target=\"_blank\">sql server 判断是否存在数据库，表，列，视图</a>\n- <a href=\"https://www.cnblogs.com/zhangpengnike/p/6122588.html\" target=\"_blank\">SQLServer 日期函数大全</a>\n## NodeJS\n- <a href=\"https://blog.csdn.net/uzizi/article/details/81046646\" target=\"_blank\">windows安装nvm的两种方式</a>\n## 分布式\n- <a href=\"https://www.cnblogs.com/jasontec/p/9698774.html\" target=\"_blank\">分布式系统理论--CAP理论、BASE理论</a>\n- <a href=\"https://www.cnblogs.com/boothsun/p/8976409.html\" target=\"_blank\">分布式事务解决办法 </a>\n## 面试题\n- Solr和ES对比</a>\n- <a href=\"https://juejin.cn/post/6844903955722403848#heading-0\" target=\"_blank\">9月腾讯、百度、阿里高频的29道SSM框架面试题解析</a>\n- <a href=\"https://blog.csdn.net/shmnh/article/details/42833291\" target=\"_blank\">28个MongoDB经典面试题</a>\n- <a href=\"https://blog.csdn.net/cliper9768/article/details/82870163\" target=\"_blank\">Dubbo面试题</a>\n- <a href=\"https://blog.csdn.net/qq_42629110/article/details/84963815\" target=\"_blank\">SpringCloud面试题</a>\n- <a href=\"https://blog.csdn.net/suxiexingchen/article/details/82020430\" target=\"_blank\">springBoot应用启动器基本的一共有44种</a>\n- <a href=\"https://blog.csdn.net/qq_34337272/article/details/81072874\" target=\"_blank\">面试必备之乐观锁与悲观锁</a>\n- <a href=\"https://juejin.cn/post/6844903809613840398\" target=\"_blank\">比较全面的中级Java面试题</a>\n## Java\n### 基础知识\n- <a href=\"https://mp.weixin.qq.com/s?__biz=Mzg2OTA0Njk0OA==&amp;mid=2247484920&amp;amp;idx=1&amp;amp;sn=c7167df0b36522935896565973d02cc9&amp;source=41#wechat_redirect\" target=\"_blank\">后端必备——数据通信知识(RPC、消息队列)一站式总结</a>\n#### JSR330\n- <a href=\"https://blog.csdn.net/u010278882/article/details/50773687\" target=\"_blank\">Java 依赖注入标准 JSR-330 简介</a>\n- <a href=\"https://www.chkui.com/article/java/java_jsr330\" target=\"_blank\">Java JSR330</a>\n- <a href=\"https://www.cnblogs.com/hhhshct/p/8523697.html\" target=\"_blank\">java实现HTTP请求的三种方式</a>\n- <a href=\"https://www.cnblogs.com/super-chao/p/6118739.html\" target=\"_blank\">java中cookie存取值</a>\n- <a href=\"https://baijiahao.baidu.com/s?id=1647621616629561468&amp;wfr=spider&amp;for=pc\" target=\"_blank\">详解java并发原子类AtomicInteger（基于jdk1.8源码分析）</a>\n- <a href=\"https://blog.csdn.net/weixin_38111667/article/details/81630290\" target=\"_blank\">JAVA &amp;&amp; java.lang.UnsatisfiedLinkError: The specified module could not be found.找不到指定模块</a>\n#### JVM\n- <a href=\"https://blog.csdn.net/weixin_40792878/article/details/82154402\" target=\"_blank\">Java虚拟机内存参数设置</a>\n#### 多线程\n- <a href=\"https://www.cnblogs.com/XHJT/p/3897440.html\" target=\"_blank\">线程同步的7种方式</a>\n### Spring\n- <a href=\"https://www.cnblogs.com/redcool/p/6426173.html\" target=\"_blank\">Spring线程池ThreadPoolTaskExecutor配置及详情</a>\n- <a href=\"https://www.cnblogs.com/pjfmeng/p/7551340.html\" target=\"_blank\">annotation之@Autowired、@Inject、@Resource三者区别</a>\n- <a href=\"https://blog.csdn.net/m0_37626813/article/details/78558010\" target=\"_blank\">Spring中@Component的作用</a>\n### SpringMVC\n- <a href=\"https://blog.csdn.net/littleskey/article/details/52841148\" target=\"_blank\">Spring Mvc @ResponseBody String返回中文字符串乱码</a>\n- <a href=\"https://www.cnblogs.com/WJ-163/p/6269409.html\" target=\"_blank\">SpringMVC文件上传与下载</a>\n- <a href=\"https://blog.csdn.net/liuxiao723846/article/details/46006275\" target=\"_blank\">jackson详解</a>\n### Spring Boot\n- <a href=\"https://www.cnblogs.com/itdragon/p/8686554.html\" target=\"_blank\">Spring Boot配置文件详解</a>\n- <a href=\"https://www.cnblogs.com/yuansc/p/9076604.html\" target=\"_blank\">SpringBoot配置Cors解决跨域请求问题</a>\n### Spring Cloud\n- <a href=\"https://blog.csdn.net/loushuiyifan/article/details/82702522\" target=\"_blank\">Hystrix原理与实战</a>\n### MyBatis\n- <a href=\"https://www.cnblogs.com/happyflyingpig/p/7739749.html\" target=\"_blank\">mybatis一级缓存二级缓存&nbsp;&nbsp;</a>\n### ShardingSpare\n- <a href=\"https://shardingsphere.apache.org/document/legacy/4.x/document/cn/overview/\" target=\"_blank\">shardingsphere 官方文档</a>\n### Zookeeper\n- <a href=\"https://www.cnblogs.com/jasontec/p/9651820.html\" target=\"_blank\">Zookeeper 与 Eureka 对比</a>\n- <a href=\"https://www.cnblogs.com/boothsun/p/8976502.html\" target=\"_blank\">ZooKeeper的典型应用场景 \n</a>\n- <a href=\"https://www.cnblogs.com/boothsun/p/8976829.html\" target=\"_blank\">ZK分布式锁（未完 待续）&nbsp;</a>\n### Druid\n- <a href=\"https://www.cnblogs.com/niejunlei/p/5977895.html\" target=\"_blank\">Druid 介绍及配置</a>\n### Log4j\n- <a href=\"http://www.blogjava.net/zJun/archive/2006/06/28/55511.html\" target=\"_blank\">配置Log4j(很详细)</a>\n### 日志分析\n- &nbsp;\n","slug":"java/技术文章梳理","published":1,"updated":"2025-09-24T06:00:08.734Z","_id":"clqqa13ne000096jxdfqr4z69","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"技术文章\"><a href=\"#技术文章\" class=\"headerlink\" title=\"技术文章\"></a>技术文章</h1><h2 id=\"计算机基础\"><a href=\"#计算机基础\" class=\"headerlink\" title=\"计算机基础\"></a>计算机基础</h2><ul>\n<li><a href=\"https://www.cnblogs.com/itdragon/p/13700939.html\" target=\"_blank\">Socket 核心原理分享</a></li>\n<li><a href=\"https://www.cnblogs.com/jingmoxukong/p/7755643.html\" target=\"_blank\">WebSocket 详解教程</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\" target=\"_blank\">常见 MIME 类型列表</a></li>\n</ul>\n<h2 id=\"linux\"><a href=\"#linux\" class=\"headerlink\" title=\"linux\"></a>linux</h2><ul>\n<li><a href=\"https://blog.csdn.net/xingyegt/article/details/61548601\" target=\"_blank\">Vi 常用命令</a></li>\n<li><a href=\"https://blog.csdn.net/u010452388/article/details/86481868\" target=\"_blank\">Linux固定IP地址</a></li>\n<li><a href=\"https://www.cnblogs.com/liaojie970/p/6746230.html\" target=\"_blank\">linux如何复制文件夹和移动文件夹</a></li>\n<li><a href=\"https://www.cnblogs.com/jiftle/p/9707518.html\" target=\"_blank\">linux find 命令查找文件和文件夹</a></li>\n<li><a href=\"https://www.cnblogs.com/wmhuang/p/7516273.html\" target=\"_blank\">HTTPS静态服务搭建过程详解</a></li>\n<li><a href=\"https://www.linuxidc.com/Linux/2017-04/143031.htm\" target=\"_blank\">Linux中查询当前用户的命令总结</a></li>\n<li><a href=\"http://www.178linux.com/86931?utm_source=tuicool&amp;utm_medium=referral\" target=\"_blank\">OpenSSL 及创建私有CA</a></li>\n</ul>\n<h2 id=\"对象存储\"><a href=\"#对象存储\" class=\"headerlink\" title=\"对象存储\"></a>对象存储</h2><ul>\n<li><a href=\"https://www.cnblogs.com/chris-cp/p/4835507.html\" target=\"_blank\">Amazon S3 API</a></li>\n<li><a href=\"https://www.cnblogs.com/web424/p/6840207.html\" target=\"_blank\">Amazon S3 功能介绍</a></li>\n<li><a href=\"https://blog.csdn.net/r_12xq/article/details/88424894\" target=\"_blank\">OOS对象存储</a></li>\n</ul>\n<h2 id=\"Nginx\"><a href=\"#Nginx\" class=\"headerlink\" title=\"Nginx\"></a>Nginx</h2><ul>\n<li><a href=\"https://www.cnblogs.com/bjlhx/p/10477099.html\" target=\"_blank\">idea-常用插件-nginx</a></li>\n<li><a href=\"https://www.runoob.com/w3cnote/nginx-setup-intro.html\" target=\"_blank\">Nginx 配置详解</a></li>\n<li><a href=\"https://www.cnblogs.com/kevingrace/p/9512287.html\" target=\"_blank\">Nginx支持WebSocket反向代理-学习小结</a></li>\n</ul>\n<h2 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h2><ul>\n<li><a href=\"https://www.cnblogs.com/takumicx/p/9998844.html\" target=\"_blank\">数据库事务的概念及其实现原理</a></li>\n<li><a href=\"https://www.cnblogs.com/dong897812629/archive/2013/03/27/2981142.html\" target=\"_blank\">视图、索引、存储过程 、触发器、游标及事务</a></li>\n</ul>\n<h3 id=\"MongoDB\"><a href=\"#MongoDB\" class=\"headerlink\" title=\"MongoDB\"></a>MongoDB</h3><ul>\n<li><a href=\"https://www.cnblogs.com/TM0831/p/10606624.html\" target=\"_blank\">最详细的Windows平台安装MongoDB教程</a></li>\n</ul>\n<h3 id=\"MySQL\"><a href=\"#MySQL\" class=\"headerlink\" title=\"MySQL\"></a>MySQL</h3><h4 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h4><ul>\n<li><a href=\"https://www.cnblogs.com/mycapple-zgs-111411/p/7680529.html\" target=\"_blank\">mysql创建存储过程</a></li>\n<li><a href=\"https://blog.csdn.net/wuhuagu_wuhuaguo/article/details/90522435\" target=\"_blank\">MySQL 字符串截取函数</a></li>\n<li><a href=\"https://www.cnblogs.com/boothsun/p/7792341.html\" target=\"_blank\">MySQL的七种join</a></li>\n<li><a href=\"https://www.cnblogs.com/chenqionghe/p/4675844.html\" target=\"_blank\">MySQL CAST与CONVERT 函数的用法</a></li>\n<li><a href=\"https://www.cnblogs.com/ggjucheng/p/3352280.html\" target=\"_blank\"> MySQL 获得当前日期时间 函数</a></li>\n<li><a href=\"https://www.cnblogs.com/kaiwen1/p/6869025.html\" target=\"_blank\">MySQL外键设置中的的 Cascade、NO ACTION、Restrict、SET NULL&amp;nbsp;</a></li>\n<li><a href=\"https://blog.csdn.net/hry2015/article/details/76359281\" target=\"_blank\">mysql语法总结</a></li>\n<li><a href=\"https://www.cnblogs.com/yang82/p/7794712.html\" target=\"_blank\">MySQL如何修改密码</a></li>\n<li><a href=\"https://blog.csdn.net/mary19920410/article/details/76545053\" target=\"_blank\">浅析MySQL中concat以及group_concat的使用</a></li>\n</ul>\n<h4 id=\"进阶\"><a href=\"#进阶\" class=\"headerlink\" title=\"进阶\"></a>进阶</h4><ul>\n<li><a href=\"https://www.cnblogs.com/boothsun/p/8970952.html#autoid-7-1-0\" target=\"_blank\">MySQL索引底层实现原理 </a></li>\n<li><a href=\"https://www.cnblogs.com/boothsun/p/8480909.html\" target=\"_blank\">MySQL查询性能优化&amp;nbsp;</a></li>\n<li><a href=\"https://www.cnblogs.com/vicenteforever/articles/1613119.html\" target=\"_blank\">InnoDB与Myisam的六大区别</a></li>\n<li><a href=\"https://www.cnblogs.com/boothsun/p/7872669.html\" target=\"_blank\">MySQL 主从复制 </a></li>\n<li><a href=\"https://www.cnblogs.com/boothsun/p/7774019.html\" target=\"_blank\">MySQL建立高性能索引策略 </a></li>\n<li><a href=\"https://www.cnblogs.com/hustcat/archive/2009/10/28/1591648.html\" target=\"_blank\">理解MySQL——索引与优化</a></li>\n<li><a href=\"https://www.cnblogs.com/zongyl/p/6021097.html\" target=\"_blank\">通过乐观锁（版本号）降低并发时的锁竞争问题</a></li>\n</ul>\n<h5 id=\"MySQL-优化\"><a href=\"#MySQL-优化\" class=\"headerlink\" title=\"MySQL 优化\"></a>MySQL 优化</h5><ul>\n<li><a href=\"https://www.cnblogs.com/zhanjindong/p/3439042.html\" target=\"_blank\">MySQL优化—工欲善其事，必先利其器之EXPLAIN</a></li>\n<li><a href=\"https://www.cnblogs.com/zhanjindong/p/3472804.html\" target=\"_blank\">MySQL优化—工欲善其事，必先利其器（2）</a></li>\n</ul>\n<h3 id=\"Oracle\"><a href=\"#Oracle\" class=\"headerlink\" title=\"Oracle\"></a>Oracle</h3><ul>\n<li><a href=\"https://www.jb51.net/article/187271.htm\" target=\"_blank\">Windows10安装Oracle19c数据库详细记录</a></li>\n</ul>\n<h4 id=\"授权\"><a href=\"#授权\" class=\"headerlink\" title=\"授权\"></a>授权</h4><ul>\n<li><a href=\"http://blog.itpub.net/29500582/viewspace-1314555/\" target=\"_blank\">Oracle查看当前登陆用户的权限或者角色</a></li>\n<li><a href=\"https://www.cnblogs.com/roger112/p/7685307.html\" target=\"_blank\">Oracle创建用户、角色、授权、建表&amp;nbsp;</a></li>\n<li><a href=\"https://www.cnblogs.com/rosesmall/p/5767605.html\" target=\"_blank\">查看Oracle数据库的用户名和密码</a></li>\n</ul>\n<h3 id=\"Redis\"><a href=\"#Redis\" class=\"headerlink\" title=\"Redis\"></a>Redis</h3><ul>\n<li><a href=\"https://www.runoob.com/redis/redis-install.html\" target=\"_blank\">Redis 安装</a></li>\n<li><a href=\"https://blog.csdn.net/yejingtao703/article/details/78484151\" target=\"_blank\">三张图秒懂Redis集群设计原理</a></li>\n<li>在windows上搭建redis集群（Redis-Cluster）</a></li>\n<li><a href=\"https://www.cnblogs.com/tommy-huang/p/6240083.html\" target=\"_blank\">Windows下搭建Redis集群</a></li>\n</ul>\n<h3 id=\"SQL-Server\"><a href=\"#SQL-Server\" class=\"headerlink\" title=\"SQL Server\"></a>SQL Server</h3><ul>\n<li><a href=\"https://www.cnblogs.com/wuyifu/p/3447870.html\" target=\"_blank\">SQL Server中的锁 详解 nolock,rowlock,tablock,xlock,paglock</a></li>\n<li><a href=\"https://www.cnblogs.com/Brambling/p/6754993.html\" target=\"_blank\">SQL Server 创建索引（index）</a></li>\n<li><a href=\"https://www.cnblogs.com/CreateMyself/p/6512692.html\" target=\"_blank\">SQL Server-聚焦NOLOCK、UPDLOCK、HOLDLOCK、READPAST你弄懂多少？</a></li>\n<li><a href=\"https://www.w3school.com.cn/sql/func_datediff.asp\" target=\"_blank\">SQL Server DATEDIFF() 函数</a></li>\n<li><a href=\"https://www.cnblogs.com/xwdreamer/archive/2012/06/23/2559344.html\" target=\"_blank\">查看sqlserver的端口号</a></li>\n<li><a href=\"https://www.cnblogs.com/JohnnyBao/p/3799054.html\" target=\"_blank\">sql server 判断是否存在数据库，表，列，视图</a></li>\n<li><a href=\"https://www.cnblogs.com/zhangpengnike/p/6122588.html\" target=\"_blank\">SQLServer 日期函数大全</a></li>\n</ul>\n<h2 id=\"NodeJS\"><a href=\"#NodeJS\" class=\"headerlink\" title=\"NodeJS\"></a>NodeJS</h2><ul>\n<li><a href=\"https://blog.csdn.net/uzizi/article/details/81046646\" target=\"_blank\">windows安装nvm的两种方式</a></li>\n</ul>\n<h2 id=\"分布式\"><a href=\"#分布式\" class=\"headerlink\" title=\"分布式\"></a>分布式</h2><ul>\n<li><a href=\"https://www.cnblogs.com/jasontec/p/9698774.html\" target=\"_blank\">分布式系统理论–CAP理论、BASE理论</a></li>\n<li><a href=\"https://www.cnblogs.com/boothsun/p/8976409.html\" target=\"_blank\">分布式事务解决办法 </a></li>\n</ul>\n<h2 id=\"面试题\"><a href=\"#面试题\" class=\"headerlink\" title=\"面试题\"></a>面试题</h2><ul>\n<li>Solr和ES对比</a></li>\n<li><a href=\"https://juejin.cn/post/6844903955722403848#heading-0\" target=\"_blank\">9月腾讯、百度、阿里高频的29道SSM框架面试题解析</a></li>\n<li><a href=\"https://blog.csdn.net/shmnh/article/details/42833291\" target=\"_blank\">28个MongoDB经典面试题</a></li>\n<li><a href=\"https://blog.csdn.net/cliper9768/article/details/82870163\" target=\"_blank\">Dubbo面试题</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42629110/article/details/84963815\" target=\"_blank\">SpringCloud面试题</a></li>\n<li><a href=\"https://blog.csdn.net/suxiexingchen/article/details/82020430\" target=\"_blank\">springBoot应用启动器基本的一共有44种</a></li>\n<li><a href=\"https://blog.csdn.net/qq_34337272/article/details/81072874\" target=\"_blank\">面试必备之乐观锁与悲观锁</a></li>\n<li><a href=\"https://juejin.cn/post/6844903809613840398\" target=\"_blank\">比较全面的中级Java面试题</a></li>\n</ul>\n<h2 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h2><h3 id=\"基础知识\"><a href=\"#基础知识\" class=\"headerlink\" title=\"基础知识\"></a>基础知识</h3><ul>\n<li><a href=\"https://mp.weixin.qq.com/s?__biz=Mzg2OTA0Njk0OA==&amp;mid=2247484920&amp;amp;idx=1&amp;amp;sn=c7167df0b36522935896565973d02cc9&amp;source=41#wechat_redirect\" target=\"_blank\">后端必备——数据通信知识(RPC、消息队列)一站式总结</a></li>\n</ul>\n<h4 id=\"JSR330\"><a href=\"#JSR330\" class=\"headerlink\" title=\"JSR330\"></a>JSR330</h4><ul>\n<li><a href=\"https://blog.csdn.net/u010278882/article/details/50773687\" target=\"_blank\">Java 依赖注入标准 JSR-330 简介</a></li>\n<li><a href=\"https://www.chkui.com/article/java/java_jsr330\" target=\"_blank\">Java JSR330</a></li>\n<li><a href=\"https://www.cnblogs.com/hhhshct/p/8523697.html\" target=\"_blank\">java实现HTTP请求的三种方式</a></li>\n<li><a href=\"https://www.cnblogs.com/super-chao/p/6118739.html\" target=\"_blank\">java中cookie存取值</a></li>\n<li><a href=\"https://baijiahao.baidu.com/s?id=1647621616629561468&amp;wfr=spider&amp;for=pc\" target=\"_blank\">详解java并发原子类AtomicInteger（基于jdk1.8源码分析）</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_38111667/article/details/81630290\" target=\"_blank\">JAVA &amp;&amp; java.lang.UnsatisfiedLinkError: The specified module could not be found.找不到指定模块</a></li>\n</ul>\n<h4 id=\"JVM\"><a href=\"#JVM\" class=\"headerlink\" title=\"JVM\"></a>JVM</h4><ul>\n<li><a href=\"https://blog.csdn.net/weixin_40792878/article/details/82154402\" target=\"_blank\">Java虚拟机内存参数设置</a></li>\n</ul>\n<h4 id=\"多线程\"><a href=\"#多线程\" class=\"headerlink\" title=\"多线程\"></a>多线程</h4><ul>\n<li><a href=\"https://www.cnblogs.com/XHJT/p/3897440.html\" target=\"_blank\">线程同步的7种方式</a></li>\n</ul>\n<h3 id=\"Spring\"><a href=\"#Spring\" class=\"headerlink\" title=\"Spring\"></a>Spring</h3><ul>\n<li><a href=\"https://www.cnblogs.com/redcool/p/6426173.html\" target=\"_blank\">Spring线程池ThreadPoolTaskExecutor配置及详情</a></li>\n<li><a href=\"https://www.cnblogs.com/pjfmeng/p/7551340.html\" target=\"_blank\">annotation之@Autowired、@Inject、@Resource三者区别</a></li>\n<li><a href=\"https://blog.csdn.net/m0_37626813/article/details/78558010\" target=\"_blank\">Spring中@Component的作用</a></li>\n</ul>\n<h3 id=\"SpringMVC\"><a href=\"#SpringMVC\" class=\"headerlink\" title=\"SpringMVC\"></a>SpringMVC</h3><ul>\n<li><a href=\"https://blog.csdn.net/littleskey/article/details/52841148\" target=\"_blank\">Spring Mvc @ResponseBody String返回中文字符串乱码</a></li>\n<li><a href=\"https://www.cnblogs.com/WJ-163/p/6269409.html\" target=\"_blank\">SpringMVC文件上传与下载</a></li>\n<li><a href=\"https://blog.csdn.net/liuxiao723846/article/details/46006275\" target=\"_blank\">jackson详解</a></li>\n</ul>\n<h3 id=\"Spring-Boot\"><a href=\"#Spring-Boot\" class=\"headerlink\" title=\"Spring Boot\"></a>Spring Boot</h3><ul>\n<li><a href=\"https://www.cnblogs.com/itdragon/p/8686554.html\" target=\"_blank\">Spring Boot配置文件详解</a></li>\n<li><a href=\"https://www.cnblogs.com/yuansc/p/9076604.html\" target=\"_blank\">SpringBoot配置Cors解决跨域请求问题</a></li>\n</ul>\n<h3 id=\"Spring-Cloud\"><a href=\"#Spring-Cloud\" class=\"headerlink\" title=\"Spring Cloud\"></a>Spring Cloud</h3><ul>\n<li><a href=\"https://blog.csdn.net/loushuiyifan/article/details/82702522\" target=\"_blank\">Hystrix原理与实战</a></li>\n</ul>\n<h3 id=\"MyBatis\"><a href=\"#MyBatis\" class=\"headerlink\" title=\"MyBatis\"></a>MyBatis</h3><ul>\n<li><a href=\"https://www.cnblogs.com/happyflyingpig/p/7739749.html\" target=\"_blank\">mybatis一级缓存二级缓存&amp;nbsp;&amp;nbsp;</a></li>\n</ul>\n<h3 id=\"ShardingSpare\"><a href=\"#ShardingSpare\" class=\"headerlink\" title=\"ShardingSpare\"></a>ShardingSpare</h3><ul>\n<li><a href=\"https://shardingsphere.apache.org/document/legacy/4.x/document/cn/overview/\" target=\"_blank\">shardingsphere 官方文档</a></li>\n</ul>\n<h3 id=\"Zookeeper\"><a href=\"#Zookeeper\" class=\"headerlink\" title=\"Zookeeper\"></a>Zookeeper</h3><ul>\n<li><a href=\"https://www.cnblogs.com/jasontec/p/9651820.html\" target=\"_blank\">Zookeeper 与 Eureka 对比</a></li>\n<li><a href=\"https://www.cnblogs.com/boothsun/p/8976502.html\" target=\"_blank\">ZooKeeper的典型应用场景 </a></li>\n<li><a href=\"https://www.cnblogs.com/boothsun/p/8976829.html\" target=\"_blank\">ZK分布式锁（未完 待续）&amp;nbsp;</a></li>\n</ul>\n<h3 id=\"Druid\"><a href=\"#Druid\" class=\"headerlink\" title=\"Druid\"></a>Druid</h3><ul>\n<li><a href=\"https://www.cnblogs.com/niejunlei/p/5977895.html\" target=\"_blank\">Druid 介绍及配置</a></li>\n</ul>\n<h3 id=\"Log4j\"><a href=\"#Log4j\" class=\"headerlink\" title=\"Log4j\"></a>Log4j</h3><ul>\n<li><a href=\"http://www.blogjava.net/zJun/archive/2006/06/28/55511.html\" target=\"_blank\">配置Log4j(很详细)</a></li>\n</ul>\n<h3 id=\"日志分析\"><a href=\"#日志分析\" class=\"headerlink\" title=\"日志分析\"></a>日志分析</h3><ul>\n<li>&amp;nbsp;</li>\n</ul>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}},"cover":"/img/default_cover/geomeric9.png","cover_type":"img","excerpt":"","more":"<h1 id=\"技术文章\"><a href=\"#技术文章\" class=\"headerlink\" title=\"技术文章\"></a>技术文章</h1><h2 id=\"计算机基础\"><a href=\"#计算机基础\" class=\"headerlink\" title=\"计算机基础\"></a>计算机基础</h2><ul>\n<li><a href=\"https://www.cnblogs.com/itdragon/p/13700939.html\" target=\"_blank\">Socket 核心原理分享</a></li>\n<li><a href=\"https://www.cnblogs.com/jingmoxukong/p/7755643.html\" target=\"_blank\">WebSocket 详解教程</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\" target=\"_blank\">常见 MIME 类型列表</a></li>\n</ul>\n<h2 id=\"linux\"><a href=\"#linux\" class=\"headerlink\" title=\"linux\"></a>linux</h2><ul>\n<li><a href=\"https://blog.csdn.net/xingyegt/article/details/61548601\" target=\"_blank\">Vi 常用命令</a></li>\n<li><a href=\"https://blog.csdn.net/u010452388/article/details/86481868\" target=\"_blank\">Linux固定IP地址</a></li>\n<li><a href=\"https://www.cnblogs.com/liaojie970/p/6746230.html\" target=\"_blank\">linux如何复制文件夹和移动文件夹</a></li>\n<li><a href=\"https://www.cnblogs.com/jiftle/p/9707518.html\" target=\"_blank\">linux find 命令查找文件和文件夹</a></li>\n<li><a href=\"https://www.cnblogs.com/wmhuang/p/7516273.html\" target=\"_blank\">HTTPS静态服务搭建过程详解</a></li>\n<li><a href=\"https://www.linuxidc.com/Linux/2017-04/143031.htm\" target=\"_blank\">Linux中查询当前用户的命令总结</a></li>\n<li><a href=\"http://www.178linux.com/86931?utm_source=tuicool&amp;utm_medium=referral\" target=\"_blank\">OpenSSL 及创建私有CA</a></li>\n</ul>\n<h2 id=\"对象存储\"><a href=\"#对象存储\" class=\"headerlink\" title=\"对象存储\"></a>对象存储</h2><ul>\n<li><a href=\"https://www.cnblogs.com/chris-cp/p/4835507.html\" target=\"_blank\">Amazon S3 API</a></li>\n<li><a href=\"https://www.cnblogs.com/web424/p/6840207.html\" target=\"_blank\">Amazon S3 功能介绍</a></li>\n<li><a href=\"https://blog.csdn.net/r_12xq/article/details/88424894\" target=\"_blank\">OOS对象存储</a></li>\n</ul>\n<h2 id=\"Nginx\"><a href=\"#Nginx\" class=\"headerlink\" title=\"Nginx\"></a>Nginx</h2><ul>\n<li><a href=\"https://www.cnblogs.com/bjlhx/p/10477099.html\" target=\"_blank\">idea-常用插件-nginx</a></li>\n<li><a href=\"https://www.runoob.com/w3cnote/nginx-setup-intro.html\" target=\"_blank\">Nginx 配置详解</a></li>\n<li><a href=\"https://www.cnblogs.com/kevingrace/p/9512287.html\" target=\"_blank\">Nginx支持WebSocket反向代理-学习小结</a></li>\n</ul>\n<h2 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h2><ul>\n<li><a href=\"https://www.cnblogs.com/takumicx/p/9998844.html\" target=\"_blank\">数据库事务的概念及其实现原理</a></li>\n<li><a href=\"https://www.cnblogs.com/dong897812629/archive/2013/03/27/2981142.html\" target=\"_blank\">视图、索引、存储过程 、触发器、游标及事务</a></li>\n</ul>\n<h3 id=\"MongoDB\"><a href=\"#MongoDB\" class=\"headerlink\" title=\"MongoDB\"></a>MongoDB</h3><ul>\n<li><a href=\"https://www.cnblogs.com/TM0831/p/10606624.html\" target=\"_blank\">最详细的Windows平台安装MongoDB教程</a></li>\n</ul>\n<h3 id=\"MySQL\"><a href=\"#MySQL\" class=\"headerlink\" title=\"MySQL\"></a>MySQL</h3><h4 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h4><ul>\n<li><a href=\"https://www.cnblogs.com/mycapple-zgs-111411/p/7680529.html\" target=\"_blank\">mysql创建存储过程</a></li>\n<li><a href=\"https://blog.csdn.net/wuhuagu_wuhuaguo/article/details/90522435\" target=\"_blank\">MySQL 字符串截取函数</a></li>\n<li><a href=\"https://www.cnblogs.com/boothsun/p/7792341.html\" target=\"_blank\">MySQL的七种join</a></li>\n<li><a href=\"https://www.cnblogs.com/chenqionghe/p/4675844.html\" target=\"_blank\">MySQL CAST与CONVERT 函数的用法</a></li>\n<li><a href=\"https://www.cnblogs.com/ggjucheng/p/3352280.html\" target=\"_blank\"> MySQL 获得当前日期时间 函数</a></li>\n<li><a href=\"https://www.cnblogs.com/kaiwen1/p/6869025.html\" target=\"_blank\">MySQL外键设置中的的 Cascade、NO ACTION、Restrict、SET NULL&amp;nbsp;</a></li>\n<li><a href=\"https://blog.csdn.net/hry2015/article/details/76359281\" target=\"_blank\">mysql语法总结</a></li>\n<li><a href=\"https://www.cnblogs.com/yang82/p/7794712.html\" target=\"_blank\">MySQL如何修改密码</a></li>\n<li><a href=\"https://blog.csdn.net/mary19920410/article/details/76545053\" target=\"_blank\">浅析MySQL中concat以及group_concat的使用</a></li>\n</ul>\n<h4 id=\"进阶\"><a href=\"#进阶\" class=\"headerlink\" title=\"进阶\"></a>进阶</h4><ul>\n<li><a href=\"https://www.cnblogs.com/boothsun/p/8970952.html#autoid-7-1-0\" target=\"_blank\">MySQL索引底层实现原理 </a></li>\n<li><a href=\"https://www.cnblogs.com/boothsun/p/8480909.html\" target=\"_blank\">MySQL查询性能优化&amp;nbsp;</a></li>\n<li><a href=\"https://www.cnblogs.com/vicenteforever/articles/1613119.html\" target=\"_blank\">InnoDB与Myisam的六大区别</a></li>\n<li><a href=\"https://www.cnblogs.com/boothsun/p/7872669.html\" target=\"_blank\">MySQL 主从复制 </a></li>\n<li><a href=\"https://www.cnblogs.com/boothsun/p/7774019.html\" target=\"_blank\">MySQL建立高性能索引策略 </a></li>\n<li><a href=\"https://www.cnblogs.com/hustcat/archive/2009/10/28/1591648.html\" target=\"_blank\">理解MySQL——索引与优化</a></li>\n<li><a href=\"https://www.cnblogs.com/zongyl/p/6021097.html\" target=\"_blank\">通过乐观锁（版本号）降低并发时的锁竞争问题</a></li>\n</ul>\n<h5 id=\"MySQL-优化\"><a href=\"#MySQL-优化\" class=\"headerlink\" title=\"MySQL 优化\"></a>MySQL 优化</h5><ul>\n<li><a href=\"https://www.cnblogs.com/zhanjindong/p/3439042.html\" target=\"_blank\">MySQL优化—工欲善其事，必先利其器之EXPLAIN</a></li>\n<li><a href=\"https://www.cnblogs.com/zhanjindong/p/3472804.html\" target=\"_blank\">MySQL优化—工欲善其事，必先利其器（2）</a></li>\n</ul>\n<h3 id=\"Oracle\"><a href=\"#Oracle\" class=\"headerlink\" title=\"Oracle\"></a>Oracle</h3><ul>\n<li><a href=\"https://www.jb51.net/article/187271.htm\" target=\"_blank\">Windows10安装Oracle19c数据库详细记录</a></li>\n</ul>\n<h4 id=\"授权\"><a href=\"#授权\" class=\"headerlink\" title=\"授权\"></a>授权</h4><ul>\n<li><a href=\"http://blog.itpub.net/29500582/viewspace-1314555/\" target=\"_blank\">Oracle查看当前登陆用户的权限或者角色</a></li>\n<li><a href=\"https://www.cnblogs.com/roger112/p/7685307.html\" target=\"_blank\">Oracle创建用户、角色、授权、建表&amp;nbsp;</a></li>\n<li><a href=\"https://www.cnblogs.com/rosesmall/p/5767605.html\" target=\"_blank\">查看Oracle数据库的用户名和密码</a></li>\n</ul>\n<h3 id=\"Redis\"><a href=\"#Redis\" class=\"headerlink\" title=\"Redis\"></a>Redis</h3><ul>\n<li><a href=\"https://www.runoob.com/redis/redis-install.html\" target=\"_blank\">Redis 安装</a></li>\n<li><a href=\"https://blog.csdn.net/yejingtao703/article/details/78484151\" target=\"_blank\">三张图秒懂Redis集群设计原理</a></li>\n<li>在windows上搭建redis集群（Redis-Cluster）</a></li>\n<li><a href=\"https://www.cnblogs.com/tommy-huang/p/6240083.html\" target=\"_blank\">Windows下搭建Redis集群</a></li>\n</ul>\n<h3 id=\"SQL-Server\"><a href=\"#SQL-Server\" class=\"headerlink\" title=\"SQL Server\"></a>SQL Server</h3><ul>\n<li><a href=\"https://www.cnblogs.com/wuyifu/p/3447870.html\" target=\"_blank\">SQL Server中的锁 详解 nolock,rowlock,tablock,xlock,paglock</a></li>\n<li><a href=\"https://www.cnblogs.com/Brambling/p/6754993.html\" target=\"_blank\">SQL Server 创建索引（index）</a></li>\n<li><a href=\"https://www.cnblogs.com/CreateMyself/p/6512692.html\" target=\"_blank\">SQL Server-聚焦NOLOCK、UPDLOCK、HOLDLOCK、READPAST你弄懂多少？</a></li>\n<li><a href=\"https://www.w3school.com.cn/sql/func_datediff.asp\" target=\"_blank\">SQL Server DATEDIFF() 函数</a></li>\n<li><a href=\"https://www.cnblogs.com/xwdreamer/archive/2012/06/23/2559344.html\" target=\"_blank\">查看sqlserver的端口号</a></li>\n<li><a href=\"https://www.cnblogs.com/JohnnyBao/p/3799054.html\" target=\"_blank\">sql server 判断是否存在数据库，表，列，视图</a></li>\n<li><a href=\"https://www.cnblogs.com/zhangpengnike/p/6122588.html\" target=\"_blank\">SQLServer 日期函数大全</a></li>\n</ul>\n<h2 id=\"NodeJS\"><a href=\"#NodeJS\" class=\"headerlink\" title=\"NodeJS\"></a>NodeJS</h2><ul>\n<li><a href=\"https://blog.csdn.net/uzizi/article/details/81046646\" target=\"_blank\">windows安装nvm的两种方式</a></li>\n</ul>\n<h2 id=\"分布式\"><a href=\"#分布式\" class=\"headerlink\" title=\"分布式\"></a>分布式</h2><ul>\n<li><a href=\"https://www.cnblogs.com/jasontec/p/9698774.html\" target=\"_blank\">分布式系统理论–CAP理论、BASE理论</a></li>\n<li><a href=\"https://www.cnblogs.com/boothsun/p/8976409.html\" target=\"_blank\">分布式事务解决办法 </a></li>\n</ul>\n<h2 id=\"面试题\"><a href=\"#面试题\" class=\"headerlink\" title=\"面试题\"></a>面试题</h2><ul>\n<li>Solr和ES对比</a></li>\n<li><a href=\"https://juejin.cn/post/6844903955722403848#heading-0\" target=\"_blank\">9月腾讯、百度、阿里高频的29道SSM框架面试题解析</a></li>\n<li><a href=\"https://blog.csdn.net/shmnh/article/details/42833291\" target=\"_blank\">28个MongoDB经典面试题</a></li>\n<li><a href=\"https://blog.csdn.net/cliper9768/article/details/82870163\" target=\"_blank\">Dubbo面试题</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42629110/article/details/84963815\" target=\"_blank\">SpringCloud面试题</a></li>\n<li><a href=\"https://blog.csdn.net/suxiexingchen/article/details/82020430\" target=\"_blank\">springBoot应用启动器基本的一共有44种</a></li>\n<li><a href=\"https://blog.csdn.net/qq_34337272/article/details/81072874\" target=\"_blank\">面试必备之乐观锁与悲观锁</a></li>\n<li><a href=\"https://juejin.cn/post/6844903809613840398\" target=\"_blank\">比较全面的中级Java面试题</a></li>\n</ul>\n<h2 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h2><h3 id=\"基础知识\"><a href=\"#基础知识\" class=\"headerlink\" title=\"基础知识\"></a>基础知识</h3><ul>\n<li><a href=\"https://mp.weixin.qq.com/s?__biz=Mzg2OTA0Njk0OA==&amp;mid=2247484920&amp;amp;idx=1&amp;amp;sn=c7167df0b36522935896565973d02cc9&amp;source=41#wechat_redirect\" target=\"_blank\">后端必备——数据通信知识(RPC、消息队列)一站式总结</a></li>\n</ul>\n<h4 id=\"JSR330\"><a href=\"#JSR330\" class=\"headerlink\" title=\"JSR330\"></a>JSR330</h4><ul>\n<li><a href=\"https://blog.csdn.net/u010278882/article/details/50773687\" target=\"_blank\">Java 依赖注入标准 JSR-330 简介</a></li>\n<li><a href=\"https://www.chkui.com/article/java/java_jsr330\" target=\"_blank\">Java JSR330</a></li>\n<li><a href=\"https://www.cnblogs.com/hhhshct/p/8523697.html\" target=\"_blank\">java实现HTTP请求的三种方式</a></li>\n<li><a href=\"https://www.cnblogs.com/super-chao/p/6118739.html\" target=\"_blank\">java中cookie存取值</a></li>\n<li><a href=\"https://baijiahao.baidu.com/s?id=1647621616629561468&amp;wfr=spider&amp;for=pc\" target=\"_blank\">详解java并发原子类AtomicInteger（基于jdk1.8源码分析）</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_38111667/article/details/81630290\" target=\"_blank\">JAVA &amp;&amp; java.lang.UnsatisfiedLinkError: The specified module could not be found.找不到指定模块</a></li>\n</ul>\n<h4 id=\"JVM\"><a href=\"#JVM\" class=\"headerlink\" title=\"JVM\"></a>JVM</h4><ul>\n<li><a href=\"https://blog.csdn.net/weixin_40792878/article/details/82154402\" target=\"_blank\">Java虚拟机内存参数设置</a></li>\n</ul>\n<h4 id=\"多线程\"><a href=\"#多线程\" class=\"headerlink\" title=\"多线程\"></a>多线程</h4><ul>\n<li><a href=\"https://www.cnblogs.com/XHJT/p/3897440.html\" target=\"_blank\">线程同步的7种方式</a></li>\n</ul>\n<h3 id=\"Spring\"><a href=\"#Spring\" class=\"headerlink\" title=\"Spring\"></a>Spring</h3><ul>\n<li><a href=\"https://www.cnblogs.com/redcool/p/6426173.html\" target=\"_blank\">Spring线程池ThreadPoolTaskExecutor配置及详情</a></li>\n<li><a href=\"https://www.cnblogs.com/pjfmeng/p/7551340.html\" target=\"_blank\">annotation之@Autowired、@Inject、@Resource三者区别</a></li>\n<li><a href=\"https://blog.csdn.net/m0_37626813/article/details/78558010\" target=\"_blank\">Spring中@Component的作用</a></li>\n</ul>\n<h3 id=\"SpringMVC\"><a href=\"#SpringMVC\" class=\"headerlink\" title=\"SpringMVC\"></a>SpringMVC</h3><ul>\n<li><a href=\"https://blog.csdn.net/littleskey/article/details/52841148\" target=\"_blank\">Spring Mvc @ResponseBody String返回中文字符串乱码</a></li>\n<li><a href=\"https://www.cnblogs.com/WJ-163/p/6269409.html\" target=\"_blank\">SpringMVC文件上传与下载</a></li>\n<li><a href=\"https://blog.csdn.net/liuxiao723846/article/details/46006275\" target=\"_blank\">jackson详解</a></li>\n</ul>\n<h3 id=\"Spring-Boot\"><a href=\"#Spring-Boot\" class=\"headerlink\" title=\"Spring Boot\"></a>Spring Boot</h3><ul>\n<li><a href=\"https://www.cnblogs.com/itdragon/p/8686554.html\" target=\"_blank\">Spring Boot配置文件详解</a></li>\n<li><a href=\"https://www.cnblogs.com/yuansc/p/9076604.html\" target=\"_blank\">SpringBoot配置Cors解决跨域请求问题</a></li>\n</ul>\n<h3 id=\"Spring-Cloud\"><a href=\"#Spring-Cloud\" class=\"headerlink\" title=\"Spring Cloud\"></a>Spring Cloud</h3><ul>\n<li><a href=\"https://blog.csdn.net/loushuiyifan/article/details/82702522\" target=\"_blank\">Hystrix原理与实战</a></li>\n</ul>\n<h3 id=\"MyBatis\"><a href=\"#MyBatis\" class=\"headerlink\" title=\"MyBatis\"></a>MyBatis</h3><ul>\n<li><a href=\"https://www.cnblogs.com/happyflyingpig/p/7739749.html\" target=\"_blank\">mybatis一级缓存二级缓存&amp;nbsp;&amp;nbsp;</a></li>\n</ul>\n<h3 id=\"ShardingSpare\"><a href=\"#ShardingSpare\" class=\"headerlink\" title=\"ShardingSpare\"></a>ShardingSpare</h3><ul>\n<li><a href=\"https://shardingsphere.apache.org/document/legacy/4.x/document/cn/overview/\" target=\"_blank\">shardingsphere 官方文档</a></li>\n</ul>\n<h3 id=\"Zookeeper\"><a href=\"#Zookeeper\" class=\"headerlink\" title=\"Zookeeper\"></a>Zookeeper</h3><ul>\n<li><a href=\"https://www.cnblogs.com/jasontec/p/9651820.html\" target=\"_blank\">Zookeeper 与 Eureka 对比</a></li>\n<li><a href=\"https://www.cnblogs.com/boothsun/p/8976502.html\" target=\"_blank\">ZooKeeper的典型应用场景 </a></li>\n<li><a href=\"https://www.cnblogs.com/boothsun/p/8976829.html\" target=\"_blank\">ZK分布式锁（未完 待续）&amp;nbsp;</a></li>\n</ul>\n<h3 id=\"Druid\"><a href=\"#Druid\" class=\"headerlink\" title=\"Druid\"></a>Druid</h3><ul>\n<li><a href=\"https://www.cnblogs.com/niejunlei/p/5977895.html\" target=\"_blank\">Druid 介绍及配置</a></li>\n</ul>\n<h3 id=\"Log4j\"><a href=\"#Log4j\" class=\"headerlink\" title=\"Log4j\"></a>Log4j</h3><ul>\n<li><a href=\"http://www.blogjava.net/zJun/archive/2006/06/28/55511.html\" target=\"_blank\">配置Log4j(很详细)</a></li>\n</ul>\n<h3 id=\"日志分析\"><a href=\"#日志分析\" class=\"headerlink\" title=\"日志分析\"></a>日志分析</h3><ul>\n<li>&amp;nbsp;</li>\n</ul>\n"},{"title":"MetalLB 安装","date":"2023-12-27T16:00:00.000Z","_content":"## MetalLB 安装\n\n### 下载 release 版本\n\n```bash\nwget https://github.com/metallb/metallb/archive/refs/tags/v0.12.1.tar.gz\ntar -zxvf v0.12.1.tar.gz\ncd metallb-0.12.1/manifests\n\nkubectl apply -f namespace.yaml\nkubectl apply -f metallb.yaml\n\n```\n\n### 查看 pod 状态\n\n```bash\nkubectl -n metallb-system get pods \n```\n\n### 查看 Deploy 状态\n\n```bash\nkubectl -n metallb-system get deploy\n```\n\n目前还没有宣布任何内容，因为我们没有提供ConfigMap，也没有提供负载均衡地址的服务。接下来要生成一个 Configmap 文件，为 Metallb 设置网址范围以及协议相关的选择和配置，这里以一个简单的二层配置为例。\n\n修改ip地址池，从集群IP地址段中为MetalLB分配部分IP地址：\n\n```bash\nvim example-layer2-config.yaml \n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  namespace: metallb-system\n  name: config\ndata:\n  config: |\n    address-pools:\n    - name: default\n      protocol: layer2\n      addresses:\n      - 192.168.72.200-192.168.72.250\n---\nkubectl apply -f example-layer2-config.yaml\n```\n\n\n\n### 创建后端应用和服务测试\n\n```bash\nkubectl apply -f tutorial-2.yaml \n```\n\n查看yaml文件配置，包含了一个deployment和一个LoadBalancer类型的service，默认即可。\n\n```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx\nspec:\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:latest\n        ports:\n        - name: http\n          containerPort: 80\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx\nspec:\n  ports:\n  - name: http\n    port: 80\n    protocol: TCP\n    targetPort: 80\n  selector:\n    app: nginx\n  type: LoadBalancer\n```\n\n### 查看service分配的EXTERNAL-IP\n\n```bash\nkubectl get service \n```\n\n","source":"_posts/k8s/MetaLib 安装.md","raw":"---\ntitle: MetalLB 安装\ndate: 2023-12-28\ncategories: k8s\n---\n## MetalLB 安装\n\n### 下载 release 版本\n\n```bash\nwget https://github.com/metallb/metallb/archive/refs/tags/v0.12.1.tar.gz\ntar -zxvf v0.12.1.tar.gz\ncd metallb-0.12.1/manifests\n\nkubectl apply -f namespace.yaml\nkubectl apply -f metallb.yaml\n\n```\n\n### 查看 pod 状态\n\n```bash\nkubectl -n metallb-system get pods \n```\n\n### 查看 Deploy 状态\n\n```bash\nkubectl -n metallb-system get deploy\n```\n\n目前还没有宣布任何内容，因为我们没有提供ConfigMap，也没有提供负载均衡地址的服务。接下来要生成一个 Configmap 文件，为 Metallb 设置网址范围以及协议相关的选择和配置，这里以一个简单的二层配置为例。\n\n修改ip地址池，从集群IP地址段中为MetalLB分配部分IP地址：\n\n```bash\nvim example-layer2-config.yaml \n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  namespace: metallb-system\n  name: config\ndata:\n  config: |\n    address-pools:\n    - name: default\n      protocol: layer2\n      addresses:\n      - 192.168.72.200-192.168.72.250\n---\nkubectl apply -f example-layer2-config.yaml\n```\n\n\n\n### 创建后端应用和服务测试\n\n```bash\nkubectl apply -f tutorial-2.yaml \n```\n\n查看yaml文件配置，包含了一个deployment和一个LoadBalancer类型的service，默认即可。\n\n```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx\nspec:\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:latest\n        ports:\n        - name: http\n          containerPort: 80\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx\nspec:\n  ports:\n  - name: http\n    port: 80\n    protocol: TCP\n    targetPort: 80\n  selector:\n    app: nginx\n  type: LoadBalancer\n```\n\n### 查看service分配的EXTERNAL-IP\n\n```bash\nkubectl get service \n```\n\n","slug":"k8s/MetaLib 安装","published":1,"updated":"2025-09-24T06:00:08.735Z","_id":"clqqa13nj000196jxhhaa2k10","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"MetalLB-安装\"><a href=\"#MetalLB-安装\" class=\"headerlink\" title=\"MetalLB 安装\"></a>MetalLB 安装</h2><h3 id=\"下载-release-版本\"><a href=\"#下载-release-版本\" class=\"headerlink\" title=\"下载 release 版本\"></a>下载 release 版本</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://github.com/metallb/metallb/archive/refs/tags/v0.12.1.tar.gz\n<span class=\"token function\">tar</span> <span class=\"token parameter variable\">-zxvf</span> v0.12.1.tar.gz\n<span class=\"token builtin class-name\">cd</span> metallb-0.12.1/manifests\n\nkubectl apply <span class=\"token parameter variable\">-f</span> namespace.yaml\nkubectl apply <span class=\"token parameter variable\">-f</span> metallb.yaml\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"查看-pod-状态\"><a href=\"#查看-pod-状态\" class=\"headerlink\" title=\"查看 pod 状态\"></a>查看 pod 状态</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">-n</span> metallb-system get pods <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"查看-Deploy-状态\"><a href=\"#查看-Deploy-状态\" class=\"headerlink\" title=\"查看 Deploy 状态\"></a>查看 Deploy 状态</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">-n</span> metallb-system get deploy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>目前还没有宣布任何内容，因为我们没有提供ConfigMap，也没有提供负载均衡地址的服务。接下来要生成一个 Configmap 文件，为 Metallb 设置网址范围以及协议相关的选择和配置，这里以一个简单的二层配置为例。</p>\n<p>修改ip地址池，从集群IP地址段中为MetalLB分配部分IP地址：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> example-layer2-config.yaml \n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  namespace: metallb-system\n  name: config\ndata:\n  config: <span class=\"token operator\">|</span>\n    address-pools:\n    - name: default\n      protocol: layer2\n      addresses:\n      - <span class=\"token number\">192.168</span>.72.200-192.168.72.250\n---\nkubectl apply <span class=\"token parameter variable\">-f</span> example-layer2-config.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"创建后端应用和服务测试\"><a href=\"#创建后端应用和服务测试\" class=\"headerlink\" title=\"创建后端应用和服务测试\"></a>创建后端应用和服务测试</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-f</span> tutorial-2.yaml <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>查看yaml文件配置，包含了一个deployment和一个LoadBalancer类型的service，默认即可。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> nginx\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> nginx\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx\n        <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span>latest\n        <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n          <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n    <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n    <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> nginx\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> LoadBalancer<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"查看service分配的EXTERNAL-IP\"><a href=\"#查看service分配的EXTERNAL-IP\" class=\"headerlink\" title=\"查看service分配的EXTERNAL-IP\"></a>查看service分配的EXTERNAL-IP</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl get <span class=\"token function\">service</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}},"cover":"/img/default_cover/geomeric8.png","cover_type":"img","excerpt":"","more":"<h2 id=\"MetalLB-安装\"><a href=\"#MetalLB-安装\" class=\"headerlink\" title=\"MetalLB 安装\"></a>MetalLB 安装</h2><h3 id=\"下载-release-版本\"><a href=\"#下载-release-版本\" class=\"headerlink\" title=\"下载 release 版本\"></a>下载 release 版本</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://github.com/metallb/metallb/archive/refs/tags/v0.12.1.tar.gz\n<span class=\"token function\">tar</span> <span class=\"token parameter variable\">-zxvf</span> v0.12.1.tar.gz\n<span class=\"token builtin class-name\">cd</span> metallb-0.12.1/manifests\n\nkubectl apply <span class=\"token parameter variable\">-f</span> namespace.yaml\nkubectl apply <span class=\"token parameter variable\">-f</span> metallb.yaml\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"查看-pod-状态\"><a href=\"#查看-pod-状态\" class=\"headerlink\" title=\"查看 pod 状态\"></a>查看 pod 状态</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">-n</span> metallb-system get pods <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"查看-Deploy-状态\"><a href=\"#查看-Deploy-状态\" class=\"headerlink\" title=\"查看 Deploy 状态\"></a>查看 Deploy 状态</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">-n</span> metallb-system get deploy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>目前还没有宣布任何内容，因为我们没有提供ConfigMap，也没有提供负载均衡地址的服务。接下来要生成一个 Configmap 文件，为 Metallb 设置网址范围以及协议相关的选择和配置，这里以一个简单的二层配置为例。</p>\n<p>修改ip地址池，从集群IP地址段中为MetalLB分配部分IP地址：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> example-layer2-config.yaml \n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  namespace: metallb-system\n  name: config\ndata:\n  config: <span class=\"token operator\">|</span>\n    address-pools:\n    - name: default\n      protocol: layer2\n      addresses:\n      - <span class=\"token number\">192.168</span>.72.200-192.168.72.250\n---\nkubectl apply <span class=\"token parameter variable\">-f</span> example-layer2-config.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"创建后端应用和服务测试\"><a href=\"#创建后端应用和服务测试\" class=\"headerlink\" title=\"创建后端应用和服务测试\"></a>创建后端应用和服务测试</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-f</span> tutorial-2.yaml <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>查看yaml文件配置，包含了一个deployment和一个LoadBalancer类型的service，默认即可。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> nginx\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> nginx\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx\n        <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span>latest\n        <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n          <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n    <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n    <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> nginx\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> LoadBalancer<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"查看service分配的EXTERNAL-IP\"><a href=\"#查看service分配的EXTERNAL-IP\" class=\"headerlink\" title=\"查看service分配的EXTERNAL-IP\"></a>查看service分配的EXTERNAL-IP</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl get <span class=\"token function\">service</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n"},{"title":"重塑生活的八个步骤","date":"2023-12-17T16:00:00.000Z","_content":"\n# 重塑生活的八个步骤\n\n## 一、洗净你的肉身\n\n洗澡，刷牙，穿上清新的衣服，时刻让自己的肉身整洁干净，这将向你的潜意识传递【你值得呵护】的信号。\n\n## 二、整顿你的领地\n\n打扫你的寝室，彻底清理你的房子，扔掉那些让你心烦意乱的废物。因为你的空间怎么样，你就是怎么样的人。如果你的空间乱七八糟，那你也是乱七八糟人。\n\n## 三、走出家门\n\n在我们信步行走、阳光洒脸、眼珠左右转动之时，大脑的运转状态最佳。走出去，因为我们生来就是为了与他人建立关系和与社群建立联系的。如果我们永远不离开家，我们将会悄然错失真实的生活。\n\n## 四、流汗\n\n让血液流动起来，去出点汗，因为消耗能量也会产生能量。\n\n## 五、监控你的小金库\n\n巨头每天都在做偷鸡摸狗的事，通过自动订阅掏空辛苦挣来的钱。请立刻打开你的订阅管理，取消所有默认的支付行为，你的小金库很重要！\n\n## 六、移除束缚，脱身引诱\n\n关闭通知，取关不必要的社交账号，戒断所有抽烟喝酒的成瘾行为。\n\n## 七、制定策略\n\n别再漫无目的地生活，天上不会掉馅饼。立即制定策略，付诸行动。\n\n## 八、臣服\n\n臣服于你必须做的事情，你已经思考过了，关闭你的大脑，卸下过度思考的负担。学会让你的理性思考静音。","source":"_posts/life/重塑生活的八个步骤.md","raw":"---\ntitle: 重塑生活的八个步骤\ndate: 2023-12-18\ncategories: 生活\n---\n\n# 重塑生活的八个步骤\n\n## 一、洗净你的肉身\n\n洗澡，刷牙，穿上清新的衣服，时刻让自己的肉身整洁干净，这将向你的潜意识传递【你值得呵护】的信号。\n\n## 二、整顿你的领地\n\n打扫你的寝室，彻底清理你的房子，扔掉那些让你心烦意乱的废物。因为你的空间怎么样，你就是怎么样的人。如果你的空间乱七八糟，那你也是乱七八糟人。\n\n## 三、走出家门\n\n在我们信步行走、阳光洒脸、眼珠左右转动之时，大脑的运转状态最佳。走出去，因为我们生来就是为了与他人建立关系和与社群建立联系的。如果我们永远不离开家，我们将会悄然错失真实的生活。\n\n## 四、流汗\n\n让血液流动起来，去出点汗，因为消耗能量也会产生能量。\n\n## 五、监控你的小金库\n\n巨头每天都在做偷鸡摸狗的事，通过自动订阅掏空辛苦挣来的钱。请立刻打开你的订阅管理，取消所有默认的支付行为，你的小金库很重要！\n\n## 六、移除束缚，脱身引诱\n\n关闭通知，取关不必要的社交账号，戒断所有抽烟喝酒的成瘾行为。\n\n## 七、制定策略\n\n别再漫无目的地生活，天上不会掉馅饼。立即制定策略，付诸行动。\n\n## 八、臣服\n\n臣服于你必须做的事情，你已经思考过了，关闭你的大脑，卸下过度思考的负担。学会让你的理性思考静音。","slug":"life/重塑生活的八个步骤","published":1,"updated":"2025-09-24T06:00:08.739Z","_id":"clqqa13nm000396jxc5ax3urc","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"重塑生活的八个步骤\"><a href=\"#重塑生活的八个步骤\" class=\"headerlink\" title=\"重塑生活的八个步骤\"></a>重塑生活的八个步骤</h1><h2 id=\"一、洗净你的肉身\"><a href=\"#一、洗净你的肉身\" class=\"headerlink\" title=\"一、洗净你的肉身\"></a>一、洗净你的肉身</h2><p>洗澡，刷牙，穿上清新的衣服，时刻让自己的肉身整洁干净，这将向你的潜意识传递【你值得呵护】的信号。</p>\n<h2 id=\"二、整顿你的领地\"><a href=\"#二、整顿你的领地\" class=\"headerlink\" title=\"二、整顿你的领地\"></a>二、整顿你的领地</h2><p>打扫你的寝室，彻底清理你的房子，扔掉那些让你心烦意乱的废物。因为你的空间怎么样，你就是怎么样的人。如果你的空间乱七八糟，那你也是乱七八糟人。</p>\n<h2 id=\"三、走出家门\"><a href=\"#三、走出家门\" class=\"headerlink\" title=\"三、走出家门\"></a>三、走出家门</h2><p>在我们信步行走、阳光洒脸、眼珠左右转动之时，大脑的运转状态最佳。走出去，因为我们生来就是为了与他人建立关系和与社群建立联系的。如果我们永远不离开家，我们将会悄然错失真实的生活。</p>\n<h2 id=\"四、流汗\"><a href=\"#四、流汗\" class=\"headerlink\" title=\"四、流汗\"></a>四、流汗</h2><p>让血液流动起来，去出点汗，因为消耗能量也会产生能量。</p>\n<h2 id=\"五、监控你的小金库\"><a href=\"#五、监控你的小金库\" class=\"headerlink\" title=\"五、监控你的小金库\"></a>五、监控你的小金库</h2><p>巨头每天都在做偷鸡摸狗的事，通过自动订阅掏空辛苦挣来的钱。请立刻打开你的订阅管理，取消所有默认的支付行为，你的小金库很重要！</p>\n<h2 id=\"六、移除束缚，脱身引诱\"><a href=\"#六、移除束缚，脱身引诱\" class=\"headerlink\" title=\"六、移除束缚，脱身引诱\"></a>六、移除束缚，脱身引诱</h2><p>关闭通知，取关不必要的社交账号，戒断所有抽烟喝酒的成瘾行为。</p>\n<h2 id=\"七、制定策略\"><a href=\"#七、制定策略\" class=\"headerlink\" title=\"七、制定策略\"></a>七、制定策略</h2><p>别再漫无目的地生活，天上不会掉馅饼。立即制定策略，付诸行动。</p>\n<h2 id=\"八、臣服\"><a href=\"#八、臣服\" class=\"headerlink\" title=\"八、臣服\"></a>八、臣服</h2><p>臣服于你必须做的事情，你已经思考过了，关闭你的大脑，卸下过度思考的负担。学会让你的理性思考静音。</p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}},"cover":"/img/default_cover/geomeric4.jpg","cover_type":"img","excerpt":"","more":"<h1 id=\"重塑生活的八个步骤\"><a href=\"#重塑生活的八个步骤\" class=\"headerlink\" title=\"重塑生活的八个步骤\"></a>重塑生活的八个步骤</h1><h2 id=\"一、洗净你的肉身\"><a href=\"#一、洗净你的肉身\" class=\"headerlink\" title=\"一、洗净你的肉身\"></a>一、洗净你的肉身</h2><p>洗澡，刷牙，穿上清新的衣服，时刻让自己的肉身整洁干净，这将向你的潜意识传递【你值得呵护】的信号。</p>\n<h2 id=\"二、整顿你的领地\"><a href=\"#二、整顿你的领地\" class=\"headerlink\" title=\"二、整顿你的领地\"></a>二、整顿你的领地</h2><p>打扫你的寝室，彻底清理你的房子，扔掉那些让你心烦意乱的废物。因为你的空间怎么样，你就是怎么样的人。如果你的空间乱七八糟，那你也是乱七八糟人。</p>\n<h2 id=\"三、走出家门\"><a href=\"#三、走出家门\" class=\"headerlink\" title=\"三、走出家门\"></a>三、走出家门</h2><p>在我们信步行走、阳光洒脸、眼珠左右转动之时，大脑的运转状态最佳。走出去，因为我们生来就是为了与他人建立关系和与社群建立联系的。如果我们永远不离开家，我们将会悄然错失真实的生活。</p>\n<h2 id=\"四、流汗\"><a href=\"#四、流汗\" class=\"headerlink\" title=\"四、流汗\"></a>四、流汗</h2><p>让血液流动起来，去出点汗，因为消耗能量也会产生能量。</p>\n<h2 id=\"五、监控你的小金库\"><a href=\"#五、监控你的小金库\" class=\"headerlink\" title=\"五、监控你的小金库\"></a>五、监控你的小金库</h2><p>巨头每天都在做偷鸡摸狗的事，通过自动订阅掏空辛苦挣来的钱。请立刻打开你的订阅管理，取消所有默认的支付行为，你的小金库很重要！</p>\n<h2 id=\"六、移除束缚，脱身引诱\"><a href=\"#六、移除束缚，脱身引诱\" class=\"headerlink\" title=\"六、移除束缚，脱身引诱\"></a>六、移除束缚，脱身引诱</h2><p>关闭通知，取关不必要的社交账号，戒断所有抽烟喝酒的成瘾行为。</p>\n<h2 id=\"七、制定策略\"><a href=\"#七、制定策略\" class=\"headerlink\" title=\"七、制定策略\"></a>七、制定策略</h2><p>别再漫无目的地生活，天上不会掉馅饼。立即制定策略，付诸行动。</p>\n<h2 id=\"八、臣服\"><a href=\"#八、臣服\" class=\"headerlink\" title=\"八、臣服\"></a>八、臣服</h2><p>臣服于你必须做的事情，你已经思考过了，关闭你的大脑，卸下过度思考的负担。学会让你的理性思考静音。</p>\n"},{"title":"Linux 根目录扩容操作","date":"2023-12-28T16:00:00.000Z","_content":"\n# Linux 根目录扩容操作\n\n## 需求描述\n\n由于测试环境需要，虚拟机根目录需要扩容至120G。\n\n## 查看本机磁盘环境\n\n```bash\n[root@localhost ~]# df -h\n文件系统                 容量  已用  可用 已用% 挂载点\n/dev/mapper/centos-root   35G  5.5G   30G   16% /\ndevtmpfs                 3.9G     0  3.9G    0% /dev\ntmpfs                    3.9G     0  3.9G    0% /dev/shm\ntmpfs                    3.9G   11M  3.9G    1% /run\ntmpfs                    3.9G     0  3.9G    0% /sys/fs/cgroup\n/dev/sda1               1014M  275M  740M   28% /boot\ntmpfs                    783M   52K  783M    1% /run/user/0\n[root@localhost ~]# lsblk\nNAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nfd0               2:0    1    4K  0 disk\nsda               8:0    0  500G  0 disk\n├─sda1            8:1    0    1G  0 part /boot\n└─sda2            8:2    0   39G  0 part\n  ├─centos-root 253:0    0   35G  0 lvm  /\n  └─centos-swap 253:1    0    4G  0 lvm  [SWAP]\n```\n\n可以看到根目录总容量为35G, 设备sda 的总容量为500G。\n\n## 添加磁盘分区\n\n需要120G 容量，已有35G, 还需添加85G 容量。\n\n```bash\n[root@localhost ~]# fdisk /dev/sda\n欢迎使用 fdisk (util-linux 2.23.2)。\n\n更改将停留在内存中，直到您决定将更改写入磁盘。\n使用写入命令前请三思。\n\n命令(输入 m 获取帮助)：n\nPartition type:\n   p   primary (2 primary, 0 extended, 2 free)\n   e   extended\nSelect (default p):\nUsing default response p\n分区号 (3,4，默认 3)：\n起始 扇区 (83886080-1048575999，默认为 83886080)：\n将使用默认值 83886080\nLast 扇区, +扇区 or +size{K,M,G} (83886080-1048575999，默认为 1048575999)：+85G\n分区 3 已设置为 Linux 类型，大小设为 85 GiB\n\n命令(输入 m 获取帮助)：w\nThe partition table has been altered!\n\nCalling ioctl() to re-read partition table.\n\n[root@localhost ~]# partprobe\n```\n\n然后查看分区是否创建：\n\n```bash\n[root@localhost ~]# lsblk\nNAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nfd0               2:0    1    4K  0 disk\nsda               8:0    0  500G  0 disk\n├─sda1            8:1    0    1G  0 part /boot\n├─sda2            8:2    0   39G  0 part\n│ ├─centos-root 253:0    0   35G  0 lvm  /\n│ └─centos-swap 253:1    0    4G  0 lvm  [SWAP]\n└─sda3            8:3    0   85G  0 part\nsr0              11:0    1 1024M  0 rom\n```\n\n可以看到sda2 分区已创建。\n\n## 开始扩容\n\n### 创建物理卷\n\n```bash\n[root@localhost ~]# lvm\nlvm> pvcreate /dev/sda3\n  Physical volume \"/dev/sda3\" successfully created.\n```\n\n### 查看物理卷和卷组\n\n```bash\nlvm> pvdisplay\n  --- Physical volume ---\n  PV Name               /dev/sda2\n  VG Name               centos\n  PV Size               <39.00 GiB / not usable 3.00 MiB\n  Allocatable           yes (but full)\n  PE Size               4.00 MiB\n  Total PE              9983\n  Free PE               0\n  Allocated PE          9983\n  PV UUID               twmUZh-Vnqq-W5Pd-v3ms-6OkH-sSTs-nv8aA8\n\n  \"/dev/sda3\" is a new physical volume of \"85.00 GiB\"\n  --- NEW Physical volume ---\n  PV Name               /dev/sda3\n  VG Name\n  PV Size               85.00 GiB\n  Allocatable           NO\n  PE Size               0\n  Total PE              0\n  Free PE               0\n  Allocated PE          0\n  PV UUID               vTD91f-b28E-GgL0-XsqI-ipQ5-rscT-GcQbT6\n\nlvm> vgdisplay\n  --- Volume group ---\n  VG Name               centos\n  System ID\n  Format                lvm2\n  Metadata Areas        1\n  Metadata Sequence No  3\n  VG Access             read/write\n  VG Status             resizable\n  MAX LV                0\n  Cur LV                2\n  Open LV               2\n  Max PV                0\n  Cur PV                1\n  Act PV                1\n  VG Size               <39.00 GiB\n  PE Size               4.00 MiB\n  Total PE              9983\n  Alloc PE / Size       9983 / <39.00 GiB\n  Free  PE / Size       0 / 0\n  VG UUID               238Yz8-MEQa-NT6a-3aHC-J3TZ-mGux-e9vqPf\n```\n\n### 将物理卷加入到卷组\n\n```bash\nlvm> vgextend centos /dev/sda3\n  Volume group \"centos\" successfully extended\nlvm> vgdisplay\n  --- Volume group ---\n  VG Name               centos\n  System ID\n  Format                lvm2\n  Metadata Areas        2\n  Metadata Sequence No  4\n  VG Access             read/write\n  VG Status             resizable\n  MAX LV                0\n  Cur LV                2\n  Open LV               2\n  Max PV                0\n  Cur PV                2\n  Act PV                2\n  VG Size               123.99 GiB\n  PE Size               4.00 MiB\n  Total PE              31742\n  Alloc PE / Size       9983 / <39.00 GiB\n  Free  PE / Size       21759 / <85.00 GiB\n  VG UUID               238Yz8-MEQa-NT6a-3aHC-J3TZ-mGux-e9vqPf\n```\n\n可以看到卷组的Free size 增加了\n将卷组剩余空间(刚添加的85G)添加到逻辑卷/dev/centos/root :\n\n```bash\nlvm> lvextend -l +100%FREE /dev/centos/root\n  Size of logical volume centos/root changed from <35.00 GiB (8959 extents) to 119.99 GiB (30718 extents).\n  Logical volume centos/root successfully resized.\n```\n\n### 同步到文件系统\n\n之前只是对逻辑卷扩容，还要同步到文件系统，实现对根目录的扩容。\n\n```bash\n[root@localhost ~]# xfs_growfs /dev/centos/root\nmeta-data=/dev/mapper/centos-root isize=512    agcount=4, agsize=2293504 blks\n         =                       sectsz=512   attr=2, projid32bit=1\n         =                       crc=1        finobt=0 spinodes=0\ndata     =                       bsize=4096   blocks=9174016, imaxpct=25\n         =                       sunit=0      swidth=0 blks\nnaming   =version 2              bsize=4096   ascii-ci=0 ftype=1\nlog      =internal               bsize=4096   blocks=4479, version=2\n         =                       sectsz=512   sunit=0 blks, lazy-count=1\nrealtime =none                   extsz=4096   blocks=0, rtextents=0\ndata blocks changed from 9174016 to 31455232\n```\n\ndebian/ubuntu 系统则使用以下命令对根目录扩容\n\n```bash\nresize2fs /dev/debian-vg/root\n```\n\n然后再查看挂载情况：\n\n```bash\n[root@localhost ~]# df -h\n文件系统                 容量  已用  可用 已用% 挂载点\n/dev/mapper/centos-root  120G  5.5G  115G    5% /\ndevtmpfs                 3.9G     0  3.9G    0% /dev\ntmpfs                    3.9G     0  3.9G    0% /dev/shm\ntmpfs                    3.9G   11M  3.9G    1% /run\ntmpfs                    3.9G     0  3.9G    0% /sys/fs/cgroup\n/dev/sda1               1014M  275M  740M   28% /boot\ntmpfs                    783M   52K  783M    1% /run/user/0\n```\n\n可以发现有120G的空间挂载在根目录上。\nover !!!\n参考内容\n<https://blog.csdn.net/harryxxxxx/article/details/81114613>\n<https://blog.csdn.net/nimasike/article/details/53729499>\n[\n](https://blog.csdn.net/qq_24871519/article/details/86243571)\n","source":"_posts/linux/Linux 根目录扩容操作.md","raw":"---\ntitle: Linux 根目录扩容操作\ntags: linux\ncategories: linux\ndate: 2023-12-29\n---\n\n# Linux 根目录扩容操作\n\n## 需求描述\n\n由于测试环境需要，虚拟机根目录需要扩容至120G。\n\n## 查看本机磁盘环境\n\n```bash\n[root@localhost ~]# df -h\n文件系统                 容量  已用  可用 已用% 挂载点\n/dev/mapper/centos-root   35G  5.5G   30G   16% /\ndevtmpfs                 3.9G     0  3.9G    0% /dev\ntmpfs                    3.9G     0  3.9G    0% /dev/shm\ntmpfs                    3.9G   11M  3.9G    1% /run\ntmpfs                    3.9G     0  3.9G    0% /sys/fs/cgroup\n/dev/sda1               1014M  275M  740M   28% /boot\ntmpfs                    783M   52K  783M    1% /run/user/0\n[root@localhost ~]# lsblk\nNAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nfd0               2:0    1    4K  0 disk\nsda               8:0    0  500G  0 disk\n├─sda1            8:1    0    1G  0 part /boot\n└─sda2            8:2    0   39G  0 part\n  ├─centos-root 253:0    0   35G  0 lvm  /\n  └─centos-swap 253:1    0    4G  0 lvm  [SWAP]\n```\n\n可以看到根目录总容量为35G, 设备sda 的总容量为500G。\n\n## 添加磁盘分区\n\n需要120G 容量，已有35G, 还需添加85G 容量。\n\n```bash\n[root@localhost ~]# fdisk /dev/sda\n欢迎使用 fdisk (util-linux 2.23.2)。\n\n更改将停留在内存中，直到您决定将更改写入磁盘。\n使用写入命令前请三思。\n\n命令(输入 m 获取帮助)：n\nPartition type:\n   p   primary (2 primary, 0 extended, 2 free)\n   e   extended\nSelect (default p):\nUsing default response p\n分区号 (3,4，默认 3)：\n起始 扇区 (83886080-1048575999，默认为 83886080)：\n将使用默认值 83886080\nLast 扇区, +扇区 or +size{K,M,G} (83886080-1048575999，默认为 1048575999)：+85G\n分区 3 已设置为 Linux 类型，大小设为 85 GiB\n\n命令(输入 m 获取帮助)：w\nThe partition table has been altered!\n\nCalling ioctl() to re-read partition table.\n\n[root@localhost ~]# partprobe\n```\n\n然后查看分区是否创建：\n\n```bash\n[root@localhost ~]# lsblk\nNAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nfd0               2:0    1    4K  0 disk\nsda               8:0    0  500G  0 disk\n├─sda1            8:1    0    1G  0 part /boot\n├─sda2            8:2    0   39G  0 part\n│ ├─centos-root 253:0    0   35G  0 lvm  /\n│ └─centos-swap 253:1    0    4G  0 lvm  [SWAP]\n└─sda3            8:3    0   85G  0 part\nsr0              11:0    1 1024M  0 rom\n```\n\n可以看到sda2 分区已创建。\n\n## 开始扩容\n\n### 创建物理卷\n\n```bash\n[root@localhost ~]# lvm\nlvm> pvcreate /dev/sda3\n  Physical volume \"/dev/sda3\" successfully created.\n```\n\n### 查看物理卷和卷组\n\n```bash\nlvm> pvdisplay\n  --- Physical volume ---\n  PV Name               /dev/sda2\n  VG Name               centos\n  PV Size               <39.00 GiB / not usable 3.00 MiB\n  Allocatable           yes (but full)\n  PE Size               4.00 MiB\n  Total PE              9983\n  Free PE               0\n  Allocated PE          9983\n  PV UUID               twmUZh-Vnqq-W5Pd-v3ms-6OkH-sSTs-nv8aA8\n\n  \"/dev/sda3\" is a new physical volume of \"85.00 GiB\"\n  --- NEW Physical volume ---\n  PV Name               /dev/sda3\n  VG Name\n  PV Size               85.00 GiB\n  Allocatable           NO\n  PE Size               0\n  Total PE              0\n  Free PE               0\n  Allocated PE          0\n  PV UUID               vTD91f-b28E-GgL0-XsqI-ipQ5-rscT-GcQbT6\n\nlvm> vgdisplay\n  --- Volume group ---\n  VG Name               centos\n  System ID\n  Format                lvm2\n  Metadata Areas        1\n  Metadata Sequence No  3\n  VG Access             read/write\n  VG Status             resizable\n  MAX LV                0\n  Cur LV                2\n  Open LV               2\n  Max PV                0\n  Cur PV                1\n  Act PV                1\n  VG Size               <39.00 GiB\n  PE Size               4.00 MiB\n  Total PE              9983\n  Alloc PE / Size       9983 / <39.00 GiB\n  Free  PE / Size       0 / 0\n  VG UUID               238Yz8-MEQa-NT6a-3aHC-J3TZ-mGux-e9vqPf\n```\n\n### 将物理卷加入到卷组\n\n```bash\nlvm> vgextend centos /dev/sda3\n  Volume group \"centos\" successfully extended\nlvm> vgdisplay\n  --- Volume group ---\n  VG Name               centos\n  System ID\n  Format                lvm2\n  Metadata Areas        2\n  Metadata Sequence No  4\n  VG Access             read/write\n  VG Status             resizable\n  MAX LV                0\n  Cur LV                2\n  Open LV               2\n  Max PV                0\n  Cur PV                2\n  Act PV                2\n  VG Size               123.99 GiB\n  PE Size               4.00 MiB\n  Total PE              31742\n  Alloc PE / Size       9983 / <39.00 GiB\n  Free  PE / Size       21759 / <85.00 GiB\n  VG UUID               238Yz8-MEQa-NT6a-3aHC-J3TZ-mGux-e9vqPf\n```\n\n可以看到卷组的Free size 增加了\n将卷组剩余空间(刚添加的85G)添加到逻辑卷/dev/centos/root :\n\n```bash\nlvm> lvextend -l +100%FREE /dev/centos/root\n  Size of logical volume centos/root changed from <35.00 GiB (8959 extents) to 119.99 GiB (30718 extents).\n  Logical volume centos/root successfully resized.\n```\n\n### 同步到文件系统\n\n之前只是对逻辑卷扩容，还要同步到文件系统，实现对根目录的扩容。\n\n```bash\n[root@localhost ~]# xfs_growfs /dev/centos/root\nmeta-data=/dev/mapper/centos-root isize=512    agcount=4, agsize=2293504 blks\n         =                       sectsz=512   attr=2, projid32bit=1\n         =                       crc=1        finobt=0 spinodes=0\ndata     =                       bsize=4096   blocks=9174016, imaxpct=25\n         =                       sunit=0      swidth=0 blks\nnaming   =version 2              bsize=4096   ascii-ci=0 ftype=1\nlog      =internal               bsize=4096   blocks=4479, version=2\n         =                       sectsz=512   sunit=0 blks, lazy-count=1\nrealtime =none                   extsz=4096   blocks=0, rtextents=0\ndata blocks changed from 9174016 to 31455232\n```\n\ndebian/ubuntu 系统则使用以下命令对根目录扩容\n\n```bash\nresize2fs /dev/debian-vg/root\n```\n\n然后再查看挂载情况：\n\n```bash\n[root@localhost ~]# df -h\n文件系统                 容量  已用  可用 已用% 挂载点\n/dev/mapper/centos-root  120G  5.5G  115G    5% /\ndevtmpfs                 3.9G     0  3.9G    0% /dev\ntmpfs                    3.9G     0  3.9G    0% /dev/shm\ntmpfs                    3.9G   11M  3.9G    1% /run\ntmpfs                    3.9G     0  3.9G    0% /sys/fs/cgroup\n/dev/sda1               1014M  275M  740M   28% /boot\ntmpfs                    783M   52K  783M    1% /run/user/0\n```\n\n可以发现有120G的空间挂载在根目录上。\nover !!!\n参考内容\n<https://blog.csdn.net/harryxxxxx/article/details/81114613>\n<https://blog.csdn.net/nimasike/article/details/53729499>\n[\n](https://blog.csdn.net/qq_24871519/article/details/86243571)\n","slug":"linux/Linux 根目录扩容操作","published":1,"updated":"2023-12-29T06:24:51.379Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqqa13nn000496jx59x82ts7","content":"<h1 id=\"Linux-根目录扩容操作\"><a href=\"#Linux-根目录扩容操作\" class=\"headerlink\" title=\"Linux 根目录扩容操作\"></a>Linux 根目录扩容操作</h1><h2 id=\"需求描述\"><a href=\"#需求描述\" class=\"headerlink\" title=\"需求描述\"></a>需求描述</h2><p>由于测试环境需要，虚拟机根目录需要扩容至120G。</p>\n<h2 id=\"查看本机磁盘环境\"><a href=\"#查看本机磁盘环境\" class=\"headerlink\" title=\"查看本机磁盘环境\"></a>查看本机磁盘环境</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># df -h</span>\n文件系统                 容量  已用  可用 已用% 挂载点\n/dev/mapper/centos-root   35G  <span class=\"token number\">5</span>.5G   30G   <span class=\"token number\">16</span>% /\ndevtmpfs                 <span class=\"token number\">3</span>.9G     <span class=\"token number\">0</span>  <span class=\"token number\">3</span>.9G    <span class=\"token number\">0</span>% /dev\ntmpfs                    <span class=\"token number\">3</span>.9G     <span class=\"token number\">0</span>  <span class=\"token number\">3</span>.9G    <span class=\"token number\">0</span>% /dev/shm\ntmpfs                    <span class=\"token number\">3</span>.9G   11M  <span class=\"token number\">3</span>.9G    <span class=\"token number\">1</span>% /run\ntmpfs                    <span class=\"token number\">3</span>.9G     <span class=\"token number\">0</span>  <span class=\"token number\">3</span>.9G    <span class=\"token number\">0</span>% /sys/fs/cgroup\n/dev/sda1               1014M  275M  740M   <span class=\"token number\">28</span>% /boot\ntmpfs                    783M   52K  783M    <span class=\"token number\">1</span>% /run/user/0\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># lsblk</span>\nNAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nfd0               <span class=\"token number\">2</span>:0    <span class=\"token number\">1</span>    4K  <span class=\"token number\">0</span> disk\nsda               <span class=\"token number\">8</span>:0    <span class=\"token number\">0</span>  500G  <span class=\"token number\">0</span> disk\n├─sda1            <span class=\"token number\">8</span>:1    <span class=\"token number\">0</span>    1G  <span class=\"token number\">0</span> part /boot\n└─sda2            <span class=\"token number\">8</span>:2    <span class=\"token number\">0</span>   39G  <span class=\"token number\">0</span> part\n  ├─centos-root <span class=\"token number\">253</span>:0    <span class=\"token number\">0</span>   35G  <span class=\"token number\">0</span> lvm  /\n  └─centos-swap <span class=\"token number\">253</span>:1    <span class=\"token number\">0</span>    4G  <span class=\"token number\">0</span> lvm  <span class=\"token punctuation\">[</span>SWAP<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可以看到根目录总容量为35G, 设备sda 的总容量为500G。</p>\n<h2 id=\"添加磁盘分区\"><a href=\"#添加磁盘分区\" class=\"headerlink\" title=\"添加磁盘分区\"></a>添加磁盘分区</h2><p>需要120G 容量，已有35G, 还需添加85G 容量。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># fdisk /dev/sda</span>\n欢迎使用 <span class=\"token function\">fdisk</span> <span class=\"token punctuation\">(</span>util-linux <span class=\"token number\">2.23</span>.2<span class=\"token punctuation\">)</span>。\n\n更改将停留在内存中，直到您决定将更改写入磁盘。\n使用写入命令前请三思。\n\n命令<span class=\"token punctuation\">(</span>输入 m 获取帮助<span class=\"token punctuation\">)</span>：n\nPartition type:\n   p   primary <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> primary, <span class=\"token number\">0</span> extended, <span class=\"token number\">2</span> <span class=\"token function\">free</span><span class=\"token punctuation\">)</span>\n   e   extended\nSelect <span class=\"token punctuation\">(</span>default p<span class=\"token punctuation\">)</span>:\nUsing default response p\n分区号 <span class=\"token punctuation\">(</span><span class=\"token number\">3,4</span>，默认 <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>：\n起始 扇区 <span class=\"token punctuation\">(</span><span class=\"token number\">83886080</span>-1048575999，默认为 <span class=\"token number\">83886080</span><span class=\"token punctuation\">)</span>：\n将使用默认值 <span class=\"token number\">83886080</span>\nLast 扇区, +扇区 or +size<span class=\"token punctuation\">&#123;</span>K,M,G<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">(</span><span class=\"token number\">83886080</span>-1048575999，默认为 <span class=\"token number\">1048575999</span><span class=\"token punctuation\">)</span>：+85G\n分区 <span class=\"token number\">3</span> 已设置为 Linux 类型，大小设为 <span class=\"token number\">85</span> GiB\n\n命令<span class=\"token punctuation\">(</span>输入 m 获取帮助<span class=\"token punctuation\">)</span>：w\nThe partition table has been altered<span class=\"token operator\">!</span>\n\nCalling ioctl<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> to re-read partition table.\n\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># partprobe</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>然后查看分区是否创建：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># lsblk</span>\nNAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nfd0               <span class=\"token number\">2</span>:0    <span class=\"token number\">1</span>    4K  <span class=\"token number\">0</span> disk\nsda               <span class=\"token number\">8</span>:0    <span class=\"token number\">0</span>  500G  <span class=\"token number\">0</span> disk\n├─sda1            <span class=\"token number\">8</span>:1    <span class=\"token number\">0</span>    1G  <span class=\"token number\">0</span> part /boot\n├─sda2            <span class=\"token number\">8</span>:2    <span class=\"token number\">0</span>   39G  <span class=\"token number\">0</span> part\n│ ├─centos-root <span class=\"token number\">253</span>:0    <span class=\"token number\">0</span>   35G  <span class=\"token number\">0</span> lvm  /\n│ └─centos-swap <span class=\"token number\">253</span>:1    <span class=\"token number\">0</span>    4G  <span class=\"token number\">0</span> lvm  <span class=\"token punctuation\">[</span>SWAP<span class=\"token punctuation\">]</span>\n└─sda3            <span class=\"token number\">8</span>:3    <span class=\"token number\">0</span>   85G  <span class=\"token number\">0</span> part\nsr0              <span class=\"token number\">11</span>:0    <span class=\"token number\">1</span> 1024M  <span class=\"token number\">0</span> rom<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可以看到sda2 分区已创建。</p>\n<h2 id=\"开始扩容\"><a href=\"#开始扩容\" class=\"headerlink\" title=\"开始扩容\"></a>开始扩容</h2><h3 id=\"创建物理卷\"><a href=\"#创建物理卷\" class=\"headerlink\" title=\"创建物理卷\"></a>创建物理卷</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># lvm</span>\nlvm<span class=\"token operator\">></span> pvcreate /dev/sda3\n  Physical volume <span class=\"token string\">\"/dev/sda3\"</span> successfully created.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"查看物理卷和卷组\"><a href=\"#查看物理卷和卷组\" class=\"headerlink\" title=\"查看物理卷和卷组\"></a>查看物理卷和卷组</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lvm<span class=\"token operator\">></span> pvdisplay\n  --- Physical volume ---\n  PV Name               /dev/sda2\n  VG Name               centos\n  PV Size               <span class=\"token operator\">&lt;</span><span class=\"token number\">39.00</span> GiB / not usable <span class=\"token number\">3.00</span> MiB\n  Allocatable           <span class=\"token function\">yes</span> <span class=\"token punctuation\">(</span>but full<span class=\"token punctuation\">)</span>\n  PE Size               <span class=\"token number\">4.00</span> MiB\n  Total PE              <span class=\"token number\">9983</span>\n  Free PE               <span class=\"token number\">0</span>\n  Allocated PE          <span class=\"token number\">9983</span>\n  PV UUID               twmUZh-Vnqq-W5Pd-v3ms-6OkH-sSTs-nv8aA8\n\n  <span class=\"token string\">\"/dev/sda3\"</span> is a new physical volume of <span class=\"token string\">\"85.00 GiB\"</span>\n  --- NEW Physical volume ---\n  PV Name               /dev/sda3\n  VG Name\n  PV Size               <span class=\"token number\">85.00</span> GiB\n  Allocatable           NO\n  PE Size               <span class=\"token number\">0</span>\n  Total PE              <span class=\"token number\">0</span>\n  Free PE               <span class=\"token number\">0</span>\n  Allocated PE          <span class=\"token number\">0</span>\n  PV UUID               vTD91f-b28E-GgL0-XsqI-ipQ5-rscT-GcQbT6\n\nlvm<span class=\"token operator\">></span> vgdisplay\n  --- Volume group ---\n  VG Name               centos\n  System ID\n  Format                lvm2\n  Metadata Areas        <span class=\"token number\">1</span>\n  Metadata Sequence No  <span class=\"token number\">3</span>\n  VG Access             read/write\n  VG Status             resizable\n  MAX LV                <span class=\"token number\">0</span>\n  Cur LV                <span class=\"token number\">2</span>\n  Open LV               <span class=\"token number\">2</span>\n  Max PV                <span class=\"token number\">0</span>\n  Cur PV                <span class=\"token number\">1</span>\n  Act PV                <span class=\"token number\">1</span>\n  VG Size               <span class=\"token operator\">&lt;</span><span class=\"token number\">39.00</span> GiB\n  PE Size               <span class=\"token number\">4.00</span> MiB\n  Total PE              <span class=\"token number\">9983</span>\n  Alloc PE / Size       <span class=\"token number\">9983</span> / <span class=\"token operator\">&lt;</span><span class=\"token number\">39.00</span> GiB\n  Free  PE / Size       <span class=\"token number\">0</span> / <span class=\"token number\">0</span>\n  VG UUID               238Yz8-MEQa-NT6a-3aHC-J3TZ-mGux-e9vqPf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"将物理卷加入到卷组\"><a href=\"#将物理卷加入到卷组\" class=\"headerlink\" title=\"将物理卷加入到卷组\"></a>将物理卷加入到卷组</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lvm<span class=\"token operator\">></span> vgextend centos /dev/sda3\n  Volume group <span class=\"token string\">\"centos\"</span> successfully extended\nlvm<span class=\"token operator\">></span> vgdisplay\n  --- Volume group ---\n  VG Name               centos\n  System ID\n  Format                lvm2\n  Metadata Areas        <span class=\"token number\">2</span>\n  Metadata Sequence No  <span class=\"token number\">4</span>\n  VG Access             read/write\n  VG Status             resizable\n  MAX LV                <span class=\"token number\">0</span>\n  Cur LV                <span class=\"token number\">2</span>\n  Open LV               <span class=\"token number\">2</span>\n  Max PV                <span class=\"token number\">0</span>\n  Cur PV                <span class=\"token number\">2</span>\n  Act PV                <span class=\"token number\">2</span>\n  VG Size               <span class=\"token number\">123.99</span> GiB\n  PE Size               <span class=\"token number\">4.00</span> MiB\n  Total PE              <span class=\"token number\">31742</span>\n  Alloc PE / Size       <span class=\"token number\">9983</span> / <span class=\"token operator\">&lt;</span><span class=\"token number\">39.00</span> GiB\n  Free  PE / Size       <span class=\"token number\">21759</span> / <span class=\"token operator\">&lt;</span><span class=\"token number\">85.00</span> GiB\n  VG UUID               238Yz8-MEQa-NT6a-3aHC-J3TZ-mGux-e9vqPf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可以看到卷组的Free size 增加了<br>将卷组剩余空间(刚添加的85G)添加到逻辑卷&#x2F;dev&#x2F;centos&#x2F;root :</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lvm<span class=\"token operator\">></span> lvextend <span class=\"token parameter variable\">-l</span> +100%FREE /dev/centos/root\n  Size of logical volume centos/root changed from <span class=\"token operator\">&lt;</span><span class=\"token number\">35.00</span> GiB <span class=\"token punctuation\">(</span><span class=\"token number\">8959</span> extents<span class=\"token punctuation\">)</span> to <span class=\"token number\">119.99</span> GiB <span class=\"token punctuation\">(</span><span class=\"token number\">30718</span> extents<span class=\"token punctuation\">)</span>.\n  Logical volume centos/root successfully resized.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"同步到文件系统\"><a href=\"#同步到文件系统\" class=\"headerlink\" title=\"同步到文件系统\"></a>同步到文件系统</h3><p>之前只是对逻辑卷扩容，还要同步到文件系统，实现对根目录的扩容。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># xfs_growfs /dev/centos/root</span>\nmeta-data<span class=\"token operator\">=</span>/dev/mapper/centos-root <span class=\"token assign-left variable\">isize</span><span class=\"token operator\">=</span><span class=\"token number\">512</span>    <span class=\"token assign-left variable\">agcount</span><span class=\"token operator\">=</span><span class=\"token number\">4</span>, <span class=\"token assign-left variable\">agsize</span><span class=\"token operator\">=</span><span class=\"token number\">2293504</span> blks\n         <span class=\"token operator\">=</span>                       <span class=\"token assign-left variable\">sectsz</span><span class=\"token operator\">=</span><span class=\"token number\">512</span>   <span class=\"token assign-left variable\">attr</span><span class=\"token operator\">=</span><span class=\"token number\">2</span>, <span class=\"token assign-left variable\">projid32bit</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n         <span class=\"token operator\">=</span>                       <span class=\"token assign-left variable\">crc</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>        <span class=\"token assign-left variable\">finobt</span><span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token assign-left variable\">spinodes</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>\ndata     <span class=\"token operator\">=</span>                       <span class=\"token assign-left variable\">bsize</span><span class=\"token operator\">=</span><span class=\"token number\">4096</span>   <span class=\"token assign-left variable\">blocks</span><span class=\"token operator\">=</span><span class=\"token number\">9174016</span>, <span class=\"token assign-left variable\">imaxpct</span><span class=\"token operator\">=</span><span class=\"token number\">25</span>\n         <span class=\"token operator\">=</span>                       <span class=\"token assign-left variable\">sunit</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>      <span class=\"token assign-left variable\">swidth</span><span class=\"token operator\">=</span><span class=\"token number\">0</span> blks\nnaming   <span class=\"token operator\">=</span>version <span class=\"token number\">2</span>              <span class=\"token assign-left variable\">bsize</span><span class=\"token operator\">=</span><span class=\"token number\">4096</span>   ascii-ci<span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token assign-left variable\">ftype</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\nlog      <span class=\"token operator\">=</span>internal               <span class=\"token assign-left variable\">bsize</span><span class=\"token operator\">=</span><span class=\"token number\">4096</span>   <span class=\"token assign-left variable\">blocks</span><span class=\"token operator\">=</span><span class=\"token number\">4479</span>, <span class=\"token assign-left variable\">version</span><span class=\"token operator\">=</span><span class=\"token number\">2</span>\n         <span class=\"token operator\">=</span>                       <span class=\"token assign-left variable\">sectsz</span><span class=\"token operator\">=</span><span class=\"token number\">512</span>   <span class=\"token assign-left variable\">sunit</span><span class=\"token operator\">=</span><span class=\"token number\">0</span> blks, lazy-count<span class=\"token operator\">=</span><span class=\"token number\">1</span>\nrealtime <span class=\"token operator\">=</span>none                   <span class=\"token assign-left variable\">extsz</span><span class=\"token operator\">=</span><span class=\"token number\">4096</span>   <span class=\"token assign-left variable\">blocks</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>, <span class=\"token assign-left variable\">rtextents</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>\ndata blocks changed from <span class=\"token number\">9174016</span> to <span class=\"token number\">31455232</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>debian&#x2F;ubuntu 系统则使用以下命令对根目录扩容</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">resize2fs /dev/debian-vg/root<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然后再查看挂载情况：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># df -h</span>\n文件系统                 容量  已用  可用 已用% 挂载点\n/dev/mapper/centos-root  120G  <span class=\"token number\">5</span>.5G  115G    <span class=\"token number\">5</span>% /\ndevtmpfs                 <span class=\"token number\">3</span>.9G     <span class=\"token number\">0</span>  <span class=\"token number\">3</span>.9G    <span class=\"token number\">0</span>% /dev\ntmpfs                    <span class=\"token number\">3</span>.9G     <span class=\"token number\">0</span>  <span class=\"token number\">3</span>.9G    <span class=\"token number\">0</span>% /dev/shm\ntmpfs                    <span class=\"token number\">3</span>.9G   11M  <span class=\"token number\">3</span>.9G    <span class=\"token number\">1</span>% /run\ntmpfs                    <span class=\"token number\">3</span>.9G     <span class=\"token number\">0</span>  <span class=\"token number\">3</span>.9G    <span class=\"token number\">0</span>% /sys/fs/cgroup\n/dev/sda1               1014M  275M  740M   <span class=\"token number\">28</span>% /boot\ntmpfs                    783M   52K  783M    <span class=\"token number\">1</span>% /run/user/0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可以发现有120G的空间挂载在根目录上。<br>over !!!<br>参考内容<br><a href=\"https://blog.csdn.net/harryxxxxx/article/details/81114613\">https://blog.csdn.net/harryxxxxx/article/details/81114613</a><br><a href=\"https://blog.csdn.net/nimasike/article/details/53729499\">https://blog.csdn.net/nimasike/article/details/53729499</a><br><a href=\"https://blog.csdn.net/qq_24871519/article/details/86243571\">\n</a></p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}},"cover":"/img/default_cover/geomeric7.jpg","cover_type":"img","excerpt":"","more":"<h1 id=\"Linux-根目录扩容操作\"><a href=\"#Linux-根目录扩容操作\" class=\"headerlink\" title=\"Linux 根目录扩容操作\"></a>Linux 根目录扩容操作</h1><h2 id=\"需求描述\"><a href=\"#需求描述\" class=\"headerlink\" title=\"需求描述\"></a>需求描述</h2><p>由于测试环境需要，虚拟机根目录需要扩容至120G。</p>\n<h2 id=\"查看本机磁盘环境\"><a href=\"#查看本机磁盘环境\" class=\"headerlink\" title=\"查看本机磁盘环境\"></a>查看本机磁盘环境</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># df -h</span>\n文件系统                 容量  已用  可用 已用% 挂载点\n/dev/mapper/centos-root   35G  <span class=\"token number\">5</span>.5G   30G   <span class=\"token number\">16</span>% /\ndevtmpfs                 <span class=\"token number\">3</span>.9G     <span class=\"token number\">0</span>  <span class=\"token number\">3</span>.9G    <span class=\"token number\">0</span>% /dev\ntmpfs                    <span class=\"token number\">3</span>.9G     <span class=\"token number\">0</span>  <span class=\"token number\">3</span>.9G    <span class=\"token number\">0</span>% /dev/shm\ntmpfs                    <span class=\"token number\">3</span>.9G   11M  <span class=\"token number\">3</span>.9G    <span class=\"token number\">1</span>% /run\ntmpfs                    <span class=\"token number\">3</span>.9G     <span class=\"token number\">0</span>  <span class=\"token number\">3</span>.9G    <span class=\"token number\">0</span>% /sys/fs/cgroup\n/dev/sda1               1014M  275M  740M   <span class=\"token number\">28</span>% /boot\ntmpfs                    783M   52K  783M    <span class=\"token number\">1</span>% /run/user/0\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># lsblk</span>\nNAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nfd0               <span class=\"token number\">2</span>:0    <span class=\"token number\">1</span>    4K  <span class=\"token number\">0</span> disk\nsda               <span class=\"token number\">8</span>:0    <span class=\"token number\">0</span>  500G  <span class=\"token number\">0</span> disk\n├─sda1            <span class=\"token number\">8</span>:1    <span class=\"token number\">0</span>    1G  <span class=\"token number\">0</span> part /boot\n└─sda2            <span class=\"token number\">8</span>:2    <span class=\"token number\">0</span>   39G  <span class=\"token number\">0</span> part\n  ├─centos-root <span class=\"token number\">253</span>:0    <span class=\"token number\">0</span>   35G  <span class=\"token number\">0</span> lvm  /\n  └─centos-swap <span class=\"token number\">253</span>:1    <span class=\"token number\">0</span>    4G  <span class=\"token number\">0</span> lvm  <span class=\"token punctuation\">[</span>SWAP<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可以看到根目录总容量为35G, 设备sda 的总容量为500G。</p>\n<h2 id=\"添加磁盘分区\"><a href=\"#添加磁盘分区\" class=\"headerlink\" title=\"添加磁盘分区\"></a>添加磁盘分区</h2><p>需要120G 容量，已有35G, 还需添加85G 容量。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># fdisk /dev/sda</span>\n欢迎使用 <span class=\"token function\">fdisk</span> <span class=\"token punctuation\">(</span>util-linux <span class=\"token number\">2.23</span>.2<span class=\"token punctuation\">)</span>。\n\n更改将停留在内存中，直到您决定将更改写入磁盘。\n使用写入命令前请三思。\n\n命令<span class=\"token punctuation\">(</span>输入 m 获取帮助<span class=\"token punctuation\">)</span>：n\nPartition type:\n   p   primary <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> primary, <span class=\"token number\">0</span> extended, <span class=\"token number\">2</span> <span class=\"token function\">free</span><span class=\"token punctuation\">)</span>\n   e   extended\nSelect <span class=\"token punctuation\">(</span>default p<span class=\"token punctuation\">)</span>:\nUsing default response p\n分区号 <span class=\"token punctuation\">(</span><span class=\"token number\">3,4</span>，默认 <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>：\n起始 扇区 <span class=\"token punctuation\">(</span><span class=\"token number\">83886080</span>-1048575999，默认为 <span class=\"token number\">83886080</span><span class=\"token punctuation\">)</span>：\n将使用默认值 <span class=\"token number\">83886080</span>\nLast 扇区, +扇区 or +size<span class=\"token punctuation\">&#123;</span>K,M,G<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">(</span><span class=\"token number\">83886080</span>-1048575999，默认为 <span class=\"token number\">1048575999</span><span class=\"token punctuation\">)</span>：+85G\n分区 <span class=\"token number\">3</span> 已设置为 Linux 类型，大小设为 <span class=\"token number\">85</span> GiB\n\n命令<span class=\"token punctuation\">(</span>输入 m 获取帮助<span class=\"token punctuation\">)</span>：w\nThe partition table has been altered<span class=\"token operator\">!</span>\n\nCalling ioctl<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> to re-read partition table.\n\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># partprobe</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>然后查看分区是否创建：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># lsblk</span>\nNAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nfd0               <span class=\"token number\">2</span>:0    <span class=\"token number\">1</span>    4K  <span class=\"token number\">0</span> disk\nsda               <span class=\"token number\">8</span>:0    <span class=\"token number\">0</span>  500G  <span class=\"token number\">0</span> disk\n├─sda1            <span class=\"token number\">8</span>:1    <span class=\"token number\">0</span>    1G  <span class=\"token number\">0</span> part /boot\n├─sda2            <span class=\"token number\">8</span>:2    <span class=\"token number\">0</span>   39G  <span class=\"token number\">0</span> part\n│ ├─centos-root <span class=\"token number\">253</span>:0    <span class=\"token number\">0</span>   35G  <span class=\"token number\">0</span> lvm  /\n│ └─centos-swap <span class=\"token number\">253</span>:1    <span class=\"token number\">0</span>    4G  <span class=\"token number\">0</span> lvm  <span class=\"token punctuation\">[</span>SWAP<span class=\"token punctuation\">]</span>\n└─sda3            <span class=\"token number\">8</span>:3    <span class=\"token number\">0</span>   85G  <span class=\"token number\">0</span> part\nsr0              <span class=\"token number\">11</span>:0    <span class=\"token number\">1</span> 1024M  <span class=\"token number\">0</span> rom<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可以看到sda2 分区已创建。</p>\n<h2 id=\"开始扩容\"><a href=\"#开始扩容\" class=\"headerlink\" title=\"开始扩容\"></a>开始扩容</h2><h3 id=\"创建物理卷\"><a href=\"#创建物理卷\" class=\"headerlink\" title=\"创建物理卷\"></a>创建物理卷</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># lvm</span>\nlvm<span class=\"token operator\">></span> pvcreate /dev/sda3\n  Physical volume <span class=\"token string\">\"/dev/sda3\"</span> successfully created.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"查看物理卷和卷组\"><a href=\"#查看物理卷和卷组\" class=\"headerlink\" title=\"查看物理卷和卷组\"></a>查看物理卷和卷组</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lvm<span class=\"token operator\">></span> pvdisplay\n  --- Physical volume ---\n  PV Name               /dev/sda2\n  VG Name               centos\n  PV Size               <span class=\"token operator\">&lt;</span><span class=\"token number\">39.00</span> GiB / not usable <span class=\"token number\">3.00</span> MiB\n  Allocatable           <span class=\"token function\">yes</span> <span class=\"token punctuation\">(</span>but full<span class=\"token punctuation\">)</span>\n  PE Size               <span class=\"token number\">4.00</span> MiB\n  Total PE              <span class=\"token number\">9983</span>\n  Free PE               <span class=\"token number\">0</span>\n  Allocated PE          <span class=\"token number\">9983</span>\n  PV UUID               twmUZh-Vnqq-W5Pd-v3ms-6OkH-sSTs-nv8aA8\n\n  <span class=\"token string\">\"/dev/sda3\"</span> is a new physical volume of <span class=\"token string\">\"85.00 GiB\"</span>\n  --- NEW Physical volume ---\n  PV Name               /dev/sda3\n  VG Name\n  PV Size               <span class=\"token number\">85.00</span> GiB\n  Allocatable           NO\n  PE Size               <span class=\"token number\">0</span>\n  Total PE              <span class=\"token number\">0</span>\n  Free PE               <span class=\"token number\">0</span>\n  Allocated PE          <span class=\"token number\">0</span>\n  PV UUID               vTD91f-b28E-GgL0-XsqI-ipQ5-rscT-GcQbT6\n\nlvm<span class=\"token operator\">></span> vgdisplay\n  --- Volume group ---\n  VG Name               centos\n  System ID\n  Format                lvm2\n  Metadata Areas        <span class=\"token number\">1</span>\n  Metadata Sequence No  <span class=\"token number\">3</span>\n  VG Access             read/write\n  VG Status             resizable\n  MAX LV                <span class=\"token number\">0</span>\n  Cur LV                <span class=\"token number\">2</span>\n  Open LV               <span class=\"token number\">2</span>\n  Max PV                <span class=\"token number\">0</span>\n  Cur PV                <span class=\"token number\">1</span>\n  Act PV                <span class=\"token number\">1</span>\n  VG Size               <span class=\"token operator\">&lt;</span><span class=\"token number\">39.00</span> GiB\n  PE Size               <span class=\"token number\">4.00</span> MiB\n  Total PE              <span class=\"token number\">9983</span>\n  Alloc PE / Size       <span class=\"token number\">9983</span> / <span class=\"token operator\">&lt;</span><span class=\"token number\">39.00</span> GiB\n  Free  PE / Size       <span class=\"token number\">0</span> / <span class=\"token number\">0</span>\n  VG UUID               238Yz8-MEQa-NT6a-3aHC-J3TZ-mGux-e9vqPf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"将物理卷加入到卷组\"><a href=\"#将物理卷加入到卷组\" class=\"headerlink\" title=\"将物理卷加入到卷组\"></a>将物理卷加入到卷组</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lvm<span class=\"token operator\">></span> vgextend centos /dev/sda3\n  Volume group <span class=\"token string\">\"centos\"</span> successfully extended\nlvm<span class=\"token operator\">></span> vgdisplay\n  --- Volume group ---\n  VG Name               centos\n  System ID\n  Format                lvm2\n  Metadata Areas        <span class=\"token number\">2</span>\n  Metadata Sequence No  <span class=\"token number\">4</span>\n  VG Access             read/write\n  VG Status             resizable\n  MAX LV                <span class=\"token number\">0</span>\n  Cur LV                <span class=\"token number\">2</span>\n  Open LV               <span class=\"token number\">2</span>\n  Max PV                <span class=\"token number\">0</span>\n  Cur PV                <span class=\"token number\">2</span>\n  Act PV                <span class=\"token number\">2</span>\n  VG Size               <span class=\"token number\">123.99</span> GiB\n  PE Size               <span class=\"token number\">4.00</span> MiB\n  Total PE              <span class=\"token number\">31742</span>\n  Alloc PE / Size       <span class=\"token number\">9983</span> / <span class=\"token operator\">&lt;</span><span class=\"token number\">39.00</span> GiB\n  Free  PE / Size       <span class=\"token number\">21759</span> / <span class=\"token operator\">&lt;</span><span class=\"token number\">85.00</span> GiB\n  VG UUID               238Yz8-MEQa-NT6a-3aHC-J3TZ-mGux-e9vqPf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可以看到卷组的Free size 增加了<br>将卷组剩余空间(刚添加的85G)添加到逻辑卷&#x2F;dev&#x2F;centos&#x2F;root :</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lvm<span class=\"token operator\">></span> lvextend <span class=\"token parameter variable\">-l</span> +100%FREE /dev/centos/root\n  Size of logical volume centos/root changed from <span class=\"token operator\">&lt;</span><span class=\"token number\">35.00</span> GiB <span class=\"token punctuation\">(</span><span class=\"token number\">8959</span> extents<span class=\"token punctuation\">)</span> to <span class=\"token number\">119.99</span> GiB <span class=\"token punctuation\">(</span><span class=\"token number\">30718</span> extents<span class=\"token punctuation\">)</span>.\n  Logical volume centos/root successfully resized.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"同步到文件系统\"><a href=\"#同步到文件系统\" class=\"headerlink\" title=\"同步到文件系统\"></a>同步到文件系统</h3><p>之前只是对逻辑卷扩容，还要同步到文件系统，实现对根目录的扩容。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># xfs_growfs /dev/centos/root</span>\nmeta-data<span class=\"token operator\">=</span>/dev/mapper/centos-root <span class=\"token assign-left variable\">isize</span><span class=\"token operator\">=</span><span class=\"token number\">512</span>    <span class=\"token assign-left variable\">agcount</span><span class=\"token operator\">=</span><span class=\"token number\">4</span>, <span class=\"token assign-left variable\">agsize</span><span class=\"token operator\">=</span><span class=\"token number\">2293504</span> blks\n         <span class=\"token operator\">=</span>                       <span class=\"token assign-left variable\">sectsz</span><span class=\"token operator\">=</span><span class=\"token number\">512</span>   <span class=\"token assign-left variable\">attr</span><span class=\"token operator\">=</span><span class=\"token number\">2</span>, <span class=\"token assign-left variable\">projid32bit</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n         <span class=\"token operator\">=</span>                       <span class=\"token assign-left variable\">crc</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>        <span class=\"token assign-left variable\">finobt</span><span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token assign-left variable\">spinodes</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>\ndata     <span class=\"token operator\">=</span>                       <span class=\"token assign-left variable\">bsize</span><span class=\"token operator\">=</span><span class=\"token number\">4096</span>   <span class=\"token assign-left variable\">blocks</span><span class=\"token operator\">=</span><span class=\"token number\">9174016</span>, <span class=\"token assign-left variable\">imaxpct</span><span class=\"token operator\">=</span><span class=\"token number\">25</span>\n         <span class=\"token operator\">=</span>                       <span class=\"token assign-left variable\">sunit</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>      <span class=\"token assign-left variable\">swidth</span><span class=\"token operator\">=</span><span class=\"token number\">0</span> blks\nnaming   <span class=\"token operator\">=</span>version <span class=\"token number\">2</span>              <span class=\"token assign-left variable\">bsize</span><span class=\"token operator\">=</span><span class=\"token number\">4096</span>   ascii-ci<span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token assign-left variable\">ftype</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\nlog      <span class=\"token operator\">=</span>internal               <span class=\"token assign-left variable\">bsize</span><span class=\"token operator\">=</span><span class=\"token number\">4096</span>   <span class=\"token assign-left variable\">blocks</span><span class=\"token operator\">=</span><span class=\"token number\">4479</span>, <span class=\"token assign-left variable\">version</span><span class=\"token operator\">=</span><span class=\"token number\">2</span>\n         <span class=\"token operator\">=</span>                       <span class=\"token assign-left variable\">sectsz</span><span class=\"token operator\">=</span><span class=\"token number\">512</span>   <span class=\"token assign-left variable\">sunit</span><span class=\"token operator\">=</span><span class=\"token number\">0</span> blks, lazy-count<span class=\"token operator\">=</span><span class=\"token number\">1</span>\nrealtime <span class=\"token operator\">=</span>none                   <span class=\"token assign-left variable\">extsz</span><span class=\"token operator\">=</span><span class=\"token number\">4096</span>   <span class=\"token assign-left variable\">blocks</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>, <span class=\"token assign-left variable\">rtextents</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>\ndata blocks changed from <span class=\"token number\">9174016</span> to <span class=\"token number\">31455232</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>debian&#x2F;ubuntu 系统则使用以下命令对根目录扩容</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">resize2fs /dev/debian-vg/root<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然后再查看挂载情况：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># df -h</span>\n文件系统                 容量  已用  可用 已用% 挂载点\n/dev/mapper/centos-root  120G  <span class=\"token number\">5</span>.5G  115G    <span class=\"token number\">5</span>% /\ndevtmpfs                 <span class=\"token number\">3</span>.9G     <span class=\"token number\">0</span>  <span class=\"token number\">3</span>.9G    <span class=\"token number\">0</span>% /dev\ntmpfs                    <span class=\"token number\">3</span>.9G     <span class=\"token number\">0</span>  <span class=\"token number\">3</span>.9G    <span class=\"token number\">0</span>% /dev/shm\ntmpfs                    <span class=\"token number\">3</span>.9G   11M  <span class=\"token number\">3</span>.9G    <span class=\"token number\">1</span>% /run\ntmpfs                    <span class=\"token number\">3</span>.9G     <span class=\"token number\">0</span>  <span class=\"token number\">3</span>.9G    <span class=\"token number\">0</span>% /sys/fs/cgroup\n/dev/sda1               1014M  275M  740M   <span class=\"token number\">28</span>% /boot\ntmpfs                    783M   52K  783M    <span class=\"token number\">1</span>% /run/user/0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可以发现有120G的空间挂载在根目录上。<br>over !!!<br>参考内容<br><a href=\"https://blog.csdn.net/harryxxxxx/article/details/81114613\">https://blog.csdn.net/harryxxxxx/article/details/81114613</a><br><a href=\"https://blog.csdn.net/nimasike/article/details/53729499\">https://blog.csdn.net/nimasike/article/details/53729499</a><br><a href=\"https://blog.csdn.net/qq_24871519/article/details/86243571\">\n</a></p>\n"},{"title":"ERA 在线部署","date":"2023-12-27T16:00:00.000Z","_content":"\n\n# 系统初始化\n## 1.安装Debian11初始化文档初始化\n```bash\n#必装\napt install -y conntrack ipset socat ebtables ipvsadm\napt install -y qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils\n```\n# 一、k8s集群部署\n\n## 1.安装kubekey\n```bash\nexport KKZONE=cn\nwget https://github.com/kubesphere/kubekey/releases/download/v3.0.13/kubekey-v3.0.13-linux-amd64.tar.gz\ntar -xf kubekey-v3.0.13-linux-amd64.tar.gz\nmv kk /usr/local/bin/\n\n#查看支持k8s版本\nkk version --show-supported-k8s\n```\n\n## 2.编辑配置文件\n>参考：https://github.com/kubesphere/kubekey/blob/master/README_zh-CN.md\n\n修改对应IP账号密码\n`config-v1.24.7-online.yaml`\n```yaml\n\napiVersion: kubekey.kubesphere.io/v1alpha2\nkind: Cluster\nmetadata:\n  name: k8s-jy\nspec:\n  hosts:\n  - {name: cn098, address: 200.0.0.98, internalAddress: 200.0.0.98, user: root, password: \"ycsc_2023\"}\n  - {name: cn099, address: 200.0.0.99, internalAddress: 200.0.0.99, user: root, password: \"ycsc_2023\"}\n  - {name: cn100, address: 200.0.0.100, internalAddress: 200.0.0.100, user: root, password: \"ycsc_2023\"}\n  - {name: gpu002, address: 200.0.241.2, internalAddress: 200.0.241.2, user: root, password: \"ycsc_2023\"}\n  roleGroups:\n    etcd:\n    - cn098\n    - cn099\n    - cn100\n    control-plane:\n    - cn098\n    - cn099\n    - cn100\n    worker:\n    - cn098\n    - cn099\n    - cn100\n    - gpu002\n  controlPlaneEndpoint:\n    ## Internal loadbalancer for apiservers\n    internalLoadbalancer: kube-vip\n\n    domain: lb.cluster.local\n    address: \"200.0.1.90\"\n    port: 6443\n  kubernetes:\n    version: v1.24.7\n    clusterName: cluster.local\n    autoRenewCerts: true\n    containerManager: containerd\n  etcd:\n    type: kubeadm\n  network:\n    plugin: calico\n    kubePodsCIDR: 10.233.64.0/18\n    kubeServiceCIDR: 10.233.0.0/18\n    ## multus support. https://github.com/k8snetworkplumbingwg/multus-cni\n    multusCNI:\n      enabled: false\n  registry:\n    privateRegistry: \"\"\n    namespaceOverride: \"\"\n    registryMirrors: []\n    insecureRegistries: []\n  addons: []\n\n```\n\n## 4.部署\n```bash\nkk create cluster -f config-v1.24.7-online.yaml\n```\n\n## 5.安装 bash-completion(可选)\n```bash\n# 安装 bash-completion\napt -y install bash-completion\n\n# 将 completion 脚本添加到你的 ~/.bashrc 文件\necho 'source <(kubectl completion bash)' >>~/.bashrc\n\n# 将 completion 脚本添加到 /etc/bash_completion.d 目录\nkubectl completion bash >/etc/bash_completion.d/kubectl\n\n#重启生效\n```\n\n## 7. 对接NFS存储(可选)\n### 7.1 格式化硬盘，并且设置共享\n```bash\n\n#格式化硬盘为xfs格式\nmkfs.xfs /dev/sdb\nmkdir /opt/nfs-data\n```\n\nfstab中设置自动挂载\n```\n#/dev/sdb\nUUID=7a8c2445-7103-4591-9b73-2db3757a8e6e\t/opt/nfs-data\txfs\tdefaults\t0 0\n```\n挂载确认格式、uuid、及挂载位置\n```\nmount -a\nlsblk -f\n```\n\n### 7.2 配置NFS服务器，允许Kubernetes节点访问NFS共享\n将以下内容添加到/etc/exports文件中：\n```bash\n/opt/nfs-data *(rw,sync,no_root_squash,no_subtree_check)\n```\n重启NFS服务使配置生效：\n```bash\n#创建相关文件夹\nmkdir -p /opt/nfs-data/k8s-sc/retain\nmkdir -p /opt/nfs-data/k8s-sc/delete\n\n#启动服务，设置自启\nsystemctl restart nfs-server\nsystemctl enable nfs-server\n\n#在各节点上运行测试通信\nshowmount -e cn098\n```\n\n### 7.3 k8s安装nfs存储类插件\n```bash\nmkdir nfs ; cd nfs\ngit clone https://github.com/kubernetes-csi/csi-driver-nfs.git\n\ncd csi-driver-nfs\n\n#相关镜像代理，替换tag下载（可选）\n\nctr -n k8s.io i pull k8s.dockerproxy.com/sig-storage/csi-node-driver-registrar:v2.9.0\nctr -n k8s.io i pull k8s.dockerproxy.com/sig-storage/csi-provisioner:v3.6.1\nctr -n k8s.io i pull k8s.dockerproxy.com/sig-storage/csi-snapshotter:v6.3.1\nctr -n k8s.io i pull k8s.dockerproxy.com/sig-storage/livenessprobe:v2.11.0\nctr -n k8s.io i pull k8s.dockerproxy.com/sig-storage/nfsplugin:v4.5.0\nctr -n k8s.io i pull k8s.dockerproxy.com/sig-storage/snapshot-controller:v6.3.1\n\nctr -n k8s.io i tag k8s.dockerproxy.com/sig-storage/csi-node-driver-registrar:v2.9.0 registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.9.0\nctr -n k8s.io i tag k8s.dockerproxy.com/sig-storage/csi-provisioner:v3.6.1 registry.k8s.io/sig-storage/csi-provisioner:v3.6.1\nctr -n k8s.io i tag k8s.dockerproxy.com/sig-storage/csi-snapshotter:v6.3.1 registry.k8s.io/sig-storage/csi-snapshotter:v6.3.1\nctr -n k8s.io i tag k8s.dockerproxy.com/sig-storage/livenessprobe:v2.11.0 registry.k8s.io/sig-storage/livenessprobe:v2.11.0\nctr -n k8s.io i tag k8s.dockerproxy.com/sig-storage/nfsplugin:v4.5.0 registry.k8s.io/sig-storage/nfsplugin:v4.5.0\nctr -n k8s.io i tag k8s.dockerproxy.com/sig-storage/snapshot-controller:v6.3.1 registry.k8s.io/sig-storage/snapshot-controller:v6.3.1\n\nctr -n k8s.io i rm k8s.dockerproxy.com/sig-storage/csi-node-driver-registrar:v2.9.0\nctr -n k8s.io i rm k8s.dockerproxy.com/sig-storage/csi-provisioner:v3.6.1\nctr -n k8s.io i rm k8s.dockerproxy.com/sig-storage/csi-snapshotter:v6.3.1\nctr -n k8s.io i rm k8s.dockerproxy.com/sig-storage/livenessprobe:v2.11.0\nctr -n k8s.io i rm k8s.dockerproxy.com/sig-storage/nfsplugin:v4.5.0\nctr -n k8s.io i rm k8s.dockerproxy.com/sig-storage/snapshot-controller:v6.3.1\n\n./deploy/install-driver.sh v4.5.0 local\n\ncd ../..\n\n```\n\n### 7.4 创建存储类\n```bash\nvim nfs-sc-delete.yaml\n```\n```yaml\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: nfs-delete\nprovisioner: nfs.csi.k8s.io\nparameters:\n  server: 200.0.0.98\n  share: /opt/nfs-data/k8s-sc/delete\n  # csi.storage.k8s.io/provisioner-secret is only needed for providing mountOptions in DeleteVolume\n  # csi.storage.k8s.io/provisioner-secret-name: \"mount-options\"\n  # csi.storage.k8s.io/provisioner-secret-namespace: \"default\"\nreclaimPolicy: Delete\nallowVolumeExpansion: True\nvolumeBindingMode: Immediate\n#mountOptions:\n#  - nfsvers=4.1\n\n```\n\n```bash\nvim nfs-sc-retain.yaml\n```\n```yaml\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: nfs-retain\nprovisioner: nfs.csi.k8s.io\nparameters:\n  server: 200.0.0.98\n  share: /opt/nfs-data/k8s-sc/retain\n  # csi.storage.k8s.io/provisioner-secret is only needed for providing mountOptions in DeleteVolume\n  # csi.storage.k8s.io/provisioner-secret-name: \"mount-options\"\n  # csi.storage.k8s.io/provisioner-secret-namespace: \"default\"\nreclaimPolicy: Retain\nallowVolumeExpansion: True\nvolumeBindingMode: Immediate\n#mountOptions:\n#  - nfsvers=4.1\n```\n\n### 7.5 使用kubectl apply命令创建存储类：\n```bash\nkubectl apply -f nfs-sc-delete.yaml\nkubectl apply -f nfs-sc-retain.yaml\n\nkubectl get sc\n```\n\n### 7.6 设置默认存储类：\n```bash\n#标记\nkubectl patch storageclass nfs-retain -p '{\"metadata\": {\"annotations\":{\"storageclass.kubernetes.io/is-default-class\":\"true\"}}}'\n\n#取消\nkubectl patch storageclass nfs-retain -p '{\"metadata\": {\"annotations\":{\"storageclass.kubernetes.io/is-default-class\":\"false\"}}}'\n\nkubectl get storageclass\n\n```\n\n# 二、KubeVirt部署\n> 目前era限制版本为0.56.0版本\n\n## 2.1 验证服务器是否支持虚拟化\n```bash\nvirt-host-validate qemu\n\n\n  QEMU: Checking for hardware virtualization                                 : PASS\n  QEMU: Checking if device /dev/kvm exists                                   : PASS\n  QEMU: Checking if device /dev/kvm is accessible                            : PASS\n  QEMU: Checking if device /dev/vhost-net exists                             : PASS\n  QEMU: Checking if device /dev/net/tun exists                               : PASS\n  . . .\n\n\n#若未全部pass，请检查BIOS中开启VT-d和虚拟化支持\n\n```\n\n## 2.2 安装\n```bash\nmkdir kubevirt ; cd kubevirt\n# Deploy the KubeVirt operator\nwget https://github.com/kubevirt/kubevirt/releases/download/v0.56.0/kubevirt-operator.yaml -O 1-kubevirt-operator.yaml\nkubectl apply -f 1-kubevirt-operator.yaml\n# Create the KubeVirt CR (instance deployment request) which triggers the actual installation\nwget https://github.com/kubevirt/kubevirt/releases/download/v0.56.0/kubevirt-cr.yaml -O 2-kubevirt-cr.yaml\nkubectl apply -f 2-kubevirt-cr.yaml\n# wait until all KubeVirt components are up\nkubectl -n kubevirt wait kv kubevirt --for condition=Available\n```\n\n## 2.3 开启相关特性\n```bash\n\ncat > 3-kubevirt-enable-feature-gate.yaml << 'EOF'\n---\napiVersion: kubevirt.io/v1\nkind: KubeVirt\nmetadata:\n  name: kubevirt\n  namespace: kubevirt\nspec:\n  configuration:\n    developerConfiguration:\n      featureGates:\n        - LiveMigration\n        - DataVolumes\n        - ExpandDisks\nEOF\n\nkubectl apply -f 3-kubevirt-enable-feature-gate.yaml\n```\n\n## 2.4 virtctl客户端工具安装\n```bash\nwget https://github.com/kubevirt/kubevirt/releases/download/v0.56.0/virtctl-v0.56.0-linux-amd64 -O /usr/local/bin/virtctl\nchmod +x /usr/local/bin/virtctl\n```\n\n## 2.5 卸载(可选)\n```bash\nkubectl delete -n kubevirt kubevirt kubevirt --wait=true # --wait=true should anyway be default\nkubectl delete apiservices v1.subresources.kubevirt.io # this needs to be deleted to avoid stuck terminating namespaces\nkubectl delete mutatingwebhookconfigurations virt-api-mutator # not blocking but would be left over\nkubectl delete validatingwebhookconfigurations virt-operator-validator # not blocking but would be left over\nkubectl delete validatingwebhookconfigurations virt-api-validator # not blocking but would be left over\nkubectl patch crd/kubevirts.kubevirt.io -p '{\"metadata\":{\"finalizers\":[]}}' --type=merge\nkubectl delete -f 1-kubevirt-operator.yaml --wait=false\n```\n\n# 三、CDI部署\n## 3.1 安装 CDI\n> 目前era限制版本为1.52.0版本\n\n```bash\nmkdir cdi ; cd cdi\nwget https://github.com/kubevirt/containerized-data-importer/releases/download/v1.52.0/cdi-operator.yaml -O 1-cdi-operator.yaml\nkubectl apply -f 1-cdi-operator.yaml\nwget https://github.com/kubevirt/containerized-data-importer/releases/download/v1.52.0/cdi-cr.yaml -O 2-cdi-cr.yaml\nkubectl apply -f 2-cdi-cr.yaml\n```\n\n## 3.2 服务暴露\n```bash\ncat > 3-expose-cdi-uploadproxy.yaml << 'EOF'\napiVersion: v1\nkind: Service\nmetadata:\n  name: cdi-uploadproxy-nodeport\n  namespace: cdi\n  labels:\n    cdi.kubevirt.io: \"cdi-uploadproxy\"\nspec:\n  type: NodePort\n  ports:\n    - port: 443\n      targetPort: 8443\n      nodePort: 31001\n      protocol: TCP\n  selector:\n    cdi.kubevirt.io: cdi-uploadproxy\nEOF\n\nkubectl apply -f 3-expose-cdi-uploadproxy.yaml\n```\n\n\n# 四、GPU插件支持\nhttps://github.com/NVIDIA/kubevirt-gpu-device-plugin/\n\n\n## 4.1 安装\n```bash\ncd kubevirt\nmkdir gpu ; cd gpu\nwget https://github.com/NVIDIA/kubevirt-gpu-device-plugin/archive/refs/tags/v1.2.4.tar.gz\ntar -xf v1.2.4.tar.gz\ncp kubevirt-gpu-device-plugin-1.2.4/manifests/nvidia-kubevirt-gpu-device-plugin.yaml 0-vidia-kubevirt-gpu-device-plugin.yaml\nkubectl apply -f 0-vidia-kubevirt-gpu-device-plugin.yaml\n\n#使用以下命令确定 GPU 的供应商 ID 和设备 ID\nlspci -nn | grep -i nvidia\n```\n\n## 4.2 直通模式\n### 1. 在KVM主机上启用IOMMU和黑名单新驱动程序\n```bash\n$ vim /etc/default/grub\n# line 6: add (if AMD CPU, add [amd_iommu=on])\nGRUB_TIMEOUT=5\nGRUB_DISTRIBUTOR=\"$(sed 's, release .*$,,g' /etc/system-release)\"\nGRUB_DEFAULT=saved\nGRUB_DISABLE_SUBMENU=true\nGRUB_TERMINAL_OUTPUT=\"console\"\nGRUB_CMDLINE_LINUX=\"rd.lvm.lv=centos/root rd.lvm.lv=centos/swap rhgb intel_iommu=on quiet iommu=pt modprobe.blacklist=nouveau\"\nGRUB_DISABLE_RECOVERY=\"true\"\n```\n**将“intel_iommu=on modprobe.blacklist=nouveau”附加到“GRUB_CMDLINE_LINUX\"**\n```bash\ngrub2-mkconfig -o /boot/grub2/grub.cfg\ngrub2-mkconfig -o /boot/efi/EFI/centos/grub.cfg\nreboot\n```\n重新启动后，使用以下命令验证是否启用了 IOMMU\n```bash\ndmesg | grep -E \"DMAR|IOMMU\"\n#验证新版是否已禁用\ndmesg | grep -i nouveau\n```\n\n### 2. 启用 vfio-pci 内核模块\n使用以下命令确定 GPU 的供应商 ID 和设备 ID\n```bash\nlspci -nn | grep -i nvidia\n```\n在下面的示例中，供应商 ID 为 10de，设备 ID 为 1b38\n```bash\n$ lspci -nn | grep -i nvidia\n04:00.0 3D controller [0302]: NVIDIA Corporation GP102GL [Tesla P40] [10de:1b38] (rev a1)\n```\n更新 VFIO 配置\n```bash\necho \"options vfio-pci ids=vendor-ID:device-ID\" > /etc/modprobe.d/vfio.conf\n```\n考虑到供应商 ID 为 10de，设备 ID 为 1b38，命令将如下所示\n```bash\necho \"options vfio-pci ids=10de:20f1,10de:1b38\" > /etc/modprobe.d/vfio.conf\n\n```\n更新配置以在重新加载后加载 VFIO-PCI 模块\n```bash\necho 'vfio-pci' > /etc/modules-load.d/vfio-pci.conf\nreboot\n```\n验证是否已为 GPU 加载 VFIO-PCI 驱动程序\n```bash\nlspci -nnk -d 10de:\n```\n\n下面的输出显示“正在使用的内核驱动程序”是“vfio-pci”\n\n```bash\n[root@gpu002 ~]# lspci -nnk -d 10de:\n34:00.0 3D controller [0302]: NVIDIA Corporation Device [10de:20b5] (rev a1)\n\tSubsystem: NVIDIA Corporation Device [10de:1533]\n\tKernel driver in use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n35:00.0 3D controller [0302]: NVIDIA Corporation Device [10de:20b5] (rev a1)\n\tSubsystem: NVIDIA Corporation Device [10de:1533]\n\tKernel driver in use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n36:00.0 3D controller [0302]: NVIDIA Corporation Device [10de:20b5] (rev a1)\n\tSubsystem: NVIDIA Corporation Device [10de:1533]\n\tKernel driver in use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n37:00.0 3D controller [0302]: NVIDIA Corporation Device [10de:20b5] (rev a1)\n\tSubsystem: NVIDIA Corporation Device [10de:1533]\n\tKernel driver in use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n9b:00.0 3D controller [0302]: NVIDIA Corporation Device [10de:20b5] (rev a1)\n\tSubsystem: NVIDIA Corporation Device [10de:1533]\n\tKernel driver in use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n9c:00.0 3D controller [0302]: NVIDIA Corporation Device [10de:20b5] (rev a1)\n\tSubsystem: NVIDIA Corporation Device [10de:1533]\n\tKernel driver in use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n9d:00.0 3D controller [0302]: NVIDIA Corporation Device [10de:20b5] (rev a1)\n\tSubsystem: NVIDIA Corporation Device [10de:1533]\n\tKernel driver in use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n9e:00.0 3D controller [0302]: NVIDIA Corporation Device [10de:20b5] (rev a1)\n\tSubsystem: NVIDIA Corporation Device [10de:1533]\n\tKernel driver in use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n\n```\n\n### 3. 校验节点gpu支持情况\n```bash\nyum -y install jq\nkubectl get node gpu002 -o json | jq '.status.allocatable'\n\n{\n  \"cpu\": \"63600m\",\n  \"devices.kubevirt.io/kvm\": \"1k\",\n  \"devices.kubevirt.io/tun\": \"1k\",\n  \"devices.kubevirt.io/vhost-net\": \"1k\",\n  \"ephemeral-storage\": \"434034624Ki\",\n  \"hugepages-1Gi\": \"0\",\n  \"hugepages-2Mi\": \"0\",\n  \"memory\": \"1027098306574\",\n  \"nvidia.com/GA100_A100_PCIE_80GB\": \"8\",\n  \"pods\": \"110\"\n}\n\n```\n\n\n## 4.3.声明GPU,Kubevirt 加入白名单\n```bash\n#显卡名称查看\nkubectl logs -f -n kube-system nvidia-kubevirt-gpu-dp-daemonset-*\nkubectl describe nodes | grep nvidia.com\n\ncp kubevirt-gpu-device-plugin-1.2.0/examples/kubevirt-featuregate-cm.yaml 1-kubevirt-featuregate-cm.yaml\n\nvim 1-kubevirt-featuregate-cm.yaml\n```\n修改设备相关对应关系：\n```yaml\napiVersion: kubevirt.io/v1alpha3\nkind: KubeVirt\nmetadata:\n  name: kubevirt\n  namespace: kubevirt\nspec:\n  imagePullPolicy: IfNotPresent\n  certificateRotateStrategy: {}\n  configuration:\n    permittedHostDevices:\n       pciHostDevices:\n       # whitelist the permitted devices here\n       - pciVendorSelector: \"10DE:20B5\"\n         resourceName: \"nvidia.com/GA100_A100_PCIE_80GB\"\n         externalResourceProvider: true\n       mediatedDevices:\n       - mdevNameSelector: \"GRID A100-1Q\"\n         resourceName: \"nvidia.com/GRID_A100-1Q\"\n    imagePullPolicy: IfNotPresent\n    developerConfiguration:\n      featureGates:\n        - GPU\n\n```\n应用：\n```bash\nkubectl apply -f 1-kubevirt-featuregate-cm.yaml\n```\n注意不可删除，可apply，删除会删除整个kubevirt\n\n## 4.5 创建gpu虚机测试\n`vim test-gpu.yaml`\n```yaml\napiVersion: kubevirt.io/v1\nkind: VirtualMachine\nmetadata:\n  name: testvm\nspec:\n  running: false\n  template:\n    metadata:\n      labels:\n        kubevirt.io/size: small\n        kubevirt.io/domain: testvm\n    spec:\n      domain:\n        devices:\n          disks:\n            - name: containerdisk\n              disk:\n                bus: virtio\n            - name: cloudinitdisk\n              disk:\n                bus: virtio\n          gpus:\n            - deviceName: nvidia.com/GV100GL_TESLA_V100_PCIE_16GB\n              name: gpu1\n\n          interfaces:\n          - name: default\n            masquerade: {}\n        resources:\n          requests:\n            memory: 64M\n      networks:\n      - name: default\n        pod: {}\n      volumes:\n        - name: containerdisk\n          containerDisk:\n            image: quay.io/kubevirt/cirros-container-disk-demo\n        - name: cloudinitdisk\n          cloudInitNoCloud:\n            userDataBase64: SGkuXG4=\n\n```\n启动\n```bash\nkubectl apply -f test-gpu.yaml\nkubectl get vm\nvirtctl start testvm\nvirtctl console testvm\n#退出console\nctrl+]\n```\n\n\n# 五、MariaDB部署\n## 5.1 创建pvc\n```bash\nmkdir mariadb ; cd mariadb\ncat >> 0-pvc.yaml << \"EOF\"\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: mariadb-data\nspec:\n  accessModes:\n  - ReadWriteMany\n  resources:\n    requests:\n      storage: 100Gi\n  storageClassName: nfs-retain\n\nEOF\n```\n\n## 5.2 创建配置文件\n```bash\ncat >> 1-configMap.yaml << \"EOF\"\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: mariadb-config\ndata:\n  my.cnf: |\n    [mysqld]\n\tdatadir = /var/lib/mysql\n\tsocket = /var/run/mysqld/mysqld.sock\n\tpid-file = /var/run/mysqld/mysqld.pid\n\n\t#user=mysql\n\n\tcharacter-set-server=utf8mb4\n\tcollation-server=utf8mb4_bin\n\n\tdefault-time-zone = '+8:00'\n\n\t#server-id\n\tserver_id=1\n\n\t#禁止名称解析\n\tskip_name_resolve=ON\n\n\t#不区分大小写\n\tlower_case_table_names = 1\n\n\t#最大连接数，当max_connections设置太小时（默认151），MySQL可能会报错Too many connections。\n\t#当max_connections设置太大时（1000以上），>操作系统可能忙于线程间的切换而失去响应。\n\t#每个连接都会消耗一定内存，最大连接数占上限连接数（show global status like 'Max_used_connections';）的85%左右，\n\t#如果发现比例在10%以下，MySQL服务器连接上线就设置得过高了。\n\t#Max_used_connections / max_connections = 0.85\n\tmax_connections = 2048\n\n\t#指mysql服务器端和客户端在一次传送数据包的过程当中最大允许的数据包大小。\n\t#max_allowed_packet 最大值是1G(1073741824)，如果设置超过1G，>查看最终生效结果也只有1G。\n\tmax_allowed_packet = 1G\n\n\t#当客户端断开之后，服务器处理此客户的线程将会缓存起来以响应下一个客户而不是销毁(前提是缓存数未达上限)\n\t#即可以重新利用保存在缓存中线程的数量，当断开连接时如果缓存中还有空间，那么客户端的线程将被放到缓存中，\n\t#如果线程重新被请求，那么请求>将从缓存中读取，\n\t#如果缓存中是空的或者是新的请求，那么这个线程将被重新创建，如果有很多新的线程，增加这个值可以改善系统性能。\n\t#根据并发连接数进行配置，这里假设并发连接数为 1000。\n\tthread_cache_size = 64\n\n\t#物理内存大小的70%-80%,如果服务器上只运行MySQL，则可以将此值增加到90%，这里假设服务器内存为 8GB。\n\tinnodb_buffer_pool_size = 6G\n\n\t# 增加 innodb_log_buffer_size，提高写入性能。\n\tinnodb_log_buffer_size = 16M\n\n\t# 设置innodb_io_capacity，并启用O_DIRECT，提高IO性能。\n\tinnodb_io_capacity = 2000\n\tinnodb_flush_method = O_DIRECT\n\n\t#innodb只读压缩\n\tinnodb_read_only_compressed = 0\n\n\t#innodb可以把每个表的数据单独保存。\n\tinnodb_file_per_table=ON\n\n\t#禁用或启用中继日志，只要不再需要，立即自动清除。默认值为 1（已启用）\n\trelay_log_purge = ON\n\t#定义relay_log的位置和名称，如果值为空，则默认位置在数据文件的目录，文件名为host_name-relay-bin.nnnnnn\n\trelay_log=relay-bin\n\t#定义relay_log_index的位置和名称\n\trelay_log_index=relay-bin.index\n\n\t#是否打开慢查询日志\n\tslow_query_log=ON\n\t#慢查询时间为5s，根据实际业务情况进行配置。\n\tlong_query_time = 5\n\t#慢查询文件位置，将日志文件放在独立的 SSD 盘上。\n\tslow-query-log-file=/var/lib/mysql/slow.log\n\n\t#binlog日志格式\n\tbinlog_format=ROW\n\t#启用二进制日志记录，指定文件名\n\tlog_bin=bin-log\n\t#启用二进制日志记录，指定文件名\n\tlog_bin_index=bin-log.index\n\t#定义了mysql清除过期日志的时间。默认值为0,表示“没有自动删除”。单位天\n\texpire_logs_days=7\n\t#复制服务器从源服务器接收的更新是否应记录到副本自己的二进制日志。\n\tlog_slave_updates=ON\n\n\t#日志的存放位置\n\tlog_error = /var/lib/mysql/mysqld.log\n\t#log_warnings 为0，表示不记录告警信息。\n\t#log_warnings 为1，表示告警信息写入错误日志。\n\t#log_warnings 大于1，表示各类告警信息，例如有关网络故障的信息和重新连接信息写入错误日志。（默认为2）\n\t#log_warnings=2\n\n\t#GTID严格模式\n\tgtid_strict_mode=ON\n\n\t#从库幂等模式\n\tslave_exec_mode= IDEMPOTENT\n\n\t#slave忽略同步的数据库\n\treplicate-ignore-db=information_schema,performance_schema\n\n\t#半同步\n\trpl_semi_sync_master_enabled=on\n\trpl_semi_sync_slave_enabled=on\n\n\t#会话事务状态跟踪\n\tsession_track_state_change = ON\n\tsession_track_transaction_info = CHARACTERISTICS\n\tsession_track_system_variables='autocommit,character_set_client,character_set_connection,character_set_results,time_zone,last_gtid'\n\n\t#\n\t# include *.cnf from the config directory\n\t#\n\t#!includedir /etc/my.cnf.d\n\nEOF\n```\n\n## 5.3 创建有状态服务\n```bash\ncat >>2-statefulSet.yaml << \"EOF\"\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: mariadb\nspec:\n  replicas: 1\n  serviceName: mariadb\n  selector:\n    matchLabels:\n      app: mariadb\n  template:\n    metadata:\n      labels:\n        app: mariadb\n    spec:\n      containers:\n      - name: mariadb\n        image: mariadb:10.9\n        env:\n        - name: MYSQL_ROOT_PASSWORD\n          value: '4y6Cu%946*!TXY'\n        volumeMounts:\n        - name: mariadb-storage\n          mountPath: /var/lib/mysql\n        - name: mariadb-config\n          mountPath: /etc/mysql/my.cnf\n          subPath: my.cnf\n      volumes:\n      - name: mariadb-storage\n        persistentVolumeClaim:\n          claimName: mariadb-data\n      - name: mariadb-config\n        configMap:\n          name: mariadb-config\n          items:\n            - key: my.cnf\n              path: my.cnf\n\nEOF\n```\n\n## 5.4 创建服务暴露\n```bash\ncat >> 3-service.yaml << \"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: mariadb\n  labels:\n    app: mariadb\nspec:\n  ports:\n    - name: mariadb\n      port: 3306\n      protocol: TCP\n      targetPort: 3306\n      nodePort: 30001\n  selector:\n    app: mariadb\n  type: NodePort\n\nEOF\n```\n\n## 5.5 应用\n```bash\nkubectl apply  -f 0-pvc.yaml\nkubectl apply  -f 1-configMap.yaml\nkubectl apply  -f 2-statefulSet.yaml\nkubectl apply  -f 3-service.yaml\n```\n\n\n# 六、Nacos服务部署\n## 6.1 登陆数据库，创建nacos用户及库，并导入初始化sql\n```sql\nuse mysql;\ncreate database nacos CHARACTER SET utf8mb4 COLLATE utf8mb4_bin;\ncreate user 'nacos'@'%' identified by '!EdkeJwrtDN45^';\ngrant all privileges on nacos.* to 'nacos'@'%';\nflush privileges;\n```\n\n## 6.2 创建nacos\n```bash\nmkdir nacos; cd nacos\ncat >> 1-nacos-deployment.yaml << \"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nacos\n  labels:\n    app: nacos\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nacos\n  template:\n    metadata:\n      labels:\n        app: nacos\n    spec:\n      containers:\n        - name: nacos\n          image: nacos/nacos-server:v2.2.0\n          env:\n            - name: MODE\n              value: \"standalone\"\n            - name: SPRING_DATASOURCE_PLATFORM\n              value: \"mysql\"\n            - name: MYSQL_SERVICE_HOST\n              value: \"200.0.0.98\"\n            - name: MYSQL_SERVICE_PORT\n              value: \"30001\"\n            - name: MYSQL_SERVICE_DB_NAME\n              value: \"nacos\"\n            - name: MYSQL_SERVICE_USER\n              value: \"nacos\"\n            - name: MYSQL_SERVICE_PASSWORD\n              value: \"!EdkeJwrtDN45^\"\n          ports:\n            - containerPort: 8848\n              name: client-port\n            - containerPort: 9848\n              name: client-rpc\n            - containerPort: 9849\n              name: raft-rpc\n            - containerPort: 7848\n              name: old-raft-rpc\n\n\nEOF\n```\n\n\n## 6.3 创建服务暴露\n```bash\ncat >> 2-nacos-service.yaml << \"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: nacos\n  labels:\n    app: nacos\n  annotations:\n    service.alpha.kubernetes.io/tolerate-unready-endpoints: \"true\"\nspec:\n  ports:\n    - port: 8848\n      name: server\n      targetPort: 8848\n      nodePort: 30002\n    - port: 9848\n      name: client-rpc\n      targetPort: 9848\n    - port: 9849\n      name: raft-rpc\n      targetPort: 9849\n    ## 兼容1.4.x版本的选举端口\n    - port: 7848\n      name: old-raft-rpc\n      targetPort: 7848\n  type: NodePort  #Serive的类型，ClusterIP/NodePort/LoaderBalancer\n  selector:\n    app: nacos\n\n\nEOF\n```\n## 6.3 数据库中导入预定义sql，见附件\n初始化sql：\n[mysql-schema.sql](_v_attachments/20230225224217873_1139/mysql-schema.sql)\n\n## 6.4 应用\n```bash\nkubectl apply  -f 1-nacos-deployment.yaml\nkubectl apply  -f 2-nacos-service.yaml\n```\n\n## 6.5 创建era命名空间\n![](_v_images/20230227115412128_20323.png =1241x)\n## 6.6 在era命名空间中导入附件配置\n![](_v_images/20230227115516361_6927.png =810x)\n\nnacos配置：\n[nacos_config_export_20230423155621.zip](_v_attachments/20230225224217873_1139/nacos_config_export_20230423155621.zip)\n\n# 七、MinIO部署\n## 7.1 创建pvc\n```bash\ncat >> 0-pvc.yaml << \"EOF\"\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: minio-data\nspec:\n  accessModes:\n  - ReadWriteMany\n  resources:\n    requests:\n      storage: 100Gi\n  storageClassName: nfs-retain\n\nEOF\n```\n\n## 7.2 创建deployment文件\n```bash\ncat >> 1-deployment.yaml << \"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: minio\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: minio\n  template:\n    metadata:\n      labels:\n        app: minio\n    spec:\n      containers:\n      - name: minio\n        image: minio/minio:RELEASE.2022-06-11T19-55-32Z\n        imagePullPolicy: IfNotPresent\n        command:\n          - /bin/sh\n          - -c\n          - minio server /data --console-address \":9000\" --address \":9001\"\n        env:\n        - name: MINIO_ROOT_USER\n          value: admin\n        - name: MINIO_ROOT_PASSWORD\n          value: 'c!%892w@MWE^T*'\n        ports:\n        - name: web\n          containerPort: 9000\n          protocol: \"TCP\"\n        - name: api\n          containerPort: 9001\n          protocol: \"TCP\"\n        volumeMounts:\n          - mountPath: /data\n            name: data\n      volumes:\n      - name: data\n        persistentVolumeClaim:\n          claimName: minio-data\nEOF\n```\n\n## 7.3 创建服务暴露\n```bash\ncat >> 2-service.yaml << \"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: minio\n  labels:\n    app: minio\nspec:\n  ports:\n    - name: web-port\n      port: 9000\n      protocol: TCP\n      targetPort: 9000\n      nodePort: 30004\n    - name: api-port\n      port: 9001\n      protocol: TCP\n      targetPort: 9001\n      nodePort: 30005\n  type: NodePort\n  selector:\n    app: minio\nEOF\n```\n\n## 7.4 应用\n```bash\nkubectl apply  -f 0-pvc.yaml\nkubectl apply  -f 1-deployment.yaml\nkubectl apply  -f 2-service.yaml\n```\n\n## 7.5 配置桶及用户\n```bash\nera\nera\nE$y*uY7@&39gW6\n\nAccess Key\n\nBNXMD8gbbM4Q2NoX\nSecret Key\n\n0fRkiYeJ63wMHz98I3Q7c3fUD1f9QZZW\n\n```\n### 1.创建桶\n![](_v_images/20230227103232369_29801.png =536x)\n\n### 2.创建用户\n![](_v_images/20230227114333584_26973.png =559x)\n\n### 3.创建权限策略\n```yaml\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:*\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::era/*\"\n            ]\n        }\n    ]\n}\n```\n![](_v_images/20230227114629100_1990.png =553x)\n\n### 4.用户绑定权限\n![](_v_images/20230227114727497_21480.png =858x)\n\n\n### 5.创建用户令牌并记录\n![](_v_images/20230227111406643_8560.png =769x)\n```\nAccess Key:\n\n0psoK6mqbPynGQuh\nSecret Key:\n\nfBWc4MZzPL94DQ8k1l2JsN5MERfrSD2R\n```\n![](_v_images/20230227114800001_7048.png =578x)\n\n# 八、Redis部署\n## 8.1 创建配置文件\n```bash\ncat >> 0-configMap.yaml << \"EOF\"\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: redis-config\ndata:\n  redis.conf: |\n    # Redis配置文件示例。\n    #\n    # 请注意，为了读取配置文件，Redis必须以文件路径作为第一个参数来启动：\n    #\n    # ./redis-server /path/to/redis.conf\n\n    # 关于单位的注意事项：当需要内存大小时，可以以通常的格式1k 5GB 4M来指定它，依此类推：\n    #\n    # 1k => 1000字节\n    # 1kb => 1024字节\n    # 1m => 1000000字节\n    # 1mb => 1024 * 1024字节\n    # 1g => 1000000000字节\n    # 1gb => 1024 * 1024 * 1024字节\n    #\n    # 单位不区分大小写，因此1GB 1Gb 1gB都相同。\n\n    ################################## INCLUDES ###################################\n\n    # 在此处包含一个或多个其他配置文件。 如果您具有可用于所有Redis服务器的标准模板，但还需要自定义一些每服务器设置，则此功能很有用。\n    # 包含文件可以包含其他文件，因此请明智地使用它。\n    #\n    # 注意admin或Redis Sentinel的命令\"CONFIG REWRITE\"不会重写选项\"include\"。\n    # 由于Redis始终使用最后处理的行作为配置指令的值，因此最好将include放在此文件的开头，以避免在运行时覆盖配置更改。\n    #\n    # 如果您反而对使用include覆盖配置选项感兴趣，则最好将include作为最后一行。\n    #\n    # include /path/to/local.conf\n    # include /path/to/other.conf\n\n    ################################## MODULES #####################################\n\n    # 在启动时加载模块。 如果服务器无法加载模块，它将中止。 可以使用多个loadmodule指令。\n    #\n    # loadmodule /path/to/my_module.so\n    # loadmodule /path/to/other_module.so\n\n    ################################## NETWORK #####################################\n\n    # 默认情况下，如果未指定\"bind\"配置指令，则Redis侦听来自服务器上所有可用网络接口的连接。\n    # 可以使用\"bind\"配置指令仅侦听一个或多个所选接口，然后侦听一个或多个IP地址。\n    #\n    # Examples:\n    #\n    # bind 192.168.1.100 10.0.0.1\n    # bind 127.0.0.1 ::1\n    #\n    # ~~~警告~~~如果运行Redis的计算机直接暴露于Internet，则绑定到所有接口都是危险的，并且会将实例暴露给Internet上的所有人。因此，默认情况下，\n    # 我们取消注释以下bind指令，这将强制Redis仅侦听IPv4环回接口地址（这意味着Redis将只能接受来自正在运行同一台计算机的客户端的连接）。\n    #\n    # 如果您确定要立即侦听所有接口，请仅注意以下几行。\n    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    bind *\n\n    # 保护模式是安全保护的一层，目的是避免访问和利用Internet上打开的Redis实例。\n    #\n    # 启用保护模式时，如果：\n    #\n    # 1）服务器未使用\"bind\"指令显式绑定到一组地址。\n    # 2）未配置密码。\n    #\n    # 服务器仅接受来自通过IPv4和IPv6回送地址127.0.0.1和::: 1以及来自Unix域套接字的客户端的连接。\n    #\n    # 默认情况下启用保护模式。 仅当您确定您希望其他主机的客户端连接到Redis时，\n    # 即使未配置身份验证，也不会使用\"bind\"指令显式列出一组特定的接口，才应禁用它。\n    protected-mode no\n\n    # 接受指定端口上的连接，默认为6379（IANA# 815344）。\n    # 如果指定了端口0，则Redis将不会在TCP套接字上侦听。\n    port 6379\n\n    # TCP listen() backlog.\n    #\n    # 在每秒请求数很高的环境中，您需要大量backlog(积压)，以避免客户端连接速度慢的问题。\n    # 请注意，Linux内核会以无提示的方式将其截断为/proc/sys/net/core/somaxconn的值，\n    # 因此请确保同时提高somaxconn和tcp_max_syn_backlog的值，以获得所需的效果。\n    tcp-backlog 511\n\n    # Unix socket.\n    #\n    # 指定用于监听传入连接的Unix套接字的路径。 没有默认值，因此在未指定Redis的情况下，Redis不会在Unix套接字上侦听。\n    #\n    # unixsocket /tmp/redis.sock\n    # unixsocketperm 700\n\n    # 客户端闲置N秒后关闭连接（0禁用）\n    timeout 0\n\n    # TCP keepalive.\n    #\n    # 如果非零，请在没有通信的情况下使用SO_KEEPALIVE向客户端发送TCP ACK。 这很有用，原因有两个：\n    # \n    # 1）检测死亡的同伴。\n    # 2）从中间的网络设备的角度来看，使连接保持活动状态。\n    # \n    # 在Linux上，指定的值（以秒为单位）是用于发送ACK的时间段。\n    # 请注意，关闭连接需要两倍的时间。\n    # 在其他内核上，期限取决于内核配置。\n    # \n    # 此选项的合理值是300秒，这是从Redis 3.2.1开始的新Redis默认值。\n    tcp-keepalive 300\n\n    ################################# TLS/SSL #####################################\n\n    # 默认情况下，禁用TLS / SSL。 要启用它，可以使用\"tls-port\"配置指令来定义TLS侦听端口。 \n    # 要在默认端口上启用TLS，请使用：\n    #\n    # port 0\n    # tls-port 6379\n\n    # 配置X.509证书和私钥，用于对连接的客户端，主服务器或集群对等服务器进行身份验证。 这些文件应为PEM格式。\n    #\n    # tls-cert-file redis.crt\n    # tls-key-file redis.key\n\n    # 配置DH参数文件，启用Diffie-Hellman（DH）密钥交换。\n    #\n    # tls-dh-params-file redis.dh\n\n    # 配置CA证书捆绑包或目录以认证TLS/SSL客户端和对等方。 Redis需要其中至少一项的显式配置，并且不会隐式使用系统范围的配置。\n    #\n    # tls-ca-cert-file ca.crt\n    # tls-ca-cert-dir /etc/ssl/certs\n\n    # 默认情况下，TLS端口上的客户端（包括副本服务器）需要使用有效的客户端证书进行身份验证。\n    #\n    # 可以使用此伪指令禁用身份验证。\n    #\n    # tls-auth-clients no\n\n    # 默认情况下，Redis副本不尝试与其主服务器建立TLS连接。\n    #\n    # 使用以下指令在复制链接上启用TLS。\n    #\n    # tls-replication yes\n\n    # 默认情况下，Redis群集总线使用纯TCP连接。 要为总线协议启用TLS，请使用以下指令：\n    #\n    # tls-cluster yes\n\n    # 明确指定要支持的TLS版本。 允许的值不区分大小写，包括\"TLSv1\"，\"TLSv1.1\"，\"TLSv1.2\"，\"TLSv1.3\"（OpenSSL> = 1.1.1）或任意组合。\n    # 要仅启用TLSv1.2和TLSv1.3，请使用：\n    #\n    # tls-protocols \"TLSv1.2 TLSv1.3\"\n\n    # 配置允许的密码。 有关此字符串的语法的更多信息，请参见ciphers（1ssl）联机帮助页。\n    #\n    # 注意：此配置仅适用于<= TLSv1.2。\n    #\n    # tls-ciphers DEFAULT:!MEDIUM\n\n    # 配置允许的TLSv1.3密码套件。 有关此字符串的语法（尤其是TLSv1.3密码套件）的语法的更多信息，请参见ciphers（1ssl）联机帮助页。\n    #\n    # tls-ciphersuites TLS_CHACHA20_POLY1305_SHA256\n\n    # 选择密码时，请使用服务器的首选项而不是客户端的首选项。 默认情况下，服务器遵循客户端的首选项。\n    #\n    # tls-prefer-server-ciphers yes\n\n    ################################# GENERAL(通常) #####################################\n\n    # 默认情况下，Redis不会作为守护程序运行。 如果需要，请使用\"是\"。\n    # 注意，Redis守护进程将在/var/run/redis.pid中写入一个pid文件。\n    daemonize no\n\n    # 如果从upstart或systemd运行Redis，Redis可以与您的supervision(监督) tree进行交互。 选项：\n    #   supervised no      - 没有supervision(监督)互动\n    #   supervised upstart - 通过将Redis置于SIGSTOP模式来发出信号\n    #   supervised systemd - 通过将READY = 1写入$ NOTIFY_SOCKET来产生信号\n    #   supervised auto    - 根据UPSTART_JOB或NOTIFY_SOCKET环境变量检测upstart或systemd方法\n\n    # 注意：这些supervision(监督)方法仅表示\"过程已准备就绪\"。\n    #       他们无法使您的主管连续不断地进行ping操作。\n    supervised no\n\n    # 如果指定了pid文件，则Redis会在启动时将其写入指定位置，并在退出时将其删除。\n    #\n    # 当服务器在非守护进程中运行时，如果未在配置中指定任何pid文件，则不会创建该文件。\n    # 守护服务器时，即使未指定，也会使用pid文件，默认为\"/var/run/redis.pid\"。\n    #\n    # 尽最大努力创建一个pid文件：如果Redis无法创建它，那么一切正常，服务器将正常启动并运行。\n    pidfile /var/run/redis_6379.pid\n\n    # 指定服务器的详细级别。\n    # 这可以是以下之一：\n    # debug (很多信息，对于开发/测试很有用）\n    # verbose (很多很少有用的信息，但不会像调试级别那样混乱）\n    # notice (适度冗长，可能在生产中需要什么）\n    # warning (仅记录非常重要/重要的消息）\n    loglevel notice\n\n    # 指定日志文件名。 空字符串也可以用于强制Redis登录标准输出。\n    # 请注意，如果您使用标准输出进行日志记录但进行守护进程，则日志将发送到/dev/null\n    logfile \"\"\n\n    # 要启用登录到系统记录器的功能，只需将'syslog-enabled'设置为yes，然后根据需要更新其他syslog参数。\n    # syslog-enabled no\n\n    # 指定系统日志标识。\n    # syslog-ident redis\n\n    # 指定系统日志工具。 必须是USER或在LOCAL0-LOCAL7之间。\n    # syslog-facility local0\n\n    # 设置数据库数量。 默认数据库为DB 0，您可以使用SELECT <dbid>在每个连接的基础上选择一个不同的数据库，\n    # 其中dbid是介于0和'databases'-1之间的数字\n    databases 16\n\n    # 默认情况下，仅当开始记录到标准输出并且标准输出为TTY时，Redis才会显示ASCII艺术logo。\n    # 基本上，这意味着logo通常仅在交互式会话中显示。\n    #\n    # 但是，可以通过将以下选项设置为yes，来强制执行4.0之前的行为并始终在启动日志中显示ASCII艺术logo。\n    always-show-logo yes\n\n    ################################ SNAPSHOTTING(快照)  ################################\n    #\n    # 将数据库保存在磁盘上：\n    #\n    #   save <seconds> <changes>\n    #\n    # 如果同时发生了给定的秒数和给定的针对数据库的写操作数，则将保存数据库。\n    #\n    # 在下面的示例中，行为将是保存：\n    #     900秒（15分钟）后，如果至少更改了1个键\n    #     300秒（5分钟）后，如果至少更改了10个按键\n    #     60秒后，如果至少更改了10000个键\n    #\n    # 注意：您可以通过注释掉所有\"保存\"行来完全禁用保存。\n    #\n    # 也可以通过添加带有单个空字符串参数的save指令来删除所有先前配置的保存点，如以下示例所示：\n    #\n    #   save \"\"\n\n    save 900 1\n    save 300 10\n    save 60 10000\n\n    # 默认情况下，如果启用了RDB快照（至少一个保存点）并且最新的后台保存失败，Redis将停止接受写入。\n    # 这将使用户（以一种困难的方式）意识到数据无法正确地持久存储在磁盘上，否则，可能没人会注意到并且会发生一些灾难。\n    #\n    # 如果后台保存过程将再次开始工作，则Redis将自动允许再次写入。\n    #\n    # 但是，如果您设置了对Redis服务器和持久性的适当监视，则可能要禁用此功能，以便即使磁盘，权限等出现问题，Redis也将继续照常工作。\n    stop-writes-on-bgsave-error yes\n\n    # 转储.rdb数据库时使用LZF压缩字符串对象？\n    # 默认情况下将其设置为\"是\"，因为它几乎总是胜利。\n    # 如果要在保存子项中保存一些CPU，请将其设置为\"no\"，但是如果您具有可压缩的值或键，则数据集可能会更大。\n    rdbcompression yes\n\n    # 从RDB版本5开始，在文件末尾放置了CRC64校验和。\n    # 这使得该格式更能抵抗损坏，但是在保存和加载RDB文件时会付出一定的性能损失（大约10％），因此可以禁用该格式以获得最佳性能。\n    #\n    # 在禁用校验和的情况下创建的RDB文件的校验和为零，这将指示加载代码跳过该校验。\n    rdbchecksum yes\n\n    # 转储数据库的文件名\n    dbfilename dump.rdb\n\n    # 删除没有启用持久性的实例中复制使用的RDB文件。 默认情况下，此选项是禁用的，\n    # 但是在某些环境中，出于法规或其他安全方面的考虑，应将RDB文件由主数据库持久存储在磁盘上以提供副本，\n    # 或将RDB文件由副本存储在磁盘上以加载它们以进行初始同步。\n    # 尽快删除。 请注意，此选项仅在同时禁用AOF和RDB持久性的实例中起作用，否则将被完全忽略。\n    #\n    # 获得相同效果的另一种方法（有时是更好的方法）是在主实例和副本实例上都使用无盘复制。 但是，对于副本，无盘并非始终是一种选择。\n    rdb-del-sync-files no\n\n    # 工作目录。\n    #\n    # 数据库将被写入该目录内，文件名使用\"dbfilename\"配置指令在上面指定。\n    #\n    # 也将在此目录中创建\"仅追加文件\"。\n    #\n    # 请注意，您必须在此处指定目录，而不是文件名。\n    dir ./\n\n    ################################# REPLICATION(复制) #################################\n\n    # 主副本复制。 使用copyof可以使Redis实例成为另一个Redis服务器的副本。 尽快了解有关Redis复制的几件事。\n    #\n    #   +------------------+      +---------------+\n    #   |      Master      | ---> |    Replica    |\n    #   | (receive writes) |      |  (exact copy) |\n    #   +------------------+      +---------------+\n    #\n    # 1) Redis复制是异步的，但是您可以将主服务器配置为在似乎未与至少给定数量的副本连接时停止接受写操作。\n    # 2) 如果复制链接在相对较短的时间内丢失，则Redis副本能够与主副本执行部分重新同步。\n    #    您可能需要根据需要将复制积压大小（请参阅此文件的下一部分）配置为合理的值。\n    # 3) 复制是自动的，不需要用户干预。 网络分区副本之后，副本会自动尝试重新连接到母版并与它们重新同步。\n    #\n    # replicaof <masterip> <masterport>\n\n    # 如果主服务器受密码保护（使用下面的\"requirepass\"配置指令），\n    # 则可以在开始复制同步过程之前告诉副本服务器进行身份验证，否则主服务器将拒绝副本请求。\n    #\n    # masterauth <master-password>\n    #\n    # 但是，如果使用Redis ACL（对于Redis版本6或更高版本），并且默认用户无法运行PSYNC命令和/或其他复制所需的命令，\n    # 这还不够。 在这种情况下，最好配置一个特殊用户以用于复制，并这样指定masteruser配置：\n    #\n    # masteruser <username>\n    #\n    # 指定了masteruser时，副本将使用新的AUTH形式针对其主服务器进行身份验证：AUTH <用户名> <密码>。\n\n    # 当副本断开与主数据库的连接时，或者仍在进行复制时，副本可以以两种不同的方式起作用：\n    #\n    # 1) 如果复制副本服务过时的数据设置为\"是\"（默认值），则复制副本仍将回复客户端请求，\n    #    可能包含过期数据，或者如果这是第一次同步，则数据集可能只是空的。\n    #\n    # 2) 如果复制副本服务过时的数据设置为\"否\"，则复制副本将对所有命令发出错误\"与主机进行同步\"错误，\n    #    但对INFO, replicaOF, AUTH, PING, SHUTDOWN, REPLCONF, ROLE, CONFIG, SUBSCRIBE, UNSUBSCRIBE,\n    #    PSUBSCRIBE, PUNSUBSCRIBE, PUBLISH, PUBSUB, COMMAND, POST, HOST: and LATENCY.\n    #\n    replica-serve-stale-data yes\n\n    # 您可以配置副本实例以接受或不接受写入。 针对副本实例进行写操作可能对存储某些临时数据很有用（\n    # 因为与主实例重新同步后，写入副本上的数据很容易删除），但是如果客户端由于配置错误而向其进行写操作，也可能导致问题。\n    #\n    # 由于Redis 2.6默认情况下，副本是只读的。\n    #\n    # 注意：只读副本并非旨在向Internet上不受信任的客户端公开。 它只是防止实例滥用的保护层。\n    # 默认情况下，只读副本仍会导出所有管理命令，例如CONFIG，DEBUG等。\n    # 在一定程度上，您可以使用'rename-command'隐藏所有管理/危险命令来提高只读副本的安全性。\n    replica-read-only yes\n\n    # 复制同步策略：磁盘或套接字。\n    #\n    # 仅能接收差异而无法继续复制过程的新副本和重新连接的副本需要执行所谓的\"完全同步\"。 RDB文件从主数据库传输到副本数据库。\n    #\n    # 传输可以两种不同的方式发生：\n    #\n    # 1) 磁盘备份: Redis主服务器创建一个新过程，将RDB文件写入磁盘。 后来，文件由父进程逐步传输到副本。\n    # 2) 无盘：Redis主服务器创建一个新进程，该进程将RDB文件直接写入副本套接字，而完全不接触磁盘。\n    #\n    # 使用磁盘支持的复制，在生成RDB文件时，一旦生成RDB文件的当前子级完成工作，就可以将更多副本排入队列并与RDB文件一起使用。\n    # 如果使用无盘复制，则一旦传输开始，新的副本将排队，并且当当前副本终止时将开始新的传输。\n    #\n    # 使用无盘复制时，主服务器在开始传输之前等待一段可配置的时间（以秒为单位），以希望多个副本可以到达并且传输可以并行化。\n    #\n    # 对于慢速磁盘和快速（大带宽）网络，无盘复制效果更好。\n    repl-diskless-sync no\n\n    # 启用无盘复制后，可以配置服务器等待的延迟，以生成通过套接字将RDB传输到副本的子代。\n    #\n    # 这很重要，因为一旦传输开始，就无法为到达下一个RDB传输的新副本提供服务，因此服务器会等待一段时间才能让更多副本到达。\n    #\n    # 以秒为单位指定延迟，默认为5秒。 要完全禁用它，只需将其设置为0秒，传输就会尽快开始。\n    repl-diskless-sync-delay 5\n\n    # -----------------------------------------------------------------------------\n    # 警告：RDB无盘加载是实验性的。 因为在此设置中，副本不会立即在磁盘上存储RDB，所以它可能会导致故障转移期间的数据丢失。\n    # 在与主机的初始同步阶段，如果I/O错误，则RDB无盘负载+ Redis模块不处理I/O读取也可能导致Redis中止。 仅在执行自己的操作时使用。\n    # -----------------------------------------------------------------------------\n    #\n    # 副本可以直接从套接字加载从复制链接读取的RDB，也可以将RDB存储到文件中，并在从主服务器完全获取文件后读取该文件。\n    #\n    # 在许多情况下，磁盘的速度比网络慢，并且存储和加载RDB文件可能会增加复制时间（甚至会增加主服务器的\"写时复制\"内存和从属缓冲区）。\n    # 但是，直接从套接字解析RDB文件可能意味着我们必须在接收到完整的rdb之前刷新当前数据库的内容。 因此，我们有以下选择：\n    #\n    # \"disabled\"    - 不要使用无盘负载（首先将rdb文件存储到磁盘）\n    # \"on-empty-db\" - 仅在完全安全时才使用无盘加载。\n    # \"swapdb\"      - 直接从套接字解析数据时，在RAM中保留当前数据库内容的副本。 请注意，这需要足够的内存，如果没有足够的内存，则可能会杀死OOM。\n    repl-diskless-load disabled\n\n    # 副本以预定义的时间间隔将PING发送到服务器。 可以使用repl_ping_replica_period选项更改此间隔。 默认值为10秒。\n    #\n    # repl-ping-replica-period 10\n\n    # 以下选项为以下项设置复制超时：\n    #\n    # 1）从副本的角度来看，在SYNC期间进行批量传输I/O。\n    # 2）从副本（数据，Ping）的角度来看，主超时。\n    # 3）从主服务器角度来看，副本超时（REPLCONF ACK ping）。\n    #\n    # 确保该值大于为repl-ping-replica-period指定的值非常重要，否则，每当主服务器和副本之间的通信量较低时，都会检测到超时。\n    #\n    # repl-timeout 60\n\n    # 在SYNC之后禁用副本套接字上的TCP_NODELAY？\n    #\n    # 如果选择\"是\"，则Redis将使用更少的TCP数据包和更少的带宽将数据发送到副本。\n    # 但这会增加数据出现在副本端的延迟，对于使用默认配置的Linux内核，此延迟最多可达40毫秒。\n    #\n    # 如果选择\"否\"，将减少数据在副本侧出现的延迟，但将使用更多带宽进行复制。\n    #\n    # 默认情况下，我们针对低延迟进行了优化，但是在通信量非常高的情况下，或者当主服务器和副本距离很多跳时，将其设置为\"是\"可能是个好主意。\n    repl-disable-tcp-nodelay no\n\n    # 设置复制backlog(积压)大小。 待办事项是一个缓冲区，当副本断开连接一段时间后，该缓冲区会累积副本数据，\n    # 因此当副本想要重新连接时，通常不需要完全重新同步，但是部分重新同步就足够了，只需传递副本的部分数据即可 断开连接时错过。\n    #\n    # 复制待办事项越大，副本可以断开连接并在以后能够执行部分重新同步的时间越长。\n    #\n    # 仅在至少连接一个副本后才分配backlog(积压)。\n    #\n    # repl-backlog-size 1mb\n\n    # 在主服务器一段时间不再连接副本后，backlog(积压)的事务将被释放。 以下选项配置了从断开最后一个副本的时间开始到释放待办事项缓冲区所需的秒数。\n    #\n    # 请注意，副本永远不会释放backlog(积压)的超时，因为它们可能会在以后升级为主副本，\n    # 并且应该能够与副本正确\"部分重新同步\"：因此，它们应始终累积backlog(积压)。\n    #\n    # 值0表示从不释放backlog(积压)。\n    #\n    # repl-backlog-ttl 3600\n\n    # 副本优先级是Redis在INFO输出中发布的整数。 如果主服务器不再正常工作，Redis Sentinel会使用它来选择要升级为主服务器的副本。\n    #\n    # 优先级低的副本被认为更适合升级，例如，如果有三个副本的优先级分别为10、100和25，Sentinel将选择优先级为10的副本，这是最低的。\n    #\n    # 但是，特殊优先级0会将副本标记为不能执行主角色，因此Redis Sentinel永远不会选择优先级为0的副本进行升级。\n    #\n    # 默认情况下，优先级为100。\n    replica-priority 100\n\n    # 如果连接的副本少于N个，且延迟小于或等于M秒，则主服务器可能会停止接受写入。\n    #\n    # N个副本必须处于\"联机\"状态。\n    #\n    # 以秒为单位的延迟必须小于等于指定值，该延迟是根据从副本接收到的最后一次ping计算得出的，通常是每秒发送一次。\n    #\n    # 此选项不能保证N个副本将接受写操作，但是如果没有足够的副本可用，则会将丢失写操作的暴露窗口限制为指定的秒数。\n    #\n    # 例如，至少需要3个滞后<= 10秒的副本，请使用：\n    #\n    # min-replicas-to-write 3\n    # min-replicas-max-lag 10\n    #\n    # 将其中一个设置为0将禁用该功能。\n    #\n    # 默认情况下，min-replicas-to-write设置为0（禁用功能），min-replicas-max-lag设置为10。\n\n    # Redis主服务器能够以不同方式列出附加副本的地址和端口。 例如，\"INFO复制\"部分提供了此信息，Redis Sentinel使用此信息以及其他工具来发现副本实例。\n    # 该信息可用的另一个位置是主服务器的\"ROLE\"命令的输出。\n    #\n    # 通常通过以下方式获取副本列出的IP和地址：\n    #\n    #   IP: 通过检查副本用于与主服务器连接的套接字的对等地址来自动检测该地址。\n    #   Port: 该端口在复制握手期间由副本进行通信，通常是副本用来侦听连接的端口。\n    #\n    # 但是，当使用端口转发或网络地址转换（NAT）时，实际上可以通过不同的IP和端口对访问该副本。\n    # 副本可以使用以下两个选项，以便向其主服务器报告特定的IP和端口集，以便INFO和ROLE都将报告这些值。\n    #\n    # 如果只需要覆盖端口或IP地址，则无需同时使用这两个选项。\n    #\n    # replica-announce-ip 5.5.5.5\n    # replica-announce-port 1234\n\n    ############################### KEYS TRACKING（KEYS跟踪） #################################\n\n    # Redis为客户端的值缓存实现服务器辅助的支持。\n    # 这是使用无效表实现的，该无效表使用1600万个插槽记住哪些客户端可能具有某些键子集。\n    # 依次使用此命令是为了向客户端发送无效消息。 请了解有关此功能的更多信息，请检查以下页面：\n    #\n    #   https://redis.io/topics/client-side-caching\n    #\n    # 为客户端启用跟踪时，假定所有只读查询都已缓存：这将强制Redis将信息存储在失效表中。 修改密钥后，此类信息将被清除，并将无效消息发送到客户端。\n    # 但是，如果工作量主要由读取决定，Redis可以使用越来越多的内存来跟踪许多客户端获取的密钥。\n    #\n    # 因此，可以为失效表配置最大填充值。 默认情况下，它设置为1M键，一旦达到此限制，Redis将开始撤消失效表中的键，\n    # 即使它们没有被修改，只是为了回收内存：这反过来将迫使客户端使缓存无效。 价值观。 \n    # 基本上，表的最大大小是要在服务器端用来跟踪有关谁缓存内容的信息的内存与客户端将缓存的对象保留在内存中的能力之间进行权衡的。\n    #\n    # 如果将值设置为0，则表示没有限制，Redis将在失效表中保留所需数量的键。\n    # 在\"统计信息\"信息部分中，您可以在每个给定的时间找到有关失效表中密钥数量的信息。\n    #\n    # 注意：在广播模式下使用键跟踪时，服务器端未使用任何内存，因此此设置无用。\n    #\n    # tracking-table-max-keys 1000000\n\n    ################################## SECURITY ###################################\n\n    # 警告：由于Redis的速度非常快，外部用户每秒可以在一个现代化的设备上尝试高达100万个密码。\n    # 这意味着您应该使用非常安全的密码，否则密码很容易破解。\n    # 请注意，由于该密码实际上是客户端和服务器之间的共享机密，并且不应由任何人记住，\n    # 因此该密码可以很容易地由/dev/urandom或其他方式中的长字符串组成，因此请使用冗长且不可猜测的内容 密码不会有暴力攻击。\n\n    # Redis ACL用户的定义如下：\n    #\n    #   user <username> ... acl rules ...\n    #\n    #  例如：\n    #\n    #   user worker +@list +@connection ~jobs:* on >ffa9203c493aa99\n    #\n    # 特殊用户名\"默认\"用于新连接。 如果该用户具有\"nopass\"规则，则新连接将立即被认证为\"默认\"用户，\n    # 而无需通过AUTH命令提供任何密码。 否则，如果未将\"默认\"用户标记为\"nopass\"，\n    # 则连接将以未认证状态启动，并且需要AUTH（或HELLO命令AUTH选项）才能进行认证并开始工作。\n    #\n    # 描述用户可以执行的操作的ACL规则如下：\n    #\n    #  on           启用用户：可以验证为该用户。\n    #  off          禁用用户：不再可以与此用户进行身份验证，但是已经身份验证的连接仍然可以使用。\n    #  +<command>   允许执行该命令\n    #  -<command>   禁止执行该命令\n    #  +@<category> 允许执行此类中具有有效类别的所有命令，例如@ admin，@ set，@ sortedset等，等等，\n    #               请参阅server.c文件中的完整列表，其中描述和定义了Redis命令表 。\n    #               特殊类别@all表示所有命令，但是当前在服务器中存在，并且将来会通过模块加载。\n    #  +<command>|subcommand    允许使用本来禁用的命令的特定子命令。 注意，这种形式不允许像-DEBUG|SEGFAULT那样为负数，而只能以\"+\"开头。\n    #  allcommands  +@all的别名。 注意，这意味着可以执行将来通过模块系统加载的所有命令。\n    #  nocommands   -@all的别名。\n    #  ~<pattern>   添加可以在命令中提及的键模式。 例如~*允许所有键。 该模式是类似于KEYS之一的球形样式的模式。\n    #               可以指定多个模式。\n    #  allkeys      ~*的别名。\n    #  resetkeys    刷新允许的键模式列表。\n    #  ><password>  将此密码添加到用户的有效密码列表中。\n    #               例如> mypass将\"mypass\"添加到列表中。\n    #               此指令清除\"no pass\"标志（请参阅下文）。\n    #  <<password>  从有效密码列表中删除此密码。\n    #  nopass       用户的所有设置密码都将被删除，并且该用户被标记为不需要密码：这意味着每个密码都将对该用户起作用。\n    #               如果此指令用于默认用户，则每个新连接都将立即通过默认用户进行身份验证，而无需任何显式的AUTH命令。\n    #               请注意，\"resetpass\"指令将清除此情况。\n    #  resetpass    刷新允许的密码列表。 此外，删除\"nopass\"状态。 在\"重置密码\"之后，\n    #               用户将没有关联的密码，并且没有添加一些密码（或稍后将其设置为\"nopass\"）就无法进行身份验证的方法。\n    #  reset        执行以下动作: resetpass, resetkeys, off, -@all. 用户返回到创建后立即具有的相同状态。\n    #\n    # ACL规则可以以任何顺序指定：例如，您可以以密码，标志或密钥模式开头。 但是请注意，加法和减法规则将根据订购顺序进行更改。\n    # 例如，请参见以下示例：\n    #\n    #   user alice on +@all -DEBUG ~* >somepassword\n    #\n    # 这将允许\"alice\"使用除DEBUG命令之外的所有命令，因为+ @ all将所有命令添加到了alice可以使用的命令集中，并且后来删除了DEBUG。\n    # 但是，如果我们颠倒两个ACL规则的顺序，结果将是不同的：\n    #\n    #   user alice on -DEBUG +@all ~* >somepassword\n    #\n    # 现在，当alice在允许的命令集中还没有命令时，DEBUG被删除，之后又添加了所有命令，因此用户将能够执行所有操作。\n    #\n    # 基本上，ACL规则是从左到右处理的。\n    #\n    # 有关ACL配置的更多信息，请参阅Redis网站https://redis.io/topics/acl\n\n    # ACL日志\n    #\n    # ACL日志跟踪与ACL相关的失败命令和身份验证事件。 ACL日志可用于对ACL阻止的失败命令进行故障排除。 \n    # ACL日志存储在其中并消耗内存。 它的长度没有限制。您可以使用ACL LOG RESET回收内存，也可以在下面设置最大长度。\n    acllog-max-len 128\n\n    # 使用外部ACL文件\n    #\n    # 除了在此文件中配置用户外，还可以使用仅列出用户的独立文件。 两种方法不能混合使用：\n    # 如果在此处配置用户并同时激活外部ACL文件，则服务器将拒绝启动。\n    #\n    # 外部ACL用户文件的格式与redis.conf内部用来描述用户的格式完全相同。\n    #\n    # aclfile /etc/redis/users.acl\n\n    # 重要说明：从Redis 6开始，\"requirepass\"只是新ACL系统之上的兼容性层。 选项效果将只是为默认用户设置密码。\n    # 客户端仍然可以像往常一样使用AUTH <password>进行身份验证，或者如果它们遵循新协议，\n    # 则可以使用AUTH default <password>进行更明确的身份验证：两者都可以使用。\n    #\n    # requirepass foobared\n    requirepass 26Rgj^86*SN7y%\n\n    # 命令重命名（不建议使用）。\n    #\n    # ------------------------------------------------------------------------\n    # 警告：尽可能避免使用此选项。 而是使用ACL从默认用户中删除命令，并将其仅放置在您出于管理目的而创建的某些admin用户中。\n    # ------------------------------------------------------------------------\n    #\n    # 可以在共享环境中更改危险命令的名称。 例如，可以将CONFIG命令重命名为一些难以猜测的名称，以便它仍可用于内部使用的工具，但不适用于一般客户。\n    #\n    # 示例：\n    #\n    # rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52\n    #\n    # 也可以通过将命令重命名为空字符串来完全终止命令：\n    #\n    # rename-command CONFIG \"\"\n    #\n    # 请注意，更改登录到AOF文件或传输到副本的命令的名称可能会导致问题。\n\n    ################################### CLIENTS ####################################\n\n    # 设置同时连接的最大客户端数。 默认情况下，此限制设置为10000个客户端，\n    # 但是，如果Redis服务器无法配置进程文件限制以允许指定的限制，\n    # 则允许的最大客户端数将设置为当前文件限制减去32（因为Redis保留了 内部使用的文件描述符很少）。\n    #\n    # 一旦达到限制，Redis将关闭所有新连接，并发送错误消息\"已达到最大客户端数\"。\n    #\n    # maxclients 10000\n\n    ############################## MEMORY MANAGEMENT ################################\n\n    # 设置内存使用限制为指定的字节数。\n    # 当达到内存限制时，Redis将尝试根据所选的逐出策略来删除密钥（请参阅maxmemory-policy）。\n    #\n    # 如果Redis无法根据该策略删除密钥，或者如果该策略设置为'noeviction'，\n    # 则Redis将开始对将使用更多内存的命令（例如SET，LPUSH等）进行错误回复，并会 继续回复诸如GET之类的只读命令。\n    #\n    # 当将Redis用作LRU或LFU缓存，或为实例设置硬盘限制（使用\"noeviction\"策略）时，此选项通常很有用。\n    #\n    # 警告：如果您将副本附加到实例上且maxmemory处于打开状态，则从使用的内存数量中减去提供副本所需的输出缓冲区的大小，\n    # 以便网络问题/重新同步不会触发收回密钥的循环，反过来，副本的输出缓冲区已满，有被驱逐的DEL密钥触发了更多密钥的删除，\n    # 依此类推，直到数据库完全清空。\n    #\n    # 简而言之...如果您附加了副本，建议您设置maxmemory的下限，\n    # 以便系统上有一些可用RAM用于副本输出缓冲区（但是如果策略为'noeviction'，则不需要这样做） 。\n    #\n    # maxmemory <bytes>\n\n    # MAXMEMORY POLICY：达到maxmemory时，Redis将如何选择要删除的内容。 您可以从以下行为中选择一种：\n    #\n    # volatile-lru -> 使用近似的LRU驱逐，只有具有过期集的key。\n    # allkeys-lru -> 使用近似的LRU退出任何key。\n    # volatile-lfu -> 使用近似的LFU驱逐，只有具有过期集的key。\n    # allkeys-lfu -> 使用近似的LFU退出任何key。\n    # volatile-random -> 删除具有过期设置的随机key。\n    # allkeys-random -> 删除随机key，任何key。\n    # volatile-ttl -> 删除最接近到期时间（较小的TTL）的key\n    # noeviction -> 不要逐出任何东西，只需在写操作中返回错误。\n    #\n    # LRU表示最近最少使用\n    # LFU表示最少使用\n    #\n    # LRU，LFU和volatile-ttl均使用近似随机算法实现。\n    #\n    # 注意：使用上述任何策略时，如果没有合适的退出键，Redis将在写入操作中返回错误。\n    #\n    #       At the date of writing these commands are: set setnx setex append\n    #       incr decr rpush lpush rpushx lpushx linsert lset rpoplpush sadd\n    #       sinter sinterstore sunion sunionstore sdiff sdiffstore zadd zincrby\n    #       zunionstore zinterstore hset hsetnx hmset hincrby incrby decrby\n    #       getset mset msetnx exec sort\n    #\n    # 默认为：\n    #\n    # maxmemory-policy noeviction\n\n    # LRU，LFU和最小TTL算法不是精确算法，而是近似算法（以节省内存），因此您可以调整它的速度或准确性。 \n    # 对于默认情况，Redis将检查五个键并选择最近使用的键，您可以使用以下配置指令更改样本大小。\n    #\n    # 默认值5产生足够好的结果。 10非常接近真实的LRU，但是会花费更多的CPU。 3更快，但不是很准确。\n    #\n    # maxmemory-samples 5\n\n    # 从Redis 5开始，默认情况下，副本将忽略其maxmemory设置（除非在故障转移后或手动提升为主副本）。\n    # 这意味着密钥的移出将仅由主服务器处理，将DEL命令作为副本在主计算机侧逐出，将DEL命令发送到副本。\n    #\n    # 此行为可确保主副本和副本副本保持一致，这通常是您想要的，但是，如果副本副本是可写的，\n    # 或者您希望副本副本具有不同的内存设置，并且您确定对副本副本执行的所有写入都是幂等的 ，那么您可以更改此默认设置（但请务必了解您在做什么）。\n    #\n    # 请注意，由于默认情况下该副本不会退出，所以它可能会比使用maxmemory设置的一组内存占用更多的内存（\n    # 某些缓冲区在副本上可能会更大，或者数据结构有时会占用更多内存，依此类推）。 \n    # 因此，请确保您监视副本，并确保副本具有足够的内存，以便在主副本达到配置的最大内存设置之前，永远不会达到真正的内存不足状态。\n    #\n    # replica-ignore-maxmemory yes\n\n    # Redis有两种回收过期密钥的方法：访问时发现这些密钥已过期，以及在后台，称为\"活动过期密钥\"。\n    # 缓慢地，交互地扫描密钥空间，以查找要回收的过期密钥，以便可以释放已过期且不久之后将不再访问的密钥的内存。\n    #\n    # 过期周期的默认工作将尝试避免在内存中保留超过百分之十的过期密钥，并尝试避免消耗超过总内存的25％并增加系统延迟。\n    # 但是，可以将通常设置为\"1\"的过期\"努力\"增加到更大的值，直到值\"10\"。\n    # 系统将以其最大值使用更多的CPU，更长的周期（并且从技术上讲可能会引入更多的延迟），并将减少仍然存在于系统中的已过期密钥的数量。\n    # 在内存，CPU和延迟之间进行权衡。\n    #\n    # active-expire-effort 1\n\n    ############################# LAZY FREEING(懒惰释放) ####################################\n\n    # Redis有两个删除键的原语。 一种称为DEL，它是对象的阻塞删除。 这意味着服务器停止处理新命令，以便以同步方式回收与对象关联的所有内存。 \n    # 如果删除的键与一个小对象相关联，则执行DEL命令所需的时间非常短，可与Redis中的大多数其他O（1）或O（log_N）命令相提并论。\n    # 但是，如果键与包含数百万个元素的聚合值关联，则服务器可能会阻塞很长时间（甚至几秒钟）以完成操作。\n    #\n    # 由于上述原因，Redis还提供了非阻塞删除原语，例如UNLINK（非阻塞DEL）以及FLUSHALL和FLUSHDB命令的ASYNC选项，以便在后台回收内存。\n    # 这些命令在固定时间内执行。 另一个线程将尽可能快地在后台逐渐释放对象。\n    #\n    # FLUSHALL和FLUSHDB的DEL，UNLINK和ASYNC选项是用户控制的。\n    # 由应用程序的设计决定何时使用一个或另一个是一个好主意。 但是，Redis服务器有时必须删除键或刷新整个数据库，这是其他操作的副作用。\n    # 特别是在以下情况下，Redis会独立于用户调用删除对象：\n    #\n    # 1) 逐出时，由于maxmemory和maxmemory策略配置，以便在不超出指定的内存限制的情况下为新数据腾出空间。\n    # 2) 因为到期：必须从内存中删除具有相关生存时间的密钥（请参阅EXPIRE命令）。\n    # 3) 由于将数据存储在可能已经存在的键上的命令的副作用。 例如，当RENAME命令被另一旧密钥内容替换时，它可能会删除它。\n    #    同样，SUNIONSTORE或SORT with STORE选项可能会删除现有密钥。 SET命令本身会删除指定键的所有旧内容，以便将其替换为指定的字符串。\n    # 4) 在复制期间，当副本与其主副本执行完全重新同步时，将删除整个数据库的内容，以便加载刚传输的RDB文件。\n    #\n    # 在上述所有情况下，默认设置都是以阻塞方式删除对象，就像调用DEL一样。 \n    # 但是，您可以专门配置每种情况，以便使用以下配置指令以非阻塞方式释放内存，例如调用UNLINK的情况。\n\n    lazyfree-lazy-eviction no\n    lazyfree-lazy-expire no\n    lazyfree-lazy-server-del no\n    replica-lazy-flush no\n\n    # 对于将用户代码DEL调用替换为UNLINK调用并不容易的情况，也可以使用以下配置指令将DEL命令的默认行为修改为与UNLINK完全相同：\n\n    lazyfree-lazy-user-del no\n\n    ################################ THREADED I/O #################################\n\n    # Redis主要是单线程的，但是有一些线程操作，例如UNLINK，缓慢的I/O访问和其他在侧线程上执行的操作。\n    #\n    # 现在，还可以在不同的I/O线程中处理Redis客户端套接字的读写。\n    # 由于特别慢的写入速度，因此Redis用户通常使用流水线以加快每个内核的Redis性能，并生成多个实例以扩大规模。\n    # 使用I/O线程可以轻松地将Redis加速两次，而无需求助于实例的流水线处理或分片。\n    #\n    # 默认情况下，线程处于禁用状态，我们建议仅在具有至少4个或更多内核的计算机上启用该功能，并至少保留一个备用内核。\n    # 使用8个以上的线程不太可能有很大帮助。\n    # 我们还建议仅在确实存在性能问题时才使用线程I/O，Redis实例可以使用很大一部分CPU时间，否则就没有必要使用此功能。\n    #\n    # 例如，如果您有四个核的core，请尝试使用2或3个I/O线程，如果您有8个核，请尝试使用6个线程。 为了启用I/O线程，请使用以下配置指令：\n    #\n    # io-threads 4\n    #\n    # 将io-threads设置为1只会照常使用主线程。\n    # 启用I/O线程后，我们仅将线程用于写操作，即对write（2）系统调用进行线程化，并将客户端缓冲区传输到套接字。\n    # 但是，也可以通过将以下配置指令设置为yes来启用读取线程和协议解析功能：\n    #\n    # io-threads-do-reads no\n    #\n    # 通常，线程读取无济于事。\n    #\n    # 注意1：无法在运行时通过CONFIG SET更改此配置伪指令。 启用SSL时，Aso此功能当前不起作用。\n    #\n    # 注意2：如果要使用redis-benchmark测试Redis加速，请确保还以线程模式运行基准测试本身，使用--threads选项匹配Redis thead的数量，\n    # 否则您将无法使用 注意到改进。\n\n    ############################## APPEND ONLY MODE(追加模式) ###############################\n\n    # 默认情况下，Redis异步将数据集转储到磁盘上。 此模式在许多应用程序中已经足够好，\n    # 但是Redis进程问题或电源中断可能会导致几分钟的写入丢失（取决于配置的保存点）。\n    #\n    # 仅附加文件是一种替代的持久性模式，可提供更好的持久性。 例如，使用默认数据fsync策略（请参阅配置文件中的稍后内容），\n    # Redis可能在服务器断电等严重事件中丢失一秒钟的写入，如果Redis进程本身发生错误，则一次写入将丢失一次，但是 操作系统仍在正常运行。\n    #\n    # 可以同时启用AOF和RDB持久性，而不会出现问题。\n    # 如果启动时启用了AOF，则Redis将加载AOF，即具有更好持久性的文件。\n    #\n    # 请检查http://redis.io/topics/persistence了解更多信息。\n\n    appendonly no\n\n    # 仅附加文件的名称（默认值：\"appendonly.aof\"）\n\n    appendfilename \"appendonly.aof\"\n\n    # fsync（）调用告诉操作系统将数据实际写入磁盘，而不是等待输出缓冲区中的更多数据。\n    # 有些操作系统确实会刷新磁盘上的数据，而另一些操作系统只会尝试尽快完成该操作。\n    #\n    # Redis支持三种不同的模式：\n    #\n    # no: 不要fsync，只要让OS在需要时刷新数据即可。 Faster 始终：每次写入仅附加日志后，fsync。 慢，最安全。 everysec：每秒仅同步一次fsync。 妥协。\n    #\n    # 默认值为\"everysec\"，因为这通常是速度和数据安全性之间的正确折衷。\n    # 您可以了解是否可以将其放松为\"no\"，这将使操作系统在需要时刷新输出缓冲区，\n    # 以获得更好的性能（但是如果您可以忍受某些数据丢失的想法，\n    # 请考虑使用默认的持久性模式 （即快照），或者相反，使用\"总是\"，该速度非常慢，但比秒安全。\n    #\n    # 更多详细信息，请查看以下文章：\n    # http://antirez.com/post/redis-persistence-demystified.html\n    #\n    # 如果不确定，请使用\"everysec\"。\n\n    # appendfsync always\n    appendfsync everysec\n    # appendfsync no\n\n    # 当AOF fsync策略设置为always或everysec，并且后台保存进程（后台保存或AOF日志后台重写）对磁盘执行大量I/O时，\n    # 在某些Linux配置中，Redis可能会阻塞太长时间 fsync（）调用。\n    # 请注意，目前尚无此修复程序，因为即使在其他线程中执行fsync也将阻止我们的同步write（2）调用。\n    #\n    # 为了减轻此问题，可以使用以下选项，以防止在进行BGSAVE或BGREWRITEAOF时在主进程中调用fsync（）。\n    #\n    # 这意味着当另一个孩子正在保存时，Redis的持久性与\"appendfsync none\"相同。\n    # 实际上，这意味着在最坏的情况下（使用默认的Linux设置）可能会丢失多达30秒的日志。\n    #\n    # 如果您有延迟问题，请将其设为\"是\"。 否则，从耐久性的角度来看，将其保留为\"否\"是最安全的选择。\n\n    no-appendfsync-on-rewrite no\n\n    # 自动重写仅附加文件。\n    # 当AOF日志大小增加指定百分比时，Redis可以自动重写日志文件，隐式调用BGREWRITEAOF。\n    #\n    # 它是这样工作的：Redis会在最近一次重写后记住AOF文件的大小（如果自重新启动以来未发生任何重写，则使用启动时AOF的大小）。\n    #\n    # 将此基本大小与当前大小进行比较。 如果当前大小大于指定的百分比，则触发重写。\n    # 另外，您需要指定要重写的AOF文件的最小大小，这对于避免重写AOF文件非常有用，即使达到百分比增加，但它仍然很小。\n    #\n    # 指定零百分比以禁用自动AOF重写功能。\n\n    auto-aof-rewrite-percentage 100\n    auto-aof-rewrite-min-size 64mb\n\n    # 当AOF数据重新加载到内存中时，在Redis启动过程中可能会发现AOF文件在末尾被截断。\n    # 这可能在运行Redis的系统崩溃时发生，尤其是在没有data = ordered选项的情况下挂载ext4文件系统时（\n    # 但是当Redis本身崩溃或中止但操作系统仍然可以正常工作时，这不会发生）。\n    #\n    # Redis在发生这种情况时可能会退出并显示错误，也可能会加载尽可能多的数据（当前为默认值），\n    # 如果发现AOF文件在末尾被截断，则会重新启动。 以下选项控制此行为。\n    #\n    # 如果aof-load-truncated设置为yes，则将加载截短的AOF文件，并且Redis服务器将开始发出日志以将事件通知用户。\n    # 否则，如果该选项设置为no，则服务器将中止并显示错误并拒绝启动。\n    # 如果将该选项设置为no，则用户需要在重新启动服务器之前使用\"redis-check-aof\"实用程序修复AOF文件。\n    #\n    # 请注意，如果在中间发现AOF文件已损坏，则服务器仍将退出并出现错误。 仅当Redis尝试从AOF文件读取更多数据但找不到足够的字节时，此选项才适用。\n    aof-load-truncated yes\n\n    # 重写AOF文件时，Redis可以使用AOF文件中的RDB前同步码来更快地进行重写和恢复。 启用此选项后，重写的AOF文件由两个不同的节组成：\n    #\n    #   [RDB file][AOF tail]\n    #\n    # 加载时，Redis会识别AOF文件以\"REDIS\"字符串开头并加载带前缀的RDB文件，然后继续加载AOF尾部。\n    aof-use-rdb-preamble yes\n\n    ################################ LUA SCRIPTING(LUA脚本)  ###############################\n\n    # Lua脚本的最大执行时间（以毫秒为单位）。\n    #\n    # 如果达到了最大执行时间，则Redis将记录脚本在允许的最大时间后仍在执行中，并将开始以错误答复查询。\n    #\n    # 当长时间运行的脚本超过最大执行时间时，仅SCRIPT KILL和SHUTDOWN NOSAVE命令可用。\n    # 第一个可用于停止尚未调用写命令的脚本。\n    # 第二种是在脚本已发出写命令但用户不想等待脚本自然终止的情况下关闭服务器的唯一方法。\n    #\n    # 将其设置为0或负值以无警告地无限执行。\n    lua-time-limit 5000\n\n    ################################ REDIS CLUSTER  ###############################\n\n    # 普通Redis实例不能属于Redis集群； 只有作为群集节点启动的节点可以。 为了将Redis实例作为群集节点启动，请在不注释以下内容的情况下启用群集支持：\n    #\n    # cluster-enabled yes\n\n    # 每个群集节点都有一个群集配置文件。 该文件不适合手工编辑。 它由Redis节点创建和更新。\n    # 每个Redis群集节点都需要一个不同的群集配置文件。\n    # 确保在同一系统上运行的实例没有重叠的集群配置文件名。\n    #\n    # cluster-config-file nodes-6379.conf\n\n    # 群集节点超时是一个节点必须不可达的毫秒数，才能将其视为故障状态。\n    # 其他大多数内部时间限制是节点超时的倍数。\n    #\n    # cluster-node-timeout 15000\n\n    # 如果发生故障的主副本的数据看起来太旧，它将避免启动故障转移。\n    #\n    # 没有一种简单的方法可以使副本实际上具有其\"数据寿命\"的准确度量，因此执行以下两项检查：\n    #\n    # 1) 如果存在多个能够进行故障转移的副本，则它们会交换消息，以便尝试利用具有最佳复制偏移量（处理了更多来自主数据库的数据）的副本来获得优势。\n    #    副本将尝试按偏移量获取其等级，并将一个与它们的等级成比例的延迟应用于故障转移。\n    #\n    # 2) 每个单个副本都会计算与其母版之间最后一次交互的时间。\n    #    这可以是最后收到的ping或命令（如果主服务器仍处于\"已连接\"状态），也可以是自从与主服务器断开连接以来经过的时间（如果复制链接当前已关闭）。\n    #    如果最后一次交互太旧，副本将完全不会尝试故障转移。\n    #\n    # 用户可以调整点\"2\"。 具体而言，如果自从上次与主服务器进行交互以来，经过的时间大于以下时间，则副本将不执行故障转移：\n    #\n    #   (node-timeout * replica-validity-factor) + repl-ping-replica-period\n    #\n    # 因此，例如，如果节点超时为30秒，并且副本有效性因子为10，并且假定默认的repl-ping-replica-period值为10秒，\n    # 则副本将无法尝试进行故障转移，如果它不能 与主对话时间超过310秒。\n    #\n    # 较大的副本有效性因子可能会使数据过旧的副本无法对主副本进行故障转移，而值太小可能会使群集根本无法选择副本。\n    #\n    # 为了获得最大可用性，可以将复制品有效性因子设置为0，这意味着，复制品将始终尝试对主数据库进行故障转移，而不考虑它们与主数据库的最后一次交互。\n    # （但是，他们将始终尝试应用与其偏移等级成比例的延迟）。\n    #\n    # 零是唯一能够确保所有分区恢复正常后，群集将始终能够继续运行的值。\n    #\n    # cluster-replica-validity-factor 10\n\n    # 群集副本能够迁移到孤立的主数据库，即那些没有工作副本的主数据库。\n    # 这样可以提高群集抵御故障的能力，因为如果没有工作副本，孤立的主节点在发生故障的情况下将无法进行故障转移。\n    #\n    # 仅当旧的主副本仍存在至少给定数量的其他工作副本时，副本副本才会迁移到孤立的主副本。\n    # 这个数字是\"移民壁垒\"。 迁移障碍为1表示仅当副本数据库的主副本上至少有1个其他工作副本时，副本副本才会迁移。\n    # 它通常反映出集群中每个主数据库所需的副本数。\n    #\n    # 默认为1（副本仅在其主数据库保留至少一个副本时迁移）。 要禁用迁移，只需将其设置为非常大的值即可。\n    # 可以设置为0，但仅对调试和生产危险有用。\n    #\n    # cluster-migration-barrier 1\n\n    # 默认情况下，如果Redis Cluster节点检测到至少发现一个哈希槽（没有可用的节点正在为其提供服务），它们将停止接受查询。\n    # 这样，如果集群部分关闭（例如，不再覆盖哈希槽的范围），则所有集群最终将变得不可用。\n    # 重新覆盖所有插槽后，它将自动返回可用状态。\n    #\n    # 但是有时您希望集群的子集正常工作，以继续接受对仍覆盖的部分键空间的查询。 为此，只需将cluster-require-full-coverage选项设置为no。\n    #\n    # cluster-require-full-coverage yes\n\n    # 此选项设置为yes时，可防止副本在主服务器发生故障时尝试对其主服务器进行故障转移。 但是，主服务器仍然可以执行手动故障转移（如果被迫执行）。\n    #\n    # 这在不同的情况下很有用，尤其是在多个数据中心操作的情况下，如果我们希望在完全DC故障的情况下不对一侧进行升级，则这是不希望的。\n    #\n    # cluster-replica-no-failover no\n\n    # 此选项设置为yes时，只要集群认为自己拥有插槽，就可以在集群处于关闭状态时为节点提供读取流量。\n    #\n    # 这在两种情况下很有用。 第一种情况是在节点故障或网络分区期间应用程序不需要数据一致性时。\n    # 缓存的一个例子，只要节点拥有数据，它就应该能够为它服务。\n    #\n    # 第二个用例是用于不符合建议的三个分片但希望启用集群模式并在以后扩展的配置。\n    # 如果没有设置此选项，则在1或2分片配置中的主服务器中断会导致整个集群的读/写中断，只有在设置了该选项的情况下，才会发生写中断。\n    # 如果没有法定人数的主持人，则插槽所有权不会自动更改。\n    #\n    # cluster-allow-reads-when-down no\n\n    # 为了设置您的集群，请确保阅读文档\n    # 可从http://redis.io网站获得。\n\n    ########################## CLUSTER DOCKER/NAT support  ########################\n\n    # 在某些部署中，Redis Cluster节点的地址发现失败，这是因为地址经过NAT限制或端口被转发（典型情况是Docker和其他容器）。\n    #\n    # 为了使Redis Cluster在这样的环境中工作，需要一个静态配置，其中每个节点都知道其公共地址。 以下两个选项用于此范围，分别是：\n    #\n    # * cluster-announce-ip\n    # * cluster-announce-port\n    # * cluster-announce-bus-port\n    #\n    # 每个命令都向节点指示其地址，客户端端口和集群消息总线端口。 然后将信息发布在总线数据包的标头中，以便其他节点将能够正确映射发布信息的节点的地址。\n    #\n    # 如果未使用上述选项，则将使用常规的Redis群集自动检测。\n    #\n    # 请注意，重新映射后，总线端口可能不在客户端端口+ 10000的固定偏移处，因此您可以根据重新映射的方式指定任何端口和总线端口。\n    # 如果未设置总线端口，通常将使用10000的固定偏移量。\n    #\n    # 示例：\n    #\n    # cluster-announce-ip 10.1.1.5\n    # cluster-announce-port 6379\n    # cluster-announce-bus-port 6380\n\n    ################################## SLOW LOG ###################################\n\n    # Redis Slow Log是一个用于记录超过指定执行时间的查询的系统。\n    # 执行时间不包括与客户端交谈，发送回复等I/O操作，而是实际执行命令所需的时间（\n    # 这是命令执行的唯一阶段，在该阶段线程被阻塞并且可以 在此期间不满足其他要求）。\n    #\n    # 您可以使用以下两个参数配置慢速日志：一个告诉Redis，为了使命令被记录，执行时间要超过多少微秒，而另一个参数是慢速日志的长度。\n    # 记录新命令时，最旧的命令将从记录的命令队列中删除。\n\n    # 以下时间以微秒表示，因此1000000等于一秒。 请注意，负数将禁用慢速日志记录，而零值将强制记录每个命令。\n    slowlog-log-slower-than 10000\n\n    # 此长度没有限制。 请注意，它将消耗内存。\n    # 您可以使用SLOWLOG RESET回收慢速日志使用的内存。\n    slowlog-max-len 128\n\n    ################################ LATENCY MONITOR(延迟监视) ##############################\n\n    # Redis延迟监视子系统会在运行时对不同的操作进行采样，以收集与Redis实例的潜在延迟源相关的数据。\n    #\n    # 通过LATENCY命令，该信息可供打印图形并获取报告的用户使用。\n    #\n    # 系统仅记录在等于或大于通过delay-monitor-threshold配置指令指定的毫秒数内执行的操作。 当其值设置为零时，等待时间监视器将关闭。\n    #\n    # 默认情况下，延迟监视是禁用的，因为如果您没有延迟问题，通常不需要它，并且收集数据会对性能产生影响，尽管影响很小，但是可以在大负载下进行测量。\n    # 如果需要，可以在运行时使用命令\"CONFIG SET delay-monitor-threshold <milliseconds>\"轻松启用延迟监视。\n    latency-monitor-threshold 0\n\n    ############################# EVENT NOTIFICATION(活动通知) ##############################\n\n    # Redis可以将关键空间中发生的事件通知给发布/订阅客户端。\n    # 此功能记录在http://redis.io/topics/notifications\n    #\n    # 例如，如果启用了键空间事件通知，并且客户端对存储在数据库0中的键\"foo\"执行了DEL操作，则将通过Pub / Sub发布两条消息：\n    #\n    # PUBLISH __keyspace@0__:foo del\n    # PUBLISH __keyevent@0__:del foo\n    #\n    # 可以在一组类中选择Redis将通知的事件。 每个类都由一个字符标识：\n    #\n    #  K     键空间事件，以__keyspace@<db>__前缀发布。\n    #  E     键事件，以__keyevent@<db>__前缀发布。\n    #  g     通用命令（非类型专用），例如DEL，EXPIRE，RENAME，...\n    #  $     字符串命令\n    #  l     列出命令\n    #  s     设定指令\n    #  h     哈希命令\n    #  z     排序集命令\n    #  x     过期事件（每次密钥过期时生成的事件）\n    #  e     驱逐事件（驱逐密钥以获取最大内存时生成的事件）\n    #  t     流命令\n    #  m     按键缺失事件（注意：它不包含在\"A\"类中）\n    #  A     g$lshzxet的别名，以便\"AKE\"字符串表示所有事件（由于键丢失事件的独特性质，这些键事件被排除在\"A\"之外）。\n    #\n    # \"notify-keyspace-events\"将由零个或多个字符组成的字符串作为参数。 空字符串表示已禁用通知。\n    #\n    #  Example: to enable list and generic events, from the point of view of the\n    #           event name, use:\n    #\n    #  notify-keyspace-events Elg\n    #\n    #  Example 2: to get the stream of the expired keys subscribing to channel\n    #             name __keyevent@0__:expired use:\n    #\n    #  notify-keyspace-events Ex\n    #\n    # 默认情况下，所有通知均被禁用，因为大多数用户不需要此功能，并且该功能会有一些开销。 请注意，如果您未指定K或E中的至少一个，则不会传递任何事件。\n    notify-keyspace-events \"\"\n\n    ############################### GOPHER SERVER #################################\n\n    # Redis包含RFC 1436（https://www.ietf.org/rfc/rfc1436.txt）中指定的Gopher协议的实现。\n    #\n    # Gopher协议在90年代后期非常流行。 它是Web的替代方法，服务器和客户端的实现是如此简单，以至于Redis服务器只有100行代码才能实现这种支持。\n    #\n    # 您现在如何使用Gopher？ 好吧，Gopher从未真正死过，最近出现了一种运动，目的是使Gopher具有更多层次结构的内容（仅由纯文本文档组成）得以复活。\n    # 有些人希望使用更简单的互联网，另一些人则认为主流互联网已变得过于可控，为想要一点新鲜空气的人们创造替代空间很酷。\n    #\n    # 无论如何，在Redis诞生10周年之际，我们给了它Gopher协议作为礼物。\n    #\n    #   - - 怎么运行的？ ---\n    #\n    # Redis Gopher支持使用Redis的内联协议，特别是两种仍然非法的内联请求：空请求或任何以\"/\"开头的请求（没有以这样的斜杠开头的Redis命令）。\n    # 正常的RESP2/RESP3请求完全超出了Gopher协议实现的范围，并且通常也得到满足。\n    #\n    # 如果在启用Gopher时打开与Redis的连接，并向其发送\"/ foo\"之类的字符串，则如果存在名为\"/ foo\"的密钥，则会通过Gopher协议为其提供服务。\n    #\n    # 为了创建一个真正的Gopher\"hole\"（Gopher对话中Gopher站点的名称），您可能需要类似以下的脚本：\n    #\n    #   https://github.com/antirez/gopher2redis\n    #\n    #   - - 安全警告  - -\n    #\n    # 如果您打算将Redis放在服务器Gopher页面的公共访问地址上，请确保为实例设置密码。\n    # 设置密码后：\n    #\n    #   1. Gopher服务器（启用后，默认情况下未启用）仍将通过Gopher提供内容。\n    #   2. 但是，在客户端进行身份验证之前无法调用其他命令。\n    #\n    # 因此，请使用'requirepass'选项保护您的实例。\n    #\n    # 要启用Gopher支持，请取消注释以下行，并将选项从no（默认）设置为yes。\n    #\n    # gopher-enabled no\n\n    ############################### ADVANCED CONFIG ###############################\n\n    # 当哈希条目数较少且最大条目数不超过给定阈值时，将使用内存高效的数据结构对其进行编码。 可以使用以下指令配置这些阈值。\n    hash-max-ziplist-entries 512\n    hash-max-ziplist-value 64\n\n    # 列表也以特殊方式编码，以节省大量空间。\n    # 每个内部列表节点允许的条目数可以指定为固定的最大大小或最大元素数。\n    # 对于固定的最大大小，请使用-5到-1，表示：\n    # -5：最大大小：64 Kb <-不建议用于正常工作负载\n    # -4：最大大小：32 Kb <-不推荐\n    # -3：最大大小：16 Kb <-可能不建议\n    # -2：最大大小：8 Kb  <-好\n    # -1：最大大小：4 Kb  <-好\n    # 正数表示每个列表节点最多存储_exactly_个元素。\n    # 最高性能的选项通常是-2（8 Kb大小）或-1（4 Kb大小），但是如果您的用例是唯一的，请根据需要调整设置。\n    list-max-ziplist-size -2\n\n\n    # 列表也可能被压缩。\n    # 压缩深度是从列表的*each*侧到*exclude*压缩的快速列表ziplist节点的数量。为了快速执行 push/pop 出操作，列表的开头和结尾始终未压缩。 设置为：\n    # 0: 禁用所有列表压缩\n    # 1: 深度1表示\"直到头上有1个节点之后，才开始压缩\"\n    #    So: [head]->node->node->...->node->[tail]\n    #    [head], [tail] will always be uncompressed; inner nodes will compress.\n    # 2: [head]->[next]->node->node->...->node->[prev]->[tail]\n    #    这里的2表示：不要压缩head或head-> next或tail-> prev或tail，而是压缩它们之间的所有节点。\n    # 3: [head]->[next]->[next]->node->node->...->node->[prev]->[prev]->[tail]\n    # 等\n    list-compress-depth 0\n\n    # 集仅在一种情况下具有特殊的编码：当集仅由字符串组成，这些字符串恰好是基数10中的整数，范围为64位有符号整数。\n    # 以下配置设置设置了大小限制，以便使用此特殊的内存节省编码。\n    set-max-intset-entries 512\n\n    # 与散列和列表类似，对排序集也进行了特殊编码，以节省大量空间。 仅当排序集的长度和元素低于以下限制时，才使用此编码：\n    zset-max-ziplist-entries 128\n    zset-max-ziplist-value 64\n\n    # HyperLogLog稀疏表示字节数限制。 限制包括16个字节的标头。 当使用稀疏表示的HyperLogLog超过此限制时，它将转换为密集表示。\n    #\n    # 大于16000的值是完全没有用的，因为那时候密集表示的存储效率更高。\n    #\n    # 建议的值是〜3000，以便在不减慢PFADD的情况下获得节省空间编码的优点，而PFADD的稀疏编码为O（N）。\n    # 当不关心CPU但空间很大时，该值可以提高到10000，并且数据集由基数在0-15000范围内的许多HyperLogLog组成。\n    hll-sparse-max-bytes 3000\n\n    # 流宏节点的最大大小/项目。 流数据结构是一个大节点的基数树，它对内部的多个项目进行编码。\n    # 使用此配置，可以配置单个节点的大小（以字节为单位），以及在添加新的流条目时切换到新节点之前它可能包含的最大项目数。\n    # 如果以下任何设置被设置为零，则该限制将被忽略，例如，可以通过将max-bytes设置为0并将max-entries设置为所需值来仅设置最大整体限制。\n    stream-node-max-bytes 4096\n    stream-node-max-entries 100\n\n    # 主动重新哈希处理每100毫秒CPU时间使用1毫秒，以帮助重新哈希主Redis哈希表（将顶级键映射到值的一个哈希表）。\n    # Redis使用的哈希表实现（请参见dict.c）执行一次懒惰的重新哈希处理：您在要进行哈希处理的哈希表中运行的操作越多，\n    # 执行的哈希处理\"步骤\"就越多，因此，如果服务器空闲，则哈希处理将永远不会完成 散列表使用更多的内存。\n    #\n    # 默认值是每秒使用10毫秒的毫秒数来主动重新哈希主字典，并在可能的情况下释放内存。\n    #\n    # 如果不确定：\n    # 如果您有严格的延迟要求，请使用\"activerehashing no\"，并且在您的环境中，Redis可以不时地以2毫秒的延迟答复查询不是一件好事。\n    #\n    # 如果您没有如此严格的要求，但希望在可能的情况下尽快释放内存，请使用\"activerehashing yes\"。\n    activerehashing yes\n\n    # 客户端输出缓冲区限制可用于出于某些原因强制断开那些没有足够快地从服务器读取数据的客户端（\n    # 常见原因是Pub/Sub客户端无法像发布者所产生的那样快地消费消息。 他们）。\n    #\n    # 可以为三种不同类别的客户端设置不同的限制：\n    #\n    # normal -> 普通客户，包括MONITOR客户\n    # replica  -> 复制客户端\n    # pubsub -> 客户订阅了至少一个pubsub频道或模式\n    #\n    # 每个client-output-buffer-limit指令的语法如下：\n    #\n    # client-output-buffer-limit <class> <hard limit> <soft limit> <soft seconds>\n    #\n    # 一旦达到硬限制，或者达到软限制并且在指定的秒数内（连续）保持达到此限制，客户端将立即断开连接。\n    # 因此，例如，如果硬限制为32兆字节，软限制为16兆字节/ 10秒，则如果输出缓冲区的大小达到32兆字节，客户端将立即断开连接，\n    # 但是如果客户端达到16兆字节，则也将断开连接 并持续超过限制10秒钟。\n    #\n    # 默认情况下，普通客户端不受限制，因为它们不会在不询问的情况下（以推送方式）接收数据，而是在请求之后才接收数据，\n    # 因此只有异步客户端可能会创建这样一种场景：请求数据的速度比读取数据的速度快。\n    #\n    # 相反，对pubsub和副本客户端没有默认限制，因为订阅者和副本以推送方式接收数据。\n    #\n    # 可以通过将硬限制或软限制设置为零来禁用它们。\n    client-output-buffer-limit normal 0 0 0\n    client-output-buffer-limit replica 256mb 64mb 60\n    client-output-buffer-limit pubsub 32mb 8mb 60\n\n    # 客户端查询缓冲区累积新命令。 默认情况下，它们被限制为固定数量，以避免协议去同步（例如，由于客户端中的错误）会导致查询缓冲区中的未绑定内存使用。 # 但是，如果您有非常特殊的需求，例如巨大的multi / exec请求等，则可以在此处进行配置。\n    #\n    # client-query-buffer-limit 1gb\n\n    # 在Redis协议中，批量请求（即表示单个字符串的元素）通常限制为512 mb以上。 但是，您可以在此处更改此限制。\n    #\n    # proto-max-bulk-len 512mb\n\n    # Redis调用一个内部函数来执行许多后台任务，例如在超时时关闭客户端连接，清除从未请求的过期密钥等。\n    #\n    # 并非所有任务都以相同的频率执行，但是Redis根据指定的\"hz\"值检查要执行的任务。\n    #\n    # 默认情况下，\"hz\"设置为10。提高该值将在Redis空闲时使用更多的CPU，但是同时当有多个键同时到期时，它将使Redis的响应速度更快，并且可以使用 更精确。\n    #\n    # 范围在1到500之间，但是值通常不能超过100。 大多数用户应该使用默认值10，并且仅在要求非常低延迟的环境中才将其提高到100。\n    hz 10\n\n    # 通常，与连接的客户端数量成比例的HZ值很有用。 例如，这有助于避免每次后台任务调用处理过多的客户端，从而避免延迟尖峰。\n    #\n    # 由于默认的默认HZ值保守地设置为10，Redis提供并默认启用了使用自适应HZ值的能力，当有许多连接的客户端时，该值将暂时升高。\n    #\n    # 启用动态HZ时，实际配置的HZ将用作基准，但是一旦连接了更多客户端，实际将使用配置的HZ值的倍数。\n    # 这样，空闲实例将占用很少的CPU时间，而忙碌的实例将具有更高的响应速度。\n    dynamic-hz yes\n\n    # 当孩子重写AOF文件时，如果启用以下选项，则每生成32 MB的数据，文件就会进行同步处理。 为了将文件更多地提交到磁盘并避免大的延迟尖峰，这很有用。\n    aof-rewrite-incremental-fsync yes\n\n    # 当redis保存RDB文件时，如果启用以下选项，则每生成32 MB数据将对文件进行fsync处理。 为了将文件更多地提交到磁盘并避免大的延迟尖峰，这很有用。\n    rdb-save-incremental-fsync yes\n\n    # 可以调整Redis LFU逐出（请参阅maxmemory设置）。\n    # 但是，最好从默认设置开始，仅在研究了如何提高性能以及LFU键随时间的变化后才进行更改，可以通过OBJECT FREQ命令进行检查。\n    #\n    # Redis LFU实现中有两个可调参数：计数器对数因子和计数器衰减时间。 重要的是在更改两个参数之前先了解它们的含义。\n    #\n    # LFU计数器每个密钥只有8位，最大值是255，因此Redis使用具有对数行为的概率增量。 给定旧计数器的值，当访问一个键时，计数器以这种方式递增：\n    #\n    # 1. A random number R between 0 and 1 is extracted.\n    # 2. A probability P is calculated as 1/(old_value*lfu_log_factor+1).\n    # 3. The counter is incremented only if R < P.\n    #\n    # 默认的lfu-log-factor是10。这是一个表格，该表格显示频率计数器如何随着具有不同对数因子的不同访问次数而变化：\n    #\n    # +--------+------------+------------+------------+------------+------------+\n    # | factor | 100 hits   | 1000 hits  | 100K hits  | 1M hits    | 10M hits   |\n    # +--------+------------+------------+------------+------------+------------+\n    # | 0      | 104        | 255        | 255        | 255        | 255        |\n    # +--------+------------+------------+------------+------------+------------+\n    # | 1      | 18         | 49         | 255        | 255        | 255        |\n    # +--------+------------+------------+------------+------------+------------+\n    # | 10     | 10         | 18         | 142        | 255        | 255        |\n    # +--------+------------+------------+------------+------------+------------+\n    # | 100    | 8          | 11         | 49         | 143        | 255        |\n    # +--------+------------+------------+------------+------------+------------+\n    #\n    # 注意：上表是通过运行以下命令获得的：\n    #\n    #   redis-benchmark -n 1000000 incr foo\n    #   redis-cli object freq foo\n    #\n    # 注意2：计数器的初始值为5，以便使新对象有机会累积命中数。\n    #\n    # 计数器衰减时间是必须经过的时间（以分钟为单位），以便将密钥计数器除以2（如果值小于等于10，则递减）。\n    #\n    # lfu-decay-time的默认值为1。特殊值0表示每次碰巧扫描计数器都会使其衰减。\n    #\n    # lfu-log-factor 10\n    # lfu-decay-time 1\n\n    ########################## ACTIVE DEFRAGMENTATION(主动碎片整理) #######################\n    #\n    # 什么是主动碎片整理？\n    # -------------------------------\n    #\n    # 通过主动（在线）碎片整理，Redis服务器可以压缩内存中小量分配和释放数据之间剩余的空间，从而可以回收内存。\n    #\n    # 碎片是每个分配器（幸运的是，Jemalloc发生的情况）和某些工作负载都会发生的自然过程。\n    # 通常，需要重新启动服务器以减少碎片，或者至少清除所有数据并重新创建。\n    # 但是，由于Oran Agra为Redis 4.0实现了此功能，因此在服务器运行时，此过程可以在运行时以\"热\"方式进行。\n    #\n    # 基本上，当碎片超过一定级别时（请参阅下面的配置选项），Redis将开始通过利用某些特定的Jemalloc功能在连续的内存区域中创建值的新副本（\n    # 以了解分配是否导致碎片，并 将其分配到更好的位置），同时将释放数据的旧副本。\n    # 对于所有键，以增量方式重复此过程将导致碎片恢复到正常值。\n    #\n    # 重要事项：\n    #\n    # 1. 默认情况下，此功能是禁用的，并且仅当您编译Redis以使用我们随Redis的源代码提供的Jemalloc副本时才起作用。\n    #    这是Linux构建的默认设置。\n    #\n    # 2. 如果没有碎片问题，则无需启用此功能。\n    #\n    # 3. 一旦遇到碎片，您可以在需要时使用命令\"CONFIG SET activedefrag yes\"启用此功能。\n    #\n    # 配置参数能够微调碎片整理过程的行为。 如果您不确定它们的含义，最好不要更改默认值。\n\n    # 启用主动碎片整理\n    # activedefrag no\n\n    # 启动主动碎片整理的最小碎片浪费\n    # active-defrag-ignore-bytes 100mb\n\n    # 启动活动碎片整理的最小碎片百分比\n    # active-defrag-threshold-lower 10\n\n    # 我们最大程度地努力下的最大碎片百分比\n    # active-defrag-threshold-upper 100\n\n    # 在达到下限阈值时使用最小的CPU碎片整理工作\n    # active-defrag-cycle-min 1\n\n    # 在达到上限阈值时使用最大的精力进行碎片整理\n    # active-defrag-cycle-max 25\n\n    # 将在主字典扫描中处理的set / hash / zset / list字段的最大数量\n    # active-defrag-max-scan-fields 1000\n\n    # 默认情况下，将启用用于清除的Jemalloc后台线程\n    jemalloc-bg-thread yes\n\n    # 可以将Redis的不同线程和进程固定到系统中的特定CPU，以最大化服务器的性能。\n    # 这不仅可以在不同的CPU中固定不同的Redis线程，而且还可以确保将在同一主机上运行的多个Redis实例固定到不同的CPU。\n    #\n    # 通常，您可以使用\"taskset\"命令执行此操作，但是在Linux和FreeBSD中，也可以直接通过Redis配置进行此操作。\n    #\n    # 您可以固定服务器/ IO线程，生物线程，aof重写子进程和bgsave子进程。 指定cpu列表的语法与taskset命令相同：\n    #\n    # Set redis server/io threads to cpu affinity 0,2,4,6:\n    # server_cpulist 0-7:2\n    #\n    # Set bio threads to cpu affinity 1,3:\n    # bio_cpulist 1,3\n    #\n    # Set aof rewrite child process to cpu affinity 8,9,10,11:\n    # aof_rewrite_cpulist 8-11\n    #\n    # Set bgsave child process to cpu affinity 1,10,11\n    # bgsave_cpulist 1,10-11\n\nEOF\n```\n\n## 8.2 创建deployment文件\n```bash\ncat >> 1-deployment.yaml << \"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-deployment\n  labels:\n    app: redis\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: redis\n  template:\n    metadata:\n      labels:\n        app: redis\n    spec:\n      containers:\n      - name: redis\n        image: redis:6\n        ports:\n        - containerPort: 6379\n        command:\n            - \"sh\"\n            - \"-c\"\n            - \"redis-server /etc/redis.conf\"\n        volumeMounts:\n        - name: redis-config\n          mountPath: /etc/redis.conf\n          subPath: redis.conf\n      volumes:\n      - name: redis-config\n        configMap:\n          name: redis-config\n          items:\n          - key: redis.conf\n            path: redis.conf\n\nEOF\n```\n\n## 8.3 创建服务暴露\n```bash\ncat >> 2-service.yaml << \"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis\n  labels:\n    app: redis\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n      nodePort: 30003\n  type: NodePort\n  selector:\n    app: redis\n\nEOF\n```\n\n## 8.4 应用\n```bash\nkubectl apply  -f 0-configMap.yaml\nkubectl apply  -f 1-deployment.yaml\nkubectl apply  -f 2-service.yaml\n```\n\n# 九、部署kube-prometheus\n## 9.1 下载解压，修复监控\n```bash\nwget https://ghproxy.com/https://github.com/prometheus-operator/kube-prometheus/archive/refs/tags/v0.12.0.zip\nunzip v0.12.0.zip\ncd kube-prometheus-0.12.0/manifests\n#替换所有granfana版本为9.0.2\nsed -i 's|9.3.2|9.0.2|g' grafana-*\n```\n\n### 1.配置kubeControllermanagerService\n```bash\nmkdir repair-prometheus ;\ncat >> repair-prometheus/kubeControllermanagerService.yaml << \"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  labels: #定义这个service的标签，因为kubernetesControlPlane-serviceMonitorKubeControllerManager.yaml里面定义了这个标签\n      app.kubernetes.io/name: kube-controller-manager\n  name: kube-controller-manager\n  namespace: kube-system        #名称空间是kube-system\nspec:\n  selector:               #这个标签选择器表示我们要关联到kube-controller-manager-master的pod上\n    component: kube-controller-manager  #kubectl get pods kube-controller-manager-master -n kube-system --show-labels\n  ports:\n  - name: https-metrics         #service端口名称，这个名称要与ServiceMonitor的port名称一致\n    port: 10257\n    targetPort: 10257         # kube-controller-manager-master的pod的端口\nEOF\n```\n### 2.配置kubeSchedulerService\n```bash\ncat >> repair-prometheus/kubeSchedulerService.yaml << \"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  labels: #定义这个service的标签，因为kubernetesControlPlane-serviceMonitorKubeScheduler.yaml里面定义了这个标签\n      app.kubernetes.io/name: kube-scheduler\n  name: kube-scheduler\n  namespace: kube-system    #名称空间是kube-system\nspec:\n  selector:           #这个标签选择器表示我们要关联到kube-scheduler的pod上\n    component: kube-scheduler # kubectl get  pods kube-scheduler-master -n kube-system --show-labels\n  ports:\n  - name: https-metrics     #service端口名称，这个名称要与ServiceMonitor的port名称一致\n    port: 10259\n    targetPort: 10259     #kube-scheduler-master的端口\nEOF\n```\n### 3.修改绑定ip(可选,master节点都需执行)\n>还有一点，kube-scheduler-master和kube-controller-manager这2个pod启动的时候默认绑定的地址是127.0.0.1,所以普罗米修斯通过ip去访问\n>就会被拒绝，所以需要修改一下，我们知道这2个系统组件是是以静态pod的方式启动的，所以进入到master节点的静态pod目录\n>如果我们不指定静态pod目录时在哪里，可以通过kubelet查看\n\n```bash\n\n[root@master manifests]# systemctl  status kubelet.service | grep '\\-\\-config'\n           └─429488 /usr/bin/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf --config=/var/lib/kubelet/config.yaml --network-plugin=cni --pod-infra-container-image=registry.aliyuncs.com/google_containers/pause:3.5\n\n[root@master manifests]# grep static /var/lib/kubelet/config.yaml\nstaticPodPath: /etc/kubernetes/manifests\t\t\t\t\t\t#这就是静态pod的目录\n[root@master manifests]#\n\n[root@master ~]# cd /etc/kubernetes/manifests\n[root@master manifests]# grep 192 kube-scheduler.yaml \n    - --bind-address=192.168.118.131\t#修改127.0.0.1为主机的ip,修改为0.0.0.0也行\n        host: 192.168.118.131\t\t\t#其实保持默认127.0.0.1也行\n        host: 192.168.118.131\t\t\t#其实保持默认127.0.0.1也行\n[root@master manifests]# \n\n[root@master manifests]# vim kube-controller-manager.yaml \t\t\n    - --bind-address=192.168.118.131\t#修改127.0.0.1为主机的ip,修改为0.0.0.0也行\n        host: 192.168.118.131\t\t\t#其实保持默认127.0.0.1也行\n        host: 192.168.118.131\t\t\t#其实保持默认127.0.0.1也行\n[root@master manifests]# \n\n#发现修改后scheduler和controller-manager pod消失了，一直也没有重新创建pod\n#所以重启kubelet后pod都正常了\n[root@master manifests]# systemctl  restart kubelet.service\t\n\n```\n\n## 9.2 配置prometheus持久化\n```bash\nvim prometheus-prometheus.yaml\n```\n添加\n```yaml\nstorage: #这部分为持久化配置\n    volumeClaimTemplate:\n      spec:\n        storageClassName: nfs-retain\n        accessModes: [\"ReadWriteOnce\"]\n        resources:\n          requests:\n            storage: 100Gi\n```\n![](_v_images/20230225220608720_31631.png)\n\n## 9.3  存储时长配置为30天\n```bash\nvim prometheusOperator-deployment.yaml\n```\n添加\n```yaml\n- storage.tsdb.retention.time=30d # 在这添加time参数\n```\n![](_v_images/20230225220844419_31241.png)\n\n\n## 9.4 Grafana配置持久化\n### 1.建立grafana-pvc\n```yaml\ncat >> grafana-pvc.yaml << \"EOF\"\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n    name: grafana-pvc\n    namespace: monitoring\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 10Gi\n  storageClassName: nfs-retain\nEOF\n\n```\n### 2.修改grafana-deployment.yaml\n```bash\nvim grafana-deployment.yaml\n```\n把emptydir存储方式改为pvc方式：\n```yaml\n- name: grafana-storage\n        persistentVolumeClaim:\n          claimName: grafana-pvc\n```\n![](_v_images/20230225221220644_31675.png)\n\n## 9.5 创建服务暴露\n### 1.暴露grafana\n```bash\nvim grafana-service.yaml\n```\n添加\n```yaml\n\tnodePort: 30006\ntype: NodePort #Serive的类型，ClusterIP/NodePort/LoaderBalancer\n```\n![](_v_images/20230225223255518_4701.png)\n\n### 2.暴露Prometheus\n```bash\nvim prometheus-service.yaml\n```\n修改\n```yaml\nports:\n  - name: web\n    port: 9090\n    targetPort: web\n    nodePort: 30007\n  - name: reloader-web\n    port: 8080\n    targetPort: reloader-web\n    nodePort: 30008\n  type: NodePort\n\n```\n![](_v_images/20230225223423127_18660.png)\n\n### 3.暴露Alert Manager\n```bash\nvim alertmanager-service.yaml\n```\n修改\n```yaml\nports:\n  - name: web\n    port: 9093\n    targetPort: web\n    nodePort: 30009\n  - name: reloader-web\n    port: 8080\n    targetPort: reloader-web\n    nodePort: 30010\n  type: NodePort\n\n```\n![](_v_images/20230225223603943_14622.png)\n\n## 9.6 自定义DashboardPage文件JS\n\n修改`grafana-deployment.yaml`\n```bash\nvim grafana-deployment.yaml\n```\n把emptydir存储方式改为pvc方式：\n```yaml\n- name: dashboardpage-js-volume\n          mountPath: /usr/share/grafana/public/build/DashboardPage.53b203c85adb3a57b1ac.js\n          subPath: DashboardPage.53b203c85adb3a57b1ac.js\n\n\n- name: dashboardpage-js-volume\n        configMap:\n          name: grafana-dashboardpage-js-configmap\n          items:\n          - key: DashboardPage.53b203c85adb3a57b1ac.js\n            path: DashboardPage.53b203c85adb3a57b1ac.js\n```\n![](_v_images/20230226003837612_11533.png =693x)\n\n修改grafana.ini\n`vim grafana-config.yaml`\n```yaml\n    [security]\n    allow_embedding = true\n    [auth.anonymous]\n    enabled = true\n    [users]\n    default_theme = light\n```\n![](_v_images/20230314151316709_27596.png)\n\n\n\n## 9.7 安装\n上传DashboardPage附件：\n[DashboardPage.53b203c85adb3a57b1ac.js](_v_attachments/20230225224217873_1139/DashboardPage.53b203c85adb3a57b1ac.js)\n\n```bash\ncd ../..\nkubectl create ns monitoring\n#将附件DashboardPage.53b203c85adb3a57b1ac.js上传服务器\nkubectl create configmap -n monitoring grafana-dashboardpage-js-configmap --from-file=DashboardPage.53b203c85adb3a57b1ac.js\n\nkubectl apply --server-side -f kube-prometheus-0.12.0/manifests/setup\nkubectl wait \\\n\t--for condition=Established \\\n\t--all CustomResourceDefinition \\\n\t--namespace=monitoring\nkubectl apply -f kube-prometheus-0.12.0/manifests/\n\n\n#镜像下载\nctr -n k8s.io i pull k8s.dockerproxy.com/kube-state-metrics/kube-state-metrics:v2.7.0\nctr -n k8s.io i pull k8s.dockerproxy.com/prometheus-adapter/prometheus-adapter:v0.10.0\nctr -n k8s.io i tag k8s.dockerproxy.com/kube-state-metrics/kube-state-metrics:v2.7.0 registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.7.0\nctr -n k8s.io i tag k8s.dockerproxy.com/prometheus-adapter/prometheus-adapter:v0.10.0 registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.10.0\nctr -n k8s.io i rm k8s.dockerproxy.com/kube-state-metrics/kube-state-metrics:v2.7.0\nctr -n k8s.io i rm k8s.dockerproxy.com/prometheus-adapter/prometheus-adapter:v0.10.0\n```\n\n## 9.8 部署完毕后无法访问，删除网络策略\n```bash\nkubectl delete networkpolicy --all -n monitoring\n```\n\n\n## 9.9 访问\n```bash\n#Prometheus\n通过 http://174.1.0.98:30007/ 访问\n\n#Grafana\n通过 http://174.1.0.98:30006/ 访问并使用默认的 grafana 用户：密码 admin:admin\n\n#Alert Manager\n通过 http://174.1.0.98:30009/ 访问\n```\n## 9.10 导入模板，配置亮色主题\n\n模板：\n[pageinfo-1668405034945.json](_v_attachments/20230225224217873_1139/pageinfo-1668405034945.json)\n\n![](_v_images/20230313122509763_28393.png =1091x)\n![](_v_images/20230313122521689_31570.png =603x)\n![](_v_images/20230313122543495_21901.png =530x)\n![](_v_images/20230313122618215_12330.png =762x)\n\n\n# 十、era后端部署\n## 10.1 登陆数据库，创建era用户及库\n```sql\nuse mysql;\ncreate database era CHARACTER SET utf8mb4 COLLATE utf8mb4_bin;\ncreate user 'era'@'%' identified by '&V#^hjmp9%44G@';\ngrant all privileges on era.* to 'era'@'%';\nflush privileges;\n```\n\n导入附近sql模板：\n[era-prod.sql](_v_attachments/20230225224217873_1139/era-prod.sql)\n\n## 10.2 修改bootstrap.yml配置文件nacos地址\n`vim bootstrap.yml`\n\n```yaml\n# 开发环境配置\nserver:\n  # 服务器的HTTP端口，默认为8080\n  port: 8080\n  servlet:\n    # 应用的访问路径\n    context-path: /api/v1\nspring:\n  application:\n    name: era-admin\n  jackson:\n    time-zone: GMT+8\n    # 默认属性系列化策略：always、non_null、non_empty、non_absent、use_default..\n    default-property-inclusion: always\n    # date 类型以时间戳返回\n    serialization:\n      write-dates-as-timestamps: true\n      # 序列化返回空对象\n      FAIL_ON_EMPTY_BEANS: false\n  cloud:\n    nacos:\n      username: nacos\n      password: nacos\n      discovery:\n        # 服务注册地址\n        server-addr: nacos.default.svc.cluster.local:8848\n        namespace: ea2ee798-43db-4b50-8033-baf43599aea5\n\n        # server-addr: 10.36.160.102:8848\n        # namespace: dev\n      config:\n        server-addr: ${spring.cloud.nacos.discovery.server-addr}\n        namespace: ${spring.cloud.nacos.discovery.namespace}\n        file-extension: yml\n        #指定共享配置，且支持动态刷新\n        extension-configs:\n          - data-id: application.yml\n            refresh: true\n          - data-id: sys-config.yml\n            refresh: true\n          - data-id: kubeconfig.yml\n            refresh: true\n          - data-id: message.yml\n            refresh: true\n\n```\n\n## 10.3 修改nacos相关配置\n![](_v_images/20230227115633947_11263.png =827x)\n\n## 10.4 创建pvc\n```bash\nmkdir era-back;cd era-back\ncat >> 1-pvc.yaml << \"EOF\"\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: era-back-pvc\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 50Gi\n  storageClassName: nfs-retain\n\nEOF\n```\n\n## 10.5 创建deployment文件\n```bash\ncat >> 2-deployment.yaml << \"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: era-back\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: era-back\n  template:\n    metadata:\n      labels:\n        app: era-back\n    spec:\n      hostAliases:\n      #- ip: \"10.17.10.31\"\n      #  hostnames:\n      #  - \"mail.superfluidity.com.cn\"\n      - ip: \"200.0.1.90\"\n        hostnames:\n        - \"lb.cluster.local\"\n      containers:\n      - name: era-back\n        image: openjdk:11\n        imagePullPolicy: IfNotPresent\n        command:\n          - /bin/bash\n          - -c\n          - cd /usr/src/myapp && java -jar -Duser.timezone=GMT+08 era-admin.jar\n          #- sleep 99999\n        securityContext:\n          privileged: true\n        ports:\n        - name: web\n          containerPort: 8080\n          protocol: \"TCP\"\n        volumeMounts:\n          - mountPath: /usr/src/myapp\n            name: data\n      volumes:\n      - name: data\n        persistentVolumeClaim:\n          claimName: era-back-pvc\nEOF\n```\n\n## 10.6 创建服务暴露\n```bash\ncat >> 3-service.yaml << \"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: era-back-svc\n  labels:\n    app: era-back\nspec:\n  ports:\n    - name: web-port\n      port: 8080\n      protocol: TCP\n      targetPort: 8080\n      nodePort: 30011\n  type: NodePort\n  selector:\n    app: era-back\n\nEOF\n```\n\n## 10.7 应用\n```bash\nkubectl apply  -f 1-pvc.yaml\nkubectl apply  -f 2-deployment.yaml\nkubectl apply  -f 3-service.yaml\n```\n\n## 10.8 复制era-back.jar包及bootstrap.yml文件至pvc\n![](_v_images/20230227121102596_1385.png)\n![](_v_images/20230227120001444_24644.png)\n\n[era-admin.jar](_v_attachments/20230225224217873_1139/era-admin.jar)\n\n## 10.9 重启服务\n```bash\nkubectl delete -f 2-deployment.yaml\nkubectl apply -f 2-deployment.yaml\n```\n\n\n# 十一、era前端部署\n\n## 11.1 创建pvc\n```bash\nmkdir era-front;cd era-front\ncat >> 1-pvc.yaml << \"EOF\"\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: era-front-pvc\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 10Gi\n  storageClassName: nfs-retain\n\nEOF\n```\n\n## 11.2 创建deployment文件\n```bash\ncat >> 2-deployment.yaml << \"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: era-front\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: era-front\n  template:\n    metadata:\n      labels:\n        app: era-front\n    spec:\n      containers:\n      - name: era-front\n        image: nginx:1.23.1\n        imagePullPolicy: IfNotPresent\n        ports:\n        - name: web\n          containerPort: 80\n          protocol: \"TCP\"\n        volumeMounts:\n          - name: data\n            mountPath: /etc/nginx/conf.d\n            subPath: conf.d\n          - name: data\n            mountPath: /webs\n            subPath: webs\n      volumes:\n      - name: data\n        persistentVolumeClaim:\n          claimName: era-front-pvc\n\nEOF\n```\n\n## 11.3 创建服务暴露\n```bash\ncat >> 3-service.yaml << \"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: era-front-svc\n  labels:\n    app: era-front\nspec:\n  ports:\n    - name: web-port\n      port: 80\n      protocol: TCP\n      targetPort: 80\n      nodePort: 30012\n  type: NodePort\n  selector:\n    app: era-front\n\nEOF\n```\n\n## 11.4 应用\n```bash\nkubectl apply  -f 1-pvc.yaml\nkubectl apply  -f 2-deployment.yaml\nkubectl apply  -f 3-service.yaml\n```\n\n## 11.5 复制era-front.conf包及era-front前端文件至pvc\n![](_v_images/20230227121102596_1385.png)\n\n![](_v_images/20230313123535782_27993.png)\n\n附件：\n[era-front.conf](_v_attachments/20230225224217873_1139/era-front.conf)\n\n[test.tar.gz](_v_attachments/20230225224217873_1139/test.tar.gz)\n\n\n## 11.6 重启服务\n```bash\nkubectl delete -f 2-deployment.yaml\nkubectl apply -f 2-deployment.yaml\n```\n\n\n# 十二、era镜像服务部署\n\n## 12.1 创建pvc\n```bash\nmkdir era-images;cd era-images\ncat >> 1-pvc.yaml << \"EOF\"\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: era-images-pvc\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 500Gi\n  storageClassName: nfs-retain\n\nEOF\n```\n\n## 12.2 创建deployment文件\n```bash\ncat >> 2-deployment.yaml << \"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: era-images\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: era-images\n  template:\n    metadata:\n      labels:\n        app: era-images\n    spec:\n      containers:\n      - name: era-images\n        image: nginx:1.23.1\n        imagePullPolicy: IfNotPresent\n        ports:\n        - name: web\n          containerPort: 80\n          protocol: \"TCP\"\n        volumeMounts:\n          - name: data\n            mountPath: /etc/nginx/conf.d\n            subPath: conf.d\n          - name: data\n            mountPath: /images\n            subPath: images\n      volumes:\n      - name: data\n        persistentVolumeClaim:\n          claimName: era-images-pvc\n\nEOF\n```\n\n## 12.3 创建服务暴露\n```bash\ncat >> 3-service.yaml << \"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: era-images-svc\n  labels:\n    app: era-images\nspec:\n  ports:\n    - name: web-port\n      port: 80\n      protocol: TCP\n      targetPort: 80\n      nodePort: 30013\n  type: NodePort\n  selector:\n    app: era-images\n\nEOF\n```\n\n## 12.4 应用\n```bash\nkubectl apply  -f 1-pvc.yaml\nkubectl apply  -f 2-deployment.yaml\nkubectl apply  -f 3-service.yaml\n```\n\n## 12.5 复制era-images.conf包至pvc\n![](_v_images/20230227134218648_11795.png)\n![](_v_images/20230313123817260_29670.png)\n\n[era-images.conf](_v_attachments/20230225224217873_1139/era-images.conf)\n\n## 12.6 重启服务\n```bash\nkubectl delete -f 2-deployment.yaml\nkubectl apply -f 2-deployment.yaml\n```\n\n# 十三、(可选)监控系统部署\n## 13.1 数据创建相关库及用户\n```sql\ncreate database zabbix character set utf8mb4 collate utf8mb4_bin;\nuse mysql;\ncreate user 'zabbix'@'%' identified by '4GtJvRS%La76iB';\ngrant all privileges on zabbix.* to 'zabbix'@'%';\nFLUSH PRIVILEGES;\n```\n## 13.2 创建命名空间\n```bash\nmkdir zabbix;cd zabbix\ncat >> 0-namespace.yaml << \"EOF\"\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: zabbix\nEOF\n```\n\n## 13.3 创建pvc\n```bash\ncat >> 1-pvc.yaml << \"EOF\"\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: zabbix-pvc\n  namespace: zabbix\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 10Gi\n  storageClassName: nfs-retain\n\nEOF\n```\n\n## 13.4 部署\n```bash\ncat >> 2-zabbix-web-service.yaml << \"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zabbix-web-service\n  namespace: zabbix\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: zabbix-web-service\n  template:\n    metadata:\n      labels:\n        app: zabbix-web-service\n    spec:\n      containers:\n      - name: zabbix-web-service\n        image: zabbix/zabbix-web-service:ubuntu-6.0-latest\n        ports:\n        - containerPort: 10053\n        env:\n        - name: ZBX_ALLOWEDIP\n          value: \"::/0\"\n        securityContext:\n          capabilities:\n            add:\n            - SYS_ADMIN\n        volumeMounts:\n        - name: localtime\n          mountPath: /etc/localtime\n          readOnly: true\n        - name: zabbix-data\n          mountPath: /usr/share/fonts/truetype/dejavu/DejaVuSans.ttf\n          subPath: DejaVuSans.ttf\n      volumes:\n      - name: localtime\n        hostPath:\n          path: /etc/localtime\n      - name: zabbix-data\n        persistentVolumeClaim:\n          claimName: zabbix-pvc\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-web-service\n  namespace: zabbix\nspec:\n  selector:\n    app: zabbix-web-service\n  ports:\n  - name: zabbix-web-service\n    port: 10053\n    targetPort: 10053\n    nodePort: 30053\n  type: NodePort\n\nEOF\n```\n\n```bash\ncat >> 3-zabbix-server-mysql.yaml << \"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zabbix-server-mysql\n  namespace: zabbix\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: zabbix-server-mysql\n  template:\n    metadata:\n      labels:\n        app: zabbix-server-mysql\n    spec:\n      containers:\n      - name: zabbix-server-mysql\n        image: zabbix/zabbix-server-mysql:ubuntu-6.0-latest\n        ports:\n        - containerPort: 10051\n        env:\n        - name: DB_SERVER_HOST\n          value: \"mariadb.default.svc.cluster.local\"\n        - name: DB_SERVER_PORT\n          value: \"3306\"\n        - name: MYSQL_DATABASE\n          value: \"zabbix\"\n        - name: MYSQL_USER\n          value: \"zabbix\"\n        - name: MYSQL_PASSWORD\n          value: \"4GtJvRS%La76iB\"\n        - name: MYSQL_ROOT_PASSWORD\n          value: \"4y6Cu%946*!TXY\"\n        - name: ZBX_WEBSERVICEURL\n          value: \"http://zabbix-web-service.zabbix.svc.cluster.local:10053/report\"\n        - name: ZBX_JAVAGATEWAY_ENABLE\n          value: \"true\"\n        - name: ZBX_JAVAGATEWAY\n          value: \"zabbix-java-gateway.zabbix.svc.cluster.local:10052\"\n        - name: ZBX_STARTREPORTWRITERS\n          value: \"2\"\n        - name: ZBX_TIMEOUT\n          value: \"30\"\n        - name: ZBX_UNREACHABLEPERIOD\n          value: \"120\"\n        - name: ZBX_CACHESIZE\n          value: \"512M\"\n        - name: ZBX_HISTORYCACHESIZE\n          value: \"128M\"\n        - name: ZBX_HISTORYINDEXCACHESIZE\n          value: \"128M\"\n        - name: ZBX_TRENDCACHESIZE\n          value: \"128M\"\n        - name: ZBX_VALUECACHESIZE\n          value: \"256M\"\n        volumeMounts:\n        - name: zabbix-data\n          mountPath: /usr/lib/zabbix\n          subPath: zabbix-scripts\n        - name: localtime\n          mountPath: /etc/localtime\n          readOnly: true\n      - name: zabbix-agent\n        image: zabbix/zabbix-agent:ubuntu-6.0-latest\n        imagePullPolicy: IfNotPresent\n        env:\n        - name: ZBX_HOSTNAME\n          value: \"Zabbix server\"\n        - name: ZBX_SERVER_HOST\n          value: \"127.0.0.1\"\n        - name: ZBX_STARTAGENTS\n          value: \"3\"\n        - name: ZBX_UNSAFEUSERPARAMETERS\n          value: \"1\"\n        - name: ZBX_TIMEOUT\n          value: \"10\"\n        ports:\n        - containerPort: 10050\n          name: zabbix-agent\n          protocol: TCP\n      volumes:\n      - name: localtime\n        hostPath:\n          path: /etc/localtime\n      - name: zabbix-data\n        persistentVolumeClaim:\n          claimName: zabbix-pvc\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-server-mysql\n  namespace: zabbix\nspec:\n  selector:\n    app: zabbix-server-mysql\n  ports:\n  - name: zabbix-server\n    port: 10051\n    targetPort: 10051\n    nodePort: 30051\n  type: NodePort\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-server-agent\n  namespace: zabbix\nspec:\n  selector:\n    app: zabbix-server-mysql\n  ports:\n  - name: zabbix-agent\n    port: 10050\n    targetPort: 10050\n\nEOF\n```\n\n\n```bash\ncat >> 4-zabbix-web-nginx-mysql.yaml << \"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zabbix-web-nginx-mysql\n  namespace: zabbix\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: zabbix-web-nginx-mysql\n  template:\n    metadata:\n      labels:\n        app: zabbix-web-nginx-mysql\n    spec:\n      containers:\n      - name: zabbix-web-nginx-mysql\n        image: zabbix/zabbix-web-nginx-mysql:ubuntu-6.0-latest\n        ports:\n        - containerPort: 8443\n        - containerPort: 8080\n        env:\n        - name: DB_SERVER_HOST\n          value: \"mariadb.default.svc.cluster.local\"\n        - name: DB_SERVER_PORT\n          value: \"3306\"\n        - name: MYSQL_DATABASE\n          value: \"zabbix\"\n        - name: MYSQL_USER\n          value: \"zabbix\"\n        - name: MYSQL_PASSWORD\n          value: \"4GtJvRS%La76iB\"\n        - name: MYSQL_ROOT_PASSWORD\n          value: \"4y6Cu%946*!TXY\"\n        - name: ZBX_SERVER_HOST\n          value: \"zabbix-server-mysql.zabbix.svc.cluster.local\"\n        - name: PHP_TZ\n          value: \"Asia/Shanghai\"\n        volumeMounts:\n        - name: localtime\n          mountPath: /etc/localtime\n          readOnly: true\n        - name: zabbix-data\n          mountPath: /usr/share/zabbix/assets/fonts/DejaVuSans.ttf\n          subPath: DejaVuSans.ttf\n      volumes:\n      - name: localtime\n        hostPath:\n          path: /etc/localtime\n      - name: zabbix-data\n        persistentVolumeClaim:\n          claimName: zabbix-pvc\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-web-nginx-mysql\n  namespace: zabbix\nspec:\n  selector:\n    app: zabbix-web-nginx-mysql\n  ports:\n  - name: zabbix-front\n    port: 8080\n    targetPort: 8080\n    nodePort: 30080\n  type: NodePort\n\nEOF\n```\n\n```bash\ncat >> 5-zabbix-java-gateway.yaml << \"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zabbix-java-gateway\n  namespace: zabbix\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: zabbix-java-gateway\n  template:\n    metadata:\n      labels:\n        app: zabbix-java-gateway\n    spec:\n      containers:\n      - name: zabbix-java-gateway\n        image: zabbix/zabbix-java-gateway:ubuntu-6.0-latest\n        ports:\n        - containerPort: 10052\n        volumeMounts:\n        - name: localtime\n          mountPath: /etc/localtime\n          readOnly: true\n      volumes:\n      - name: localtime\n        hostPath:\n          path: /etc/localtime\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-java-gateway\n  namespace: zabbix\nspec:\n  selector:\n    app: zabbix-java-gateway\n  ports:\n  - name: zabbix-java-gateway\n    port: 10052\n    targetPort: 10052\n    nodePort: 30052\n  type: NodePort\n\nEOF\n```\n## 13.5 应用\n```bash\nkubectl apply  -f 0-namespace.yaml\nkubectl apply  -f 1-pvc.yaml\nkubectl apply  -f 2-zabbix-web-service.yaml\nkubectl apply  -f 3-zabbix-server-mysql.yaml\nkubectl apply  -f 4-zabbix-web-nginx-mysql.yaml\nkubectl apply  -f 5-zabbix-java-gateway.yaml\n```\n## 13.6  复制字体进pvc\n![](_v_images/20230303111056501_27202.png)\n\n附件：\n[DejaVuSans.ttf](_v_attachments/20230225224217873_1139/DejaVuSans.ttf)\n\n## 13.7 各物理节点部署agent\n```bash\nyum -y remove epel-release zabbix-release\ncat > /etc/yum.repos.d/zabbix.repo  << 'EOF'\n[zabbix]\nname=Zabbix Official Repository - $basearch\nbaseurl=http://mirrors.cloud.tencent.com/zabbix/zabbix/6.0/rhel/7/$basearch/\nenabled=1\ngpgcheck=0\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX-A14FE591\n\n[zabbix-debuginfo]\nname=Zabbix Official Repository debuginfo - $basearch\nbaseurl=http://mirrors.cloud.tencent.com/zabbix/zabbix/6.0/rhel/7/$basearch/debuginfo/\nenabled=0\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX-A14FE591\ngpgcheck=1\n\n[zabbix-non-supported]\nname=Zabbix Official Repository non-supported - $basearch\nbaseurl=http://mirrors.cloud.tencent.com/zabbix/non-supported/rhel/7/$basearch/\nenabled=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX\ngpgcheck=0\nEOF\n\ncat > /etc/yum.repos.d/zabbix-agent2-plugins.repo << 'EOF'\n[zabbix-agent2-plugins]\nname=Zabbix Official Repository (Agent2 Plugins) - $basearch\nbaseurl=http://mirrors.cloud.tencent.com/zabbix/zabbix-agent2-plugins/1/rhel/7/$basearch/\nenabled=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX\ngpgcheck=0\nEOF\n\nyum -y install zabbix-agent2\n\n#替换参数，ServerActive指向zabbix server地址200.0.1.90:30051\nsed -i 's@^Server=127.0.0.1@#Server=127.0.0.1@' /etc/zabbix/zabbix_agent2.conf\nsed -i 's@^ServerActive=127.0.0.1@ServerActive=200.0.1.90:30051@' /etc/zabbix/zabbix_agent2.conf\nsed -i 's@^Hostname=Zabbix server@#Hostname=Zabbix server@' /etc/zabbix/zabbix_agent2.conf\nsed -i 's@^# HostnameItem=system.hostname@# HostnameItem=system.hostname\\n\\nHostnameItem=system.hostname@' /etc/zabbix/zabbix_agent2.conf\nsed -i 's@^# HostMetadataItem=@# HostMetadataItem=\\n\\nHostMetadataItem=system.uname@' /etc/zabbix/zabbix_agent2.conf\nsed -i 's@^# UnsafeUserParameters=0@# UnsafeUserParameters=0\\n\\nUnsafeUserParameters=1@' /etc/zabbix/zabbix_agent2.conf\n\nsystemctl restart zabbix-agent2\nsystemctl enable zabbix-agent2\n\ntail -f /var/log/zabbix/zabbix_agent2.log\n```\n## 13.8 设置zabbix自动发现\n![](_v_images/20230303115029819_18034.png =1216x)\n\n## 13.9 修复默认\n![](_v_images/20230305233258302_30922.png =853x)","source":"_posts/work/2.ERA在线部署.md","raw":"---\ntitle: ERA 在线部署\ndate: 2023-12-28\ncategories: 工作\n---\n\n\n# 系统初始化\n## 1.安装Debian11初始化文档初始化\n```bash\n#必装\napt install -y conntrack ipset socat ebtables ipvsadm\napt install -y qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils\n```\n# 一、k8s集群部署\n\n## 1.安装kubekey\n```bash\nexport KKZONE=cn\nwget https://github.com/kubesphere/kubekey/releases/download/v3.0.13/kubekey-v3.0.13-linux-amd64.tar.gz\ntar -xf kubekey-v3.0.13-linux-amd64.tar.gz\nmv kk /usr/local/bin/\n\n#查看支持k8s版本\nkk version --show-supported-k8s\n```\n\n## 2.编辑配置文件\n>参考：https://github.com/kubesphere/kubekey/blob/master/README_zh-CN.md\n\n修改对应IP账号密码\n`config-v1.24.7-online.yaml`\n```yaml\n\napiVersion: kubekey.kubesphere.io/v1alpha2\nkind: Cluster\nmetadata:\n  name: k8s-jy\nspec:\n  hosts:\n  - {name: cn098, address: 200.0.0.98, internalAddress: 200.0.0.98, user: root, password: \"ycsc_2023\"}\n  - {name: cn099, address: 200.0.0.99, internalAddress: 200.0.0.99, user: root, password: \"ycsc_2023\"}\n  - {name: cn100, address: 200.0.0.100, internalAddress: 200.0.0.100, user: root, password: \"ycsc_2023\"}\n  - {name: gpu002, address: 200.0.241.2, internalAddress: 200.0.241.2, user: root, password: \"ycsc_2023\"}\n  roleGroups:\n    etcd:\n    - cn098\n    - cn099\n    - cn100\n    control-plane:\n    - cn098\n    - cn099\n    - cn100\n    worker:\n    - cn098\n    - cn099\n    - cn100\n    - gpu002\n  controlPlaneEndpoint:\n    ## Internal loadbalancer for apiservers\n    internalLoadbalancer: kube-vip\n\n    domain: lb.cluster.local\n    address: \"200.0.1.90\"\n    port: 6443\n  kubernetes:\n    version: v1.24.7\n    clusterName: cluster.local\n    autoRenewCerts: true\n    containerManager: containerd\n  etcd:\n    type: kubeadm\n  network:\n    plugin: calico\n    kubePodsCIDR: 10.233.64.0/18\n    kubeServiceCIDR: 10.233.0.0/18\n    ## multus support. https://github.com/k8snetworkplumbingwg/multus-cni\n    multusCNI:\n      enabled: false\n  registry:\n    privateRegistry: \"\"\n    namespaceOverride: \"\"\n    registryMirrors: []\n    insecureRegistries: []\n  addons: []\n\n```\n\n## 4.部署\n```bash\nkk create cluster -f config-v1.24.7-online.yaml\n```\n\n## 5.安装 bash-completion(可选)\n```bash\n# 安装 bash-completion\napt -y install bash-completion\n\n# 将 completion 脚本添加到你的 ~/.bashrc 文件\necho 'source <(kubectl completion bash)' >>~/.bashrc\n\n# 将 completion 脚本添加到 /etc/bash_completion.d 目录\nkubectl completion bash >/etc/bash_completion.d/kubectl\n\n#重启生效\n```\n\n## 7. 对接NFS存储(可选)\n### 7.1 格式化硬盘，并且设置共享\n```bash\n\n#格式化硬盘为xfs格式\nmkfs.xfs /dev/sdb\nmkdir /opt/nfs-data\n```\n\nfstab中设置自动挂载\n```\n#/dev/sdb\nUUID=7a8c2445-7103-4591-9b73-2db3757a8e6e\t/opt/nfs-data\txfs\tdefaults\t0 0\n```\n挂载确认格式、uuid、及挂载位置\n```\nmount -a\nlsblk -f\n```\n\n### 7.2 配置NFS服务器，允许Kubernetes节点访问NFS共享\n将以下内容添加到/etc/exports文件中：\n```bash\n/opt/nfs-data *(rw,sync,no_root_squash,no_subtree_check)\n```\n重启NFS服务使配置生效：\n```bash\n#创建相关文件夹\nmkdir -p /opt/nfs-data/k8s-sc/retain\nmkdir -p /opt/nfs-data/k8s-sc/delete\n\n#启动服务，设置自启\nsystemctl restart nfs-server\nsystemctl enable nfs-server\n\n#在各节点上运行测试通信\nshowmount -e cn098\n```\n\n### 7.3 k8s安装nfs存储类插件\n```bash\nmkdir nfs ; cd nfs\ngit clone https://github.com/kubernetes-csi/csi-driver-nfs.git\n\ncd csi-driver-nfs\n\n#相关镜像代理，替换tag下载（可选）\n\nctr -n k8s.io i pull k8s.dockerproxy.com/sig-storage/csi-node-driver-registrar:v2.9.0\nctr -n k8s.io i pull k8s.dockerproxy.com/sig-storage/csi-provisioner:v3.6.1\nctr -n k8s.io i pull k8s.dockerproxy.com/sig-storage/csi-snapshotter:v6.3.1\nctr -n k8s.io i pull k8s.dockerproxy.com/sig-storage/livenessprobe:v2.11.0\nctr -n k8s.io i pull k8s.dockerproxy.com/sig-storage/nfsplugin:v4.5.0\nctr -n k8s.io i pull k8s.dockerproxy.com/sig-storage/snapshot-controller:v6.3.1\n\nctr -n k8s.io i tag k8s.dockerproxy.com/sig-storage/csi-node-driver-registrar:v2.9.0 registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.9.0\nctr -n k8s.io i tag k8s.dockerproxy.com/sig-storage/csi-provisioner:v3.6.1 registry.k8s.io/sig-storage/csi-provisioner:v3.6.1\nctr -n k8s.io i tag k8s.dockerproxy.com/sig-storage/csi-snapshotter:v6.3.1 registry.k8s.io/sig-storage/csi-snapshotter:v6.3.1\nctr -n k8s.io i tag k8s.dockerproxy.com/sig-storage/livenessprobe:v2.11.0 registry.k8s.io/sig-storage/livenessprobe:v2.11.0\nctr -n k8s.io i tag k8s.dockerproxy.com/sig-storage/nfsplugin:v4.5.0 registry.k8s.io/sig-storage/nfsplugin:v4.5.0\nctr -n k8s.io i tag k8s.dockerproxy.com/sig-storage/snapshot-controller:v6.3.1 registry.k8s.io/sig-storage/snapshot-controller:v6.3.1\n\nctr -n k8s.io i rm k8s.dockerproxy.com/sig-storage/csi-node-driver-registrar:v2.9.0\nctr -n k8s.io i rm k8s.dockerproxy.com/sig-storage/csi-provisioner:v3.6.1\nctr -n k8s.io i rm k8s.dockerproxy.com/sig-storage/csi-snapshotter:v6.3.1\nctr -n k8s.io i rm k8s.dockerproxy.com/sig-storage/livenessprobe:v2.11.0\nctr -n k8s.io i rm k8s.dockerproxy.com/sig-storage/nfsplugin:v4.5.0\nctr -n k8s.io i rm k8s.dockerproxy.com/sig-storage/snapshot-controller:v6.3.1\n\n./deploy/install-driver.sh v4.5.0 local\n\ncd ../..\n\n```\n\n### 7.4 创建存储类\n```bash\nvim nfs-sc-delete.yaml\n```\n```yaml\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: nfs-delete\nprovisioner: nfs.csi.k8s.io\nparameters:\n  server: 200.0.0.98\n  share: /opt/nfs-data/k8s-sc/delete\n  # csi.storage.k8s.io/provisioner-secret is only needed for providing mountOptions in DeleteVolume\n  # csi.storage.k8s.io/provisioner-secret-name: \"mount-options\"\n  # csi.storage.k8s.io/provisioner-secret-namespace: \"default\"\nreclaimPolicy: Delete\nallowVolumeExpansion: True\nvolumeBindingMode: Immediate\n#mountOptions:\n#  - nfsvers=4.1\n\n```\n\n```bash\nvim nfs-sc-retain.yaml\n```\n```yaml\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: nfs-retain\nprovisioner: nfs.csi.k8s.io\nparameters:\n  server: 200.0.0.98\n  share: /opt/nfs-data/k8s-sc/retain\n  # csi.storage.k8s.io/provisioner-secret is only needed for providing mountOptions in DeleteVolume\n  # csi.storage.k8s.io/provisioner-secret-name: \"mount-options\"\n  # csi.storage.k8s.io/provisioner-secret-namespace: \"default\"\nreclaimPolicy: Retain\nallowVolumeExpansion: True\nvolumeBindingMode: Immediate\n#mountOptions:\n#  - nfsvers=4.1\n```\n\n### 7.5 使用kubectl apply命令创建存储类：\n```bash\nkubectl apply -f nfs-sc-delete.yaml\nkubectl apply -f nfs-sc-retain.yaml\n\nkubectl get sc\n```\n\n### 7.6 设置默认存储类：\n```bash\n#标记\nkubectl patch storageclass nfs-retain -p '{\"metadata\": {\"annotations\":{\"storageclass.kubernetes.io/is-default-class\":\"true\"}}}'\n\n#取消\nkubectl patch storageclass nfs-retain -p '{\"metadata\": {\"annotations\":{\"storageclass.kubernetes.io/is-default-class\":\"false\"}}}'\n\nkubectl get storageclass\n\n```\n\n# 二、KubeVirt部署\n> 目前era限制版本为0.56.0版本\n\n## 2.1 验证服务器是否支持虚拟化\n```bash\nvirt-host-validate qemu\n\n\n  QEMU: Checking for hardware virtualization                                 : PASS\n  QEMU: Checking if device /dev/kvm exists                                   : PASS\n  QEMU: Checking if device /dev/kvm is accessible                            : PASS\n  QEMU: Checking if device /dev/vhost-net exists                             : PASS\n  QEMU: Checking if device /dev/net/tun exists                               : PASS\n  . . .\n\n\n#若未全部pass，请检查BIOS中开启VT-d和虚拟化支持\n\n```\n\n## 2.2 安装\n```bash\nmkdir kubevirt ; cd kubevirt\n# Deploy the KubeVirt operator\nwget https://github.com/kubevirt/kubevirt/releases/download/v0.56.0/kubevirt-operator.yaml -O 1-kubevirt-operator.yaml\nkubectl apply -f 1-kubevirt-operator.yaml\n# Create the KubeVirt CR (instance deployment request) which triggers the actual installation\nwget https://github.com/kubevirt/kubevirt/releases/download/v0.56.0/kubevirt-cr.yaml -O 2-kubevirt-cr.yaml\nkubectl apply -f 2-kubevirt-cr.yaml\n# wait until all KubeVirt components are up\nkubectl -n kubevirt wait kv kubevirt --for condition=Available\n```\n\n## 2.3 开启相关特性\n```bash\n\ncat > 3-kubevirt-enable-feature-gate.yaml << 'EOF'\n---\napiVersion: kubevirt.io/v1\nkind: KubeVirt\nmetadata:\n  name: kubevirt\n  namespace: kubevirt\nspec:\n  configuration:\n    developerConfiguration:\n      featureGates:\n        - LiveMigration\n        - DataVolumes\n        - ExpandDisks\nEOF\n\nkubectl apply -f 3-kubevirt-enable-feature-gate.yaml\n```\n\n## 2.4 virtctl客户端工具安装\n```bash\nwget https://github.com/kubevirt/kubevirt/releases/download/v0.56.0/virtctl-v0.56.0-linux-amd64 -O /usr/local/bin/virtctl\nchmod +x /usr/local/bin/virtctl\n```\n\n## 2.5 卸载(可选)\n```bash\nkubectl delete -n kubevirt kubevirt kubevirt --wait=true # --wait=true should anyway be default\nkubectl delete apiservices v1.subresources.kubevirt.io # this needs to be deleted to avoid stuck terminating namespaces\nkubectl delete mutatingwebhookconfigurations virt-api-mutator # not blocking but would be left over\nkubectl delete validatingwebhookconfigurations virt-operator-validator # not blocking but would be left over\nkubectl delete validatingwebhookconfigurations virt-api-validator # not blocking but would be left over\nkubectl patch crd/kubevirts.kubevirt.io -p '{\"metadata\":{\"finalizers\":[]}}' --type=merge\nkubectl delete -f 1-kubevirt-operator.yaml --wait=false\n```\n\n# 三、CDI部署\n## 3.1 安装 CDI\n> 目前era限制版本为1.52.0版本\n\n```bash\nmkdir cdi ; cd cdi\nwget https://github.com/kubevirt/containerized-data-importer/releases/download/v1.52.0/cdi-operator.yaml -O 1-cdi-operator.yaml\nkubectl apply -f 1-cdi-operator.yaml\nwget https://github.com/kubevirt/containerized-data-importer/releases/download/v1.52.0/cdi-cr.yaml -O 2-cdi-cr.yaml\nkubectl apply -f 2-cdi-cr.yaml\n```\n\n## 3.2 服务暴露\n```bash\ncat > 3-expose-cdi-uploadproxy.yaml << 'EOF'\napiVersion: v1\nkind: Service\nmetadata:\n  name: cdi-uploadproxy-nodeport\n  namespace: cdi\n  labels:\n    cdi.kubevirt.io: \"cdi-uploadproxy\"\nspec:\n  type: NodePort\n  ports:\n    - port: 443\n      targetPort: 8443\n      nodePort: 31001\n      protocol: TCP\n  selector:\n    cdi.kubevirt.io: cdi-uploadproxy\nEOF\n\nkubectl apply -f 3-expose-cdi-uploadproxy.yaml\n```\n\n\n# 四、GPU插件支持\nhttps://github.com/NVIDIA/kubevirt-gpu-device-plugin/\n\n\n## 4.1 安装\n```bash\ncd kubevirt\nmkdir gpu ; cd gpu\nwget https://github.com/NVIDIA/kubevirt-gpu-device-plugin/archive/refs/tags/v1.2.4.tar.gz\ntar -xf v1.2.4.tar.gz\ncp kubevirt-gpu-device-plugin-1.2.4/manifests/nvidia-kubevirt-gpu-device-plugin.yaml 0-vidia-kubevirt-gpu-device-plugin.yaml\nkubectl apply -f 0-vidia-kubevirt-gpu-device-plugin.yaml\n\n#使用以下命令确定 GPU 的供应商 ID 和设备 ID\nlspci -nn | grep -i nvidia\n```\n\n## 4.2 直通模式\n### 1. 在KVM主机上启用IOMMU和黑名单新驱动程序\n```bash\n$ vim /etc/default/grub\n# line 6: add (if AMD CPU, add [amd_iommu=on])\nGRUB_TIMEOUT=5\nGRUB_DISTRIBUTOR=\"$(sed 's, release .*$,,g' /etc/system-release)\"\nGRUB_DEFAULT=saved\nGRUB_DISABLE_SUBMENU=true\nGRUB_TERMINAL_OUTPUT=\"console\"\nGRUB_CMDLINE_LINUX=\"rd.lvm.lv=centos/root rd.lvm.lv=centos/swap rhgb intel_iommu=on quiet iommu=pt modprobe.blacklist=nouveau\"\nGRUB_DISABLE_RECOVERY=\"true\"\n```\n**将“intel_iommu=on modprobe.blacklist=nouveau”附加到“GRUB_CMDLINE_LINUX\"**\n```bash\ngrub2-mkconfig -o /boot/grub2/grub.cfg\ngrub2-mkconfig -o /boot/efi/EFI/centos/grub.cfg\nreboot\n```\n重新启动后，使用以下命令验证是否启用了 IOMMU\n```bash\ndmesg | grep -E \"DMAR|IOMMU\"\n#验证新版是否已禁用\ndmesg | grep -i nouveau\n```\n\n### 2. 启用 vfio-pci 内核模块\n使用以下命令确定 GPU 的供应商 ID 和设备 ID\n```bash\nlspci -nn | grep -i nvidia\n```\n在下面的示例中，供应商 ID 为 10de，设备 ID 为 1b38\n```bash\n$ lspci -nn | grep -i nvidia\n04:00.0 3D controller [0302]: NVIDIA Corporation GP102GL [Tesla P40] [10de:1b38] (rev a1)\n```\n更新 VFIO 配置\n```bash\necho \"options vfio-pci ids=vendor-ID:device-ID\" > /etc/modprobe.d/vfio.conf\n```\n考虑到供应商 ID 为 10de，设备 ID 为 1b38，命令将如下所示\n```bash\necho \"options vfio-pci ids=10de:20f1,10de:1b38\" > /etc/modprobe.d/vfio.conf\n\n```\n更新配置以在重新加载后加载 VFIO-PCI 模块\n```bash\necho 'vfio-pci' > /etc/modules-load.d/vfio-pci.conf\nreboot\n```\n验证是否已为 GPU 加载 VFIO-PCI 驱动程序\n```bash\nlspci -nnk -d 10de:\n```\n\n下面的输出显示“正在使用的内核驱动程序”是“vfio-pci”\n\n```bash\n[root@gpu002 ~]# lspci -nnk -d 10de:\n34:00.0 3D controller [0302]: NVIDIA Corporation Device [10de:20b5] (rev a1)\n\tSubsystem: NVIDIA Corporation Device [10de:1533]\n\tKernel driver in use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n35:00.0 3D controller [0302]: NVIDIA Corporation Device [10de:20b5] (rev a1)\n\tSubsystem: NVIDIA Corporation Device [10de:1533]\n\tKernel driver in use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n36:00.0 3D controller [0302]: NVIDIA Corporation Device [10de:20b5] (rev a1)\n\tSubsystem: NVIDIA Corporation Device [10de:1533]\n\tKernel driver in use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n37:00.0 3D controller [0302]: NVIDIA Corporation Device [10de:20b5] (rev a1)\n\tSubsystem: NVIDIA Corporation Device [10de:1533]\n\tKernel driver in use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n9b:00.0 3D controller [0302]: NVIDIA Corporation Device [10de:20b5] (rev a1)\n\tSubsystem: NVIDIA Corporation Device [10de:1533]\n\tKernel driver in use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n9c:00.0 3D controller [0302]: NVIDIA Corporation Device [10de:20b5] (rev a1)\n\tSubsystem: NVIDIA Corporation Device [10de:1533]\n\tKernel driver in use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n9d:00.0 3D controller [0302]: NVIDIA Corporation Device [10de:20b5] (rev a1)\n\tSubsystem: NVIDIA Corporation Device [10de:1533]\n\tKernel driver in use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n9e:00.0 3D controller [0302]: NVIDIA Corporation Device [10de:20b5] (rev a1)\n\tSubsystem: NVIDIA Corporation Device [10de:1533]\n\tKernel driver in use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n\n```\n\n### 3. 校验节点gpu支持情况\n```bash\nyum -y install jq\nkubectl get node gpu002 -o json | jq '.status.allocatable'\n\n{\n  \"cpu\": \"63600m\",\n  \"devices.kubevirt.io/kvm\": \"1k\",\n  \"devices.kubevirt.io/tun\": \"1k\",\n  \"devices.kubevirt.io/vhost-net\": \"1k\",\n  \"ephemeral-storage\": \"434034624Ki\",\n  \"hugepages-1Gi\": \"0\",\n  \"hugepages-2Mi\": \"0\",\n  \"memory\": \"1027098306574\",\n  \"nvidia.com/GA100_A100_PCIE_80GB\": \"8\",\n  \"pods\": \"110\"\n}\n\n```\n\n\n## 4.3.声明GPU,Kubevirt 加入白名单\n```bash\n#显卡名称查看\nkubectl logs -f -n kube-system nvidia-kubevirt-gpu-dp-daemonset-*\nkubectl describe nodes | grep nvidia.com\n\ncp kubevirt-gpu-device-plugin-1.2.0/examples/kubevirt-featuregate-cm.yaml 1-kubevirt-featuregate-cm.yaml\n\nvim 1-kubevirt-featuregate-cm.yaml\n```\n修改设备相关对应关系：\n```yaml\napiVersion: kubevirt.io/v1alpha3\nkind: KubeVirt\nmetadata:\n  name: kubevirt\n  namespace: kubevirt\nspec:\n  imagePullPolicy: IfNotPresent\n  certificateRotateStrategy: {}\n  configuration:\n    permittedHostDevices:\n       pciHostDevices:\n       # whitelist the permitted devices here\n       - pciVendorSelector: \"10DE:20B5\"\n         resourceName: \"nvidia.com/GA100_A100_PCIE_80GB\"\n         externalResourceProvider: true\n       mediatedDevices:\n       - mdevNameSelector: \"GRID A100-1Q\"\n         resourceName: \"nvidia.com/GRID_A100-1Q\"\n    imagePullPolicy: IfNotPresent\n    developerConfiguration:\n      featureGates:\n        - GPU\n\n```\n应用：\n```bash\nkubectl apply -f 1-kubevirt-featuregate-cm.yaml\n```\n注意不可删除，可apply，删除会删除整个kubevirt\n\n## 4.5 创建gpu虚机测试\n`vim test-gpu.yaml`\n```yaml\napiVersion: kubevirt.io/v1\nkind: VirtualMachine\nmetadata:\n  name: testvm\nspec:\n  running: false\n  template:\n    metadata:\n      labels:\n        kubevirt.io/size: small\n        kubevirt.io/domain: testvm\n    spec:\n      domain:\n        devices:\n          disks:\n            - name: containerdisk\n              disk:\n                bus: virtio\n            - name: cloudinitdisk\n              disk:\n                bus: virtio\n          gpus:\n            - deviceName: nvidia.com/GV100GL_TESLA_V100_PCIE_16GB\n              name: gpu1\n\n          interfaces:\n          - name: default\n            masquerade: {}\n        resources:\n          requests:\n            memory: 64M\n      networks:\n      - name: default\n        pod: {}\n      volumes:\n        - name: containerdisk\n          containerDisk:\n            image: quay.io/kubevirt/cirros-container-disk-demo\n        - name: cloudinitdisk\n          cloudInitNoCloud:\n            userDataBase64: SGkuXG4=\n\n```\n启动\n```bash\nkubectl apply -f test-gpu.yaml\nkubectl get vm\nvirtctl start testvm\nvirtctl console testvm\n#退出console\nctrl+]\n```\n\n\n# 五、MariaDB部署\n## 5.1 创建pvc\n```bash\nmkdir mariadb ; cd mariadb\ncat >> 0-pvc.yaml << \"EOF\"\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: mariadb-data\nspec:\n  accessModes:\n  - ReadWriteMany\n  resources:\n    requests:\n      storage: 100Gi\n  storageClassName: nfs-retain\n\nEOF\n```\n\n## 5.2 创建配置文件\n```bash\ncat >> 1-configMap.yaml << \"EOF\"\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: mariadb-config\ndata:\n  my.cnf: |\n    [mysqld]\n\tdatadir = /var/lib/mysql\n\tsocket = /var/run/mysqld/mysqld.sock\n\tpid-file = /var/run/mysqld/mysqld.pid\n\n\t#user=mysql\n\n\tcharacter-set-server=utf8mb4\n\tcollation-server=utf8mb4_bin\n\n\tdefault-time-zone = '+8:00'\n\n\t#server-id\n\tserver_id=1\n\n\t#禁止名称解析\n\tskip_name_resolve=ON\n\n\t#不区分大小写\n\tlower_case_table_names = 1\n\n\t#最大连接数，当max_connections设置太小时（默认151），MySQL可能会报错Too many connections。\n\t#当max_connections设置太大时（1000以上），>操作系统可能忙于线程间的切换而失去响应。\n\t#每个连接都会消耗一定内存，最大连接数占上限连接数（show global status like 'Max_used_connections';）的85%左右，\n\t#如果发现比例在10%以下，MySQL服务器连接上线就设置得过高了。\n\t#Max_used_connections / max_connections = 0.85\n\tmax_connections = 2048\n\n\t#指mysql服务器端和客户端在一次传送数据包的过程当中最大允许的数据包大小。\n\t#max_allowed_packet 最大值是1G(1073741824)，如果设置超过1G，>查看最终生效结果也只有1G。\n\tmax_allowed_packet = 1G\n\n\t#当客户端断开之后，服务器处理此客户的线程将会缓存起来以响应下一个客户而不是销毁(前提是缓存数未达上限)\n\t#即可以重新利用保存在缓存中线程的数量，当断开连接时如果缓存中还有空间，那么客户端的线程将被放到缓存中，\n\t#如果线程重新被请求，那么请求>将从缓存中读取，\n\t#如果缓存中是空的或者是新的请求，那么这个线程将被重新创建，如果有很多新的线程，增加这个值可以改善系统性能。\n\t#根据并发连接数进行配置，这里假设并发连接数为 1000。\n\tthread_cache_size = 64\n\n\t#物理内存大小的70%-80%,如果服务器上只运行MySQL，则可以将此值增加到90%，这里假设服务器内存为 8GB。\n\tinnodb_buffer_pool_size = 6G\n\n\t# 增加 innodb_log_buffer_size，提高写入性能。\n\tinnodb_log_buffer_size = 16M\n\n\t# 设置innodb_io_capacity，并启用O_DIRECT，提高IO性能。\n\tinnodb_io_capacity = 2000\n\tinnodb_flush_method = O_DIRECT\n\n\t#innodb只读压缩\n\tinnodb_read_only_compressed = 0\n\n\t#innodb可以把每个表的数据单独保存。\n\tinnodb_file_per_table=ON\n\n\t#禁用或启用中继日志，只要不再需要，立即自动清除。默认值为 1（已启用）\n\trelay_log_purge = ON\n\t#定义relay_log的位置和名称，如果值为空，则默认位置在数据文件的目录，文件名为host_name-relay-bin.nnnnnn\n\trelay_log=relay-bin\n\t#定义relay_log_index的位置和名称\n\trelay_log_index=relay-bin.index\n\n\t#是否打开慢查询日志\n\tslow_query_log=ON\n\t#慢查询时间为5s，根据实际业务情况进行配置。\n\tlong_query_time = 5\n\t#慢查询文件位置，将日志文件放在独立的 SSD 盘上。\n\tslow-query-log-file=/var/lib/mysql/slow.log\n\n\t#binlog日志格式\n\tbinlog_format=ROW\n\t#启用二进制日志记录，指定文件名\n\tlog_bin=bin-log\n\t#启用二进制日志记录，指定文件名\n\tlog_bin_index=bin-log.index\n\t#定义了mysql清除过期日志的时间。默认值为0,表示“没有自动删除”。单位天\n\texpire_logs_days=7\n\t#复制服务器从源服务器接收的更新是否应记录到副本自己的二进制日志。\n\tlog_slave_updates=ON\n\n\t#日志的存放位置\n\tlog_error = /var/lib/mysql/mysqld.log\n\t#log_warnings 为0，表示不记录告警信息。\n\t#log_warnings 为1，表示告警信息写入错误日志。\n\t#log_warnings 大于1，表示各类告警信息，例如有关网络故障的信息和重新连接信息写入错误日志。（默认为2）\n\t#log_warnings=2\n\n\t#GTID严格模式\n\tgtid_strict_mode=ON\n\n\t#从库幂等模式\n\tslave_exec_mode= IDEMPOTENT\n\n\t#slave忽略同步的数据库\n\treplicate-ignore-db=information_schema,performance_schema\n\n\t#半同步\n\trpl_semi_sync_master_enabled=on\n\trpl_semi_sync_slave_enabled=on\n\n\t#会话事务状态跟踪\n\tsession_track_state_change = ON\n\tsession_track_transaction_info = CHARACTERISTICS\n\tsession_track_system_variables='autocommit,character_set_client,character_set_connection,character_set_results,time_zone,last_gtid'\n\n\t#\n\t# include *.cnf from the config directory\n\t#\n\t#!includedir /etc/my.cnf.d\n\nEOF\n```\n\n## 5.3 创建有状态服务\n```bash\ncat >>2-statefulSet.yaml << \"EOF\"\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: mariadb\nspec:\n  replicas: 1\n  serviceName: mariadb\n  selector:\n    matchLabels:\n      app: mariadb\n  template:\n    metadata:\n      labels:\n        app: mariadb\n    spec:\n      containers:\n      - name: mariadb\n        image: mariadb:10.9\n        env:\n        - name: MYSQL_ROOT_PASSWORD\n          value: '4y6Cu%946*!TXY'\n        volumeMounts:\n        - name: mariadb-storage\n          mountPath: /var/lib/mysql\n        - name: mariadb-config\n          mountPath: /etc/mysql/my.cnf\n          subPath: my.cnf\n      volumes:\n      - name: mariadb-storage\n        persistentVolumeClaim:\n          claimName: mariadb-data\n      - name: mariadb-config\n        configMap:\n          name: mariadb-config\n          items:\n            - key: my.cnf\n              path: my.cnf\n\nEOF\n```\n\n## 5.4 创建服务暴露\n```bash\ncat >> 3-service.yaml << \"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: mariadb\n  labels:\n    app: mariadb\nspec:\n  ports:\n    - name: mariadb\n      port: 3306\n      protocol: TCP\n      targetPort: 3306\n      nodePort: 30001\n  selector:\n    app: mariadb\n  type: NodePort\n\nEOF\n```\n\n## 5.5 应用\n```bash\nkubectl apply  -f 0-pvc.yaml\nkubectl apply  -f 1-configMap.yaml\nkubectl apply  -f 2-statefulSet.yaml\nkubectl apply  -f 3-service.yaml\n```\n\n\n# 六、Nacos服务部署\n## 6.1 登陆数据库，创建nacos用户及库，并导入初始化sql\n```sql\nuse mysql;\ncreate database nacos CHARACTER SET utf8mb4 COLLATE utf8mb4_bin;\ncreate user 'nacos'@'%' identified by '!EdkeJwrtDN45^';\ngrant all privileges on nacos.* to 'nacos'@'%';\nflush privileges;\n```\n\n## 6.2 创建nacos\n```bash\nmkdir nacos; cd nacos\ncat >> 1-nacos-deployment.yaml << \"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nacos\n  labels:\n    app: nacos\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nacos\n  template:\n    metadata:\n      labels:\n        app: nacos\n    spec:\n      containers:\n        - name: nacos\n          image: nacos/nacos-server:v2.2.0\n          env:\n            - name: MODE\n              value: \"standalone\"\n            - name: SPRING_DATASOURCE_PLATFORM\n              value: \"mysql\"\n            - name: MYSQL_SERVICE_HOST\n              value: \"200.0.0.98\"\n            - name: MYSQL_SERVICE_PORT\n              value: \"30001\"\n            - name: MYSQL_SERVICE_DB_NAME\n              value: \"nacos\"\n            - name: MYSQL_SERVICE_USER\n              value: \"nacos\"\n            - name: MYSQL_SERVICE_PASSWORD\n              value: \"!EdkeJwrtDN45^\"\n          ports:\n            - containerPort: 8848\n              name: client-port\n            - containerPort: 9848\n              name: client-rpc\n            - containerPort: 9849\n              name: raft-rpc\n            - containerPort: 7848\n              name: old-raft-rpc\n\n\nEOF\n```\n\n\n## 6.3 创建服务暴露\n```bash\ncat >> 2-nacos-service.yaml << \"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: nacos\n  labels:\n    app: nacos\n  annotations:\n    service.alpha.kubernetes.io/tolerate-unready-endpoints: \"true\"\nspec:\n  ports:\n    - port: 8848\n      name: server\n      targetPort: 8848\n      nodePort: 30002\n    - port: 9848\n      name: client-rpc\n      targetPort: 9848\n    - port: 9849\n      name: raft-rpc\n      targetPort: 9849\n    ## 兼容1.4.x版本的选举端口\n    - port: 7848\n      name: old-raft-rpc\n      targetPort: 7848\n  type: NodePort  #Serive的类型，ClusterIP/NodePort/LoaderBalancer\n  selector:\n    app: nacos\n\n\nEOF\n```\n## 6.3 数据库中导入预定义sql，见附件\n初始化sql：\n[mysql-schema.sql](_v_attachments/20230225224217873_1139/mysql-schema.sql)\n\n## 6.4 应用\n```bash\nkubectl apply  -f 1-nacos-deployment.yaml\nkubectl apply  -f 2-nacos-service.yaml\n```\n\n## 6.5 创建era命名空间\n![](_v_images/20230227115412128_20323.png =1241x)\n## 6.6 在era命名空间中导入附件配置\n![](_v_images/20230227115516361_6927.png =810x)\n\nnacos配置：\n[nacos_config_export_20230423155621.zip](_v_attachments/20230225224217873_1139/nacos_config_export_20230423155621.zip)\n\n# 七、MinIO部署\n## 7.1 创建pvc\n```bash\ncat >> 0-pvc.yaml << \"EOF\"\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: minio-data\nspec:\n  accessModes:\n  - ReadWriteMany\n  resources:\n    requests:\n      storage: 100Gi\n  storageClassName: nfs-retain\n\nEOF\n```\n\n## 7.2 创建deployment文件\n```bash\ncat >> 1-deployment.yaml << \"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: minio\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: minio\n  template:\n    metadata:\n      labels:\n        app: minio\n    spec:\n      containers:\n      - name: minio\n        image: minio/minio:RELEASE.2022-06-11T19-55-32Z\n        imagePullPolicy: IfNotPresent\n        command:\n          - /bin/sh\n          - -c\n          - minio server /data --console-address \":9000\" --address \":9001\"\n        env:\n        - name: MINIO_ROOT_USER\n          value: admin\n        - name: MINIO_ROOT_PASSWORD\n          value: 'c!%892w@MWE^T*'\n        ports:\n        - name: web\n          containerPort: 9000\n          protocol: \"TCP\"\n        - name: api\n          containerPort: 9001\n          protocol: \"TCP\"\n        volumeMounts:\n          - mountPath: /data\n            name: data\n      volumes:\n      - name: data\n        persistentVolumeClaim:\n          claimName: minio-data\nEOF\n```\n\n## 7.3 创建服务暴露\n```bash\ncat >> 2-service.yaml << \"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: minio\n  labels:\n    app: minio\nspec:\n  ports:\n    - name: web-port\n      port: 9000\n      protocol: TCP\n      targetPort: 9000\n      nodePort: 30004\n    - name: api-port\n      port: 9001\n      protocol: TCP\n      targetPort: 9001\n      nodePort: 30005\n  type: NodePort\n  selector:\n    app: minio\nEOF\n```\n\n## 7.4 应用\n```bash\nkubectl apply  -f 0-pvc.yaml\nkubectl apply  -f 1-deployment.yaml\nkubectl apply  -f 2-service.yaml\n```\n\n## 7.5 配置桶及用户\n```bash\nera\nera\nE$y*uY7@&39gW6\n\nAccess Key\n\nBNXMD8gbbM4Q2NoX\nSecret Key\n\n0fRkiYeJ63wMHz98I3Q7c3fUD1f9QZZW\n\n```\n### 1.创建桶\n![](_v_images/20230227103232369_29801.png =536x)\n\n### 2.创建用户\n![](_v_images/20230227114333584_26973.png =559x)\n\n### 3.创建权限策略\n```yaml\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:*\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::era/*\"\n            ]\n        }\n    ]\n}\n```\n![](_v_images/20230227114629100_1990.png =553x)\n\n### 4.用户绑定权限\n![](_v_images/20230227114727497_21480.png =858x)\n\n\n### 5.创建用户令牌并记录\n![](_v_images/20230227111406643_8560.png =769x)\n```\nAccess Key:\n\n0psoK6mqbPynGQuh\nSecret Key:\n\nfBWc4MZzPL94DQ8k1l2JsN5MERfrSD2R\n```\n![](_v_images/20230227114800001_7048.png =578x)\n\n# 八、Redis部署\n## 8.1 创建配置文件\n```bash\ncat >> 0-configMap.yaml << \"EOF\"\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: redis-config\ndata:\n  redis.conf: |\n    # Redis配置文件示例。\n    #\n    # 请注意，为了读取配置文件，Redis必须以文件路径作为第一个参数来启动：\n    #\n    # ./redis-server /path/to/redis.conf\n\n    # 关于单位的注意事项：当需要内存大小时，可以以通常的格式1k 5GB 4M来指定它，依此类推：\n    #\n    # 1k => 1000字节\n    # 1kb => 1024字节\n    # 1m => 1000000字节\n    # 1mb => 1024 * 1024字节\n    # 1g => 1000000000字节\n    # 1gb => 1024 * 1024 * 1024字节\n    #\n    # 单位不区分大小写，因此1GB 1Gb 1gB都相同。\n\n    ################################## INCLUDES ###################################\n\n    # 在此处包含一个或多个其他配置文件。 如果您具有可用于所有Redis服务器的标准模板，但还需要自定义一些每服务器设置，则此功能很有用。\n    # 包含文件可以包含其他文件，因此请明智地使用它。\n    #\n    # 注意admin或Redis Sentinel的命令\"CONFIG REWRITE\"不会重写选项\"include\"。\n    # 由于Redis始终使用最后处理的行作为配置指令的值，因此最好将include放在此文件的开头，以避免在运行时覆盖配置更改。\n    #\n    # 如果您反而对使用include覆盖配置选项感兴趣，则最好将include作为最后一行。\n    #\n    # include /path/to/local.conf\n    # include /path/to/other.conf\n\n    ################################## MODULES #####################################\n\n    # 在启动时加载模块。 如果服务器无法加载模块，它将中止。 可以使用多个loadmodule指令。\n    #\n    # loadmodule /path/to/my_module.so\n    # loadmodule /path/to/other_module.so\n\n    ################################## NETWORK #####################################\n\n    # 默认情况下，如果未指定\"bind\"配置指令，则Redis侦听来自服务器上所有可用网络接口的连接。\n    # 可以使用\"bind\"配置指令仅侦听一个或多个所选接口，然后侦听一个或多个IP地址。\n    #\n    # Examples:\n    #\n    # bind 192.168.1.100 10.0.0.1\n    # bind 127.0.0.1 ::1\n    #\n    # ~~~警告~~~如果运行Redis的计算机直接暴露于Internet，则绑定到所有接口都是危险的，并且会将实例暴露给Internet上的所有人。因此，默认情况下，\n    # 我们取消注释以下bind指令，这将强制Redis仅侦听IPv4环回接口地址（这意味着Redis将只能接受来自正在运行同一台计算机的客户端的连接）。\n    #\n    # 如果您确定要立即侦听所有接口，请仅注意以下几行。\n    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    bind *\n\n    # 保护模式是安全保护的一层，目的是避免访问和利用Internet上打开的Redis实例。\n    #\n    # 启用保护模式时，如果：\n    #\n    # 1）服务器未使用\"bind\"指令显式绑定到一组地址。\n    # 2）未配置密码。\n    #\n    # 服务器仅接受来自通过IPv4和IPv6回送地址127.0.0.1和::: 1以及来自Unix域套接字的客户端的连接。\n    #\n    # 默认情况下启用保护模式。 仅当您确定您希望其他主机的客户端连接到Redis时，\n    # 即使未配置身份验证，也不会使用\"bind\"指令显式列出一组特定的接口，才应禁用它。\n    protected-mode no\n\n    # 接受指定端口上的连接，默认为6379（IANA# 815344）。\n    # 如果指定了端口0，则Redis将不会在TCP套接字上侦听。\n    port 6379\n\n    # TCP listen() backlog.\n    #\n    # 在每秒请求数很高的环境中，您需要大量backlog(积压)，以避免客户端连接速度慢的问题。\n    # 请注意，Linux内核会以无提示的方式将其截断为/proc/sys/net/core/somaxconn的值，\n    # 因此请确保同时提高somaxconn和tcp_max_syn_backlog的值，以获得所需的效果。\n    tcp-backlog 511\n\n    # Unix socket.\n    #\n    # 指定用于监听传入连接的Unix套接字的路径。 没有默认值，因此在未指定Redis的情况下，Redis不会在Unix套接字上侦听。\n    #\n    # unixsocket /tmp/redis.sock\n    # unixsocketperm 700\n\n    # 客户端闲置N秒后关闭连接（0禁用）\n    timeout 0\n\n    # TCP keepalive.\n    #\n    # 如果非零，请在没有通信的情况下使用SO_KEEPALIVE向客户端发送TCP ACK。 这很有用，原因有两个：\n    # \n    # 1）检测死亡的同伴。\n    # 2）从中间的网络设备的角度来看，使连接保持活动状态。\n    # \n    # 在Linux上，指定的值（以秒为单位）是用于发送ACK的时间段。\n    # 请注意，关闭连接需要两倍的时间。\n    # 在其他内核上，期限取决于内核配置。\n    # \n    # 此选项的合理值是300秒，这是从Redis 3.2.1开始的新Redis默认值。\n    tcp-keepalive 300\n\n    ################################# TLS/SSL #####################################\n\n    # 默认情况下，禁用TLS / SSL。 要启用它，可以使用\"tls-port\"配置指令来定义TLS侦听端口。 \n    # 要在默认端口上启用TLS，请使用：\n    #\n    # port 0\n    # tls-port 6379\n\n    # 配置X.509证书和私钥，用于对连接的客户端，主服务器或集群对等服务器进行身份验证。 这些文件应为PEM格式。\n    #\n    # tls-cert-file redis.crt\n    # tls-key-file redis.key\n\n    # 配置DH参数文件，启用Diffie-Hellman（DH）密钥交换。\n    #\n    # tls-dh-params-file redis.dh\n\n    # 配置CA证书捆绑包或目录以认证TLS/SSL客户端和对等方。 Redis需要其中至少一项的显式配置，并且不会隐式使用系统范围的配置。\n    #\n    # tls-ca-cert-file ca.crt\n    # tls-ca-cert-dir /etc/ssl/certs\n\n    # 默认情况下，TLS端口上的客户端（包括副本服务器）需要使用有效的客户端证书进行身份验证。\n    #\n    # 可以使用此伪指令禁用身份验证。\n    #\n    # tls-auth-clients no\n\n    # 默认情况下，Redis副本不尝试与其主服务器建立TLS连接。\n    #\n    # 使用以下指令在复制链接上启用TLS。\n    #\n    # tls-replication yes\n\n    # 默认情况下，Redis群集总线使用纯TCP连接。 要为总线协议启用TLS，请使用以下指令：\n    #\n    # tls-cluster yes\n\n    # 明确指定要支持的TLS版本。 允许的值不区分大小写，包括\"TLSv1\"，\"TLSv1.1\"，\"TLSv1.2\"，\"TLSv1.3\"（OpenSSL> = 1.1.1）或任意组合。\n    # 要仅启用TLSv1.2和TLSv1.3，请使用：\n    #\n    # tls-protocols \"TLSv1.2 TLSv1.3\"\n\n    # 配置允许的密码。 有关此字符串的语法的更多信息，请参见ciphers（1ssl）联机帮助页。\n    #\n    # 注意：此配置仅适用于<= TLSv1.2。\n    #\n    # tls-ciphers DEFAULT:!MEDIUM\n\n    # 配置允许的TLSv1.3密码套件。 有关此字符串的语法（尤其是TLSv1.3密码套件）的语法的更多信息，请参见ciphers（1ssl）联机帮助页。\n    #\n    # tls-ciphersuites TLS_CHACHA20_POLY1305_SHA256\n\n    # 选择密码时，请使用服务器的首选项而不是客户端的首选项。 默认情况下，服务器遵循客户端的首选项。\n    #\n    # tls-prefer-server-ciphers yes\n\n    ################################# GENERAL(通常) #####################################\n\n    # 默认情况下，Redis不会作为守护程序运行。 如果需要，请使用\"是\"。\n    # 注意，Redis守护进程将在/var/run/redis.pid中写入一个pid文件。\n    daemonize no\n\n    # 如果从upstart或systemd运行Redis，Redis可以与您的supervision(监督) tree进行交互。 选项：\n    #   supervised no      - 没有supervision(监督)互动\n    #   supervised upstart - 通过将Redis置于SIGSTOP模式来发出信号\n    #   supervised systemd - 通过将READY = 1写入$ NOTIFY_SOCKET来产生信号\n    #   supervised auto    - 根据UPSTART_JOB或NOTIFY_SOCKET环境变量检测upstart或systemd方法\n\n    # 注意：这些supervision(监督)方法仅表示\"过程已准备就绪\"。\n    #       他们无法使您的主管连续不断地进行ping操作。\n    supervised no\n\n    # 如果指定了pid文件，则Redis会在启动时将其写入指定位置，并在退出时将其删除。\n    #\n    # 当服务器在非守护进程中运行时，如果未在配置中指定任何pid文件，则不会创建该文件。\n    # 守护服务器时，即使未指定，也会使用pid文件，默认为\"/var/run/redis.pid\"。\n    #\n    # 尽最大努力创建一个pid文件：如果Redis无法创建它，那么一切正常，服务器将正常启动并运行。\n    pidfile /var/run/redis_6379.pid\n\n    # 指定服务器的详细级别。\n    # 这可以是以下之一：\n    # debug (很多信息，对于开发/测试很有用）\n    # verbose (很多很少有用的信息，但不会像调试级别那样混乱）\n    # notice (适度冗长，可能在生产中需要什么）\n    # warning (仅记录非常重要/重要的消息）\n    loglevel notice\n\n    # 指定日志文件名。 空字符串也可以用于强制Redis登录标准输出。\n    # 请注意，如果您使用标准输出进行日志记录但进行守护进程，则日志将发送到/dev/null\n    logfile \"\"\n\n    # 要启用登录到系统记录器的功能，只需将'syslog-enabled'设置为yes，然后根据需要更新其他syslog参数。\n    # syslog-enabled no\n\n    # 指定系统日志标识。\n    # syslog-ident redis\n\n    # 指定系统日志工具。 必须是USER或在LOCAL0-LOCAL7之间。\n    # syslog-facility local0\n\n    # 设置数据库数量。 默认数据库为DB 0，您可以使用SELECT <dbid>在每个连接的基础上选择一个不同的数据库，\n    # 其中dbid是介于0和'databases'-1之间的数字\n    databases 16\n\n    # 默认情况下，仅当开始记录到标准输出并且标准输出为TTY时，Redis才会显示ASCII艺术logo。\n    # 基本上，这意味着logo通常仅在交互式会话中显示。\n    #\n    # 但是，可以通过将以下选项设置为yes，来强制执行4.0之前的行为并始终在启动日志中显示ASCII艺术logo。\n    always-show-logo yes\n\n    ################################ SNAPSHOTTING(快照)  ################################\n    #\n    # 将数据库保存在磁盘上：\n    #\n    #   save <seconds> <changes>\n    #\n    # 如果同时发生了给定的秒数和给定的针对数据库的写操作数，则将保存数据库。\n    #\n    # 在下面的示例中，行为将是保存：\n    #     900秒（15分钟）后，如果至少更改了1个键\n    #     300秒（5分钟）后，如果至少更改了10个按键\n    #     60秒后，如果至少更改了10000个键\n    #\n    # 注意：您可以通过注释掉所有\"保存\"行来完全禁用保存。\n    #\n    # 也可以通过添加带有单个空字符串参数的save指令来删除所有先前配置的保存点，如以下示例所示：\n    #\n    #   save \"\"\n\n    save 900 1\n    save 300 10\n    save 60 10000\n\n    # 默认情况下，如果启用了RDB快照（至少一个保存点）并且最新的后台保存失败，Redis将停止接受写入。\n    # 这将使用户（以一种困难的方式）意识到数据无法正确地持久存储在磁盘上，否则，可能没人会注意到并且会发生一些灾难。\n    #\n    # 如果后台保存过程将再次开始工作，则Redis将自动允许再次写入。\n    #\n    # 但是，如果您设置了对Redis服务器和持久性的适当监视，则可能要禁用此功能，以便即使磁盘，权限等出现问题，Redis也将继续照常工作。\n    stop-writes-on-bgsave-error yes\n\n    # 转储.rdb数据库时使用LZF压缩字符串对象？\n    # 默认情况下将其设置为\"是\"，因为它几乎总是胜利。\n    # 如果要在保存子项中保存一些CPU，请将其设置为\"no\"，但是如果您具有可压缩的值或键，则数据集可能会更大。\n    rdbcompression yes\n\n    # 从RDB版本5开始，在文件末尾放置了CRC64校验和。\n    # 这使得该格式更能抵抗损坏，但是在保存和加载RDB文件时会付出一定的性能损失（大约10％），因此可以禁用该格式以获得最佳性能。\n    #\n    # 在禁用校验和的情况下创建的RDB文件的校验和为零，这将指示加载代码跳过该校验。\n    rdbchecksum yes\n\n    # 转储数据库的文件名\n    dbfilename dump.rdb\n\n    # 删除没有启用持久性的实例中复制使用的RDB文件。 默认情况下，此选项是禁用的，\n    # 但是在某些环境中，出于法规或其他安全方面的考虑，应将RDB文件由主数据库持久存储在磁盘上以提供副本，\n    # 或将RDB文件由副本存储在磁盘上以加载它们以进行初始同步。\n    # 尽快删除。 请注意，此选项仅在同时禁用AOF和RDB持久性的实例中起作用，否则将被完全忽略。\n    #\n    # 获得相同效果的另一种方法（有时是更好的方法）是在主实例和副本实例上都使用无盘复制。 但是，对于副本，无盘并非始终是一种选择。\n    rdb-del-sync-files no\n\n    # 工作目录。\n    #\n    # 数据库将被写入该目录内，文件名使用\"dbfilename\"配置指令在上面指定。\n    #\n    # 也将在此目录中创建\"仅追加文件\"。\n    #\n    # 请注意，您必须在此处指定目录，而不是文件名。\n    dir ./\n\n    ################################# REPLICATION(复制) #################################\n\n    # 主副本复制。 使用copyof可以使Redis实例成为另一个Redis服务器的副本。 尽快了解有关Redis复制的几件事。\n    #\n    #   +------------------+      +---------------+\n    #   |      Master      | ---> |    Replica    |\n    #   | (receive writes) |      |  (exact copy) |\n    #   +------------------+      +---------------+\n    #\n    # 1) Redis复制是异步的，但是您可以将主服务器配置为在似乎未与至少给定数量的副本连接时停止接受写操作。\n    # 2) 如果复制链接在相对较短的时间内丢失，则Redis副本能够与主副本执行部分重新同步。\n    #    您可能需要根据需要将复制积压大小（请参阅此文件的下一部分）配置为合理的值。\n    # 3) 复制是自动的，不需要用户干预。 网络分区副本之后，副本会自动尝试重新连接到母版并与它们重新同步。\n    #\n    # replicaof <masterip> <masterport>\n\n    # 如果主服务器受密码保护（使用下面的\"requirepass\"配置指令），\n    # 则可以在开始复制同步过程之前告诉副本服务器进行身份验证，否则主服务器将拒绝副本请求。\n    #\n    # masterauth <master-password>\n    #\n    # 但是，如果使用Redis ACL（对于Redis版本6或更高版本），并且默认用户无法运行PSYNC命令和/或其他复制所需的命令，\n    # 这还不够。 在这种情况下，最好配置一个特殊用户以用于复制，并这样指定masteruser配置：\n    #\n    # masteruser <username>\n    #\n    # 指定了masteruser时，副本将使用新的AUTH形式针对其主服务器进行身份验证：AUTH <用户名> <密码>。\n\n    # 当副本断开与主数据库的连接时，或者仍在进行复制时，副本可以以两种不同的方式起作用：\n    #\n    # 1) 如果复制副本服务过时的数据设置为\"是\"（默认值），则复制副本仍将回复客户端请求，\n    #    可能包含过期数据，或者如果这是第一次同步，则数据集可能只是空的。\n    #\n    # 2) 如果复制副本服务过时的数据设置为\"否\"，则复制副本将对所有命令发出错误\"与主机进行同步\"错误，\n    #    但对INFO, replicaOF, AUTH, PING, SHUTDOWN, REPLCONF, ROLE, CONFIG, SUBSCRIBE, UNSUBSCRIBE,\n    #    PSUBSCRIBE, PUNSUBSCRIBE, PUBLISH, PUBSUB, COMMAND, POST, HOST: and LATENCY.\n    #\n    replica-serve-stale-data yes\n\n    # 您可以配置副本实例以接受或不接受写入。 针对副本实例进行写操作可能对存储某些临时数据很有用（\n    # 因为与主实例重新同步后，写入副本上的数据很容易删除），但是如果客户端由于配置错误而向其进行写操作，也可能导致问题。\n    #\n    # 由于Redis 2.6默认情况下，副本是只读的。\n    #\n    # 注意：只读副本并非旨在向Internet上不受信任的客户端公开。 它只是防止实例滥用的保护层。\n    # 默认情况下，只读副本仍会导出所有管理命令，例如CONFIG，DEBUG等。\n    # 在一定程度上，您可以使用'rename-command'隐藏所有管理/危险命令来提高只读副本的安全性。\n    replica-read-only yes\n\n    # 复制同步策略：磁盘或套接字。\n    #\n    # 仅能接收差异而无法继续复制过程的新副本和重新连接的副本需要执行所谓的\"完全同步\"。 RDB文件从主数据库传输到副本数据库。\n    #\n    # 传输可以两种不同的方式发生：\n    #\n    # 1) 磁盘备份: Redis主服务器创建一个新过程，将RDB文件写入磁盘。 后来，文件由父进程逐步传输到副本。\n    # 2) 无盘：Redis主服务器创建一个新进程，该进程将RDB文件直接写入副本套接字，而完全不接触磁盘。\n    #\n    # 使用磁盘支持的复制，在生成RDB文件时，一旦生成RDB文件的当前子级完成工作，就可以将更多副本排入队列并与RDB文件一起使用。\n    # 如果使用无盘复制，则一旦传输开始，新的副本将排队，并且当当前副本终止时将开始新的传输。\n    #\n    # 使用无盘复制时，主服务器在开始传输之前等待一段可配置的时间（以秒为单位），以希望多个副本可以到达并且传输可以并行化。\n    #\n    # 对于慢速磁盘和快速（大带宽）网络，无盘复制效果更好。\n    repl-diskless-sync no\n\n    # 启用无盘复制后，可以配置服务器等待的延迟，以生成通过套接字将RDB传输到副本的子代。\n    #\n    # 这很重要，因为一旦传输开始，就无法为到达下一个RDB传输的新副本提供服务，因此服务器会等待一段时间才能让更多副本到达。\n    #\n    # 以秒为单位指定延迟，默认为5秒。 要完全禁用它，只需将其设置为0秒，传输就会尽快开始。\n    repl-diskless-sync-delay 5\n\n    # -----------------------------------------------------------------------------\n    # 警告：RDB无盘加载是实验性的。 因为在此设置中，副本不会立即在磁盘上存储RDB，所以它可能会导致故障转移期间的数据丢失。\n    # 在与主机的初始同步阶段，如果I/O错误，则RDB无盘负载+ Redis模块不处理I/O读取也可能导致Redis中止。 仅在执行自己的操作时使用。\n    # -----------------------------------------------------------------------------\n    #\n    # 副本可以直接从套接字加载从复制链接读取的RDB，也可以将RDB存储到文件中，并在从主服务器完全获取文件后读取该文件。\n    #\n    # 在许多情况下，磁盘的速度比网络慢，并且存储和加载RDB文件可能会增加复制时间（甚至会增加主服务器的\"写时复制\"内存和从属缓冲区）。\n    # 但是，直接从套接字解析RDB文件可能意味着我们必须在接收到完整的rdb之前刷新当前数据库的内容。 因此，我们有以下选择：\n    #\n    # \"disabled\"    - 不要使用无盘负载（首先将rdb文件存储到磁盘）\n    # \"on-empty-db\" - 仅在完全安全时才使用无盘加载。\n    # \"swapdb\"      - 直接从套接字解析数据时，在RAM中保留当前数据库内容的副本。 请注意，这需要足够的内存，如果没有足够的内存，则可能会杀死OOM。\n    repl-diskless-load disabled\n\n    # 副本以预定义的时间间隔将PING发送到服务器。 可以使用repl_ping_replica_period选项更改此间隔。 默认值为10秒。\n    #\n    # repl-ping-replica-period 10\n\n    # 以下选项为以下项设置复制超时：\n    #\n    # 1）从副本的角度来看，在SYNC期间进行批量传输I/O。\n    # 2）从副本（数据，Ping）的角度来看，主超时。\n    # 3）从主服务器角度来看，副本超时（REPLCONF ACK ping）。\n    #\n    # 确保该值大于为repl-ping-replica-period指定的值非常重要，否则，每当主服务器和副本之间的通信量较低时，都会检测到超时。\n    #\n    # repl-timeout 60\n\n    # 在SYNC之后禁用副本套接字上的TCP_NODELAY？\n    #\n    # 如果选择\"是\"，则Redis将使用更少的TCP数据包和更少的带宽将数据发送到副本。\n    # 但这会增加数据出现在副本端的延迟，对于使用默认配置的Linux内核，此延迟最多可达40毫秒。\n    #\n    # 如果选择\"否\"，将减少数据在副本侧出现的延迟，但将使用更多带宽进行复制。\n    #\n    # 默认情况下，我们针对低延迟进行了优化，但是在通信量非常高的情况下，或者当主服务器和副本距离很多跳时，将其设置为\"是\"可能是个好主意。\n    repl-disable-tcp-nodelay no\n\n    # 设置复制backlog(积压)大小。 待办事项是一个缓冲区，当副本断开连接一段时间后，该缓冲区会累积副本数据，\n    # 因此当副本想要重新连接时，通常不需要完全重新同步，但是部分重新同步就足够了，只需传递副本的部分数据即可 断开连接时错过。\n    #\n    # 复制待办事项越大，副本可以断开连接并在以后能够执行部分重新同步的时间越长。\n    #\n    # 仅在至少连接一个副本后才分配backlog(积压)。\n    #\n    # repl-backlog-size 1mb\n\n    # 在主服务器一段时间不再连接副本后，backlog(积压)的事务将被释放。 以下选项配置了从断开最后一个副本的时间开始到释放待办事项缓冲区所需的秒数。\n    #\n    # 请注意，副本永远不会释放backlog(积压)的超时，因为它们可能会在以后升级为主副本，\n    # 并且应该能够与副本正确\"部分重新同步\"：因此，它们应始终累积backlog(积压)。\n    #\n    # 值0表示从不释放backlog(积压)。\n    #\n    # repl-backlog-ttl 3600\n\n    # 副本优先级是Redis在INFO输出中发布的整数。 如果主服务器不再正常工作，Redis Sentinel会使用它来选择要升级为主服务器的副本。\n    #\n    # 优先级低的副本被认为更适合升级，例如，如果有三个副本的优先级分别为10、100和25，Sentinel将选择优先级为10的副本，这是最低的。\n    #\n    # 但是，特殊优先级0会将副本标记为不能执行主角色，因此Redis Sentinel永远不会选择优先级为0的副本进行升级。\n    #\n    # 默认情况下，优先级为100。\n    replica-priority 100\n\n    # 如果连接的副本少于N个，且延迟小于或等于M秒，则主服务器可能会停止接受写入。\n    #\n    # N个副本必须处于\"联机\"状态。\n    #\n    # 以秒为单位的延迟必须小于等于指定值，该延迟是根据从副本接收到的最后一次ping计算得出的，通常是每秒发送一次。\n    #\n    # 此选项不能保证N个副本将接受写操作，但是如果没有足够的副本可用，则会将丢失写操作的暴露窗口限制为指定的秒数。\n    #\n    # 例如，至少需要3个滞后<= 10秒的副本，请使用：\n    #\n    # min-replicas-to-write 3\n    # min-replicas-max-lag 10\n    #\n    # 将其中一个设置为0将禁用该功能。\n    #\n    # 默认情况下，min-replicas-to-write设置为0（禁用功能），min-replicas-max-lag设置为10。\n\n    # Redis主服务器能够以不同方式列出附加副本的地址和端口。 例如，\"INFO复制\"部分提供了此信息，Redis Sentinel使用此信息以及其他工具来发现副本实例。\n    # 该信息可用的另一个位置是主服务器的\"ROLE\"命令的输出。\n    #\n    # 通常通过以下方式获取副本列出的IP和地址：\n    #\n    #   IP: 通过检查副本用于与主服务器连接的套接字的对等地址来自动检测该地址。\n    #   Port: 该端口在复制握手期间由副本进行通信，通常是副本用来侦听连接的端口。\n    #\n    # 但是，当使用端口转发或网络地址转换（NAT）时，实际上可以通过不同的IP和端口对访问该副本。\n    # 副本可以使用以下两个选项，以便向其主服务器报告特定的IP和端口集，以便INFO和ROLE都将报告这些值。\n    #\n    # 如果只需要覆盖端口或IP地址，则无需同时使用这两个选项。\n    #\n    # replica-announce-ip 5.5.5.5\n    # replica-announce-port 1234\n\n    ############################### KEYS TRACKING（KEYS跟踪） #################################\n\n    # Redis为客户端的值缓存实现服务器辅助的支持。\n    # 这是使用无效表实现的，该无效表使用1600万个插槽记住哪些客户端可能具有某些键子集。\n    # 依次使用此命令是为了向客户端发送无效消息。 请了解有关此功能的更多信息，请检查以下页面：\n    #\n    #   https://redis.io/topics/client-side-caching\n    #\n    # 为客户端启用跟踪时，假定所有只读查询都已缓存：这将强制Redis将信息存储在失效表中。 修改密钥后，此类信息将被清除，并将无效消息发送到客户端。\n    # 但是，如果工作量主要由读取决定，Redis可以使用越来越多的内存来跟踪许多客户端获取的密钥。\n    #\n    # 因此，可以为失效表配置最大填充值。 默认情况下，它设置为1M键，一旦达到此限制，Redis将开始撤消失效表中的键，\n    # 即使它们没有被修改，只是为了回收内存：这反过来将迫使客户端使缓存无效。 价值观。 \n    # 基本上，表的最大大小是要在服务器端用来跟踪有关谁缓存内容的信息的内存与客户端将缓存的对象保留在内存中的能力之间进行权衡的。\n    #\n    # 如果将值设置为0，则表示没有限制，Redis将在失效表中保留所需数量的键。\n    # 在\"统计信息\"信息部分中，您可以在每个给定的时间找到有关失效表中密钥数量的信息。\n    #\n    # 注意：在广播模式下使用键跟踪时，服务器端未使用任何内存，因此此设置无用。\n    #\n    # tracking-table-max-keys 1000000\n\n    ################################## SECURITY ###################################\n\n    # 警告：由于Redis的速度非常快，外部用户每秒可以在一个现代化的设备上尝试高达100万个密码。\n    # 这意味着您应该使用非常安全的密码，否则密码很容易破解。\n    # 请注意，由于该密码实际上是客户端和服务器之间的共享机密，并且不应由任何人记住，\n    # 因此该密码可以很容易地由/dev/urandom或其他方式中的长字符串组成，因此请使用冗长且不可猜测的内容 密码不会有暴力攻击。\n\n    # Redis ACL用户的定义如下：\n    #\n    #   user <username> ... acl rules ...\n    #\n    #  例如：\n    #\n    #   user worker +@list +@connection ~jobs:* on >ffa9203c493aa99\n    #\n    # 特殊用户名\"默认\"用于新连接。 如果该用户具有\"nopass\"规则，则新连接将立即被认证为\"默认\"用户，\n    # 而无需通过AUTH命令提供任何密码。 否则，如果未将\"默认\"用户标记为\"nopass\"，\n    # 则连接将以未认证状态启动，并且需要AUTH（或HELLO命令AUTH选项）才能进行认证并开始工作。\n    #\n    # 描述用户可以执行的操作的ACL规则如下：\n    #\n    #  on           启用用户：可以验证为该用户。\n    #  off          禁用用户：不再可以与此用户进行身份验证，但是已经身份验证的连接仍然可以使用。\n    #  +<command>   允许执行该命令\n    #  -<command>   禁止执行该命令\n    #  +@<category> 允许执行此类中具有有效类别的所有命令，例如@ admin，@ set，@ sortedset等，等等，\n    #               请参阅server.c文件中的完整列表，其中描述和定义了Redis命令表 。\n    #               特殊类别@all表示所有命令，但是当前在服务器中存在，并且将来会通过模块加载。\n    #  +<command>|subcommand    允许使用本来禁用的命令的特定子命令。 注意，这种形式不允许像-DEBUG|SEGFAULT那样为负数，而只能以\"+\"开头。\n    #  allcommands  +@all的别名。 注意，这意味着可以执行将来通过模块系统加载的所有命令。\n    #  nocommands   -@all的别名。\n    #  ~<pattern>   添加可以在命令中提及的键模式。 例如~*允许所有键。 该模式是类似于KEYS之一的球形样式的模式。\n    #               可以指定多个模式。\n    #  allkeys      ~*的别名。\n    #  resetkeys    刷新允许的键模式列表。\n    #  ><password>  将此密码添加到用户的有效密码列表中。\n    #               例如> mypass将\"mypass\"添加到列表中。\n    #               此指令清除\"no pass\"标志（请参阅下文）。\n    #  <<password>  从有效密码列表中删除此密码。\n    #  nopass       用户的所有设置密码都将被删除，并且该用户被标记为不需要密码：这意味着每个密码都将对该用户起作用。\n    #               如果此指令用于默认用户，则每个新连接都将立即通过默认用户进行身份验证，而无需任何显式的AUTH命令。\n    #               请注意，\"resetpass\"指令将清除此情况。\n    #  resetpass    刷新允许的密码列表。 此外，删除\"nopass\"状态。 在\"重置密码\"之后，\n    #               用户将没有关联的密码，并且没有添加一些密码（或稍后将其设置为\"nopass\"）就无法进行身份验证的方法。\n    #  reset        执行以下动作: resetpass, resetkeys, off, -@all. 用户返回到创建后立即具有的相同状态。\n    #\n    # ACL规则可以以任何顺序指定：例如，您可以以密码，标志或密钥模式开头。 但是请注意，加法和减法规则将根据订购顺序进行更改。\n    # 例如，请参见以下示例：\n    #\n    #   user alice on +@all -DEBUG ~* >somepassword\n    #\n    # 这将允许\"alice\"使用除DEBUG命令之外的所有命令，因为+ @ all将所有命令添加到了alice可以使用的命令集中，并且后来删除了DEBUG。\n    # 但是，如果我们颠倒两个ACL规则的顺序，结果将是不同的：\n    #\n    #   user alice on -DEBUG +@all ~* >somepassword\n    #\n    # 现在，当alice在允许的命令集中还没有命令时，DEBUG被删除，之后又添加了所有命令，因此用户将能够执行所有操作。\n    #\n    # 基本上，ACL规则是从左到右处理的。\n    #\n    # 有关ACL配置的更多信息，请参阅Redis网站https://redis.io/topics/acl\n\n    # ACL日志\n    #\n    # ACL日志跟踪与ACL相关的失败命令和身份验证事件。 ACL日志可用于对ACL阻止的失败命令进行故障排除。 \n    # ACL日志存储在其中并消耗内存。 它的长度没有限制。您可以使用ACL LOG RESET回收内存，也可以在下面设置最大长度。\n    acllog-max-len 128\n\n    # 使用外部ACL文件\n    #\n    # 除了在此文件中配置用户外，还可以使用仅列出用户的独立文件。 两种方法不能混合使用：\n    # 如果在此处配置用户并同时激活外部ACL文件，则服务器将拒绝启动。\n    #\n    # 外部ACL用户文件的格式与redis.conf内部用来描述用户的格式完全相同。\n    #\n    # aclfile /etc/redis/users.acl\n\n    # 重要说明：从Redis 6开始，\"requirepass\"只是新ACL系统之上的兼容性层。 选项效果将只是为默认用户设置密码。\n    # 客户端仍然可以像往常一样使用AUTH <password>进行身份验证，或者如果它们遵循新协议，\n    # 则可以使用AUTH default <password>进行更明确的身份验证：两者都可以使用。\n    #\n    # requirepass foobared\n    requirepass 26Rgj^86*SN7y%\n\n    # 命令重命名（不建议使用）。\n    #\n    # ------------------------------------------------------------------------\n    # 警告：尽可能避免使用此选项。 而是使用ACL从默认用户中删除命令，并将其仅放置在您出于管理目的而创建的某些admin用户中。\n    # ------------------------------------------------------------------------\n    #\n    # 可以在共享环境中更改危险命令的名称。 例如，可以将CONFIG命令重命名为一些难以猜测的名称，以便它仍可用于内部使用的工具，但不适用于一般客户。\n    #\n    # 示例：\n    #\n    # rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52\n    #\n    # 也可以通过将命令重命名为空字符串来完全终止命令：\n    #\n    # rename-command CONFIG \"\"\n    #\n    # 请注意，更改登录到AOF文件或传输到副本的命令的名称可能会导致问题。\n\n    ################################### CLIENTS ####################################\n\n    # 设置同时连接的最大客户端数。 默认情况下，此限制设置为10000个客户端，\n    # 但是，如果Redis服务器无法配置进程文件限制以允许指定的限制，\n    # 则允许的最大客户端数将设置为当前文件限制减去32（因为Redis保留了 内部使用的文件描述符很少）。\n    #\n    # 一旦达到限制，Redis将关闭所有新连接，并发送错误消息\"已达到最大客户端数\"。\n    #\n    # maxclients 10000\n\n    ############################## MEMORY MANAGEMENT ################################\n\n    # 设置内存使用限制为指定的字节数。\n    # 当达到内存限制时，Redis将尝试根据所选的逐出策略来删除密钥（请参阅maxmemory-policy）。\n    #\n    # 如果Redis无法根据该策略删除密钥，或者如果该策略设置为'noeviction'，\n    # 则Redis将开始对将使用更多内存的命令（例如SET，LPUSH等）进行错误回复，并会 继续回复诸如GET之类的只读命令。\n    #\n    # 当将Redis用作LRU或LFU缓存，或为实例设置硬盘限制（使用\"noeviction\"策略）时，此选项通常很有用。\n    #\n    # 警告：如果您将副本附加到实例上且maxmemory处于打开状态，则从使用的内存数量中减去提供副本所需的输出缓冲区的大小，\n    # 以便网络问题/重新同步不会触发收回密钥的循环，反过来，副本的输出缓冲区已满，有被驱逐的DEL密钥触发了更多密钥的删除，\n    # 依此类推，直到数据库完全清空。\n    #\n    # 简而言之...如果您附加了副本，建议您设置maxmemory的下限，\n    # 以便系统上有一些可用RAM用于副本输出缓冲区（但是如果策略为'noeviction'，则不需要这样做） 。\n    #\n    # maxmemory <bytes>\n\n    # MAXMEMORY POLICY：达到maxmemory时，Redis将如何选择要删除的内容。 您可以从以下行为中选择一种：\n    #\n    # volatile-lru -> 使用近似的LRU驱逐，只有具有过期集的key。\n    # allkeys-lru -> 使用近似的LRU退出任何key。\n    # volatile-lfu -> 使用近似的LFU驱逐，只有具有过期集的key。\n    # allkeys-lfu -> 使用近似的LFU退出任何key。\n    # volatile-random -> 删除具有过期设置的随机key。\n    # allkeys-random -> 删除随机key，任何key。\n    # volatile-ttl -> 删除最接近到期时间（较小的TTL）的key\n    # noeviction -> 不要逐出任何东西，只需在写操作中返回错误。\n    #\n    # LRU表示最近最少使用\n    # LFU表示最少使用\n    #\n    # LRU，LFU和volatile-ttl均使用近似随机算法实现。\n    #\n    # 注意：使用上述任何策略时，如果没有合适的退出键，Redis将在写入操作中返回错误。\n    #\n    #       At the date of writing these commands are: set setnx setex append\n    #       incr decr rpush lpush rpushx lpushx linsert lset rpoplpush sadd\n    #       sinter sinterstore sunion sunionstore sdiff sdiffstore zadd zincrby\n    #       zunionstore zinterstore hset hsetnx hmset hincrby incrby decrby\n    #       getset mset msetnx exec sort\n    #\n    # 默认为：\n    #\n    # maxmemory-policy noeviction\n\n    # LRU，LFU和最小TTL算法不是精确算法，而是近似算法（以节省内存），因此您可以调整它的速度或准确性。 \n    # 对于默认情况，Redis将检查五个键并选择最近使用的键，您可以使用以下配置指令更改样本大小。\n    #\n    # 默认值5产生足够好的结果。 10非常接近真实的LRU，但是会花费更多的CPU。 3更快，但不是很准确。\n    #\n    # maxmemory-samples 5\n\n    # 从Redis 5开始，默认情况下，副本将忽略其maxmemory设置（除非在故障转移后或手动提升为主副本）。\n    # 这意味着密钥的移出将仅由主服务器处理，将DEL命令作为副本在主计算机侧逐出，将DEL命令发送到副本。\n    #\n    # 此行为可确保主副本和副本副本保持一致，这通常是您想要的，但是，如果副本副本是可写的，\n    # 或者您希望副本副本具有不同的内存设置，并且您确定对副本副本执行的所有写入都是幂等的 ，那么您可以更改此默认设置（但请务必了解您在做什么）。\n    #\n    # 请注意，由于默认情况下该副本不会退出，所以它可能会比使用maxmemory设置的一组内存占用更多的内存（\n    # 某些缓冲区在副本上可能会更大，或者数据结构有时会占用更多内存，依此类推）。 \n    # 因此，请确保您监视副本，并确保副本具有足够的内存，以便在主副本达到配置的最大内存设置之前，永远不会达到真正的内存不足状态。\n    #\n    # replica-ignore-maxmemory yes\n\n    # Redis有两种回收过期密钥的方法：访问时发现这些密钥已过期，以及在后台，称为\"活动过期密钥\"。\n    # 缓慢地，交互地扫描密钥空间，以查找要回收的过期密钥，以便可以释放已过期且不久之后将不再访问的密钥的内存。\n    #\n    # 过期周期的默认工作将尝试避免在内存中保留超过百分之十的过期密钥，并尝试避免消耗超过总内存的25％并增加系统延迟。\n    # 但是，可以将通常设置为\"1\"的过期\"努力\"增加到更大的值，直到值\"10\"。\n    # 系统将以其最大值使用更多的CPU，更长的周期（并且从技术上讲可能会引入更多的延迟），并将减少仍然存在于系统中的已过期密钥的数量。\n    # 在内存，CPU和延迟之间进行权衡。\n    #\n    # active-expire-effort 1\n\n    ############################# LAZY FREEING(懒惰释放) ####################################\n\n    # Redis有两个删除键的原语。 一种称为DEL，它是对象的阻塞删除。 这意味着服务器停止处理新命令，以便以同步方式回收与对象关联的所有内存。 \n    # 如果删除的键与一个小对象相关联，则执行DEL命令所需的时间非常短，可与Redis中的大多数其他O（1）或O（log_N）命令相提并论。\n    # 但是，如果键与包含数百万个元素的聚合值关联，则服务器可能会阻塞很长时间（甚至几秒钟）以完成操作。\n    #\n    # 由于上述原因，Redis还提供了非阻塞删除原语，例如UNLINK（非阻塞DEL）以及FLUSHALL和FLUSHDB命令的ASYNC选项，以便在后台回收内存。\n    # 这些命令在固定时间内执行。 另一个线程将尽可能快地在后台逐渐释放对象。\n    #\n    # FLUSHALL和FLUSHDB的DEL，UNLINK和ASYNC选项是用户控制的。\n    # 由应用程序的设计决定何时使用一个或另一个是一个好主意。 但是，Redis服务器有时必须删除键或刷新整个数据库，这是其他操作的副作用。\n    # 特别是在以下情况下，Redis会独立于用户调用删除对象：\n    #\n    # 1) 逐出时，由于maxmemory和maxmemory策略配置，以便在不超出指定的内存限制的情况下为新数据腾出空间。\n    # 2) 因为到期：必须从内存中删除具有相关生存时间的密钥（请参阅EXPIRE命令）。\n    # 3) 由于将数据存储在可能已经存在的键上的命令的副作用。 例如，当RENAME命令被另一旧密钥内容替换时，它可能会删除它。\n    #    同样，SUNIONSTORE或SORT with STORE选项可能会删除现有密钥。 SET命令本身会删除指定键的所有旧内容，以便将其替换为指定的字符串。\n    # 4) 在复制期间，当副本与其主副本执行完全重新同步时，将删除整个数据库的内容，以便加载刚传输的RDB文件。\n    #\n    # 在上述所有情况下，默认设置都是以阻塞方式删除对象，就像调用DEL一样。 \n    # 但是，您可以专门配置每种情况，以便使用以下配置指令以非阻塞方式释放内存，例如调用UNLINK的情况。\n\n    lazyfree-lazy-eviction no\n    lazyfree-lazy-expire no\n    lazyfree-lazy-server-del no\n    replica-lazy-flush no\n\n    # 对于将用户代码DEL调用替换为UNLINK调用并不容易的情况，也可以使用以下配置指令将DEL命令的默认行为修改为与UNLINK完全相同：\n\n    lazyfree-lazy-user-del no\n\n    ################################ THREADED I/O #################################\n\n    # Redis主要是单线程的，但是有一些线程操作，例如UNLINK，缓慢的I/O访问和其他在侧线程上执行的操作。\n    #\n    # 现在，还可以在不同的I/O线程中处理Redis客户端套接字的读写。\n    # 由于特别慢的写入速度，因此Redis用户通常使用流水线以加快每个内核的Redis性能，并生成多个实例以扩大规模。\n    # 使用I/O线程可以轻松地将Redis加速两次，而无需求助于实例的流水线处理或分片。\n    #\n    # 默认情况下，线程处于禁用状态，我们建议仅在具有至少4个或更多内核的计算机上启用该功能，并至少保留一个备用内核。\n    # 使用8个以上的线程不太可能有很大帮助。\n    # 我们还建议仅在确实存在性能问题时才使用线程I/O，Redis实例可以使用很大一部分CPU时间，否则就没有必要使用此功能。\n    #\n    # 例如，如果您有四个核的core，请尝试使用2或3个I/O线程，如果您有8个核，请尝试使用6个线程。 为了启用I/O线程，请使用以下配置指令：\n    #\n    # io-threads 4\n    #\n    # 将io-threads设置为1只会照常使用主线程。\n    # 启用I/O线程后，我们仅将线程用于写操作，即对write（2）系统调用进行线程化，并将客户端缓冲区传输到套接字。\n    # 但是，也可以通过将以下配置指令设置为yes来启用读取线程和协议解析功能：\n    #\n    # io-threads-do-reads no\n    #\n    # 通常，线程读取无济于事。\n    #\n    # 注意1：无法在运行时通过CONFIG SET更改此配置伪指令。 启用SSL时，Aso此功能当前不起作用。\n    #\n    # 注意2：如果要使用redis-benchmark测试Redis加速，请确保还以线程模式运行基准测试本身，使用--threads选项匹配Redis thead的数量，\n    # 否则您将无法使用 注意到改进。\n\n    ############################## APPEND ONLY MODE(追加模式) ###############################\n\n    # 默认情况下，Redis异步将数据集转储到磁盘上。 此模式在许多应用程序中已经足够好，\n    # 但是Redis进程问题或电源中断可能会导致几分钟的写入丢失（取决于配置的保存点）。\n    #\n    # 仅附加文件是一种替代的持久性模式，可提供更好的持久性。 例如，使用默认数据fsync策略（请参阅配置文件中的稍后内容），\n    # Redis可能在服务器断电等严重事件中丢失一秒钟的写入，如果Redis进程本身发生错误，则一次写入将丢失一次，但是 操作系统仍在正常运行。\n    #\n    # 可以同时启用AOF和RDB持久性，而不会出现问题。\n    # 如果启动时启用了AOF，则Redis将加载AOF，即具有更好持久性的文件。\n    #\n    # 请检查http://redis.io/topics/persistence了解更多信息。\n\n    appendonly no\n\n    # 仅附加文件的名称（默认值：\"appendonly.aof\"）\n\n    appendfilename \"appendonly.aof\"\n\n    # fsync（）调用告诉操作系统将数据实际写入磁盘，而不是等待输出缓冲区中的更多数据。\n    # 有些操作系统确实会刷新磁盘上的数据，而另一些操作系统只会尝试尽快完成该操作。\n    #\n    # Redis支持三种不同的模式：\n    #\n    # no: 不要fsync，只要让OS在需要时刷新数据即可。 Faster 始终：每次写入仅附加日志后，fsync。 慢，最安全。 everysec：每秒仅同步一次fsync。 妥协。\n    #\n    # 默认值为\"everysec\"，因为这通常是速度和数据安全性之间的正确折衷。\n    # 您可以了解是否可以将其放松为\"no\"，这将使操作系统在需要时刷新输出缓冲区，\n    # 以获得更好的性能（但是如果您可以忍受某些数据丢失的想法，\n    # 请考虑使用默认的持久性模式 （即快照），或者相反，使用\"总是\"，该速度非常慢，但比秒安全。\n    #\n    # 更多详细信息，请查看以下文章：\n    # http://antirez.com/post/redis-persistence-demystified.html\n    #\n    # 如果不确定，请使用\"everysec\"。\n\n    # appendfsync always\n    appendfsync everysec\n    # appendfsync no\n\n    # 当AOF fsync策略设置为always或everysec，并且后台保存进程（后台保存或AOF日志后台重写）对磁盘执行大量I/O时，\n    # 在某些Linux配置中，Redis可能会阻塞太长时间 fsync（）调用。\n    # 请注意，目前尚无此修复程序，因为即使在其他线程中执行fsync也将阻止我们的同步write（2）调用。\n    #\n    # 为了减轻此问题，可以使用以下选项，以防止在进行BGSAVE或BGREWRITEAOF时在主进程中调用fsync（）。\n    #\n    # 这意味着当另一个孩子正在保存时，Redis的持久性与\"appendfsync none\"相同。\n    # 实际上，这意味着在最坏的情况下（使用默认的Linux设置）可能会丢失多达30秒的日志。\n    #\n    # 如果您有延迟问题，请将其设为\"是\"。 否则，从耐久性的角度来看，将其保留为\"否\"是最安全的选择。\n\n    no-appendfsync-on-rewrite no\n\n    # 自动重写仅附加文件。\n    # 当AOF日志大小增加指定百分比时，Redis可以自动重写日志文件，隐式调用BGREWRITEAOF。\n    #\n    # 它是这样工作的：Redis会在最近一次重写后记住AOF文件的大小（如果自重新启动以来未发生任何重写，则使用启动时AOF的大小）。\n    #\n    # 将此基本大小与当前大小进行比较。 如果当前大小大于指定的百分比，则触发重写。\n    # 另外，您需要指定要重写的AOF文件的最小大小，这对于避免重写AOF文件非常有用，即使达到百分比增加，但它仍然很小。\n    #\n    # 指定零百分比以禁用自动AOF重写功能。\n\n    auto-aof-rewrite-percentage 100\n    auto-aof-rewrite-min-size 64mb\n\n    # 当AOF数据重新加载到内存中时，在Redis启动过程中可能会发现AOF文件在末尾被截断。\n    # 这可能在运行Redis的系统崩溃时发生，尤其是在没有data = ordered选项的情况下挂载ext4文件系统时（\n    # 但是当Redis本身崩溃或中止但操作系统仍然可以正常工作时，这不会发生）。\n    #\n    # Redis在发生这种情况时可能会退出并显示错误，也可能会加载尽可能多的数据（当前为默认值），\n    # 如果发现AOF文件在末尾被截断，则会重新启动。 以下选项控制此行为。\n    #\n    # 如果aof-load-truncated设置为yes，则将加载截短的AOF文件，并且Redis服务器将开始发出日志以将事件通知用户。\n    # 否则，如果该选项设置为no，则服务器将中止并显示错误并拒绝启动。\n    # 如果将该选项设置为no，则用户需要在重新启动服务器之前使用\"redis-check-aof\"实用程序修复AOF文件。\n    #\n    # 请注意，如果在中间发现AOF文件已损坏，则服务器仍将退出并出现错误。 仅当Redis尝试从AOF文件读取更多数据但找不到足够的字节时，此选项才适用。\n    aof-load-truncated yes\n\n    # 重写AOF文件时，Redis可以使用AOF文件中的RDB前同步码来更快地进行重写和恢复。 启用此选项后，重写的AOF文件由两个不同的节组成：\n    #\n    #   [RDB file][AOF tail]\n    #\n    # 加载时，Redis会识别AOF文件以\"REDIS\"字符串开头并加载带前缀的RDB文件，然后继续加载AOF尾部。\n    aof-use-rdb-preamble yes\n\n    ################################ LUA SCRIPTING(LUA脚本)  ###############################\n\n    # Lua脚本的最大执行时间（以毫秒为单位）。\n    #\n    # 如果达到了最大执行时间，则Redis将记录脚本在允许的最大时间后仍在执行中，并将开始以错误答复查询。\n    #\n    # 当长时间运行的脚本超过最大执行时间时，仅SCRIPT KILL和SHUTDOWN NOSAVE命令可用。\n    # 第一个可用于停止尚未调用写命令的脚本。\n    # 第二种是在脚本已发出写命令但用户不想等待脚本自然终止的情况下关闭服务器的唯一方法。\n    #\n    # 将其设置为0或负值以无警告地无限执行。\n    lua-time-limit 5000\n\n    ################################ REDIS CLUSTER  ###############################\n\n    # 普通Redis实例不能属于Redis集群； 只有作为群集节点启动的节点可以。 为了将Redis实例作为群集节点启动，请在不注释以下内容的情况下启用群集支持：\n    #\n    # cluster-enabled yes\n\n    # 每个群集节点都有一个群集配置文件。 该文件不适合手工编辑。 它由Redis节点创建和更新。\n    # 每个Redis群集节点都需要一个不同的群集配置文件。\n    # 确保在同一系统上运行的实例没有重叠的集群配置文件名。\n    #\n    # cluster-config-file nodes-6379.conf\n\n    # 群集节点超时是一个节点必须不可达的毫秒数，才能将其视为故障状态。\n    # 其他大多数内部时间限制是节点超时的倍数。\n    #\n    # cluster-node-timeout 15000\n\n    # 如果发生故障的主副本的数据看起来太旧，它将避免启动故障转移。\n    #\n    # 没有一种简单的方法可以使副本实际上具有其\"数据寿命\"的准确度量，因此执行以下两项检查：\n    #\n    # 1) 如果存在多个能够进行故障转移的副本，则它们会交换消息，以便尝试利用具有最佳复制偏移量（处理了更多来自主数据库的数据）的副本来获得优势。\n    #    副本将尝试按偏移量获取其等级，并将一个与它们的等级成比例的延迟应用于故障转移。\n    #\n    # 2) 每个单个副本都会计算与其母版之间最后一次交互的时间。\n    #    这可以是最后收到的ping或命令（如果主服务器仍处于\"已连接\"状态），也可以是自从与主服务器断开连接以来经过的时间（如果复制链接当前已关闭）。\n    #    如果最后一次交互太旧，副本将完全不会尝试故障转移。\n    #\n    # 用户可以调整点\"2\"。 具体而言，如果自从上次与主服务器进行交互以来，经过的时间大于以下时间，则副本将不执行故障转移：\n    #\n    #   (node-timeout * replica-validity-factor) + repl-ping-replica-period\n    #\n    # 因此，例如，如果节点超时为30秒，并且副本有效性因子为10，并且假定默认的repl-ping-replica-period值为10秒，\n    # 则副本将无法尝试进行故障转移，如果它不能 与主对话时间超过310秒。\n    #\n    # 较大的副本有效性因子可能会使数据过旧的副本无法对主副本进行故障转移，而值太小可能会使群集根本无法选择副本。\n    #\n    # 为了获得最大可用性，可以将复制品有效性因子设置为0，这意味着，复制品将始终尝试对主数据库进行故障转移，而不考虑它们与主数据库的最后一次交互。\n    # （但是，他们将始终尝试应用与其偏移等级成比例的延迟）。\n    #\n    # 零是唯一能够确保所有分区恢复正常后，群集将始终能够继续运行的值。\n    #\n    # cluster-replica-validity-factor 10\n\n    # 群集副本能够迁移到孤立的主数据库，即那些没有工作副本的主数据库。\n    # 这样可以提高群集抵御故障的能力，因为如果没有工作副本，孤立的主节点在发生故障的情况下将无法进行故障转移。\n    #\n    # 仅当旧的主副本仍存在至少给定数量的其他工作副本时，副本副本才会迁移到孤立的主副本。\n    # 这个数字是\"移民壁垒\"。 迁移障碍为1表示仅当副本数据库的主副本上至少有1个其他工作副本时，副本副本才会迁移。\n    # 它通常反映出集群中每个主数据库所需的副本数。\n    #\n    # 默认为1（副本仅在其主数据库保留至少一个副本时迁移）。 要禁用迁移，只需将其设置为非常大的值即可。\n    # 可以设置为0，但仅对调试和生产危险有用。\n    #\n    # cluster-migration-barrier 1\n\n    # 默认情况下，如果Redis Cluster节点检测到至少发现一个哈希槽（没有可用的节点正在为其提供服务），它们将停止接受查询。\n    # 这样，如果集群部分关闭（例如，不再覆盖哈希槽的范围），则所有集群最终将变得不可用。\n    # 重新覆盖所有插槽后，它将自动返回可用状态。\n    #\n    # 但是有时您希望集群的子集正常工作，以继续接受对仍覆盖的部分键空间的查询。 为此，只需将cluster-require-full-coverage选项设置为no。\n    #\n    # cluster-require-full-coverage yes\n\n    # 此选项设置为yes时，可防止副本在主服务器发生故障时尝试对其主服务器进行故障转移。 但是，主服务器仍然可以执行手动故障转移（如果被迫执行）。\n    #\n    # 这在不同的情况下很有用，尤其是在多个数据中心操作的情况下，如果我们希望在完全DC故障的情况下不对一侧进行升级，则这是不希望的。\n    #\n    # cluster-replica-no-failover no\n\n    # 此选项设置为yes时，只要集群认为自己拥有插槽，就可以在集群处于关闭状态时为节点提供读取流量。\n    #\n    # 这在两种情况下很有用。 第一种情况是在节点故障或网络分区期间应用程序不需要数据一致性时。\n    # 缓存的一个例子，只要节点拥有数据，它就应该能够为它服务。\n    #\n    # 第二个用例是用于不符合建议的三个分片但希望启用集群模式并在以后扩展的配置。\n    # 如果没有设置此选项，则在1或2分片配置中的主服务器中断会导致整个集群的读/写中断，只有在设置了该选项的情况下，才会发生写中断。\n    # 如果没有法定人数的主持人，则插槽所有权不会自动更改。\n    #\n    # cluster-allow-reads-when-down no\n\n    # 为了设置您的集群，请确保阅读文档\n    # 可从http://redis.io网站获得。\n\n    ########################## CLUSTER DOCKER/NAT support  ########################\n\n    # 在某些部署中，Redis Cluster节点的地址发现失败，这是因为地址经过NAT限制或端口被转发（典型情况是Docker和其他容器）。\n    #\n    # 为了使Redis Cluster在这样的环境中工作，需要一个静态配置，其中每个节点都知道其公共地址。 以下两个选项用于此范围，分别是：\n    #\n    # * cluster-announce-ip\n    # * cluster-announce-port\n    # * cluster-announce-bus-port\n    #\n    # 每个命令都向节点指示其地址，客户端端口和集群消息总线端口。 然后将信息发布在总线数据包的标头中，以便其他节点将能够正确映射发布信息的节点的地址。\n    #\n    # 如果未使用上述选项，则将使用常规的Redis群集自动检测。\n    #\n    # 请注意，重新映射后，总线端口可能不在客户端端口+ 10000的固定偏移处，因此您可以根据重新映射的方式指定任何端口和总线端口。\n    # 如果未设置总线端口，通常将使用10000的固定偏移量。\n    #\n    # 示例：\n    #\n    # cluster-announce-ip 10.1.1.5\n    # cluster-announce-port 6379\n    # cluster-announce-bus-port 6380\n\n    ################################## SLOW LOG ###################################\n\n    # Redis Slow Log是一个用于记录超过指定执行时间的查询的系统。\n    # 执行时间不包括与客户端交谈，发送回复等I/O操作，而是实际执行命令所需的时间（\n    # 这是命令执行的唯一阶段，在该阶段线程被阻塞并且可以 在此期间不满足其他要求）。\n    #\n    # 您可以使用以下两个参数配置慢速日志：一个告诉Redis，为了使命令被记录，执行时间要超过多少微秒，而另一个参数是慢速日志的长度。\n    # 记录新命令时，最旧的命令将从记录的命令队列中删除。\n\n    # 以下时间以微秒表示，因此1000000等于一秒。 请注意，负数将禁用慢速日志记录，而零值将强制记录每个命令。\n    slowlog-log-slower-than 10000\n\n    # 此长度没有限制。 请注意，它将消耗内存。\n    # 您可以使用SLOWLOG RESET回收慢速日志使用的内存。\n    slowlog-max-len 128\n\n    ################################ LATENCY MONITOR(延迟监视) ##############################\n\n    # Redis延迟监视子系统会在运行时对不同的操作进行采样，以收集与Redis实例的潜在延迟源相关的数据。\n    #\n    # 通过LATENCY命令，该信息可供打印图形并获取报告的用户使用。\n    #\n    # 系统仅记录在等于或大于通过delay-monitor-threshold配置指令指定的毫秒数内执行的操作。 当其值设置为零时，等待时间监视器将关闭。\n    #\n    # 默认情况下，延迟监视是禁用的，因为如果您没有延迟问题，通常不需要它，并且收集数据会对性能产生影响，尽管影响很小，但是可以在大负载下进行测量。\n    # 如果需要，可以在运行时使用命令\"CONFIG SET delay-monitor-threshold <milliseconds>\"轻松启用延迟监视。\n    latency-monitor-threshold 0\n\n    ############################# EVENT NOTIFICATION(活动通知) ##############################\n\n    # Redis可以将关键空间中发生的事件通知给发布/订阅客户端。\n    # 此功能记录在http://redis.io/topics/notifications\n    #\n    # 例如，如果启用了键空间事件通知，并且客户端对存储在数据库0中的键\"foo\"执行了DEL操作，则将通过Pub / Sub发布两条消息：\n    #\n    # PUBLISH __keyspace@0__:foo del\n    # PUBLISH __keyevent@0__:del foo\n    #\n    # 可以在一组类中选择Redis将通知的事件。 每个类都由一个字符标识：\n    #\n    #  K     键空间事件，以__keyspace@<db>__前缀发布。\n    #  E     键事件，以__keyevent@<db>__前缀发布。\n    #  g     通用命令（非类型专用），例如DEL，EXPIRE，RENAME，...\n    #  $     字符串命令\n    #  l     列出命令\n    #  s     设定指令\n    #  h     哈希命令\n    #  z     排序集命令\n    #  x     过期事件（每次密钥过期时生成的事件）\n    #  e     驱逐事件（驱逐密钥以获取最大内存时生成的事件）\n    #  t     流命令\n    #  m     按键缺失事件（注意：它不包含在\"A\"类中）\n    #  A     g$lshzxet的别名，以便\"AKE\"字符串表示所有事件（由于键丢失事件的独特性质，这些键事件被排除在\"A\"之外）。\n    #\n    # \"notify-keyspace-events\"将由零个或多个字符组成的字符串作为参数。 空字符串表示已禁用通知。\n    #\n    #  Example: to enable list and generic events, from the point of view of the\n    #           event name, use:\n    #\n    #  notify-keyspace-events Elg\n    #\n    #  Example 2: to get the stream of the expired keys subscribing to channel\n    #             name __keyevent@0__:expired use:\n    #\n    #  notify-keyspace-events Ex\n    #\n    # 默认情况下，所有通知均被禁用，因为大多数用户不需要此功能，并且该功能会有一些开销。 请注意，如果您未指定K或E中的至少一个，则不会传递任何事件。\n    notify-keyspace-events \"\"\n\n    ############################### GOPHER SERVER #################################\n\n    # Redis包含RFC 1436（https://www.ietf.org/rfc/rfc1436.txt）中指定的Gopher协议的实现。\n    #\n    # Gopher协议在90年代后期非常流行。 它是Web的替代方法，服务器和客户端的实现是如此简单，以至于Redis服务器只有100行代码才能实现这种支持。\n    #\n    # 您现在如何使用Gopher？ 好吧，Gopher从未真正死过，最近出现了一种运动，目的是使Gopher具有更多层次结构的内容（仅由纯文本文档组成）得以复活。\n    # 有些人希望使用更简单的互联网，另一些人则认为主流互联网已变得过于可控，为想要一点新鲜空气的人们创造替代空间很酷。\n    #\n    # 无论如何，在Redis诞生10周年之际，我们给了它Gopher协议作为礼物。\n    #\n    #   - - 怎么运行的？ ---\n    #\n    # Redis Gopher支持使用Redis的内联协议，特别是两种仍然非法的内联请求：空请求或任何以\"/\"开头的请求（没有以这样的斜杠开头的Redis命令）。\n    # 正常的RESP2/RESP3请求完全超出了Gopher协议实现的范围，并且通常也得到满足。\n    #\n    # 如果在启用Gopher时打开与Redis的连接，并向其发送\"/ foo\"之类的字符串，则如果存在名为\"/ foo\"的密钥，则会通过Gopher协议为其提供服务。\n    #\n    # 为了创建一个真正的Gopher\"hole\"（Gopher对话中Gopher站点的名称），您可能需要类似以下的脚本：\n    #\n    #   https://github.com/antirez/gopher2redis\n    #\n    #   - - 安全警告  - -\n    #\n    # 如果您打算将Redis放在服务器Gopher页面的公共访问地址上，请确保为实例设置密码。\n    # 设置密码后：\n    #\n    #   1. Gopher服务器（启用后，默认情况下未启用）仍将通过Gopher提供内容。\n    #   2. 但是，在客户端进行身份验证之前无法调用其他命令。\n    #\n    # 因此，请使用'requirepass'选项保护您的实例。\n    #\n    # 要启用Gopher支持，请取消注释以下行，并将选项从no（默认）设置为yes。\n    #\n    # gopher-enabled no\n\n    ############################### ADVANCED CONFIG ###############################\n\n    # 当哈希条目数较少且最大条目数不超过给定阈值时，将使用内存高效的数据结构对其进行编码。 可以使用以下指令配置这些阈值。\n    hash-max-ziplist-entries 512\n    hash-max-ziplist-value 64\n\n    # 列表也以特殊方式编码，以节省大量空间。\n    # 每个内部列表节点允许的条目数可以指定为固定的最大大小或最大元素数。\n    # 对于固定的最大大小，请使用-5到-1，表示：\n    # -5：最大大小：64 Kb <-不建议用于正常工作负载\n    # -4：最大大小：32 Kb <-不推荐\n    # -3：最大大小：16 Kb <-可能不建议\n    # -2：最大大小：8 Kb  <-好\n    # -1：最大大小：4 Kb  <-好\n    # 正数表示每个列表节点最多存储_exactly_个元素。\n    # 最高性能的选项通常是-2（8 Kb大小）或-1（4 Kb大小），但是如果您的用例是唯一的，请根据需要调整设置。\n    list-max-ziplist-size -2\n\n\n    # 列表也可能被压缩。\n    # 压缩深度是从列表的*each*侧到*exclude*压缩的快速列表ziplist节点的数量。为了快速执行 push/pop 出操作，列表的开头和结尾始终未压缩。 设置为：\n    # 0: 禁用所有列表压缩\n    # 1: 深度1表示\"直到头上有1个节点之后，才开始压缩\"\n    #    So: [head]->node->node->...->node->[tail]\n    #    [head], [tail] will always be uncompressed; inner nodes will compress.\n    # 2: [head]->[next]->node->node->...->node->[prev]->[tail]\n    #    这里的2表示：不要压缩head或head-> next或tail-> prev或tail，而是压缩它们之间的所有节点。\n    # 3: [head]->[next]->[next]->node->node->...->node->[prev]->[prev]->[tail]\n    # 等\n    list-compress-depth 0\n\n    # 集仅在一种情况下具有特殊的编码：当集仅由字符串组成，这些字符串恰好是基数10中的整数，范围为64位有符号整数。\n    # 以下配置设置设置了大小限制，以便使用此特殊的内存节省编码。\n    set-max-intset-entries 512\n\n    # 与散列和列表类似，对排序集也进行了特殊编码，以节省大量空间。 仅当排序集的长度和元素低于以下限制时，才使用此编码：\n    zset-max-ziplist-entries 128\n    zset-max-ziplist-value 64\n\n    # HyperLogLog稀疏表示字节数限制。 限制包括16个字节的标头。 当使用稀疏表示的HyperLogLog超过此限制时，它将转换为密集表示。\n    #\n    # 大于16000的值是完全没有用的，因为那时候密集表示的存储效率更高。\n    #\n    # 建议的值是〜3000，以便在不减慢PFADD的情况下获得节省空间编码的优点，而PFADD的稀疏编码为O（N）。\n    # 当不关心CPU但空间很大时，该值可以提高到10000，并且数据集由基数在0-15000范围内的许多HyperLogLog组成。\n    hll-sparse-max-bytes 3000\n\n    # 流宏节点的最大大小/项目。 流数据结构是一个大节点的基数树，它对内部的多个项目进行编码。\n    # 使用此配置，可以配置单个节点的大小（以字节为单位），以及在添加新的流条目时切换到新节点之前它可能包含的最大项目数。\n    # 如果以下任何设置被设置为零，则该限制将被忽略，例如，可以通过将max-bytes设置为0并将max-entries设置为所需值来仅设置最大整体限制。\n    stream-node-max-bytes 4096\n    stream-node-max-entries 100\n\n    # 主动重新哈希处理每100毫秒CPU时间使用1毫秒，以帮助重新哈希主Redis哈希表（将顶级键映射到值的一个哈希表）。\n    # Redis使用的哈希表实现（请参见dict.c）执行一次懒惰的重新哈希处理：您在要进行哈希处理的哈希表中运行的操作越多，\n    # 执行的哈希处理\"步骤\"就越多，因此，如果服务器空闲，则哈希处理将永远不会完成 散列表使用更多的内存。\n    #\n    # 默认值是每秒使用10毫秒的毫秒数来主动重新哈希主字典，并在可能的情况下释放内存。\n    #\n    # 如果不确定：\n    # 如果您有严格的延迟要求，请使用\"activerehashing no\"，并且在您的环境中，Redis可以不时地以2毫秒的延迟答复查询不是一件好事。\n    #\n    # 如果您没有如此严格的要求，但希望在可能的情况下尽快释放内存，请使用\"activerehashing yes\"。\n    activerehashing yes\n\n    # 客户端输出缓冲区限制可用于出于某些原因强制断开那些没有足够快地从服务器读取数据的客户端（\n    # 常见原因是Pub/Sub客户端无法像发布者所产生的那样快地消费消息。 他们）。\n    #\n    # 可以为三种不同类别的客户端设置不同的限制：\n    #\n    # normal -> 普通客户，包括MONITOR客户\n    # replica  -> 复制客户端\n    # pubsub -> 客户订阅了至少一个pubsub频道或模式\n    #\n    # 每个client-output-buffer-limit指令的语法如下：\n    #\n    # client-output-buffer-limit <class> <hard limit> <soft limit> <soft seconds>\n    #\n    # 一旦达到硬限制，或者达到软限制并且在指定的秒数内（连续）保持达到此限制，客户端将立即断开连接。\n    # 因此，例如，如果硬限制为32兆字节，软限制为16兆字节/ 10秒，则如果输出缓冲区的大小达到32兆字节，客户端将立即断开连接，\n    # 但是如果客户端达到16兆字节，则也将断开连接 并持续超过限制10秒钟。\n    #\n    # 默认情况下，普通客户端不受限制，因为它们不会在不询问的情况下（以推送方式）接收数据，而是在请求之后才接收数据，\n    # 因此只有异步客户端可能会创建这样一种场景：请求数据的速度比读取数据的速度快。\n    #\n    # 相反，对pubsub和副本客户端没有默认限制，因为订阅者和副本以推送方式接收数据。\n    #\n    # 可以通过将硬限制或软限制设置为零来禁用它们。\n    client-output-buffer-limit normal 0 0 0\n    client-output-buffer-limit replica 256mb 64mb 60\n    client-output-buffer-limit pubsub 32mb 8mb 60\n\n    # 客户端查询缓冲区累积新命令。 默认情况下，它们被限制为固定数量，以避免协议去同步（例如，由于客户端中的错误）会导致查询缓冲区中的未绑定内存使用。 # 但是，如果您有非常特殊的需求，例如巨大的multi / exec请求等，则可以在此处进行配置。\n    #\n    # client-query-buffer-limit 1gb\n\n    # 在Redis协议中，批量请求（即表示单个字符串的元素）通常限制为512 mb以上。 但是，您可以在此处更改此限制。\n    #\n    # proto-max-bulk-len 512mb\n\n    # Redis调用一个内部函数来执行许多后台任务，例如在超时时关闭客户端连接，清除从未请求的过期密钥等。\n    #\n    # 并非所有任务都以相同的频率执行，但是Redis根据指定的\"hz\"值检查要执行的任务。\n    #\n    # 默认情况下，\"hz\"设置为10。提高该值将在Redis空闲时使用更多的CPU，但是同时当有多个键同时到期时，它将使Redis的响应速度更快，并且可以使用 更精确。\n    #\n    # 范围在1到500之间，但是值通常不能超过100。 大多数用户应该使用默认值10，并且仅在要求非常低延迟的环境中才将其提高到100。\n    hz 10\n\n    # 通常，与连接的客户端数量成比例的HZ值很有用。 例如，这有助于避免每次后台任务调用处理过多的客户端，从而避免延迟尖峰。\n    #\n    # 由于默认的默认HZ值保守地设置为10，Redis提供并默认启用了使用自适应HZ值的能力，当有许多连接的客户端时，该值将暂时升高。\n    #\n    # 启用动态HZ时，实际配置的HZ将用作基准，但是一旦连接了更多客户端，实际将使用配置的HZ值的倍数。\n    # 这样，空闲实例将占用很少的CPU时间，而忙碌的实例将具有更高的响应速度。\n    dynamic-hz yes\n\n    # 当孩子重写AOF文件时，如果启用以下选项，则每生成32 MB的数据，文件就会进行同步处理。 为了将文件更多地提交到磁盘并避免大的延迟尖峰，这很有用。\n    aof-rewrite-incremental-fsync yes\n\n    # 当redis保存RDB文件时，如果启用以下选项，则每生成32 MB数据将对文件进行fsync处理。 为了将文件更多地提交到磁盘并避免大的延迟尖峰，这很有用。\n    rdb-save-incremental-fsync yes\n\n    # 可以调整Redis LFU逐出（请参阅maxmemory设置）。\n    # 但是，最好从默认设置开始，仅在研究了如何提高性能以及LFU键随时间的变化后才进行更改，可以通过OBJECT FREQ命令进行检查。\n    #\n    # Redis LFU实现中有两个可调参数：计数器对数因子和计数器衰减时间。 重要的是在更改两个参数之前先了解它们的含义。\n    #\n    # LFU计数器每个密钥只有8位，最大值是255，因此Redis使用具有对数行为的概率增量。 给定旧计数器的值，当访问一个键时，计数器以这种方式递增：\n    #\n    # 1. A random number R between 0 and 1 is extracted.\n    # 2. A probability P is calculated as 1/(old_value*lfu_log_factor+1).\n    # 3. The counter is incremented only if R < P.\n    #\n    # 默认的lfu-log-factor是10。这是一个表格，该表格显示频率计数器如何随着具有不同对数因子的不同访问次数而变化：\n    #\n    # +--------+------------+------------+------------+------------+------------+\n    # | factor | 100 hits   | 1000 hits  | 100K hits  | 1M hits    | 10M hits   |\n    # +--------+------------+------------+------------+------------+------------+\n    # | 0      | 104        | 255        | 255        | 255        | 255        |\n    # +--------+------------+------------+------------+------------+------------+\n    # | 1      | 18         | 49         | 255        | 255        | 255        |\n    # +--------+------------+------------+------------+------------+------------+\n    # | 10     | 10         | 18         | 142        | 255        | 255        |\n    # +--------+------------+------------+------------+------------+------------+\n    # | 100    | 8          | 11         | 49         | 143        | 255        |\n    # +--------+------------+------------+------------+------------+------------+\n    #\n    # 注意：上表是通过运行以下命令获得的：\n    #\n    #   redis-benchmark -n 1000000 incr foo\n    #   redis-cli object freq foo\n    #\n    # 注意2：计数器的初始值为5，以便使新对象有机会累积命中数。\n    #\n    # 计数器衰减时间是必须经过的时间（以分钟为单位），以便将密钥计数器除以2（如果值小于等于10，则递减）。\n    #\n    # lfu-decay-time的默认值为1。特殊值0表示每次碰巧扫描计数器都会使其衰减。\n    #\n    # lfu-log-factor 10\n    # lfu-decay-time 1\n\n    ########################## ACTIVE DEFRAGMENTATION(主动碎片整理) #######################\n    #\n    # 什么是主动碎片整理？\n    # -------------------------------\n    #\n    # 通过主动（在线）碎片整理，Redis服务器可以压缩内存中小量分配和释放数据之间剩余的空间，从而可以回收内存。\n    #\n    # 碎片是每个分配器（幸运的是，Jemalloc发生的情况）和某些工作负载都会发生的自然过程。\n    # 通常，需要重新启动服务器以减少碎片，或者至少清除所有数据并重新创建。\n    # 但是，由于Oran Agra为Redis 4.0实现了此功能，因此在服务器运行时，此过程可以在运行时以\"热\"方式进行。\n    #\n    # 基本上，当碎片超过一定级别时（请参阅下面的配置选项），Redis将开始通过利用某些特定的Jemalloc功能在连续的内存区域中创建值的新副本（\n    # 以了解分配是否导致碎片，并 将其分配到更好的位置），同时将释放数据的旧副本。\n    # 对于所有键，以增量方式重复此过程将导致碎片恢复到正常值。\n    #\n    # 重要事项：\n    #\n    # 1. 默认情况下，此功能是禁用的，并且仅当您编译Redis以使用我们随Redis的源代码提供的Jemalloc副本时才起作用。\n    #    这是Linux构建的默认设置。\n    #\n    # 2. 如果没有碎片问题，则无需启用此功能。\n    #\n    # 3. 一旦遇到碎片，您可以在需要时使用命令\"CONFIG SET activedefrag yes\"启用此功能。\n    #\n    # 配置参数能够微调碎片整理过程的行为。 如果您不确定它们的含义，最好不要更改默认值。\n\n    # 启用主动碎片整理\n    # activedefrag no\n\n    # 启动主动碎片整理的最小碎片浪费\n    # active-defrag-ignore-bytes 100mb\n\n    # 启动活动碎片整理的最小碎片百分比\n    # active-defrag-threshold-lower 10\n\n    # 我们最大程度地努力下的最大碎片百分比\n    # active-defrag-threshold-upper 100\n\n    # 在达到下限阈值时使用最小的CPU碎片整理工作\n    # active-defrag-cycle-min 1\n\n    # 在达到上限阈值时使用最大的精力进行碎片整理\n    # active-defrag-cycle-max 25\n\n    # 将在主字典扫描中处理的set / hash / zset / list字段的最大数量\n    # active-defrag-max-scan-fields 1000\n\n    # 默认情况下，将启用用于清除的Jemalloc后台线程\n    jemalloc-bg-thread yes\n\n    # 可以将Redis的不同线程和进程固定到系统中的特定CPU，以最大化服务器的性能。\n    # 这不仅可以在不同的CPU中固定不同的Redis线程，而且还可以确保将在同一主机上运行的多个Redis实例固定到不同的CPU。\n    #\n    # 通常，您可以使用\"taskset\"命令执行此操作，但是在Linux和FreeBSD中，也可以直接通过Redis配置进行此操作。\n    #\n    # 您可以固定服务器/ IO线程，生物线程，aof重写子进程和bgsave子进程。 指定cpu列表的语法与taskset命令相同：\n    #\n    # Set redis server/io threads to cpu affinity 0,2,4,6:\n    # server_cpulist 0-7:2\n    #\n    # Set bio threads to cpu affinity 1,3:\n    # bio_cpulist 1,3\n    #\n    # Set aof rewrite child process to cpu affinity 8,9,10,11:\n    # aof_rewrite_cpulist 8-11\n    #\n    # Set bgsave child process to cpu affinity 1,10,11\n    # bgsave_cpulist 1,10-11\n\nEOF\n```\n\n## 8.2 创建deployment文件\n```bash\ncat >> 1-deployment.yaml << \"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-deployment\n  labels:\n    app: redis\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: redis\n  template:\n    metadata:\n      labels:\n        app: redis\n    spec:\n      containers:\n      - name: redis\n        image: redis:6\n        ports:\n        - containerPort: 6379\n        command:\n            - \"sh\"\n            - \"-c\"\n            - \"redis-server /etc/redis.conf\"\n        volumeMounts:\n        - name: redis-config\n          mountPath: /etc/redis.conf\n          subPath: redis.conf\n      volumes:\n      - name: redis-config\n        configMap:\n          name: redis-config\n          items:\n          - key: redis.conf\n            path: redis.conf\n\nEOF\n```\n\n## 8.3 创建服务暴露\n```bash\ncat >> 2-service.yaml << \"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis\n  labels:\n    app: redis\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n      nodePort: 30003\n  type: NodePort\n  selector:\n    app: redis\n\nEOF\n```\n\n## 8.4 应用\n```bash\nkubectl apply  -f 0-configMap.yaml\nkubectl apply  -f 1-deployment.yaml\nkubectl apply  -f 2-service.yaml\n```\n\n# 九、部署kube-prometheus\n## 9.1 下载解压，修复监控\n```bash\nwget https://ghproxy.com/https://github.com/prometheus-operator/kube-prometheus/archive/refs/tags/v0.12.0.zip\nunzip v0.12.0.zip\ncd kube-prometheus-0.12.0/manifests\n#替换所有granfana版本为9.0.2\nsed -i 's|9.3.2|9.0.2|g' grafana-*\n```\n\n### 1.配置kubeControllermanagerService\n```bash\nmkdir repair-prometheus ;\ncat >> repair-prometheus/kubeControllermanagerService.yaml << \"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  labels: #定义这个service的标签，因为kubernetesControlPlane-serviceMonitorKubeControllerManager.yaml里面定义了这个标签\n      app.kubernetes.io/name: kube-controller-manager\n  name: kube-controller-manager\n  namespace: kube-system        #名称空间是kube-system\nspec:\n  selector:               #这个标签选择器表示我们要关联到kube-controller-manager-master的pod上\n    component: kube-controller-manager  #kubectl get pods kube-controller-manager-master -n kube-system --show-labels\n  ports:\n  - name: https-metrics         #service端口名称，这个名称要与ServiceMonitor的port名称一致\n    port: 10257\n    targetPort: 10257         # kube-controller-manager-master的pod的端口\nEOF\n```\n### 2.配置kubeSchedulerService\n```bash\ncat >> repair-prometheus/kubeSchedulerService.yaml << \"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  labels: #定义这个service的标签，因为kubernetesControlPlane-serviceMonitorKubeScheduler.yaml里面定义了这个标签\n      app.kubernetes.io/name: kube-scheduler\n  name: kube-scheduler\n  namespace: kube-system    #名称空间是kube-system\nspec:\n  selector:           #这个标签选择器表示我们要关联到kube-scheduler的pod上\n    component: kube-scheduler # kubectl get  pods kube-scheduler-master -n kube-system --show-labels\n  ports:\n  - name: https-metrics     #service端口名称，这个名称要与ServiceMonitor的port名称一致\n    port: 10259\n    targetPort: 10259     #kube-scheduler-master的端口\nEOF\n```\n### 3.修改绑定ip(可选,master节点都需执行)\n>还有一点，kube-scheduler-master和kube-controller-manager这2个pod启动的时候默认绑定的地址是127.0.0.1,所以普罗米修斯通过ip去访问\n>就会被拒绝，所以需要修改一下，我们知道这2个系统组件是是以静态pod的方式启动的，所以进入到master节点的静态pod目录\n>如果我们不指定静态pod目录时在哪里，可以通过kubelet查看\n\n```bash\n\n[root@master manifests]# systemctl  status kubelet.service | grep '\\-\\-config'\n           └─429488 /usr/bin/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf --config=/var/lib/kubelet/config.yaml --network-plugin=cni --pod-infra-container-image=registry.aliyuncs.com/google_containers/pause:3.5\n\n[root@master manifests]# grep static /var/lib/kubelet/config.yaml\nstaticPodPath: /etc/kubernetes/manifests\t\t\t\t\t\t#这就是静态pod的目录\n[root@master manifests]#\n\n[root@master ~]# cd /etc/kubernetes/manifests\n[root@master manifests]# grep 192 kube-scheduler.yaml \n    - --bind-address=192.168.118.131\t#修改127.0.0.1为主机的ip,修改为0.0.0.0也行\n        host: 192.168.118.131\t\t\t#其实保持默认127.0.0.1也行\n        host: 192.168.118.131\t\t\t#其实保持默认127.0.0.1也行\n[root@master manifests]# \n\n[root@master manifests]# vim kube-controller-manager.yaml \t\t\n    - --bind-address=192.168.118.131\t#修改127.0.0.1为主机的ip,修改为0.0.0.0也行\n        host: 192.168.118.131\t\t\t#其实保持默认127.0.0.1也行\n        host: 192.168.118.131\t\t\t#其实保持默认127.0.0.1也行\n[root@master manifests]# \n\n#发现修改后scheduler和controller-manager pod消失了，一直也没有重新创建pod\n#所以重启kubelet后pod都正常了\n[root@master manifests]# systemctl  restart kubelet.service\t\n\n```\n\n## 9.2 配置prometheus持久化\n```bash\nvim prometheus-prometheus.yaml\n```\n添加\n```yaml\nstorage: #这部分为持久化配置\n    volumeClaimTemplate:\n      spec:\n        storageClassName: nfs-retain\n        accessModes: [\"ReadWriteOnce\"]\n        resources:\n          requests:\n            storage: 100Gi\n```\n![](_v_images/20230225220608720_31631.png)\n\n## 9.3  存储时长配置为30天\n```bash\nvim prometheusOperator-deployment.yaml\n```\n添加\n```yaml\n- storage.tsdb.retention.time=30d # 在这添加time参数\n```\n![](_v_images/20230225220844419_31241.png)\n\n\n## 9.4 Grafana配置持久化\n### 1.建立grafana-pvc\n```yaml\ncat >> grafana-pvc.yaml << \"EOF\"\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n    name: grafana-pvc\n    namespace: monitoring\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 10Gi\n  storageClassName: nfs-retain\nEOF\n\n```\n### 2.修改grafana-deployment.yaml\n```bash\nvim grafana-deployment.yaml\n```\n把emptydir存储方式改为pvc方式：\n```yaml\n- name: grafana-storage\n        persistentVolumeClaim:\n          claimName: grafana-pvc\n```\n![](_v_images/20230225221220644_31675.png)\n\n## 9.5 创建服务暴露\n### 1.暴露grafana\n```bash\nvim grafana-service.yaml\n```\n添加\n```yaml\n\tnodePort: 30006\ntype: NodePort #Serive的类型，ClusterIP/NodePort/LoaderBalancer\n```\n![](_v_images/20230225223255518_4701.png)\n\n### 2.暴露Prometheus\n```bash\nvim prometheus-service.yaml\n```\n修改\n```yaml\nports:\n  - name: web\n    port: 9090\n    targetPort: web\n    nodePort: 30007\n  - name: reloader-web\n    port: 8080\n    targetPort: reloader-web\n    nodePort: 30008\n  type: NodePort\n\n```\n![](_v_images/20230225223423127_18660.png)\n\n### 3.暴露Alert Manager\n```bash\nvim alertmanager-service.yaml\n```\n修改\n```yaml\nports:\n  - name: web\n    port: 9093\n    targetPort: web\n    nodePort: 30009\n  - name: reloader-web\n    port: 8080\n    targetPort: reloader-web\n    nodePort: 30010\n  type: NodePort\n\n```\n![](_v_images/20230225223603943_14622.png)\n\n## 9.6 自定义DashboardPage文件JS\n\n修改`grafana-deployment.yaml`\n```bash\nvim grafana-deployment.yaml\n```\n把emptydir存储方式改为pvc方式：\n```yaml\n- name: dashboardpage-js-volume\n          mountPath: /usr/share/grafana/public/build/DashboardPage.53b203c85adb3a57b1ac.js\n          subPath: DashboardPage.53b203c85adb3a57b1ac.js\n\n\n- name: dashboardpage-js-volume\n        configMap:\n          name: grafana-dashboardpage-js-configmap\n          items:\n          - key: DashboardPage.53b203c85adb3a57b1ac.js\n            path: DashboardPage.53b203c85adb3a57b1ac.js\n```\n![](_v_images/20230226003837612_11533.png =693x)\n\n修改grafana.ini\n`vim grafana-config.yaml`\n```yaml\n    [security]\n    allow_embedding = true\n    [auth.anonymous]\n    enabled = true\n    [users]\n    default_theme = light\n```\n![](_v_images/20230314151316709_27596.png)\n\n\n\n## 9.7 安装\n上传DashboardPage附件：\n[DashboardPage.53b203c85adb3a57b1ac.js](_v_attachments/20230225224217873_1139/DashboardPage.53b203c85adb3a57b1ac.js)\n\n```bash\ncd ../..\nkubectl create ns monitoring\n#将附件DashboardPage.53b203c85adb3a57b1ac.js上传服务器\nkubectl create configmap -n monitoring grafana-dashboardpage-js-configmap --from-file=DashboardPage.53b203c85adb3a57b1ac.js\n\nkubectl apply --server-side -f kube-prometheus-0.12.0/manifests/setup\nkubectl wait \\\n\t--for condition=Established \\\n\t--all CustomResourceDefinition \\\n\t--namespace=monitoring\nkubectl apply -f kube-prometheus-0.12.0/manifests/\n\n\n#镜像下载\nctr -n k8s.io i pull k8s.dockerproxy.com/kube-state-metrics/kube-state-metrics:v2.7.0\nctr -n k8s.io i pull k8s.dockerproxy.com/prometheus-adapter/prometheus-adapter:v0.10.0\nctr -n k8s.io i tag k8s.dockerproxy.com/kube-state-metrics/kube-state-metrics:v2.7.0 registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.7.0\nctr -n k8s.io i tag k8s.dockerproxy.com/prometheus-adapter/prometheus-adapter:v0.10.0 registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.10.0\nctr -n k8s.io i rm k8s.dockerproxy.com/kube-state-metrics/kube-state-metrics:v2.7.0\nctr -n k8s.io i rm k8s.dockerproxy.com/prometheus-adapter/prometheus-adapter:v0.10.0\n```\n\n## 9.8 部署完毕后无法访问，删除网络策略\n```bash\nkubectl delete networkpolicy --all -n monitoring\n```\n\n\n## 9.9 访问\n```bash\n#Prometheus\n通过 http://174.1.0.98:30007/ 访问\n\n#Grafana\n通过 http://174.1.0.98:30006/ 访问并使用默认的 grafana 用户：密码 admin:admin\n\n#Alert Manager\n通过 http://174.1.0.98:30009/ 访问\n```\n## 9.10 导入模板，配置亮色主题\n\n模板：\n[pageinfo-1668405034945.json](_v_attachments/20230225224217873_1139/pageinfo-1668405034945.json)\n\n![](_v_images/20230313122509763_28393.png =1091x)\n![](_v_images/20230313122521689_31570.png =603x)\n![](_v_images/20230313122543495_21901.png =530x)\n![](_v_images/20230313122618215_12330.png =762x)\n\n\n# 十、era后端部署\n## 10.1 登陆数据库，创建era用户及库\n```sql\nuse mysql;\ncreate database era CHARACTER SET utf8mb4 COLLATE utf8mb4_bin;\ncreate user 'era'@'%' identified by '&V#^hjmp9%44G@';\ngrant all privileges on era.* to 'era'@'%';\nflush privileges;\n```\n\n导入附近sql模板：\n[era-prod.sql](_v_attachments/20230225224217873_1139/era-prod.sql)\n\n## 10.2 修改bootstrap.yml配置文件nacos地址\n`vim bootstrap.yml`\n\n```yaml\n# 开发环境配置\nserver:\n  # 服务器的HTTP端口，默认为8080\n  port: 8080\n  servlet:\n    # 应用的访问路径\n    context-path: /api/v1\nspring:\n  application:\n    name: era-admin\n  jackson:\n    time-zone: GMT+8\n    # 默认属性系列化策略：always、non_null、non_empty、non_absent、use_default..\n    default-property-inclusion: always\n    # date 类型以时间戳返回\n    serialization:\n      write-dates-as-timestamps: true\n      # 序列化返回空对象\n      FAIL_ON_EMPTY_BEANS: false\n  cloud:\n    nacos:\n      username: nacos\n      password: nacos\n      discovery:\n        # 服务注册地址\n        server-addr: nacos.default.svc.cluster.local:8848\n        namespace: ea2ee798-43db-4b50-8033-baf43599aea5\n\n        # server-addr: 10.36.160.102:8848\n        # namespace: dev\n      config:\n        server-addr: ${spring.cloud.nacos.discovery.server-addr}\n        namespace: ${spring.cloud.nacos.discovery.namespace}\n        file-extension: yml\n        #指定共享配置，且支持动态刷新\n        extension-configs:\n          - data-id: application.yml\n            refresh: true\n          - data-id: sys-config.yml\n            refresh: true\n          - data-id: kubeconfig.yml\n            refresh: true\n          - data-id: message.yml\n            refresh: true\n\n```\n\n## 10.3 修改nacos相关配置\n![](_v_images/20230227115633947_11263.png =827x)\n\n## 10.4 创建pvc\n```bash\nmkdir era-back;cd era-back\ncat >> 1-pvc.yaml << \"EOF\"\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: era-back-pvc\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 50Gi\n  storageClassName: nfs-retain\n\nEOF\n```\n\n## 10.5 创建deployment文件\n```bash\ncat >> 2-deployment.yaml << \"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: era-back\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: era-back\n  template:\n    metadata:\n      labels:\n        app: era-back\n    spec:\n      hostAliases:\n      #- ip: \"10.17.10.31\"\n      #  hostnames:\n      #  - \"mail.superfluidity.com.cn\"\n      - ip: \"200.0.1.90\"\n        hostnames:\n        - \"lb.cluster.local\"\n      containers:\n      - name: era-back\n        image: openjdk:11\n        imagePullPolicy: IfNotPresent\n        command:\n          - /bin/bash\n          - -c\n          - cd /usr/src/myapp && java -jar -Duser.timezone=GMT+08 era-admin.jar\n          #- sleep 99999\n        securityContext:\n          privileged: true\n        ports:\n        - name: web\n          containerPort: 8080\n          protocol: \"TCP\"\n        volumeMounts:\n          - mountPath: /usr/src/myapp\n            name: data\n      volumes:\n      - name: data\n        persistentVolumeClaim:\n          claimName: era-back-pvc\nEOF\n```\n\n## 10.6 创建服务暴露\n```bash\ncat >> 3-service.yaml << \"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: era-back-svc\n  labels:\n    app: era-back\nspec:\n  ports:\n    - name: web-port\n      port: 8080\n      protocol: TCP\n      targetPort: 8080\n      nodePort: 30011\n  type: NodePort\n  selector:\n    app: era-back\n\nEOF\n```\n\n## 10.7 应用\n```bash\nkubectl apply  -f 1-pvc.yaml\nkubectl apply  -f 2-deployment.yaml\nkubectl apply  -f 3-service.yaml\n```\n\n## 10.8 复制era-back.jar包及bootstrap.yml文件至pvc\n![](_v_images/20230227121102596_1385.png)\n![](_v_images/20230227120001444_24644.png)\n\n[era-admin.jar](_v_attachments/20230225224217873_1139/era-admin.jar)\n\n## 10.9 重启服务\n```bash\nkubectl delete -f 2-deployment.yaml\nkubectl apply -f 2-deployment.yaml\n```\n\n\n# 十一、era前端部署\n\n## 11.1 创建pvc\n```bash\nmkdir era-front;cd era-front\ncat >> 1-pvc.yaml << \"EOF\"\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: era-front-pvc\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 10Gi\n  storageClassName: nfs-retain\n\nEOF\n```\n\n## 11.2 创建deployment文件\n```bash\ncat >> 2-deployment.yaml << \"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: era-front\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: era-front\n  template:\n    metadata:\n      labels:\n        app: era-front\n    spec:\n      containers:\n      - name: era-front\n        image: nginx:1.23.1\n        imagePullPolicy: IfNotPresent\n        ports:\n        - name: web\n          containerPort: 80\n          protocol: \"TCP\"\n        volumeMounts:\n          - name: data\n            mountPath: /etc/nginx/conf.d\n            subPath: conf.d\n          - name: data\n            mountPath: /webs\n            subPath: webs\n      volumes:\n      - name: data\n        persistentVolumeClaim:\n          claimName: era-front-pvc\n\nEOF\n```\n\n## 11.3 创建服务暴露\n```bash\ncat >> 3-service.yaml << \"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: era-front-svc\n  labels:\n    app: era-front\nspec:\n  ports:\n    - name: web-port\n      port: 80\n      protocol: TCP\n      targetPort: 80\n      nodePort: 30012\n  type: NodePort\n  selector:\n    app: era-front\n\nEOF\n```\n\n## 11.4 应用\n```bash\nkubectl apply  -f 1-pvc.yaml\nkubectl apply  -f 2-deployment.yaml\nkubectl apply  -f 3-service.yaml\n```\n\n## 11.5 复制era-front.conf包及era-front前端文件至pvc\n![](_v_images/20230227121102596_1385.png)\n\n![](_v_images/20230313123535782_27993.png)\n\n附件：\n[era-front.conf](_v_attachments/20230225224217873_1139/era-front.conf)\n\n[test.tar.gz](_v_attachments/20230225224217873_1139/test.tar.gz)\n\n\n## 11.6 重启服务\n```bash\nkubectl delete -f 2-deployment.yaml\nkubectl apply -f 2-deployment.yaml\n```\n\n\n# 十二、era镜像服务部署\n\n## 12.1 创建pvc\n```bash\nmkdir era-images;cd era-images\ncat >> 1-pvc.yaml << \"EOF\"\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: era-images-pvc\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 500Gi\n  storageClassName: nfs-retain\n\nEOF\n```\n\n## 12.2 创建deployment文件\n```bash\ncat >> 2-deployment.yaml << \"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: era-images\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: era-images\n  template:\n    metadata:\n      labels:\n        app: era-images\n    spec:\n      containers:\n      - name: era-images\n        image: nginx:1.23.1\n        imagePullPolicy: IfNotPresent\n        ports:\n        - name: web\n          containerPort: 80\n          protocol: \"TCP\"\n        volumeMounts:\n          - name: data\n            mountPath: /etc/nginx/conf.d\n            subPath: conf.d\n          - name: data\n            mountPath: /images\n            subPath: images\n      volumes:\n      - name: data\n        persistentVolumeClaim:\n          claimName: era-images-pvc\n\nEOF\n```\n\n## 12.3 创建服务暴露\n```bash\ncat >> 3-service.yaml << \"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: era-images-svc\n  labels:\n    app: era-images\nspec:\n  ports:\n    - name: web-port\n      port: 80\n      protocol: TCP\n      targetPort: 80\n      nodePort: 30013\n  type: NodePort\n  selector:\n    app: era-images\n\nEOF\n```\n\n## 12.4 应用\n```bash\nkubectl apply  -f 1-pvc.yaml\nkubectl apply  -f 2-deployment.yaml\nkubectl apply  -f 3-service.yaml\n```\n\n## 12.5 复制era-images.conf包至pvc\n![](_v_images/20230227134218648_11795.png)\n![](_v_images/20230313123817260_29670.png)\n\n[era-images.conf](_v_attachments/20230225224217873_1139/era-images.conf)\n\n## 12.6 重启服务\n```bash\nkubectl delete -f 2-deployment.yaml\nkubectl apply -f 2-deployment.yaml\n```\n\n# 十三、(可选)监控系统部署\n## 13.1 数据创建相关库及用户\n```sql\ncreate database zabbix character set utf8mb4 collate utf8mb4_bin;\nuse mysql;\ncreate user 'zabbix'@'%' identified by '4GtJvRS%La76iB';\ngrant all privileges on zabbix.* to 'zabbix'@'%';\nFLUSH PRIVILEGES;\n```\n## 13.2 创建命名空间\n```bash\nmkdir zabbix;cd zabbix\ncat >> 0-namespace.yaml << \"EOF\"\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: zabbix\nEOF\n```\n\n## 13.3 创建pvc\n```bash\ncat >> 1-pvc.yaml << \"EOF\"\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: zabbix-pvc\n  namespace: zabbix\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 10Gi\n  storageClassName: nfs-retain\n\nEOF\n```\n\n## 13.4 部署\n```bash\ncat >> 2-zabbix-web-service.yaml << \"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zabbix-web-service\n  namespace: zabbix\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: zabbix-web-service\n  template:\n    metadata:\n      labels:\n        app: zabbix-web-service\n    spec:\n      containers:\n      - name: zabbix-web-service\n        image: zabbix/zabbix-web-service:ubuntu-6.0-latest\n        ports:\n        - containerPort: 10053\n        env:\n        - name: ZBX_ALLOWEDIP\n          value: \"::/0\"\n        securityContext:\n          capabilities:\n            add:\n            - SYS_ADMIN\n        volumeMounts:\n        - name: localtime\n          mountPath: /etc/localtime\n          readOnly: true\n        - name: zabbix-data\n          mountPath: /usr/share/fonts/truetype/dejavu/DejaVuSans.ttf\n          subPath: DejaVuSans.ttf\n      volumes:\n      - name: localtime\n        hostPath:\n          path: /etc/localtime\n      - name: zabbix-data\n        persistentVolumeClaim:\n          claimName: zabbix-pvc\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-web-service\n  namespace: zabbix\nspec:\n  selector:\n    app: zabbix-web-service\n  ports:\n  - name: zabbix-web-service\n    port: 10053\n    targetPort: 10053\n    nodePort: 30053\n  type: NodePort\n\nEOF\n```\n\n```bash\ncat >> 3-zabbix-server-mysql.yaml << \"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zabbix-server-mysql\n  namespace: zabbix\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: zabbix-server-mysql\n  template:\n    metadata:\n      labels:\n        app: zabbix-server-mysql\n    spec:\n      containers:\n      - name: zabbix-server-mysql\n        image: zabbix/zabbix-server-mysql:ubuntu-6.0-latest\n        ports:\n        - containerPort: 10051\n        env:\n        - name: DB_SERVER_HOST\n          value: \"mariadb.default.svc.cluster.local\"\n        - name: DB_SERVER_PORT\n          value: \"3306\"\n        - name: MYSQL_DATABASE\n          value: \"zabbix\"\n        - name: MYSQL_USER\n          value: \"zabbix\"\n        - name: MYSQL_PASSWORD\n          value: \"4GtJvRS%La76iB\"\n        - name: MYSQL_ROOT_PASSWORD\n          value: \"4y6Cu%946*!TXY\"\n        - name: ZBX_WEBSERVICEURL\n          value: \"http://zabbix-web-service.zabbix.svc.cluster.local:10053/report\"\n        - name: ZBX_JAVAGATEWAY_ENABLE\n          value: \"true\"\n        - name: ZBX_JAVAGATEWAY\n          value: \"zabbix-java-gateway.zabbix.svc.cluster.local:10052\"\n        - name: ZBX_STARTREPORTWRITERS\n          value: \"2\"\n        - name: ZBX_TIMEOUT\n          value: \"30\"\n        - name: ZBX_UNREACHABLEPERIOD\n          value: \"120\"\n        - name: ZBX_CACHESIZE\n          value: \"512M\"\n        - name: ZBX_HISTORYCACHESIZE\n          value: \"128M\"\n        - name: ZBX_HISTORYINDEXCACHESIZE\n          value: \"128M\"\n        - name: ZBX_TRENDCACHESIZE\n          value: \"128M\"\n        - name: ZBX_VALUECACHESIZE\n          value: \"256M\"\n        volumeMounts:\n        - name: zabbix-data\n          mountPath: /usr/lib/zabbix\n          subPath: zabbix-scripts\n        - name: localtime\n          mountPath: /etc/localtime\n          readOnly: true\n      - name: zabbix-agent\n        image: zabbix/zabbix-agent:ubuntu-6.0-latest\n        imagePullPolicy: IfNotPresent\n        env:\n        - name: ZBX_HOSTNAME\n          value: \"Zabbix server\"\n        - name: ZBX_SERVER_HOST\n          value: \"127.0.0.1\"\n        - name: ZBX_STARTAGENTS\n          value: \"3\"\n        - name: ZBX_UNSAFEUSERPARAMETERS\n          value: \"1\"\n        - name: ZBX_TIMEOUT\n          value: \"10\"\n        ports:\n        - containerPort: 10050\n          name: zabbix-agent\n          protocol: TCP\n      volumes:\n      - name: localtime\n        hostPath:\n          path: /etc/localtime\n      - name: zabbix-data\n        persistentVolumeClaim:\n          claimName: zabbix-pvc\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-server-mysql\n  namespace: zabbix\nspec:\n  selector:\n    app: zabbix-server-mysql\n  ports:\n  - name: zabbix-server\n    port: 10051\n    targetPort: 10051\n    nodePort: 30051\n  type: NodePort\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-server-agent\n  namespace: zabbix\nspec:\n  selector:\n    app: zabbix-server-mysql\n  ports:\n  - name: zabbix-agent\n    port: 10050\n    targetPort: 10050\n\nEOF\n```\n\n\n```bash\ncat >> 4-zabbix-web-nginx-mysql.yaml << \"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zabbix-web-nginx-mysql\n  namespace: zabbix\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: zabbix-web-nginx-mysql\n  template:\n    metadata:\n      labels:\n        app: zabbix-web-nginx-mysql\n    spec:\n      containers:\n      - name: zabbix-web-nginx-mysql\n        image: zabbix/zabbix-web-nginx-mysql:ubuntu-6.0-latest\n        ports:\n        - containerPort: 8443\n        - containerPort: 8080\n        env:\n        - name: DB_SERVER_HOST\n          value: \"mariadb.default.svc.cluster.local\"\n        - name: DB_SERVER_PORT\n          value: \"3306\"\n        - name: MYSQL_DATABASE\n          value: \"zabbix\"\n        - name: MYSQL_USER\n          value: \"zabbix\"\n        - name: MYSQL_PASSWORD\n          value: \"4GtJvRS%La76iB\"\n        - name: MYSQL_ROOT_PASSWORD\n          value: \"4y6Cu%946*!TXY\"\n        - name: ZBX_SERVER_HOST\n          value: \"zabbix-server-mysql.zabbix.svc.cluster.local\"\n        - name: PHP_TZ\n          value: \"Asia/Shanghai\"\n        volumeMounts:\n        - name: localtime\n          mountPath: /etc/localtime\n          readOnly: true\n        - name: zabbix-data\n          mountPath: /usr/share/zabbix/assets/fonts/DejaVuSans.ttf\n          subPath: DejaVuSans.ttf\n      volumes:\n      - name: localtime\n        hostPath:\n          path: /etc/localtime\n      - name: zabbix-data\n        persistentVolumeClaim:\n          claimName: zabbix-pvc\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-web-nginx-mysql\n  namespace: zabbix\nspec:\n  selector:\n    app: zabbix-web-nginx-mysql\n  ports:\n  - name: zabbix-front\n    port: 8080\n    targetPort: 8080\n    nodePort: 30080\n  type: NodePort\n\nEOF\n```\n\n```bash\ncat >> 5-zabbix-java-gateway.yaml << \"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zabbix-java-gateway\n  namespace: zabbix\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: zabbix-java-gateway\n  template:\n    metadata:\n      labels:\n        app: zabbix-java-gateway\n    spec:\n      containers:\n      - name: zabbix-java-gateway\n        image: zabbix/zabbix-java-gateway:ubuntu-6.0-latest\n        ports:\n        - containerPort: 10052\n        volumeMounts:\n        - name: localtime\n          mountPath: /etc/localtime\n          readOnly: true\n      volumes:\n      - name: localtime\n        hostPath:\n          path: /etc/localtime\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-java-gateway\n  namespace: zabbix\nspec:\n  selector:\n    app: zabbix-java-gateway\n  ports:\n  - name: zabbix-java-gateway\n    port: 10052\n    targetPort: 10052\n    nodePort: 30052\n  type: NodePort\n\nEOF\n```\n## 13.5 应用\n```bash\nkubectl apply  -f 0-namespace.yaml\nkubectl apply  -f 1-pvc.yaml\nkubectl apply  -f 2-zabbix-web-service.yaml\nkubectl apply  -f 3-zabbix-server-mysql.yaml\nkubectl apply  -f 4-zabbix-web-nginx-mysql.yaml\nkubectl apply  -f 5-zabbix-java-gateway.yaml\n```\n## 13.6  复制字体进pvc\n![](_v_images/20230303111056501_27202.png)\n\n附件：\n[DejaVuSans.ttf](_v_attachments/20230225224217873_1139/DejaVuSans.ttf)\n\n## 13.7 各物理节点部署agent\n```bash\nyum -y remove epel-release zabbix-release\ncat > /etc/yum.repos.d/zabbix.repo  << 'EOF'\n[zabbix]\nname=Zabbix Official Repository - $basearch\nbaseurl=http://mirrors.cloud.tencent.com/zabbix/zabbix/6.0/rhel/7/$basearch/\nenabled=1\ngpgcheck=0\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX-A14FE591\n\n[zabbix-debuginfo]\nname=Zabbix Official Repository debuginfo - $basearch\nbaseurl=http://mirrors.cloud.tencent.com/zabbix/zabbix/6.0/rhel/7/$basearch/debuginfo/\nenabled=0\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX-A14FE591\ngpgcheck=1\n\n[zabbix-non-supported]\nname=Zabbix Official Repository non-supported - $basearch\nbaseurl=http://mirrors.cloud.tencent.com/zabbix/non-supported/rhel/7/$basearch/\nenabled=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX\ngpgcheck=0\nEOF\n\ncat > /etc/yum.repos.d/zabbix-agent2-plugins.repo << 'EOF'\n[zabbix-agent2-plugins]\nname=Zabbix Official Repository (Agent2 Plugins) - $basearch\nbaseurl=http://mirrors.cloud.tencent.com/zabbix/zabbix-agent2-plugins/1/rhel/7/$basearch/\nenabled=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX\ngpgcheck=0\nEOF\n\nyum -y install zabbix-agent2\n\n#替换参数，ServerActive指向zabbix server地址200.0.1.90:30051\nsed -i 's@^Server=127.0.0.1@#Server=127.0.0.1@' /etc/zabbix/zabbix_agent2.conf\nsed -i 's@^ServerActive=127.0.0.1@ServerActive=200.0.1.90:30051@' /etc/zabbix/zabbix_agent2.conf\nsed -i 's@^Hostname=Zabbix server@#Hostname=Zabbix server@' /etc/zabbix/zabbix_agent2.conf\nsed -i 's@^# HostnameItem=system.hostname@# HostnameItem=system.hostname\\n\\nHostnameItem=system.hostname@' /etc/zabbix/zabbix_agent2.conf\nsed -i 's@^# HostMetadataItem=@# HostMetadataItem=\\n\\nHostMetadataItem=system.uname@' /etc/zabbix/zabbix_agent2.conf\nsed -i 's@^# UnsafeUserParameters=0@# UnsafeUserParameters=0\\n\\nUnsafeUserParameters=1@' /etc/zabbix/zabbix_agent2.conf\n\nsystemctl restart zabbix-agent2\nsystemctl enable zabbix-agent2\n\ntail -f /var/log/zabbix/zabbix_agent2.log\n```\n## 13.8 设置zabbix自动发现\n![](_v_images/20230303115029819_18034.png =1216x)\n\n## 13.9 修复默认\n![](_v_images/20230305233258302_30922.png =853x)","slug":"work/2.ERA在线部署","published":1,"updated":"2023-12-29T06:37:59.262Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clqqa13no000596jx2apf0c02","content":"<h1 id=\"系统初始化\"><a href=\"#系统初始化\" class=\"headerlink\" title=\"系统初始化\"></a>系统初始化</h1><h2 id=\"1-安装Debian11初始化文档初始化\"><a href=\"#1-安装Debian11初始化文档初始化\" class=\"headerlink\" title=\"1.安装Debian11初始化文档初始化\"></a>1.安装Debian11初始化文档初始化</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#必装</span>\n<span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> conntrack ipset socat ebtables ipvsadm\n<span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"一、k8s集群部署\"><a href=\"#一、k8s集群部署\" class=\"headerlink\" title=\"一、k8s集群部署\"></a>一、k8s集群部署</h1><h2 id=\"1-安装kubekey\"><a href=\"#1-安装kubekey\" class=\"headerlink\" title=\"1.安装kubekey\"></a>1.安装kubekey</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">KKZONE</span><span class=\"token operator\">=</span>cn\n<span class=\"token function\">wget</span> https://github.com/kubesphere/kubekey/releases/download/v3.0.13/kubekey-v3.0.13-linux-amd64.tar.gz\n<span class=\"token function\">tar</span> <span class=\"token parameter variable\">-xf</span> kubekey-v3.0.13-linux-amd64.tar.gz\n<span class=\"token function\">mv</span> kk /usr/local/bin/\n\n<span class=\"token comment\">#查看支持k8s版本</span>\nkk version --show-supported-k8s<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"2-编辑配置文件\"><a href=\"#2-编辑配置文件\" class=\"headerlink\" title=\"2.编辑配置文件\"></a>2.编辑配置文件</h2><blockquote>\n<p>参考：<a href=\"https://github.com/kubesphere/kubekey/blob/master/README_zh-CN.md\">https://github.com/kubesphere/kubekey/blob/master/README_zh-CN.md</a></p>\n</blockquote>\n<p>修改对应IP账号密码<br><code>config-v1.24.7-online.yaml</code></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> kubekey.kubesphere.io/v1alpha2\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Cluster\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> k8s<span class=\"token punctuation\">-</span>jy\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">&#123;</span><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> cn098<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">address</span><span class=\"token punctuation\">:</span> 200.0.0.98<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">internalAddress</span><span class=\"token punctuation\">:</span> 200.0.0.98<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> root<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"ycsc_2023\"</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">&#123;</span><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> cn099<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">address</span><span class=\"token punctuation\">:</span> 200.0.0.99<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">internalAddress</span><span class=\"token punctuation\">:</span> 200.0.0.99<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> root<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"ycsc_2023\"</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">&#123;</span><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> cn100<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">address</span><span class=\"token punctuation\">:</span> 200.0.0.100<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">internalAddress</span><span class=\"token punctuation\">:</span> 200.0.0.100<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> root<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"ycsc_2023\"</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">&#123;</span><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gpu002<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">address</span><span class=\"token punctuation\">:</span> 200.0.241.2<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">internalAddress</span><span class=\"token punctuation\">:</span> 200.0.241.2<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> root<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"ycsc_2023\"</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token key atrule\">roleGroups</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">etcd</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> cn098\n    <span class=\"token punctuation\">-</span> cn099\n    <span class=\"token punctuation\">-</span> cn100\n    <span class=\"token key atrule\">control-plane</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> cn098\n    <span class=\"token punctuation\">-</span> cn099\n    <span class=\"token punctuation\">-</span> cn100\n    <span class=\"token key atrule\">worker</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> cn098\n    <span class=\"token punctuation\">-</span> cn099\n    <span class=\"token punctuation\">-</span> cn100\n    <span class=\"token punctuation\">-</span> gpu002\n  <span class=\"token key atrule\">controlPlaneEndpoint</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\">## Internal loadbalancer for apiservers</span>\n    <span class=\"token key atrule\">internalLoadbalancer</span><span class=\"token punctuation\">:</span> kube<span class=\"token punctuation\">-</span>vip\n\n    <span class=\"token key atrule\">domain</span><span class=\"token punctuation\">:</span> lb.cluster.local\n    <span class=\"token key atrule\">address</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"200.0.1.90\"</span>\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">6443</span>\n  <span class=\"token key atrule\">kubernetes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> v1.24.7\n    <span class=\"token key atrule\">clusterName</span><span class=\"token punctuation\">:</span> cluster.local\n    <span class=\"token key atrule\">autoRenewCerts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">containerManager</span><span class=\"token punctuation\">:</span> containerd\n  <span class=\"token key atrule\">etcd</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> kubeadm\n  <span class=\"token key atrule\">network</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span> calico\n    <span class=\"token key atrule\">kubePodsCIDR</span><span class=\"token punctuation\">:</span> 10.233.64.0/18\n    <span class=\"token key atrule\">kubeServiceCIDR</span><span class=\"token punctuation\">:</span> 10.233.0.0/18\n    <span class=\"token comment\">## multus support. https://github.com/k8snetworkplumbingwg/multus-cni</span>\n    <span class=\"token key atrule\">multusCNI</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">enabled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">registry</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">privateRegistry</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token key atrule\">namespaceOverride</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token key atrule\">registryMirrors</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">insecureRegistries</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token key atrule\">addons</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"4-部署\"><a href=\"#4-部署\" class=\"headerlink\" title=\"4.部署\"></a>4.部署</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kk create cluster <span class=\"token parameter variable\">-f</span> config-v1.24.7-online.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"5-安装-bash-completion-可选\"><a href=\"#5-安装-bash-completion-可选\" class=\"headerlink\" title=\"5.安装 bash-completion(可选)\"></a>5.安装 bash-completion(可选)</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 安装 bash-completion</span>\n<span class=\"token function\">apt</span> <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> bash-completion\n\n<span class=\"token comment\"># 将 completion 脚本添加到你的 ~/.bashrc 文件</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'source &lt;(kubectl completion bash)'</span> <span class=\"token operator\">>></span>~/.bashrc\n\n<span class=\"token comment\"># 将 completion 脚本添加到 /etc/bash_completion.d 目录</span>\nkubectl completion <span class=\"token function\">bash</span> <span class=\"token operator\">></span>/etc/bash_completion.d/kubectl\n\n<span class=\"token comment\">#重启生效</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"7-对接NFS存储-可选\"><a href=\"#7-对接NFS存储-可选\" class=\"headerlink\" title=\"7. 对接NFS存储(可选)\"></a>7. 对接NFS存储(可选)</h2><h3 id=\"7-1-格式化硬盘，并且设置共享\"><a href=\"#7-1-格式化硬盘，并且设置共享\" class=\"headerlink\" title=\"7.1 格式化硬盘，并且设置共享\"></a>7.1 格式化硬盘，并且设置共享</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">\n<span class=\"token comment\">#格式化硬盘为xfs格式</span>\nmkfs.xfs /dev/sdb\n<span class=\"token function\">mkdir</span> /opt/nfs-data<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>fstab中设置自动挂载</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">#&#x2F;dev&#x2F;sdb\nUUID&#x3D;7a8c2445-7103-4591-9b73-2db3757a8e6e\t&#x2F;opt&#x2F;nfs-data\txfs\tdefaults\t0 0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>挂载确认格式、uuid、及挂载位置</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mount -a\nlsblk -f<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"7-2-配置NFS服务器，允许Kubernetes节点访问NFS共享\"><a href=\"#7-2-配置NFS服务器，允许Kubernetes节点访问NFS共享\" class=\"headerlink\" title=\"7.2 配置NFS服务器，允许Kubernetes节点访问NFS共享\"></a>7.2 配置NFS服务器，允许Kubernetes节点访问NFS共享</h3><p>将以下内容添加到&#x2F;etc&#x2F;exports文件中：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">/opt/nfs-data *<span class=\"token punctuation\">(</span>rw,sync,no_root_squash,no_subtree_check<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>重启NFS服务使配置生效：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#创建相关文件夹</span>\n<span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> /opt/nfs-data/k8s-sc/retain\n<span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> /opt/nfs-data/k8s-sc/delete\n\n<span class=\"token comment\">#启动服务，设置自启</span>\nsystemctl restart nfs-server\nsystemctl <span class=\"token builtin class-name\">enable</span> nfs-server\n\n<span class=\"token comment\">#在各节点上运行测试通信</span>\nshowmount <span class=\"token parameter variable\">-e</span> cn098<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"7-3-k8s安装nfs存储类插件\"><a href=\"#7-3-k8s安装nfs存储类插件\" class=\"headerlink\" title=\"7.3 k8s安装nfs存储类插件\"></a>7.3 k8s安装nfs存储类插件</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> nfs <span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">cd</span> nfs\n<span class=\"token function\">git</span> clone https://github.com/kubernetes-csi/csi-driver-nfs.git\n\n<span class=\"token builtin class-name\">cd</span> csi-driver-nfs\n\n<span class=\"token comment\">#相关镜像代理，替换tag下载（可选）</span>\n\nctr <span class=\"token parameter variable\">-n</span> k8s.io i pull k8s.dockerproxy.com/sig-storage/csi-node-driver-registrar:v2.9.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i pull k8s.dockerproxy.com/sig-storage/csi-provisioner:v3.6.1\nctr <span class=\"token parameter variable\">-n</span> k8s.io i pull k8s.dockerproxy.com/sig-storage/csi-snapshotter:v6.3.1\nctr <span class=\"token parameter variable\">-n</span> k8s.io i pull k8s.dockerproxy.com/sig-storage/livenessprobe:v2.11.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i pull k8s.dockerproxy.com/sig-storage/nfsplugin:v4.5.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i pull k8s.dockerproxy.com/sig-storage/snapshot-controller:v6.3.1\n\nctr <span class=\"token parameter variable\">-n</span> k8s.io i tag k8s.dockerproxy.com/sig-storage/csi-node-driver-registrar:v2.9.0 registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.9.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i tag k8s.dockerproxy.com/sig-storage/csi-provisioner:v3.6.1 registry.k8s.io/sig-storage/csi-provisioner:v3.6.1\nctr <span class=\"token parameter variable\">-n</span> k8s.io i tag k8s.dockerproxy.com/sig-storage/csi-snapshotter:v6.3.1 registry.k8s.io/sig-storage/csi-snapshotter:v6.3.1\nctr <span class=\"token parameter variable\">-n</span> k8s.io i tag k8s.dockerproxy.com/sig-storage/livenessprobe:v2.11.0 registry.k8s.io/sig-storage/livenessprobe:v2.11.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i tag k8s.dockerproxy.com/sig-storage/nfsplugin:v4.5.0 registry.k8s.io/sig-storage/nfsplugin:v4.5.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i tag k8s.dockerproxy.com/sig-storage/snapshot-controller:v6.3.1 registry.k8s.io/sig-storage/snapshot-controller:v6.3.1\n\nctr <span class=\"token parameter variable\">-n</span> k8s.io i <span class=\"token function\">rm</span> k8s.dockerproxy.com/sig-storage/csi-node-driver-registrar:v2.9.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i <span class=\"token function\">rm</span> k8s.dockerproxy.com/sig-storage/csi-provisioner:v3.6.1\nctr <span class=\"token parameter variable\">-n</span> k8s.io i <span class=\"token function\">rm</span> k8s.dockerproxy.com/sig-storage/csi-snapshotter:v6.3.1\nctr <span class=\"token parameter variable\">-n</span> k8s.io i <span class=\"token function\">rm</span> k8s.dockerproxy.com/sig-storage/livenessprobe:v2.11.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i <span class=\"token function\">rm</span> k8s.dockerproxy.com/sig-storage/nfsplugin:v4.5.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i <span class=\"token function\">rm</span> k8s.dockerproxy.com/sig-storage/snapshot-controller:v6.3.1\n\n./deploy/install-driver.sh v4.5.0 <span class=\"token builtin class-name\">local</span>\n\n<span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">..</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"7-4-创建存储类\"><a href=\"#7-4-创建存储类\" class=\"headerlink\" title=\"7.4 创建存储类\"></a>7.4 创建存储类</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> nfs-sc-delete.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> storage.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> StorageClass\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nfs<span class=\"token punctuation\">-</span>delete\n<span class=\"token key atrule\">provisioner</span><span class=\"token punctuation\">:</span> nfs.csi.k8s.io\n<span class=\"token key atrule\">parameters</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span> 200.0.0.98\n  <span class=\"token key atrule\">share</span><span class=\"token punctuation\">:</span> /opt/nfs<span class=\"token punctuation\">-</span>data/k8s<span class=\"token punctuation\">-</span>sc/delete\n  <span class=\"token comment\"># csi.storage.k8s.io/provisioner-secret is only needed for providing mountOptions in DeleteVolume</span>\n  <span class=\"token comment\"># csi.storage.k8s.io/provisioner-secret-name: \"mount-options\"</span>\n  <span class=\"token comment\"># csi.storage.k8s.io/provisioner-secret-namespace: \"default\"</span>\n<span class=\"token key atrule\">reclaimPolicy</span><span class=\"token punctuation\">:</span> Delete\n<span class=\"token key atrule\">allowVolumeExpansion</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">True</span>\n<span class=\"token key atrule\">volumeBindingMode</span><span class=\"token punctuation\">:</span> Immediate\n<span class=\"token comment\">#mountOptions:</span>\n<span class=\"token comment\">#  - nfsvers=4.1</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> nfs-sc-retain.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> storage.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> StorageClass\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nfs<span class=\"token punctuation\">-</span>retain\n<span class=\"token key atrule\">provisioner</span><span class=\"token punctuation\">:</span> nfs.csi.k8s.io\n<span class=\"token key atrule\">parameters</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span> 200.0.0.98\n  <span class=\"token key atrule\">share</span><span class=\"token punctuation\">:</span> /opt/nfs<span class=\"token punctuation\">-</span>data/k8s<span class=\"token punctuation\">-</span>sc/retain\n  <span class=\"token comment\"># csi.storage.k8s.io/provisioner-secret is only needed for providing mountOptions in DeleteVolume</span>\n  <span class=\"token comment\"># csi.storage.k8s.io/provisioner-secret-name: \"mount-options\"</span>\n  <span class=\"token comment\"># csi.storage.k8s.io/provisioner-secret-namespace: \"default\"</span>\n<span class=\"token key atrule\">reclaimPolicy</span><span class=\"token punctuation\">:</span> Retain\n<span class=\"token key atrule\">allowVolumeExpansion</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">True</span>\n<span class=\"token key atrule\">volumeBindingMode</span><span class=\"token punctuation\">:</span> Immediate\n<span class=\"token comment\">#mountOptions:</span>\n<span class=\"token comment\">#  - nfsvers=4.1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"7-5-使用kubectl-apply命令创建存储类：\"><a href=\"#7-5-使用kubectl-apply命令创建存储类：\" class=\"headerlink\" title=\"7.5 使用kubectl apply命令创建存储类：\"></a>7.5 使用kubectl apply命令创建存储类：</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-f</span> nfs-sc-delete.yaml\nkubectl apply <span class=\"token parameter variable\">-f</span> nfs-sc-retain.yaml\n\nkubectl get sc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"7-6-设置默认存储类：\"><a href=\"#7-6-设置默认存储类：\" class=\"headerlink\" title=\"7.6 设置默认存储类：\"></a>7.6 设置默认存储类：</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#标记</span>\nkubectl patch storageclass nfs-retain <span class=\"token parameter variable\">-p</span> <span class=\"token string\">'&#123;\"metadata\": &#123;\"annotations\":&#123;\"storageclass.kubernetes.io/is-default-class\":\"true\"&#125;&#125;&#125;'</span>\n\n<span class=\"token comment\">#取消</span>\nkubectl patch storageclass nfs-retain <span class=\"token parameter variable\">-p</span> <span class=\"token string\">'&#123;\"metadata\": &#123;\"annotations\":&#123;\"storageclass.kubernetes.io/is-default-class\":\"false\"&#125;&#125;&#125;'</span>\n\nkubectl get storageclass\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"二、KubeVirt部署\"><a href=\"#二、KubeVirt部署\" class=\"headerlink\" title=\"二、KubeVirt部署\"></a>二、KubeVirt部署</h1><blockquote>\n<p>目前era限制版本为0.56.0版本</p>\n</blockquote>\n<h2 id=\"2-1-验证服务器是否支持虚拟化\"><a href=\"#2-1-验证服务器是否支持虚拟化\" class=\"headerlink\" title=\"2.1 验证服务器是否支持虚拟化\"></a>2.1 验证服务器是否支持虚拟化</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">virt-host-validate qemu\n\n\n  QEMU: Checking <span class=\"token keyword\">for</span> hardware virtualization                                 <span class=\"token builtin class-name\">:</span> PASS\n  QEMU: Checking <span class=\"token keyword\">if</span> device /dev/kvm exists                                   <span class=\"token builtin class-name\">:</span> PASS\n  QEMU: Checking <span class=\"token keyword\">if</span> device /dev/kvm is accessible                            <span class=\"token builtin class-name\">:</span> PASS\n  QEMU: Checking <span class=\"token keyword\">if</span> device /dev/vhost-net exists                             <span class=\"token builtin class-name\">:</span> PASS\n  QEMU: Checking <span class=\"token keyword\">if</span> device /dev/net/tun exists                               <span class=\"token builtin class-name\">:</span> PASS\n  <span class=\"token builtin class-name\">.</span> <span class=\"token builtin class-name\">.</span> <span class=\"token builtin class-name\">.</span>\n\n\n<span class=\"token comment\">#若未全部pass，请检查BIOS中开启VT-d和虚拟化支持</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"2-2-安装\"><a href=\"#2-2-安装\" class=\"headerlink\" title=\"2.2 安装\"></a>2.2 安装</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> kubevirt <span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">cd</span> kubevirt\n<span class=\"token comment\"># Deploy the KubeVirt operator</span>\n<span class=\"token function\">wget</span> https://github.com/kubevirt/kubevirt/releases/download/v0.56.0/kubevirt-operator.yaml <span class=\"token parameter variable\">-O</span> <span class=\"token number\">1</span>-kubevirt-operator.yaml\nkubectl apply <span class=\"token parameter variable\">-f</span> <span class=\"token number\">1</span>-kubevirt-operator.yaml\n<span class=\"token comment\"># Create the KubeVirt CR (instance deployment request) which triggers the actual installation</span>\n<span class=\"token function\">wget</span> https://github.com/kubevirt/kubevirt/releases/download/v0.56.0/kubevirt-cr.yaml <span class=\"token parameter variable\">-O</span> <span class=\"token number\">2</span>-kubevirt-cr.yaml\nkubectl apply <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-kubevirt-cr.yaml\n<span class=\"token comment\"># wait until all KubeVirt components are up</span>\nkubectl <span class=\"token parameter variable\">-n</span> kubevirt <span class=\"token function\">wait</span> kv kubevirt <span class=\"token parameter variable\">--for</span> <span class=\"token assign-left variable\">condition</span><span class=\"token operator\">=</span>Available<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"2-3-开启相关特性\"><a href=\"#2-3-开启相关特性\" class=\"headerlink\" title=\"2.3 开启相关特性\"></a>2.3 开启相关特性</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">\n<span class=\"token function\">cat</span> <span class=\"token operator\">></span> <span class=\"token number\">3</span>-kubevirt-enable-feature-gate.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">'EOF'\n---\napiVersion: kubevirt.io/v1\nkind: KubeVirt\nmetadata:\n  name: kubevirt\n  namespace: kubevirt\nspec:\n  configuration:\n    developerConfiguration:\n      featureGates:\n        - LiveMigration\n        - DataVolumes\n        - ExpandDisks\nEOF</span>\n\nkubectl apply <span class=\"token parameter variable\">-f</span> <span class=\"token number\">3</span>-kubevirt-enable-feature-gate.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"2-4-virtctl客户端工具安装\"><a href=\"#2-4-virtctl客户端工具安装\" class=\"headerlink\" title=\"2.4 virtctl客户端工具安装\"></a>2.4 virtctl客户端工具安装</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://github.com/kubevirt/kubevirt/releases/download/v0.56.0/virtctl-v0.56.0-linux-amd64 <span class=\"token parameter variable\">-O</span> /usr/local/bin/virtctl\n<span class=\"token function\">chmod</span> +x /usr/local/bin/virtctl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"2-5-卸载-可选\"><a href=\"#2-5-卸载-可选\" class=\"headerlink\" title=\"2.5 卸载(可选)\"></a>2.5 卸载(可选)</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl delete <span class=\"token parameter variable\">-n</span> kubevirt kubevirt kubevirt <span class=\"token parameter variable\">--wait</span><span class=\"token operator\">=</span>true <span class=\"token comment\"># --wait=true should anyway be default</span>\nkubectl delete apiservices v1.subresources.kubevirt.io <span class=\"token comment\"># this needs to be deleted to avoid stuck terminating namespaces</span>\nkubectl delete mutatingwebhookconfigurations virt-api-mutator <span class=\"token comment\"># not blocking but would be left over</span>\nkubectl delete validatingwebhookconfigurations virt-operator-validator <span class=\"token comment\"># not blocking but would be left over</span>\nkubectl delete validatingwebhookconfigurations virt-api-validator <span class=\"token comment\"># not blocking but would be left over</span>\nkubectl patch crd/kubevirts.kubevirt.io <span class=\"token parameter variable\">-p</span> <span class=\"token string\">'&#123;\"metadata\":&#123;\"finalizers\":[]&#125;&#125;'</span> <span class=\"token parameter variable\">--type</span><span class=\"token operator\">=</span>merge\nkubectl delete <span class=\"token parameter variable\">-f</span> <span class=\"token number\">1</span>-kubevirt-operator.yaml <span class=\"token parameter variable\">--wait</span><span class=\"token operator\">=</span>false<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"三、CDI部署\"><a href=\"#三、CDI部署\" class=\"headerlink\" title=\"三、CDI部署\"></a>三、CDI部署</h1><h2 id=\"3-1-安装-CDI\"><a href=\"#3-1-安装-CDI\" class=\"headerlink\" title=\"3.1 安装 CDI\"></a>3.1 安装 CDI</h2><blockquote>\n<p>目前era限制版本为1.52.0版本</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> cdi <span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">cd</span> cdi\n<span class=\"token function\">wget</span> https://github.com/kubevirt/containerized-data-importer/releases/download/v1.52.0/cdi-operator.yaml <span class=\"token parameter variable\">-O</span> <span class=\"token number\">1</span>-cdi-operator.yaml\nkubectl apply <span class=\"token parameter variable\">-f</span> <span class=\"token number\">1</span>-cdi-operator.yaml\n<span class=\"token function\">wget</span> https://github.com/kubevirt/containerized-data-importer/releases/download/v1.52.0/cdi-cr.yaml <span class=\"token parameter variable\">-O</span> <span class=\"token number\">2</span>-cdi-cr.yaml\nkubectl apply <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-cdi-cr.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"3-2-服务暴露\"><a href=\"#3-2-服务暴露\" class=\"headerlink\" title=\"3.2 服务暴露\"></a>3.2 服务暴露</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">></span> <span class=\"token number\">3</span>-expose-cdi-uploadproxy.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">'EOF'\napiVersion: v1\nkind: Service\nmetadata:\n  name: cdi-uploadproxy-nodeport\n  namespace: cdi\n  labels:\n    cdi.kubevirt.io: \"cdi-uploadproxy\"\nspec:\n  type: NodePort\n  ports:\n    - port: 443\n      targetPort: 8443\n      nodePort: 31001\n      protocol: TCP\n  selector:\n    cdi.kubevirt.io: cdi-uploadproxy\nEOF</span>\n\nkubectl apply <span class=\"token parameter variable\">-f</span> <span class=\"token number\">3</span>-expose-cdi-uploadproxy.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h1 id=\"四、GPU插件支持\"><a href=\"#四、GPU插件支持\" class=\"headerlink\" title=\"四、GPU插件支持\"></a>四、GPU插件支持</h1><p><a href=\"https://github.com/NVIDIA/kubevirt-gpu-device-plugin/\">https://github.com/NVIDIA/kubevirt-gpu-device-plugin/</a></p>\n<h2 id=\"4-1-安装\"><a href=\"#4-1-安装\" class=\"headerlink\" title=\"4.1 安装\"></a>4.1 安装</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> kubevirt\n<span class=\"token function\">mkdir</span> gpu <span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">cd</span> gpu\n<span class=\"token function\">wget</span> https://github.com/NVIDIA/kubevirt-gpu-device-plugin/archive/refs/tags/v1.2.4.tar.gz\n<span class=\"token function\">tar</span> <span class=\"token parameter variable\">-xf</span> v1.2.4.tar.gz\n<span class=\"token function\">cp</span> kubevirt-gpu-device-plugin-1.2.4/manifests/nvidia-kubevirt-gpu-device-plugin.yaml <span class=\"token number\">0</span>-vidia-kubevirt-gpu-device-plugin.yaml\nkubectl apply <span class=\"token parameter variable\">-f</span> <span class=\"token number\">0</span>-vidia-kubevirt-gpu-device-plugin.yaml\n\n<span class=\"token comment\">#使用以下命令确定 GPU 的供应商 ID 和设备 ID</span>\nlspci <span class=\"token parameter variable\">-nn</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-i</span> nvidia<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"4-2-直通模式\"><a href=\"#4-2-直通模式\" class=\"headerlink\" title=\"4.2 直通模式\"></a>4.2 直通模式</h2><h3 id=\"1-在KVM主机上启用IOMMU和黑名单新驱动程序\"><a href=\"#1-在KVM主机上启用IOMMU和黑名单新驱动程序\" class=\"headerlink\" title=\"1. 在KVM主机上启用IOMMU和黑名单新驱动程序\"></a>1. 在KVM主机上启用IOMMU和黑名单新驱动程序</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">vim</span> /etc/default/grub\n<span class=\"token comment\"># line 6: add (if AMD CPU, add [amd_iommu=on])</span>\n<span class=\"token assign-left variable\">GRUB_TIMEOUT</span><span class=\"token operator\">=</span><span class=\"token number\">5</span>\n<span class=\"token assign-left variable\">GRUB_DISTRIBUTOR</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">sed</span> <span class=\"token string\">'s, release .*$,,g'</span> /etc/system-release<span class=\"token variable\">)</span></span>\"</span>\n<span class=\"token assign-left variable\">GRUB_DEFAULT</span><span class=\"token operator\">=</span>saved\n<span class=\"token assign-left variable\">GRUB_DISABLE_SUBMENU</span><span class=\"token operator\">=</span>true\n<span class=\"token assign-left variable\">GRUB_TERMINAL_OUTPUT</span><span class=\"token operator\">=</span><span class=\"token string\">\"console\"</span>\n<span class=\"token assign-left variable\">GRUB_CMDLINE_LINUX</span><span class=\"token operator\">=</span><span class=\"token string\">\"rd.lvm.lv=centos/root rd.lvm.lv=centos/swap rhgb intel_iommu=on quiet iommu=pt modprobe.blacklist=nouveau\"</span>\n<span class=\"token assign-left variable\">GRUB_DISABLE_RECOVERY</span><span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>将“intel_iommu&#x3D;on modprobe.blacklist&#x3D;nouveau”附加到“GRUB_CMDLINE_LINUX”</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">grub2-mkconfig <span class=\"token parameter variable\">-o</span> /boot/grub2/grub.cfg\ngrub2-mkconfig <span class=\"token parameter variable\">-o</span> /boot/efi/EFI/centos/grub.cfg\n<span class=\"token function\">reboot</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>重新启动后，使用以下命令验证是否启用了 IOMMU</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">dmesg</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-E</span> <span class=\"token string\">\"DMAR|IOMMU\"</span>\n<span class=\"token comment\">#验证新版是否已禁用</span>\n<span class=\"token function\">dmesg</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-i</span> nouveau<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-启用-vfio-pci-内核模块\"><a href=\"#2-启用-vfio-pci-内核模块\" class=\"headerlink\" title=\"2. 启用 vfio-pci 内核模块\"></a>2. 启用 vfio-pci 内核模块</h3><p>使用以下命令确定 GPU 的供应商 ID 和设备 ID</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lspci <span class=\"token parameter variable\">-nn</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-i</span> nvidia<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>在下面的示例中，供应商 ID 为 10de，设备 ID 为 1b38</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ lspci <span class=\"token parameter variable\">-nn</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-i</span> nvidia\n04:00.0 3D controller <span class=\"token punctuation\">[</span>0302<span class=\"token punctuation\">]</span>: NVIDIA Corporation GP102GL <span class=\"token punctuation\">[</span>Tesla P40<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>10de:1b38<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>rev a1<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>更新 VFIO 配置</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"options vfio-pci ids=vendor-ID:device-ID\"</span> <span class=\"token operator\">></span> /etc/modprobe.d/vfio.conf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>考虑到供应商 ID 为 10de，设备 ID 为 1b38，命令将如下所示</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"options vfio-pci ids=10de:20f1,10de:1b38\"</span> <span class=\"token operator\">></span> /etc/modprobe.d/vfio.conf\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>更新配置以在重新加载后加载 VFIO-PCI 模块</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'vfio-pci'</span> <span class=\"token operator\">></span> /etc/modules-load.d/vfio-pci.conf\n<span class=\"token function\">reboot</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>验证是否已为 GPU 加载 VFIO-PCI 驱动程序</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lspci <span class=\"token parameter variable\">-nnk</span> <span class=\"token parameter variable\">-d</span> 10de:<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>下面的输出显示“正在使用的内核驱动程序”是“vfio-pci”</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@gpu002 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># lspci -nnk -d 10de:</span>\n<span class=\"token number\">34</span>:00.0 3D controller <span class=\"token punctuation\">[</span>0302<span class=\"token punctuation\">]</span>: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:20b5<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>rev a1<span class=\"token punctuation\">)</span>\n\tSubsystem: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:1533<span class=\"token punctuation\">]</span>\n\tKernel driver <span class=\"token keyword\">in</span> use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n<span class=\"token number\">35</span>:00.0 3D controller <span class=\"token punctuation\">[</span>0302<span class=\"token punctuation\">]</span>: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:20b5<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>rev a1<span class=\"token punctuation\">)</span>\n\tSubsystem: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:1533<span class=\"token punctuation\">]</span>\n\tKernel driver <span class=\"token keyword\">in</span> use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n<span class=\"token number\">36</span>:00.0 3D controller <span class=\"token punctuation\">[</span>0302<span class=\"token punctuation\">]</span>: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:20b5<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>rev a1<span class=\"token punctuation\">)</span>\n\tSubsystem: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:1533<span class=\"token punctuation\">]</span>\n\tKernel driver <span class=\"token keyword\">in</span> use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n<span class=\"token number\">37</span>:00.0 3D controller <span class=\"token punctuation\">[</span>0302<span class=\"token punctuation\">]</span>: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:20b5<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>rev a1<span class=\"token punctuation\">)</span>\n\tSubsystem: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:1533<span class=\"token punctuation\">]</span>\n\tKernel driver <span class=\"token keyword\">in</span> use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n9b:00.0 3D controller <span class=\"token punctuation\">[</span>0302<span class=\"token punctuation\">]</span>: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:20b5<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>rev a1<span class=\"token punctuation\">)</span>\n\tSubsystem: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:1533<span class=\"token punctuation\">]</span>\n\tKernel driver <span class=\"token keyword\">in</span> use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n9c:00.0 3D controller <span class=\"token punctuation\">[</span>0302<span class=\"token punctuation\">]</span>: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:20b5<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>rev a1<span class=\"token punctuation\">)</span>\n\tSubsystem: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:1533<span class=\"token punctuation\">]</span>\n\tKernel driver <span class=\"token keyword\">in</span> use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n9d:00.0 3D controller <span class=\"token punctuation\">[</span>0302<span class=\"token punctuation\">]</span>: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:20b5<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>rev a1<span class=\"token punctuation\">)</span>\n\tSubsystem: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:1533<span class=\"token punctuation\">]</span>\n\tKernel driver <span class=\"token keyword\">in</span> use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n9e:00.0 3D controller <span class=\"token punctuation\">[</span>0302<span class=\"token punctuation\">]</span>: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:20b5<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>rev a1<span class=\"token punctuation\">)</span>\n\tSubsystem: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:1533<span class=\"token punctuation\">]</span>\n\tKernel driver <span class=\"token keyword\">in</span> use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-校验节点gpu支持情况\"><a href=\"#3-校验节点gpu支持情况\" class=\"headerlink\" title=\"3. 校验节点gpu支持情况\"></a>3. 校验节点gpu支持情况</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> jq\nkubectl get <span class=\"token function\">node</span> gpu002 <span class=\"token parameter variable\">-o</span> json <span class=\"token operator\">|</span> jq <span class=\"token string\">'.status.allocatable'</span>\n\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token string\">\"cpu\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"63600m\"</span>,\n  <span class=\"token string\">\"devices.kubevirt.io/kvm\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"1k\"</span>,\n  <span class=\"token string\">\"devices.kubevirt.io/tun\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"1k\"</span>,\n  <span class=\"token string\">\"devices.kubevirt.io/vhost-net\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"1k\"</span>,\n  <span class=\"token string\">\"ephemeral-storage\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"434034624Ki\"</span>,\n  <span class=\"token string\">\"hugepages-1Gi\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"0\"</span>,\n  <span class=\"token string\">\"hugepages-2Mi\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"0\"</span>,\n  <span class=\"token string\">\"memory\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"1027098306574\"</span>,\n  <span class=\"token string\">\"nvidia.com/GA100_A100_PCIE_80GB\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"8\"</span>,\n  <span class=\"token string\">\"pods\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"110\"</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h2 id=\"4-3-声明GPU-Kubevirt-加入白名单\"><a href=\"#4-3-声明GPU-Kubevirt-加入白名单\" class=\"headerlink\" title=\"4.3.声明GPU,Kubevirt 加入白名单\"></a>4.3.声明GPU,Kubevirt 加入白名单</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#显卡名称查看</span>\nkubectl logs <span class=\"token parameter variable\">-f</span> <span class=\"token parameter variable\">-n</span> kube-system nvidia-kubevirt-gpu-dp-daemonset-*\nkubectl describe nodes <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> nvidia.com\n\n<span class=\"token function\">cp</span> kubevirt-gpu-device-plugin-1.2.0/examples/kubevirt-featuregate-cm.yaml <span class=\"token number\">1</span>-kubevirt-featuregate-cm.yaml\n\n<span class=\"token function\">vim</span> <span class=\"token number\">1</span>-kubevirt-featuregate-cm.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>修改设备相关对应关系：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> kubevirt.io/v1alpha3\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> KubeVirt\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> kubevirt\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> kubevirt\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">imagePullPolicy</span><span class=\"token punctuation\">:</span> IfNotPresent\n  <span class=\"token key atrule\">certificateRotateStrategy</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token key atrule\">configuration</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">permittedHostDevices</span><span class=\"token punctuation\">:</span>\n       <span class=\"token key atrule\">pciHostDevices</span><span class=\"token punctuation\">:</span>\n       <span class=\"token comment\"># whitelist the permitted devices here</span>\n       <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">pciVendorSelector</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"10DE:20B5\"</span>\n         <span class=\"token key atrule\">resourceName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"nvidia.com/GA100_A100_PCIE_80GB\"</span>\n         <span class=\"token key atrule\">externalResourceProvider</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n       <span class=\"token key atrule\">mediatedDevices</span><span class=\"token punctuation\">:</span>\n       <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">mdevNameSelector</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"GRID A100-1Q\"</span>\n         <span class=\"token key atrule\">resourceName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"nvidia.com/GRID_A100-1Q\"</span>\n    <span class=\"token key atrule\">imagePullPolicy</span><span class=\"token punctuation\">:</span> IfNotPresent\n    <span class=\"token key atrule\">developerConfiguration</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">featureGates</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> GPU\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>应用：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-f</span> <span class=\"token number\">1</span>-kubevirt-featuregate-cm.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>注意不可删除，可apply，删除会删除整个kubevirt</p>\n<h2 id=\"4-5-创建gpu虚机测试\"><a href=\"#4-5-创建gpu虚机测试\" class=\"headerlink\" title=\"4.5 创建gpu虚机测试\"></a>4.5 创建gpu虚机测试</h2><p><code>vim test-gpu.yaml</code></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> kubevirt.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> VirtualMachine\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> testvm\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">running</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">kubevirt.io/size</span><span class=\"token punctuation\">:</span> small\n        <span class=\"token key atrule\">kubevirt.io/domain</span><span class=\"token punctuation\">:</span> testvm\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">domain</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">devices</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">disks</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> containerdisk\n              <span class=\"token key atrule\">disk</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">bus</span><span class=\"token punctuation\">:</span> virtio\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> cloudinitdisk\n              <span class=\"token key atrule\">disk</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">bus</span><span class=\"token punctuation\">:</span> virtio\n          <span class=\"token key atrule\">gpus</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">deviceName</span><span class=\"token punctuation\">:</span> nvidia.com/GV100GL_TESLA_V100_PCIE_16GB\n              <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gpu1\n\n          <span class=\"token key atrule\">interfaces</span><span class=\"token punctuation\">:</span>\n          <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> default\n            <span class=\"token key atrule\">masquerade</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n        <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> 64M\n      <span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> default\n        <span class=\"token key atrule\">pod</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n      <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> containerdisk\n          <span class=\"token key atrule\">containerDisk</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> quay.io/kubevirt/cirros<span class=\"token punctuation\">-</span>container<span class=\"token punctuation\">-</span>disk<span class=\"token punctuation\">-</span>demo\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> cloudinitdisk\n          <span class=\"token key atrule\">cloudInitNoCloud</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">userDataBase64</span><span class=\"token punctuation\">:</span> SGkuXG4=\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>启动</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-f</span> test-gpu.yaml\nkubectl get vm\nvirtctl start testvm\nvirtctl console testvm\n<span class=\"token comment\">#退出console</span>\nctrl+<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h1 id=\"五、MariaDB部署\"><a href=\"#五、MariaDB部署\" class=\"headerlink\" title=\"五、MariaDB部署\"></a>五、MariaDB部署</h1><h2 id=\"5-1-创建pvc\"><a href=\"#5-1-创建pvc\" class=\"headerlink\" title=\"5.1 创建pvc\"></a>5.1 创建pvc</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> mariadb <span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">cd</span> mariadb\n<span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">0</span>-pvc.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: mariadb-data\nspec:\n  accessModes:\n  - ReadWriteMany\n  resources:\n    requests:\n      storage: 100Gi\n  storageClassName: nfs-retain\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"5-2-创建配置文件\"><a href=\"#5-2-创建配置文件\" class=\"headerlink\" title=\"5.2 创建配置文件\"></a>5.2 创建配置文件</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">1</span>-configMap.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: mariadb-config\ndata:\n  my.cnf: |\n    [mysqld]\n\tdatadir = /var/lib/mysql\n\tsocket = /var/run/mysqld/mysqld.sock\n\tpid-file = /var/run/mysqld/mysqld.pid\n\n\t#user=mysql\n\n\tcharacter-set-server=utf8mb4\n\tcollation-server=utf8mb4_bin\n\n\tdefault-time-zone = '+8:00'\n\n\t#server-id\n\tserver_id=1\n\n\t#禁止名称解析\n\tskip_name_resolve=ON\n\n\t#不区分大小写\n\tlower_case_table_names = 1\n\n\t#最大连接数，当max_connections设置太小时（默认151），MySQL可能会报错Too many connections。\n\t#当max_connections设置太大时（1000以上），>操作系统可能忙于线程间的切换而失去响应。\n\t#每个连接都会消耗一定内存，最大连接数占上限连接数（show global status like 'Max_used_connections';）的85%左右，\n\t#如果发现比例在10%以下，MySQL服务器连接上线就设置得过高了。\n\t#Max_used_connections / max_connections = 0.85\n\tmax_connections = 2048\n\n\t#指mysql服务器端和客户端在一次传送数据包的过程当中最大允许的数据包大小。\n\t#max_allowed_packet 最大值是1G(1073741824)，如果设置超过1G，>查看最终生效结果也只有1G。\n\tmax_allowed_packet = 1G\n\n\t#当客户端断开之后，服务器处理此客户的线程将会缓存起来以响应下一个客户而不是销毁(前提是缓存数未达上限)\n\t#即可以重新利用保存在缓存中线程的数量，当断开连接时如果缓存中还有空间，那么客户端的线程将被放到缓存中，\n\t#如果线程重新被请求，那么请求>将从缓存中读取，\n\t#如果缓存中是空的或者是新的请求，那么这个线程将被重新创建，如果有很多新的线程，增加这个值可以改善系统性能。\n\t#根据并发连接数进行配置，这里假设并发连接数为 1000。\n\tthread_cache_size = 64\n\n\t#物理内存大小的70%-80%,如果服务器上只运行MySQL，则可以将此值增加到90%，这里假设服务器内存为 8GB。\n\tinnodb_buffer_pool_size = 6G\n\n\t# 增加 innodb_log_buffer_size，提高写入性能。\n\tinnodb_log_buffer_size = 16M\n\n\t# 设置innodb_io_capacity，并启用O_DIRECT，提高IO性能。\n\tinnodb_io_capacity = 2000\n\tinnodb_flush_method = O_DIRECT\n\n\t#innodb只读压缩\n\tinnodb_read_only_compressed = 0\n\n\t#innodb可以把每个表的数据单独保存。\n\tinnodb_file_per_table=ON\n\n\t#禁用或启用中继日志，只要不再需要，立即自动清除。默认值为 1（已启用）\n\trelay_log_purge = ON\n\t#定义relay_log的位置和名称，如果值为空，则默认位置在数据文件的目录，文件名为host_name-relay-bin.nnnnnn\n\trelay_log=relay-bin\n\t#定义relay_log_index的位置和名称\n\trelay_log_index=relay-bin.index\n\n\t#是否打开慢查询日志\n\tslow_query_log=ON\n\t#慢查询时间为5s，根据实际业务情况进行配置。\n\tlong_query_time = 5\n\t#慢查询文件位置，将日志文件放在独立的 SSD 盘上。\n\tslow-query-log-file=/var/lib/mysql/slow.log\n\n\t#binlog日志格式\n\tbinlog_format=ROW\n\t#启用二进制日志记录，指定文件名\n\tlog_bin=bin-log\n\t#启用二进制日志记录，指定文件名\n\tlog_bin_index=bin-log.index\n\t#定义了mysql清除过期日志的时间。默认值为0,表示“没有自动删除”。单位天\n\texpire_logs_days=7\n\t#复制服务器从源服务器接收的更新是否应记录到副本自己的二进制日志。\n\tlog_slave_updates=ON\n\n\t#日志的存放位置\n\tlog_error = /var/lib/mysql/mysqld.log\n\t#log_warnings 为0，表示不记录告警信息。\n\t#log_warnings 为1，表示告警信息写入错误日志。\n\t#log_warnings 大于1，表示各类告警信息，例如有关网络故障的信息和重新连接信息写入错误日志。（默认为2）\n\t#log_warnings=2\n\n\t#GTID严格模式\n\tgtid_strict_mode=ON\n\n\t#从库幂等模式\n\tslave_exec_mode= IDEMPOTENT\n\n\t#slave忽略同步的数据库\n\treplicate-ignore-db=information_schema,performance_schema\n\n\t#半同步\n\trpl_semi_sync_master_enabled=on\n\trpl_semi_sync_slave_enabled=on\n\n\t#会话事务状态跟踪\n\tsession_track_state_change = ON\n\tsession_track_transaction_info = CHARACTERISTICS\n\tsession_track_system_variables='autocommit,character_set_client,character_set_connection,character_set_results,time_zone,last_gtid'\n\n\t#\n\t# include *.cnf from the config directory\n\t#\n\t#!includedir /etc/my.cnf.d\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"5-3-创建有状态服务\"><a href=\"#5-3-创建有状态服务\" class=\"headerlink\" title=\"5.3 创建有状态服务\"></a>5.3 创建有状态服务</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span><span class=\"token number\">2</span>-statefulSet.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: mariadb\nspec:\n  replicas: 1\n  serviceName: mariadb\n  selector:\n    matchLabels:\n      app: mariadb\n  template:\n    metadata:\n      labels:\n        app: mariadb\n    spec:\n      containers:\n      - name: mariadb\n        image: mariadb:10.9\n        env:\n        - name: MYSQL_ROOT_PASSWORD\n          value: '4y6Cu%946*!TXY'\n        volumeMounts:\n        - name: mariadb-storage\n          mountPath: /var/lib/mysql\n        - name: mariadb-config\n          mountPath: /etc/mysql/my.cnf\n          subPath: my.cnf\n      volumes:\n      - name: mariadb-storage\n        persistentVolumeClaim:\n          claimName: mariadb-data\n      - name: mariadb-config\n        configMap:\n          name: mariadb-config\n          items:\n            - key: my.cnf\n              path: my.cnf\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"5-4-创建服务暴露\"><a href=\"#5-4-创建服务暴露\" class=\"headerlink\" title=\"5.4 创建服务暴露\"></a>5.4 创建服务暴露</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">3</span>-service.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: mariadb\n  labels:\n    app: mariadb\nspec:\n  ports:\n    - name: mariadb\n      port: 3306\n      protocol: TCP\n      targetPort: 3306\n      nodePort: 30001\n  selector:\n    app: mariadb\n  type: NodePort\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"5-5-应用\"><a href=\"#5-5-应用\" class=\"headerlink\" title=\"5.5 应用\"></a>5.5 应用</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">0</span>-pvc.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">1</span>-configMap.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-statefulSet.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">3</span>-service.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h1 id=\"六、Nacos服务部署\"><a href=\"#六、Nacos服务部署\" class=\"headerlink\" title=\"六、Nacos服务部署\"></a>六、Nacos服务部署</h1><h2 id=\"6-1-登陆数据库，创建nacos用户及库，并导入初始化sql\"><a href=\"#6-1-登陆数据库，创建nacos用户及库，并导入初始化sql\" class=\"headerlink\" title=\"6.1 登陆数据库，创建nacos用户及库，并导入初始化sql\"></a>6.1 登陆数据库，创建nacos用户及库，并导入初始化sql</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">use</span> mysql<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">database</span> nacos <span class=\"token keyword\">CHARACTER</span> <span class=\"token keyword\">SET</span> utf8mb4 <span class=\"token keyword\">COLLATE</span> utf8mb4_bin<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">user</span> <span class=\"token string\">'nacos'</span><span class=\"token variable\">@'%'</span> identified <span class=\"token keyword\">by</span> <span class=\"token string\">'!EdkeJwrtDN45^'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">grant</span> <span class=\"token keyword\">all</span> <span class=\"token keyword\">privileges</span> <span class=\"token keyword\">on</span> nacos<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token keyword\">to</span> <span class=\"token string\">'nacos'</span><span class=\"token variable\">@'%'</span><span class=\"token punctuation\">;</span>\nflush <span class=\"token keyword\">privileges</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"6-2-创建nacos\"><a href=\"#6-2-创建nacos\" class=\"headerlink\" title=\"6.2 创建nacos\"></a>6.2 创建nacos</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> nacos<span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">cd</span> nacos\n<span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">1</span>-nacos-deployment.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nacos\n  labels:\n    app: nacos\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nacos\n  template:\n    metadata:\n      labels:\n        app: nacos\n    spec:\n      containers:\n        - name: nacos\n          image: nacos/nacos-server:v2.2.0\n          env:\n            - name: MODE\n              value: \"standalone\"\n            - name: SPRING_DATASOURCE_PLATFORM\n              value: \"mysql\"\n            - name: MYSQL_SERVICE_HOST\n              value: \"200.0.0.98\"\n            - name: MYSQL_SERVICE_PORT\n              value: \"30001\"\n            - name: MYSQL_SERVICE_DB_NAME\n              value: \"nacos\"\n            - name: MYSQL_SERVICE_USER\n              value: \"nacos\"\n            - name: MYSQL_SERVICE_PASSWORD\n              value: \"!EdkeJwrtDN45^\"\n          ports:\n            - containerPort: 8848\n              name: client-port\n            - containerPort: 9848\n              name: client-rpc\n            - containerPort: 9849\n              name: raft-rpc\n            - containerPort: 7848\n              name: old-raft-rpc\n\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h2 id=\"6-3-创建服务暴露\"><a href=\"#6-3-创建服务暴露\" class=\"headerlink\" title=\"6.3 创建服务暴露\"></a>6.3 创建服务暴露</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span>-nacos-service.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: nacos\n  labels:\n    app: nacos\n  annotations:\n    service.alpha.kubernetes.io/tolerate-unready-endpoints: \"true\"\nspec:\n  ports:\n    - port: 8848\n      name: server\n      targetPort: 8848\n      nodePort: 30002\n    - port: 9848\n      name: client-rpc\n      targetPort: 9848\n    - port: 9849\n      name: raft-rpc\n      targetPort: 9849\n    ## 兼容1.4.x版本的选举端口\n    - port: 7848\n      name: old-raft-rpc\n      targetPort: 7848\n  type: NodePort  #Serive的类型，ClusterIP/NodePort/LoaderBalancer\n  selector:\n    app: nacos\n\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"6-3-数据库中导入预定义sql，见附件\"><a href=\"#6-3-数据库中导入预定义sql，见附件\" class=\"headerlink\" title=\"6.3 数据库中导入预定义sql，见附件\"></a>6.3 数据库中导入预定义sql，见附件</h2><p>初始化sql：<br><a href=\"_v_attachments/20230225224217873_1139/mysql-schema.sql\">mysql-schema.sql</a></p>\n<h2 id=\"6-4-应用\"><a href=\"#6-4-应用\" class=\"headerlink\" title=\"6.4 应用\"></a>6.4 应用</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">1</span>-nacos-deployment.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-nacos-service.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"6-5-创建era命名空间\"><a href=\"#6-5-创建era命名空间\" class=\"headerlink\" title=\"6.5 创建era命名空间\"></a>6.5 创建era命名空间</h2><p>![](_v_images&#x2F;20230227115412128_20323.png &#x3D;1241x)</p>\n<h2 id=\"6-6-在era命名空间中导入附件配置\"><a href=\"#6-6-在era命名空间中导入附件配置\" class=\"headerlink\" title=\"6.6 在era命名空间中导入附件配置\"></a>6.6 在era命名空间中导入附件配置</h2><p>![](_v_images&#x2F;20230227115516361_6927.png &#x3D;810x)</p>\n<p>nacos配置：<br><a href=\"_v_attachments/20230225224217873_1139/nacos_config_export_20230423155621.zip\">nacos_config_export_20230423155621.zip</a></p>\n<h1 id=\"七、MinIO部署\"><a href=\"#七、MinIO部署\" class=\"headerlink\" title=\"七、MinIO部署\"></a>七、MinIO部署</h1><h2 id=\"7-1-创建pvc\"><a href=\"#7-1-创建pvc\" class=\"headerlink\" title=\"7.1 创建pvc\"></a>7.1 创建pvc</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">0</span>-pvc.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: minio-data\nspec:\n  accessModes:\n  - ReadWriteMany\n  resources:\n    requests:\n      storage: 100Gi\n  storageClassName: nfs-retain\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"7-2-创建deployment文件\"><a href=\"#7-2-创建deployment文件\" class=\"headerlink\" title=\"7.2 创建deployment文件\"></a>7.2 创建deployment文件</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">1</span>-deployment.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: minio\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: minio\n  template:\n    metadata:\n      labels:\n        app: minio\n    spec:\n      containers:\n      - name: minio\n        image: minio/minio:RELEASE.2022-06-11T19-55-32Z\n        imagePullPolicy: IfNotPresent\n        command:\n          - /bin/sh\n          - -c\n          - minio server /data --console-address \":9000\" --address \":9001\"\n        env:\n        - name: MINIO_ROOT_USER\n          value: admin\n        - name: MINIO_ROOT_PASSWORD\n          value: 'c!%892w@MWE^T*'\n        ports:\n        - name: web\n          containerPort: 9000\n          protocol: \"TCP\"\n        - name: api\n          containerPort: 9001\n          protocol: \"TCP\"\n        volumeMounts:\n          - mountPath: /data\n            name: data\n      volumes:\n      - name: data\n        persistentVolumeClaim:\n          claimName: minio-data\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"7-3-创建服务暴露\"><a href=\"#7-3-创建服务暴露\" class=\"headerlink\" title=\"7.3 创建服务暴露\"></a>7.3 创建服务暴露</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span>-service.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: minio\n  labels:\n    app: minio\nspec:\n  ports:\n    - name: web-port\n      port: 9000\n      protocol: TCP\n      targetPort: 9000\n      nodePort: 30004\n    - name: api-port\n      port: 9001\n      protocol: TCP\n      targetPort: 9001\n      nodePort: 30005\n  type: NodePort\n  selector:\n    app: minio\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"7-4-应用\"><a href=\"#7-4-应用\" class=\"headerlink\" title=\"7.4 应用\"></a>7.4 应用</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">0</span>-pvc.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">1</span>-deployment.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-service.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"7-5-配置桶及用户\"><a href=\"#7-5-配置桶及用户\" class=\"headerlink\" title=\"7.5 配置桶及用户\"></a>7.5 配置桶及用户</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">era\nera\nE<span class=\"token variable\">$y</span>*uY7@<span class=\"token operator\">&amp;</span>39gW6\n\nAccess Key\n\nBNXMD8gbbM4Q2NoX\nSecret Key\n\n0fRkiYeJ63wMHz98I3Q7c3fUD1f9QZZW\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"1-创建桶\"><a href=\"#1-创建桶\" class=\"headerlink\" title=\"1.创建桶\"></a>1.创建桶</h3><p>![](_v_images&#x2F;20230227103232369_29801.png &#x3D;536x)</p>\n<h3 id=\"2-创建用户\"><a href=\"#2-创建用户\" class=\"headerlink\" title=\"2.创建用户\"></a>2.创建用户</h3><p>![](_v_images&#x2F;20230227114333584_26973.png &#x3D;559x)</p>\n<h3 id=\"3-创建权限策略\"><a href=\"#3-创建权限策略\" class=\"headerlink\" title=\"3.创建权限策略\"></a>3.创建权限策略</h3><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token key atrule\">\"Version\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"2012-10-17\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token key atrule\">\"Statement\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token key atrule\">\"Effect\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Allow\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token key atrule\">\"Action\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">\"s3:*\"</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token key atrule\">\"Resource\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">\"arn:aws:s3:::era/*\"</span>\n            <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>![](_v_images&#x2F;20230227114629100_1990.png &#x3D;553x)</p>\n<h3 id=\"4-用户绑定权限\"><a href=\"#4-用户绑定权限\" class=\"headerlink\" title=\"4.用户绑定权限\"></a>4.用户绑定权限</h3><p>![](_v_images&#x2F;20230227114727497_21480.png &#x3D;858x)</p>\n<h3 id=\"5-创建用户令牌并记录\"><a href=\"#5-创建用户令牌并记录\" class=\"headerlink\" title=\"5.创建用户令牌并记录\"></a>5.创建用户令牌并记录</h3><p>![](_v_images&#x2F;20230227111406643_8560.png &#x3D;769x)</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Access Key:\n\n0psoK6mqbPynGQuh\nSecret Key:\n\nfBWc4MZzPL94DQ8k1l2JsN5MERfrSD2R<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>![](_v_images&#x2F;20230227114800001_7048.png &#x3D;578x)</p>\n<h1 id=\"八、Redis部署\"><a href=\"#八、Redis部署\" class=\"headerlink\" title=\"八、Redis部署\"></a>八、Redis部署</h1><h2 id=\"8-1-创建配置文件\"><a href=\"#8-1-创建配置文件\" class=\"headerlink\" title=\"8.1 创建配置文件\"></a>8.1 创建配置文件</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">0</span>-configMap.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: redis-config\ndata:\n  redis.conf: |\n    # Redis配置文件示例。\n    #\n    # 请注意，为了读取配置文件，Redis必须以文件路径作为第一个参数来启动：\n    #\n    # ./redis-server /path/to/redis.conf\n\n    # 关于单位的注意事项：当需要内存大小时，可以以通常的格式1k 5GB 4M来指定它，依此类推：\n    #\n    # 1k => 1000字节\n    # 1kb => 1024字节\n    # 1m => 1000000字节\n    # 1mb => 1024 * 1024字节\n    # 1g => 1000000000字节\n    # 1gb => 1024 * 1024 * 1024字节\n    #\n    # 单位不区分大小写，因此1GB 1Gb 1gB都相同。\n\n    ################################## INCLUDES ###################################\n\n    # 在此处包含一个或多个其他配置文件。 如果您具有可用于所有Redis服务器的标准模板，但还需要自定义一些每服务器设置，则此功能很有用。\n    # 包含文件可以包含其他文件，因此请明智地使用它。\n    #\n    # 注意admin或Redis Sentinel的命令\"CONFIG REWRITE\"不会重写选项\"include\"。\n    # 由于Redis始终使用最后处理的行作为配置指令的值，因此最好将include放在此文件的开头，以避免在运行时覆盖配置更改。\n    #\n    # 如果您反而对使用include覆盖配置选项感兴趣，则最好将include作为最后一行。\n    #\n    # include /path/to/local.conf\n    # include /path/to/other.conf\n\n    ################################## MODULES #####################################\n\n    # 在启动时加载模块。 如果服务器无法加载模块，它将中止。 可以使用多个loadmodule指令。\n    #\n    # loadmodule /path/to/my_module.so\n    # loadmodule /path/to/other_module.so\n\n    ################################## NETWORK #####################################\n\n    # 默认情况下，如果未指定\"bind\"配置指令，则Redis侦听来自服务器上所有可用网络接口的连接。\n    # 可以使用\"bind\"配置指令仅侦听一个或多个所选接口，然后侦听一个或多个IP地址。\n    #\n    # Examples:\n    #\n    # bind 192.168.1.100 10.0.0.1\n    # bind 127.0.0.1 ::1\n    #\n    # ~~~警告~~~如果运行Redis的计算机直接暴露于Internet，则绑定到所有接口都是危险的，并且会将实例暴露给Internet上的所有人。因此，默认情况下，\n    # 我们取消注释以下bind指令，这将强制Redis仅侦听IPv4环回接口地址（这意味着Redis将只能接受来自正在运行同一台计算机的客户端的连接）。\n    #\n    # 如果您确定要立即侦听所有接口，请仅注意以下几行。\n    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    bind *\n\n    # 保护模式是安全保护的一层，目的是避免访问和利用Internet上打开的Redis实例。\n    #\n    # 启用保护模式时，如果：\n    #\n    # 1）服务器未使用\"bind\"指令显式绑定到一组地址。\n    # 2）未配置密码。\n    #\n    # 服务器仅接受来自通过IPv4和IPv6回送地址127.0.0.1和::: 1以及来自Unix域套接字的客户端的连接。\n    #\n    # 默认情况下启用保护模式。 仅当您确定您希望其他主机的客户端连接到Redis时，\n    # 即使未配置身份验证，也不会使用\"bind\"指令显式列出一组特定的接口，才应禁用它。\n    protected-mode no\n\n    # 接受指定端口上的连接，默认为6379（IANA# 815344）。\n    # 如果指定了端口0，则Redis将不会在TCP套接字上侦听。\n    port 6379\n\n    # TCP listen() backlog.\n    #\n    # 在每秒请求数很高的环境中，您需要大量backlog(积压)，以避免客户端连接速度慢的问题。\n    # 请注意，Linux内核会以无提示的方式将其截断为/proc/sys/net/core/somaxconn的值，\n    # 因此请确保同时提高somaxconn和tcp_max_syn_backlog的值，以获得所需的效果。\n    tcp-backlog 511\n\n    # Unix socket.\n    #\n    # 指定用于监听传入连接的Unix套接字的路径。 没有默认值，因此在未指定Redis的情况下，Redis不会在Unix套接字上侦听。\n    #\n    # unixsocket /tmp/redis.sock\n    # unixsocketperm 700\n\n    # 客户端闲置N秒后关闭连接（0禁用）\n    timeout 0\n\n    # TCP keepalive.\n    #\n    # 如果非零，请在没有通信的情况下使用SO_KEEPALIVE向客户端发送TCP ACK。 这很有用，原因有两个：\n    # \n    # 1）检测死亡的同伴。\n    # 2）从中间的网络设备的角度来看，使连接保持活动状态。\n    # \n    # 在Linux上，指定的值（以秒为单位）是用于发送ACK的时间段。\n    # 请注意，关闭连接需要两倍的时间。\n    # 在其他内核上，期限取决于内核配置。\n    # \n    # 此选项的合理值是300秒，这是从Redis 3.2.1开始的新Redis默认值。\n    tcp-keepalive 300\n\n    ################################# TLS/SSL #####################################\n\n    # 默认情况下，禁用TLS / SSL。 要启用它，可以使用\"tls-port\"配置指令来定义TLS侦听端口。 \n    # 要在默认端口上启用TLS，请使用：\n    #\n    # port 0\n    # tls-port 6379\n\n    # 配置X.509证书和私钥，用于对连接的客户端，主服务器或集群对等服务器进行身份验证。 这些文件应为PEM格式。\n    #\n    # tls-cert-file redis.crt\n    # tls-key-file redis.key\n\n    # 配置DH参数文件，启用Diffie-Hellman（DH）密钥交换。\n    #\n    # tls-dh-params-file redis.dh\n\n    # 配置CA证书捆绑包或目录以认证TLS/SSL客户端和对等方。 Redis需要其中至少一项的显式配置，并且不会隐式使用系统范围的配置。\n    #\n    # tls-ca-cert-file ca.crt\n    # tls-ca-cert-dir /etc/ssl/certs\n\n    # 默认情况下，TLS端口上的客户端（包括副本服务器）需要使用有效的客户端证书进行身份验证。\n    #\n    # 可以使用此伪指令禁用身份验证。\n    #\n    # tls-auth-clients no\n\n    # 默认情况下，Redis副本不尝试与其主服务器建立TLS连接。\n    #\n    # 使用以下指令在复制链接上启用TLS。\n    #\n    # tls-replication yes\n\n    # 默认情况下，Redis群集总线使用纯TCP连接。 要为总线协议启用TLS，请使用以下指令：\n    #\n    # tls-cluster yes\n\n    # 明确指定要支持的TLS版本。 允许的值不区分大小写，包括\"TLSv1\"，\"TLSv1.1\"，\"TLSv1.2\"，\"TLSv1.3\"（OpenSSL> = 1.1.1）或任意组合。\n    # 要仅启用TLSv1.2和TLSv1.3，请使用：\n    #\n    # tls-protocols \"TLSv1.2 TLSv1.3\"\n\n    # 配置允许的密码。 有关此字符串的语法的更多信息，请参见ciphers（1ssl）联机帮助页。\n    #\n    # 注意：此配置仅适用于&lt;= TLSv1.2。\n    #\n    # tls-ciphers DEFAULT:!MEDIUM\n\n    # 配置允许的TLSv1.3密码套件。 有关此字符串的语法（尤其是TLSv1.3密码套件）的语法的更多信息，请参见ciphers（1ssl）联机帮助页。\n    #\n    # tls-ciphersuites TLS_CHACHA20_POLY1305_SHA256\n\n    # 选择密码时，请使用服务器的首选项而不是客户端的首选项。 默认情况下，服务器遵循客户端的首选项。\n    #\n    # tls-prefer-server-ciphers yes\n\n    ################################# GENERAL(通常) #####################################\n\n    # 默认情况下，Redis不会作为守护程序运行。 如果需要，请使用\"是\"。\n    # 注意，Redis守护进程将在/var/run/redis.pid中写入一个pid文件。\n    daemonize no\n\n    # 如果从upstart或systemd运行Redis，Redis可以与您的supervision(监督) tree进行交互。 选项：\n    #   supervised no      - 没有supervision(监督)互动\n    #   supervised upstart - 通过将Redis置于SIGSTOP模式来发出信号\n    #   supervised systemd - 通过将READY = 1写入$ NOTIFY_SOCKET来产生信号\n    #   supervised auto    - 根据UPSTART_JOB或NOTIFY_SOCKET环境变量检测upstart或systemd方法\n\n    # 注意：这些supervision(监督)方法仅表示\"过程已准备就绪\"。\n    #       他们无法使您的主管连续不断地进行ping操作。\n    supervised no\n\n    # 如果指定了pid文件，则Redis会在启动时将其写入指定位置，并在退出时将其删除。\n    #\n    # 当服务器在非守护进程中运行时，如果未在配置中指定任何pid文件，则不会创建该文件。\n    # 守护服务器时，即使未指定，也会使用pid文件，默认为\"/var/run/redis.pid\"。\n    #\n    # 尽最大努力创建一个pid文件：如果Redis无法创建它，那么一切正常，服务器将正常启动并运行。\n    pidfile /var/run/redis_6379.pid\n\n    # 指定服务器的详细级别。\n    # 这可以是以下之一：\n    # debug (很多信息，对于开发/测试很有用）\n    # verbose (很多很少有用的信息，但不会像调试级别那样混乱）\n    # notice (适度冗长，可能在生产中需要什么）\n    # warning (仅记录非常重要/重要的消息）\n    loglevel notice\n\n    # 指定日志文件名。 空字符串也可以用于强制Redis登录标准输出。\n    # 请注意，如果您使用标准输出进行日志记录但进行守护进程，则日志将发送到/dev/null\n    logfile \"\"\n\n    # 要启用登录到系统记录器的功能，只需将'syslog-enabled'设置为yes，然后根据需要更新其他syslog参数。\n    # syslog-enabled no\n\n    # 指定系统日志标识。\n    # syslog-ident redis\n\n    # 指定系统日志工具。 必须是USER或在LOCAL0-LOCAL7之间。\n    # syslog-facility local0\n\n    # 设置数据库数量。 默认数据库为DB 0，您可以使用SELECT &lt;dbid>在每个连接的基础上选择一个不同的数据库，\n    # 其中dbid是介于0和'databases'-1之间的数字\n    databases 16\n\n    # 默认情况下，仅当开始记录到标准输出并且标准输出为TTY时，Redis才会显示ASCII艺术logo。\n    # 基本上，这意味着logo通常仅在交互式会话中显示。\n    #\n    # 但是，可以通过将以下选项设置为yes，来强制执行4.0之前的行为并始终在启动日志中显示ASCII艺术logo。\n    always-show-logo yes\n\n    ################################ SNAPSHOTTING(快照)  ################################\n    #\n    # 将数据库保存在磁盘上：\n    #\n    #   save &lt;seconds> &lt;changes>\n    #\n    # 如果同时发生了给定的秒数和给定的针对数据库的写操作数，则将保存数据库。\n    #\n    # 在下面的示例中，行为将是保存：\n    #     900秒（15分钟）后，如果至少更改了1个键\n    #     300秒（5分钟）后，如果至少更改了10个按键\n    #     60秒后，如果至少更改了10000个键\n    #\n    # 注意：您可以通过注释掉所有\"保存\"行来完全禁用保存。\n    #\n    # 也可以通过添加带有单个空字符串参数的save指令来删除所有先前配置的保存点，如以下示例所示：\n    #\n    #   save \"\"\n\n    save 900 1\n    save 300 10\n    save 60 10000\n\n    # 默认情况下，如果启用了RDB快照（至少一个保存点）并且最新的后台保存失败，Redis将停止接受写入。\n    # 这将使用户（以一种困难的方式）意识到数据无法正确地持久存储在磁盘上，否则，可能没人会注意到并且会发生一些灾难。\n    #\n    # 如果后台保存过程将再次开始工作，则Redis将自动允许再次写入。\n    #\n    # 但是，如果您设置了对Redis服务器和持久性的适当监视，则可能要禁用此功能，以便即使磁盘，权限等出现问题，Redis也将继续照常工作。\n    stop-writes-on-bgsave-error yes\n\n    # 转储.rdb数据库时使用LZF压缩字符串对象？\n    # 默认情况下将其设置为\"是\"，因为它几乎总是胜利。\n    # 如果要在保存子项中保存一些CPU，请将其设置为\"no\"，但是如果您具有可压缩的值或键，则数据集可能会更大。\n    rdbcompression yes\n\n    # 从RDB版本5开始，在文件末尾放置了CRC64校验和。\n    # 这使得该格式更能抵抗损坏，但是在保存和加载RDB文件时会付出一定的性能损失（大约10％），因此可以禁用该格式以获得最佳性能。\n    #\n    # 在禁用校验和的情况下创建的RDB文件的校验和为零，这将指示加载代码跳过该校验。\n    rdbchecksum yes\n\n    # 转储数据库的文件名\n    dbfilename dump.rdb\n\n    # 删除没有启用持久性的实例中复制使用的RDB文件。 默认情况下，此选项是禁用的，\n    # 但是在某些环境中，出于法规或其他安全方面的考虑，应将RDB文件由主数据库持久存储在磁盘上以提供副本，\n    # 或将RDB文件由副本存储在磁盘上以加载它们以进行初始同步。\n    # 尽快删除。 请注意，此选项仅在同时禁用AOF和RDB持久性的实例中起作用，否则将被完全忽略。\n    #\n    # 获得相同效果的另一种方法（有时是更好的方法）是在主实例和副本实例上都使用无盘复制。 但是，对于副本，无盘并非始终是一种选择。\n    rdb-del-sync-files no\n\n    # 工作目录。\n    #\n    # 数据库将被写入该目录内，文件名使用\"dbfilename\"配置指令在上面指定。\n    #\n    # 也将在此目录中创建\"仅追加文件\"。\n    #\n    # 请注意，您必须在此处指定目录，而不是文件名。\n    dir ./\n\n    ################################# REPLICATION(复制) #################################\n\n    # 主副本复制。 使用copyof可以使Redis实例成为另一个Redis服务器的副本。 尽快了解有关Redis复制的几件事。\n    #\n    #   +------------------+      +---------------+\n    #   |      Master      | ---> |    Replica    |\n    #   | (receive writes) |      |  (exact copy) |\n    #   +------------------+      +---------------+\n    #\n    # 1) Redis复制是异步的，但是您可以将主服务器配置为在似乎未与至少给定数量的副本连接时停止接受写操作。\n    # 2) 如果复制链接在相对较短的时间内丢失，则Redis副本能够与主副本执行部分重新同步。\n    #    您可能需要根据需要将复制积压大小（请参阅此文件的下一部分）配置为合理的值。\n    # 3) 复制是自动的，不需要用户干预。 网络分区副本之后，副本会自动尝试重新连接到母版并与它们重新同步。\n    #\n    # replicaof &lt;masterip> &lt;masterport>\n\n    # 如果主服务器受密码保护（使用下面的\"requirepass\"配置指令），\n    # 则可以在开始复制同步过程之前告诉副本服务器进行身份验证，否则主服务器将拒绝副本请求。\n    #\n    # masterauth &lt;master-password>\n    #\n    # 但是，如果使用Redis ACL（对于Redis版本6或更高版本），并且默认用户无法运行PSYNC命令和/或其他复制所需的命令，\n    # 这还不够。 在这种情况下，最好配置一个特殊用户以用于复制，并这样指定masteruser配置：\n    #\n    # masteruser &lt;username>\n    #\n    # 指定了masteruser时，副本将使用新的AUTH形式针对其主服务器进行身份验证：AUTH &lt;用户名> &lt;密码>。\n\n    # 当副本断开与主数据库的连接时，或者仍在进行复制时，副本可以以两种不同的方式起作用：\n    #\n    # 1) 如果复制副本服务过时的数据设置为\"是\"（默认值），则复制副本仍将回复客户端请求，\n    #    可能包含过期数据，或者如果这是第一次同步，则数据集可能只是空的。\n    #\n    # 2) 如果复制副本服务过时的数据设置为\"否\"，则复制副本将对所有命令发出错误\"与主机进行同步\"错误，\n    #    但对INFO, replicaOF, AUTH, PING, SHUTDOWN, REPLCONF, ROLE, CONFIG, SUBSCRIBE, UNSUBSCRIBE,\n    #    PSUBSCRIBE, PUNSUBSCRIBE, PUBLISH, PUBSUB, COMMAND, POST, HOST: and LATENCY.\n    #\n    replica-serve-stale-data yes\n\n    # 您可以配置副本实例以接受或不接受写入。 针对副本实例进行写操作可能对存储某些临时数据很有用（\n    # 因为与主实例重新同步后，写入副本上的数据很容易删除），但是如果客户端由于配置错误而向其进行写操作，也可能导致问题。\n    #\n    # 由于Redis 2.6默认情况下，副本是只读的。\n    #\n    # 注意：只读副本并非旨在向Internet上不受信任的客户端公开。 它只是防止实例滥用的保护层。\n    # 默认情况下，只读副本仍会导出所有管理命令，例如CONFIG，DEBUG等。\n    # 在一定程度上，您可以使用'rename-command'隐藏所有管理/危险命令来提高只读副本的安全性。\n    replica-read-only yes\n\n    # 复制同步策略：磁盘或套接字。\n    #\n    # 仅能接收差异而无法继续复制过程的新副本和重新连接的副本需要执行所谓的\"完全同步\"。 RDB文件从主数据库传输到副本数据库。\n    #\n    # 传输可以两种不同的方式发生：\n    #\n    # 1) 磁盘备份: Redis主服务器创建一个新过程，将RDB文件写入磁盘。 后来，文件由父进程逐步传输到副本。\n    # 2) 无盘：Redis主服务器创建一个新进程，该进程将RDB文件直接写入副本套接字，而完全不接触磁盘。\n    #\n    # 使用磁盘支持的复制，在生成RDB文件时，一旦生成RDB文件的当前子级完成工作，就可以将更多副本排入队列并与RDB文件一起使用。\n    # 如果使用无盘复制，则一旦传输开始，新的副本将排队，并且当当前副本终止时将开始新的传输。\n    #\n    # 使用无盘复制时，主服务器在开始传输之前等待一段可配置的时间（以秒为单位），以希望多个副本可以到达并且传输可以并行化。\n    #\n    # 对于慢速磁盘和快速（大带宽）网络，无盘复制效果更好。\n    repl-diskless-sync no\n\n    # 启用无盘复制后，可以配置服务器等待的延迟，以生成通过套接字将RDB传输到副本的子代。\n    #\n    # 这很重要，因为一旦传输开始，就无法为到达下一个RDB传输的新副本提供服务，因此服务器会等待一段时间才能让更多副本到达。\n    #\n    # 以秒为单位指定延迟，默认为5秒。 要完全禁用它，只需将其设置为0秒，传输就会尽快开始。\n    repl-diskless-sync-delay 5\n\n    # -----------------------------------------------------------------------------\n    # 警告：RDB无盘加载是实验性的。 因为在此设置中，副本不会立即在磁盘上存储RDB，所以它可能会导致故障转移期间的数据丢失。\n    # 在与主机的初始同步阶段，如果I/O错误，则RDB无盘负载+ Redis模块不处理I/O读取也可能导致Redis中止。 仅在执行自己的操作时使用。\n    # -----------------------------------------------------------------------------\n    #\n    # 副本可以直接从套接字加载从复制链接读取的RDB，也可以将RDB存储到文件中，并在从主服务器完全获取文件后读取该文件。\n    #\n    # 在许多情况下，磁盘的速度比网络慢，并且存储和加载RDB文件可能会增加复制时间（甚至会增加主服务器的\"写时复制\"内存和从属缓冲区）。\n    # 但是，直接从套接字解析RDB文件可能意味着我们必须在接收到完整的rdb之前刷新当前数据库的内容。 因此，我们有以下选择：\n    #\n    # \"disabled\"    - 不要使用无盘负载（首先将rdb文件存储到磁盘）\n    # \"on-empty-db\" - 仅在完全安全时才使用无盘加载。\n    # \"swapdb\"      - 直接从套接字解析数据时，在RAM中保留当前数据库内容的副本。 请注意，这需要足够的内存，如果没有足够的内存，则可能会杀死OOM。\n    repl-diskless-load disabled\n\n    # 副本以预定义的时间间隔将PING发送到服务器。 可以使用repl_ping_replica_period选项更改此间隔。 默认值为10秒。\n    #\n    # repl-ping-replica-period 10\n\n    # 以下选项为以下项设置复制超时：\n    #\n    # 1）从副本的角度来看，在SYNC期间进行批量传输I/O。\n    # 2）从副本（数据，Ping）的角度来看，主超时。\n    # 3）从主服务器角度来看，副本超时（REPLCONF ACK ping）。\n    #\n    # 确保该值大于为repl-ping-replica-period指定的值非常重要，否则，每当主服务器和副本之间的通信量较低时，都会检测到超时。\n    #\n    # repl-timeout 60\n\n    # 在SYNC之后禁用副本套接字上的TCP_NODELAY？\n    #\n    # 如果选择\"是\"，则Redis将使用更少的TCP数据包和更少的带宽将数据发送到副本。\n    # 但这会增加数据出现在副本端的延迟，对于使用默认配置的Linux内核，此延迟最多可达40毫秒。\n    #\n    # 如果选择\"否\"，将减少数据在副本侧出现的延迟，但将使用更多带宽进行复制。\n    #\n    # 默认情况下，我们针对低延迟进行了优化，但是在通信量非常高的情况下，或者当主服务器和副本距离很多跳时，将其设置为\"是\"可能是个好主意。\n    repl-disable-tcp-nodelay no\n\n    # 设置复制backlog(积压)大小。 待办事项是一个缓冲区，当副本断开连接一段时间后，该缓冲区会累积副本数据，\n    # 因此当副本想要重新连接时，通常不需要完全重新同步，但是部分重新同步就足够了，只需传递副本的部分数据即可 断开连接时错过。\n    #\n    # 复制待办事项越大，副本可以断开连接并在以后能够执行部分重新同步的时间越长。\n    #\n    # 仅在至少连接一个副本后才分配backlog(积压)。\n    #\n    # repl-backlog-size 1mb\n\n    # 在主服务器一段时间不再连接副本后，backlog(积压)的事务将被释放。 以下选项配置了从断开最后一个副本的时间开始到释放待办事项缓冲区所需的秒数。\n    #\n    # 请注意，副本永远不会释放backlog(积压)的超时，因为它们可能会在以后升级为主副本，\n    # 并且应该能够与副本正确\"部分重新同步\"：因此，它们应始终累积backlog(积压)。\n    #\n    # 值0表示从不释放backlog(积压)。\n    #\n    # repl-backlog-ttl 3600\n\n    # 副本优先级是Redis在INFO输出中发布的整数。 如果主服务器不再正常工作，Redis Sentinel会使用它来选择要升级为主服务器的副本。\n    #\n    # 优先级低的副本被认为更适合升级，例如，如果有三个副本的优先级分别为10、100和25，Sentinel将选择优先级为10的副本，这是最低的。\n    #\n    # 但是，特殊优先级0会将副本标记为不能执行主角色，因此Redis Sentinel永远不会选择优先级为0的副本进行升级。\n    #\n    # 默认情况下，优先级为100。\n    replica-priority 100\n\n    # 如果连接的副本少于N个，且延迟小于或等于M秒，则主服务器可能会停止接受写入。\n    #\n    # N个副本必须处于\"联机\"状态。\n    #\n    # 以秒为单位的延迟必须小于等于指定值，该延迟是根据从副本接收到的最后一次ping计算得出的，通常是每秒发送一次。\n    #\n    # 此选项不能保证N个副本将接受写操作，但是如果没有足够的副本可用，则会将丢失写操作的暴露窗口限制为指定的秒数。\n    #\n    # 例如，至少需要3个滞后&lt;= 10秒的副本，请使用：\n    #\n    # min-replicas-to-write 3\n    # min-replicas-max-lag 10\n    #\n    # 将其中一个设置为0将禁用该功能。\n    #\n    # 默认情况下，min-replicas-to-write设置为0（禁用功能），min-replicas-max-lag设置为10。\n\n    # Redis主服务器能够以不同方式列出附加副本的地址和端口。 例如，\"INFO复制\"部分提供了此信息，Redis Sentinel使用此信息以及其他工具来发现副本实例。\n    # 该信息可用的另一个位置是主服务器的\"ROLE\"命令的输出。\n    #\n    # 通常通过以下方式获取副本列出的IP和地址：\n    #\n    #   IP: 通过检查副本用于与主服务器连接的套接字的对等地址来自动检测该地址。\n    #   Port: 该端口在复制握手期间由副本进行通信，通常是副本用来侦听连接的端口。\n    #\n    # 但是，当使用端口转发或网络地址转换（NAT）时，实际上可以通过不同的IP和端口对访问该副本。\n    # 副本可以使用以下两个选项，以便向其主服务器报告特定的IP和端口集，以便INFO和ROLE都将报告这些值。\n    #\n    # 如果只需要覆盖端口或IP地址，则无需同时使用这两个选项。\n    #\n    # replica-announce-ip 5.5.5.5\n    # replica-announce-port 1234\n\n    ############################### KEYS TRACKING（KEYS跟踪） #################################\n\n    # Redis为客户端的值缓存实现服务器辅助的支持。\n    # 这是使用无效表实现的，该无效表使用1600万个插槽记住哪些客户端可能具有某些键子集。\n    # 依次使用此命令是为了向客户端发送无效消息。 请了解有关此功能的更多信息，请检查以下页面：\n    #\n    #   https://redis.io/topics/client-side-caching\n    #\n    # 为客户端启用跟踪时，假定所有只读查询都已缓存：这将强制Redis将信息存储在失效表中。 修改密钥后，此类信息将被清除，并将无效消息发送到客户端。\n    # 但是，如果工作量主要由读取决定，Redis可以使用越来越多的内存来跟踪许多客户端获取的密钥。\n    #\n    # 因此，可以为失效表配置最大填充值。 默认情况下，它设置为1M键，一旦达到此限制，Redis将开始撤消失效表中的键，\n    # 即使它们没有被修改，只是为了回收内存：这反过来将迫使客户端使缓存无效。 价值观。 \n    # 基本上，表的最大大小是要在服务器端用来跟踪有关谁缓存内容的信息的内存与客户端将缓存的对象保留在内存中的能力之间进行权衡的。\n    #\n    # 如果将值设置为0，则表示没有限制，Redis将在失效表中保留所需数量的键。\n    # 在\"统计信息\"信息部分中，您可以在每个给定的时间找到有关失效表中密钥数量的信息。\n    #\n    # 注意：在广播模式下使用键跟踪时，服务器端未使用任何内存，因此此设置无用。\n    #\n    # tracking-table-max-keys 1000000\n\n    ################################## SECURITY ###################################\n\n    # 警告：由于Redis的速度非常快，外部用户每秒可以在一个现代化的设备上尝试高达100万个密码。\n    # 这意味着您应该使用非常安全的密码，否则密码很容易破解。\n    # 请注意，由于该密码实际上是客户端和服务器之间的共享机密，并且不应由任何人记住，\n    # 因此该密码可以很容易地由/dev/urandom或其他方式中的长字符串组成，因此请使用冗长且不可猜测的内容 密码不会有暴力攻击。\n\n    # Redis ACL用户的定义如下：\n    #\n    #   user &lt;username> ... acl rules ...\n    #\n    #  例如：\n    #\n    #   user worker +@list +@connection ~jobs:* on >ffa9203c493aa99\n    #\n    # 特殊用户名\"默认\"用于新连接。 如果该用户具有\"nopass\"规则，则新连接将立即被认证为\"默认\"用户，\n    # 而无需通过AUTH命令提供任何密码。 否则，如果未将\"默认\"用户标记为\"nopass\"，\n    # 则连接将以未认证状态启动，并且需要AUTH（或HELLO命令AUTH选项）才能进行认证并开始工作。\n    #\n    # 描述用户可以执行的操作的ACL规则如下：\n    #\n    #  on           启用用户：可以验证为该用户。\n    #  off          禁用用户：不再可以与此用户进行身份验证，但是已经身份验证的连接仍然可以使用。\n    #  +&lt;command>   允许执行该命令\n    #  -&lt;command>   禁止执行该命令\n    #  +@&lt;category> 允许执行此类中具有有效类别的所有命令，例如@ admin，@ set，@ sortedset等，等等，\n    #               请参阅server.c文件中的完整列表，其中描述和定义了Redis命令表 。\n    #               特殊类别@all表示所有命令，但是当前在服务器中存在，并且将来会通过模块加载。\n    #  +&lt;command>|subcommand    允许使用本来禁用的命令的特定子命令。 注意，这种形式不允许像-DEBUG|SEGFAULT那样为负数，而只能以\"+\"开头。\n    #  allcommands  +@all的别名。 注意，这意味着可以执行将来通过模块系统加载的所有命令。\n    #  nocommands   -@all的别名。\n    #  ~&lt;pattern>   添加可以在命令中提及的键模式。 例如~*允许所有键。 该模式是类似于KEYS之一的球形样式的模式。\n    #               可以指定多个模式。\n    #  allkeys      ~*的别名。\n    #  resetkeys    刷新允许的键模式列表。\n    #  >&lt;password>  将此密码添加到用户的有效密码列表中。\n    #               例如> mypass将\"mypass\"添加到列表中。\n    #               此指令清除\"no pass\"标志（请参阅下文）。\n    #  &lt;&lt;password>  从有效密码列表中删除此密码。\n    #  nopass       用户的所有设置密码都将被删除，并且该用户被标记为不需要密码：这意味着每个密码都将对该用户起作用。\n    #               如果此指令用于默认用户，则每个新连接都将立即通过默认用户进行身份验证，而无需任何显式的AUTH命令。\n    #               请注意，\"resetpass\"指令将清除此情况。\n    #  resetpass    刷新允许的密码列表。 此外，删除\"nopass\"状态。 在\"重置密码\"之后，\n    #               用户将没有关联的密码，并且没有添加一些密码（或稍后将其设置为\"nopass\"）就无法进行身份验证的方法。\n    #  reset        执行以下动作: resetpass, resetkeys, off, -@all. 用户返回到创建后立即具有的相同状态。\n    #\n    # ACL规则可以以任何顺序指定：例如，您可以以密码，标志或密钥模式开头。 但是请注意，加法和减法规则将根据订购顺序进行更改。\n    # 例如，请参见以下示例：\n    #\n    #   user alice on +@all -DEBUG ~* >somepassword\n    #\n    # 这将允许\"alice\"使用除DEBUG命令之外的所有命令，因为+ @ all将所有命令添加到了alice可以使用的命令集中，并且后来删除了DEBUG。\n    # 但是，如果我们颠倒两个ACL规则的顺序，结果将是不同的：\n    #\n    #   user alice on -DEBUG +@all ~* >somepassword\n    #\n    # 现在，当alice在允许的命令集中还没有命令时，DEBUG被删除，之后又添加了所有命令，因此用户将能够执行所有操作。\n    #\n    # 基本上，ACL规则是从左到右处理的。\n    #\n    # 有关ACL配置的更多信息，请参阅Redis网站https://redis.io/topics/acl\n\n    # ACL日志\n    #\n    # ACL日志跟踪与ACL相关的失败命令和身份验证事件。 ACL日志可用于对ACL阻止的失败命令进行故障排除。 \n    # ACL日志存储在其中并消耗内存。 它的长度没有限制。您可以使用ACL LOG RESET回收内存，也可以在下面设置最大长度。\n    acllog-max-len 128\n\n    # 使用外部ACL文件\n    #\n    # 除了在此文件中配置用户外，还可以使用仅列出用户的独立文件。 两种方法不能混合使用：\n    # 如果在此处配置用户并同时激活外部ACL文件，则服务器将拒绝启动。\n    #\n    # 外部ACL用户文件的格式与redis.conf内部用来描述用户的格式完全相同。\n    #\n    # aclfile /etc/redis/users.acl\n\n    # 重要说明：从Redis 6开始，\"requirepass\"只是新ACL系统之上的兼容性层。 选项效果将只是为默认用户设置密码。\n    # 客户端仍然可以像往常一样使用AUTH &lt;password>进行身份验证，或者如果它们遵循新协议，\n    # 则可以使用AUTH default &lt;password>进行更明确的身份验证：两者都可以使用。\n    #\n    # requirepass foobared\n    requirepass 26Rgj^86*SN7y%\n\n    # 命令重命名（不建议使用）。\n    #\n    # ------------------------------------------------------------------------\n    # 警告：尽可能避免使用此选项。 而是使用ACL从默认用户中删除命令，并将其仅放置在您出于管理目的而创建的某些admin用户中。\n    # ------------------------------------------------------------------------\n    #\n    # 可以在共享环境中更改危险命令的名称。 例如，可以将CONFIG命令重命名为一些难以猜测的名称，以便它仍可用于内部使用的工具，但不适用于一般客户。\n    #\n    # 示例：\n    #\n    # rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52\n    #\n    # 也可以通过将命令重命名为空字符串来完全终止命令：\n    #\n    # rename-command CONFIG \"\"\n    #\n    # 请注意，更改登录到AOF文件或传输到副本的命令的名称可能会导致问题。\n\n    ################################### CLIENTS ####################################\n\n    # 设置同时连接的最大客户端数。 默认情况下，此限制设置为10000个客户端，\n    # 但是，如果Redis服务器无法配置进程文件限制以允许指定的限制，\n    # 则允许的最大客户端数将设置为当前文件限制减去32（因为Redis保留了 内部使用的文件描述符很少）。\n    #\n    # 一旦达到限制，Redis将关闭所有新连接，并发送错误消息\"已达到最大客户端数\"。\n    #\n    # maxclients 10000\n\n    ############################## MEMORY MANAGEMENT ################################\n\n    # 设置内存使用限制为指定的字节数。\n    # 当达到内存限制时，Redis将尝试根据所选的逐出策略来删除密钥（请参阅maxmemory-policy）。\n    #\n    # 如果Redis无法根据该策略删除密钥，或者如果该策略设置为'noeviction'，\n    # 则Redis将开始对将使用更多内存的命令（例如SET，LPUSH等）进行错误回复，并会 继续回复诸如GET之类的只读命令。\n    #\n    # 当将Redis用作LRU或LFU缓存，或为实例设置硬盘限制（使用\"noeviction\"策略）时，此选项通常很有用。\n    #\n    # 警告：如果您将副本附加到实例上且maxmemory处于打开状态，则从使用的内存数量中减去提供副本所需的输出缓冲区的大小，\n    # 以便网络问题/重新同步不会触发收回密钥的循环，反过来，副本的输出缓冲区已满，有被驱逐的DEL密钥触发了更多密钥的删除，\n    # 依此类推，直到数据库完全清空。\n    #\n    # 简而言之...如果您附加了副本，建议您设置maxmemory的下限，\n    # 以便系统上有一些可用RAM用于副本输出缓冲区（但是如果策略为'noeviction'，则不需要这样做） 。\n    #\n    # maxmemory &lt;bytes>\n\n    # MAXMEMORY POLICY：达到maxmemory时，Redis将如何选择要删除的内容。 您可以从以下行为中选择一种：\n    #\n    # volatile-lru -> 使用近似的LRU驱逐，只有具有过期集的key。\n    # allkeys-lru -> 使用近似的LRU退出任何key。\n    # volatile-lfu -> 使用近似的LFU驱逐，只有具有过期集的key。\n    # allkeys-lfu -> 使用近似的LFU退出任何key。\n    # volatile-random -> 删除具有过期设置的随机key。\n    # allkeys-random -> 删除随机key，任何key。\n    # volatile-ttl -> 删除最接近到期时间（较小的TTL）的key\n    # noeviction -> 不要逐出任何东西，只需在写操作中返回错误。\n    #\n    # LRU表示最近最少使用\n    # LFU表示最少使用\n    #\n    # LRU，LFU和volatile-ttl均使用近似随机算法实现。\n    #\n    # 注意：使用上述任何策略时，如果没有合适的退出键，Redis将在写入操作中返回错误。\n    #\n    #       At the date of writing these commands are: set setnx setex append\n    #       incr decr rpush lpush rpushx lpushx linsert lset rpoplpush sadd\n    #       sinter sinterstore sunion sunionstore sdiff sdiffstore zadd zincrby\n    #       zunionstore zinterstore hset hsetnx hmset hincrby incrby decrby\n    #       getset mset msetnx exec sort\n    #\n    # 默认为：\n    #\n    # maxmemory-policy noeviction\n\n    # LRU，LFU和最小TTL算法不是精确算法，而是近似算法（以节省内存），因此您可以调整它的速度或准确性。 \n    # 对于默认情况，Redis将检查五个键并选择最近使用的键，您可以使用以下配置指令更改样本大小。\n    #\n    # 默认值5产生足够好的结果。 10非常接近真实的LRU，但是会花费更多的CPU。 3更快，但不是很准确。\n    #\n    # maxmemory-samples 5\n\n    # 从Redis 5开始，默认情况下，副本将忽略其maxmemory设置（除非在故障转移后或手动提升为主副本）。\n    # 这意味着密钥的移出将仅由主服务器处理，将DEL命令作为副本在主计算机侧逐出，将DEL命令发送到副本。\n    #\n    # 此行为可确保主副本和副本副本保持一致，这通常是您想要的，但是，如果副本副本是可写的，\n    # 或者您希望副本副本具有不同的内存设置，并且您确定对副本副本执行的所有写入都是幂等的 ，那么您可以更改此默认设置（但请务必了解您在做什么）。\n    #\n    # 请注意，由于默认情况下该副本不会退出，所以它可能会比使用maxmemory设置的一组内存占用更多的内存（\n    # 某些缓冲区在副本上可能会更大，或者数据结构有时会占用更多内存，依此类推）。 \n    # 因此，请确保您监视副本，并确保副本具有足够的内存，以便在主副本达到配置的最大内存设置之前，永远不会达到真正的内存不足状态。\n    #\n    # replica-ignore-maxmemory yes\n\n    # Redis有两种回收过期密钥的方法：访问时发现这些密钥已过期，以及在后台，称为\"活动过期密钥\"。\n    # 缓慢地，交互地扫描密钥空间，以查找要回收的过期密钥，以便可以释放已过期且不久之后将不再访问的密钥的内存。\n    #\n    # 过期周期的默认工作将尝试避免在内存中保留超过百分之十的过期密钥，并尝试避免消耗超过总内存的25％并增加系统延迟。\n    # 但是，可以将通常设置为\"1\"的过期\"努力\"增加到更大的值，直到值\"10\"。\n    # 系统将以其最大值使用更多的CPU，更长的周期（并且从技术上讲可能会引入更多的延迟），并将减少仍然存在于系统中的已过期密钥的数量。\n    # 在内存，CPU和延迟之间进行权衡。\n    #\n    # active-expire-effort 1\n\n    ############################# LAZY FREEING(懒惰释放) ####################################\n\n    # Redis有两个删除键的原语。 一种称为DEL，它是对象的阻塞删除。 这意味着服务器停止处理新命令，以便以同步方式回收与对象关联的所有内存。 \n    # 如果删除的键与一个小对象相关联，则执行DEL命令所需的时间非常短，可与Redis中的大多数其他O（1）或O（log_N）命令相提并论。\n    # 但是，如果键与包含数百万个元素的聚合值关联，则服务器可能会阻塞很长时间（甚至几秒钟）以完成操作。\n    #\n    # 由于上述原因，Redis还提供了非阻塞删除原语，例如UNLINK（非阻塞DEL）以及FLUSHALL和FLUSHDB命令的ASYNC选项，以便在后台回收内存。\n    # 这些命令在固定时间内执行。 另一个线程将尽可能快地在后台逐渐释放对象。\n    #\n    # FLUSHALL和FLUSHDB的DEL，UNLINK和ASYNC选项是用户控制的。\n    # 由应用程序的设计决定何时使用一个或另一个是一个好主意。 但是，Redis服务器有时必须删除键或刷新整个数据库，这是其他操作的副作用。\n    # 特别是在以下情况下，Redis会独立于用户调用删除对象：\n    #\n    # 1) 逐出时，由于maxmemory和maxmemory策略配置，以便在不超出指定的内存限制的情况下为新数据腾出空间。\n    # 2) 因为到期：必须从内存中删除具有相关生存时间的密钥（请参阅EXPIRE命令）。\n    # 3) 由于将数据存储在可能已经存在的键上的命令的副作用。 例如，当RENAME命令被另一旧密钥内容替换时，它可能会删除它。\n    #    同样，SUNIONSTORE或SORT with STORE选项可能会删除现有密钥。 SET命令本身会删除指定键的所有旧内容，以便将其替换为指定的字符串。\n    # 4) 在复制期间，当副本与其主副本执行完全重新同步时，将删除整个数据库的内容，以便加载刚传输的RDB文件。\n    #\n    # 在上述所有情况下，默认设置都是以阻塞方式删除对象，就像调用DEL一样。 \n    # 但是，您可以专门配置每种情况，以便使用以下配置指令以非阻塞方式释放内存，例如调用UNLINK的情况。\n\n    lazyfree-lazy-eviction no\n    lazyfree-lazy-expire no\n    lazyfree-lazy-server-del no\n    replica-lazy-flush no\n\n    # 对于将用户代码DEL调用替换为UNLINK调用并不容易的情况，也可以使用以下配置指令将DEL命令的默认行为修改为与UNLINK完全相同：\n\n    lazyfree-lazy-user-del no\n\n    ################################ THREADED I/O #################################\n\n    # Redis主要是单线程的，但是有一些线程操作，例如UNLINK，缓慢的I/O访问和其他在侧线程上执行的操作。\n    #\n    # 现在，还可以在不同的I/O线程中处理Redis客户端套接字的读写。\n    # 由于特别慢的写入速度，因此Redis用户通常使用流水线以加快每个内核的Redis性能，并生成多个实例以扩大规模。\n    # 使用I/O线程可以轻松地将Redis加速两次，而无需求助于实例的流水线处理或分片。\n    #\n    # 默认情况下，线程处于禁用状态，我们建议仅在具有至少4个或更多内核的计算机上启用该功能，并至少保留一个备用内核。\n    # 使用8个以上的线程不太可能有很大帮助。\n    # 我们还建议仅在确实存在性能问题时才使用线程I/O，Redis实例可以使用很大一部分CPU时间，否则就没有必要使用此功能。\n    #\n    # 例如，如果您有四个核的core，请尝试使用2或3个I/O线程，如果您有8个核，请尝试使用6个线程。 为了启用I/O线程，请使用以下配置指令：\n    #\n    # io-threads 4\n    #\n    # 将io-threads设置为1只会照常使用主线程。\n    # 启用I/O线程后，我们仅将线程用于写操作，即对write（2）系统调用进行线程化，并将客户端缓冲区传输到套接字。\n    # 但是，也可以通过将以下配置指令设置为yes来启用读取线程和协议解析功能：\n    #\n    # io-threads-do-reads no\n    #\n    # 通常，线程读取无济于事。\n    #\n    # 注意1：无法在运行时通过CONFIG SET更改此配置伪指令。 启用SSL时，Aso此功能当前不起作用。\n    #\n    # 注意2：如果要使用redis-benchmark测试Redis加速，请确保还以线程模式运行基准测试本身，使用--threads选项匹配Redis thead的数量，\n    # 否则您将无法使用 注意到改进。\n\n    ############################## APPEND ONLY MODE(追加模式) ###############################\n\n    # 默认情况下，Redis异步将数据集转储到磁盘上。 此模式在许多应用程序中已经足够好，\n    # 但是Redis进程问题或电源中断可能会导致几分钟的写入丢失（取决于配置的保存点）。\n    #\n    # 仅附加文件是一种替代的持久性模式，可提供更好的持久性。 例如，使用默认数据fsync策略（请参阅配置文件中的稍后内容），\n    # Redis可能在服务器断电等严重事件中丢失一秒钟的写入，如果Redis进程本身发生错误，则一次写入将丢失一次，但是 操作系统仍在正常运行。\n    #\n    # 可以同时启用AOF和RDB持久性，而不会出现问题。\n    # 如果启动时启用了AOF，则Redis将加载AOF，即具有更好持久性的文件。\n    #\n    # 请检查http://redis.io/topics/persistence了解更多信息。\n\n    appendonly no\n\n    # 仅附加文件的名称（默认值：\"appendonly.aof\"）\n\n    appendfilename \"appendonly.aof\"\n\n    # fsync（）调用告诉操作系统将数据实际写入磁盘，而不是等待输出缓冲区中的更多数据。\n    # 有些操作系统确实会刷新磁盘上的数据，而另一些操作系统只会尝试尽快完成该操作。\n    #\n    # Redis支持三种不同的模式：\n    #\n    # no: 不要fsync，只要让OS在需要时刷新数据即可。 Faster 始终：每次写入仅附加日志后，fsync。 慢，最安全。 everysec：每秒仅同步一次fsync。 妥协。\n    #\n    # 默认值为\"everysec\"，因为这通常是速度和数据安全性之间的正确折衷。\n    # 您可以了解是否可以将其放松为\"no\"，这将使操作系统在需要时刷新输出缓冲区，\n    # 以获得更好的性能（但是如果您可以忍受某些数据丢失的想法，\n    # 请考虑使用默认的持久性模式 （即快照），或者相反，使用\"总是\"，该速度非常慢，但比秒安全。\n    #\n    # 更多详细信息，请查看以下文章：\n    # http://antirez.com/post/redis-persistence-demystified.html\n    #\n    # 如果不确定，请使用\"everysec\"。\n\n    # appendfsync always\n    appendfsync everysec\n    # appendfsync no\n\n    # 当AOF fsync策略设置为always或everysec，并且后台保存进程（后台保存或AOF日志后台重写）对磁盘执行大量I/O时，\n    # 在某些Linux配置中，Redis可能会阻塞太长时间 fsync（）调用。\n    # 请注意，目前尚无此修复程序，因为即使在其他线程中执行fsync也将阻止我们的同步write（2）调用。\n    #\n    # 为了减轻此问题，可以使用以下选项，以防止在进行BGSAVE或BGREWRITEAOF时在主进程中调用fsync（）。\n    #\n    # 这意味着当另一个孩子正在保存时，Redis的持久性与\"appendfsync none\"相同。\n    # 实际上，这意味着在最坏的情况下（使用默认的Linux设置）可能会丢失多达30秒的日志。\n    #\n    # 如果您有延迟问题，请将其设为\"是\"。 否则，从耐久性的角度来看，将其保留为\"否\"是最安全的选择。\n\n    no-appendfsync-on-rewrite no\n\n    # 自动重写仅附加文件。\n    # 当AOF日志大小增加指定百分比时，Redis可以自动重写日志文件，隐式调用BGREWRITEAOF。\n    #\n    # 它是这样工作的：Redis会在最近一次重写后记住AOF文件的大小（如果自重新启动以来未发生任何重写，则使用启动时AOF的大小）。\n    #\n    # 将此基本大小与当前大小进行比较。 如果当前大小大于指定的百分比，则触发重写。\n    # 另外，您需要指定要重写的AOF文件的最小大小，这对于避免重写AOF文件非常有用，即使达到百分比增加，但它仍然很小。\n    #\n    # 指定零百分比以禁用自动AOF重写功能。\n\n    auto-aof-rewrite-percentage 100\n    auto-aof-rewrite-min-size 64mb\n\n    # 当AOF数据重新加载到内存中时，在Redis启动过程中可能会发现AOF文件在末尾被截断。\n    # 这可能在运行Redis的系统崩溃时发生，尤其是在没有data = ordered选项的情况下挂载ext4文件系统时（\n    # 但是当Redis本身崩溃或中止但操作系统仍然可以正常工作时，这不会发生）。\n    #\n    # Redis在发生这种情况时可能会退出并显示错误，也可能会加载尽可能多的数据（当前为默认值），\n    # 如果发现AOF文件在末尾被截断，则会重新启动。 以下选项控制此行为。\n    #\n    # 如果aof-load-truncated设置为yes，则将加载截短的AOF文件，并且Redis服务器将开始发出日志以将事件通知用户。\n    # 否则，如果该选项设置为no，则服务器将中止并显示错误并拒绝启动。\n    # 如果将该选项设置为no，则用户需要在重新启动服务器之前使用\"redis-check-aof\"实用程序修复AOF文件。\n    #\n    # 请注意，如果在中间发现AOF文件已损坏，则服务器仍将退出并出现错误。 仅当Redis尝试从AOF文件读取更多数据但找不到足够的字节时，此选项才适用。\n    aof-load-truncated yes\n\n    # 重写AOF文件时，Redis可以使用AOF文件中的RDB前同步码来更快地进行重写和恢复。 启用此选项后，重写的AOF文件由两个不同的节组成：\n    #\n    #   [RDB file][AOF tail]\n    #\n    # 加载时，Redis会识别AOF文件以\"REDIS\"字符串开头并加载带前缀的RDB文件，然后继续加载AOF尾部。\n    aof-use-rdb-preamble yes\n\n    ################################ LUA SCRIPTING(LUA脚本)  ###############################\n\n    # Lua脚本的最大执行时间（以毫秒为单位）。\n    #\n    # 如果达到了最大执行时间，则Redis将记录脚本在允许的最大时间后仍在执行中，并将开始以错误答复查询。\n    #\n    # 当长时间运行的脚本超过最大执行时间时，仅SCRIPT KILL和SHUTDOWN NOSAVE命令可用。\n    # 第一个可用于停止尚未调用写命令的脚本。\n    # 第二种是在脚本已发出写命令但用户不想等待脚本自然终止的情况下关闭服务器的唯一方法。\n    #\n    # 将其设置为0或负值以无警告地无限执行。\n    lua-time-limit 5000\n\n    ################################ REDIS CLUSTER  ###############################\n\n    # 普通Redis实例不能属于Redis集群； 只有作为群集节点启动的节点可以。 为了将Redis实例作为群集节点启动，请在不注释以下内容的情况下启用群集支持：\n    #\n    # cluster-enabled yes\n\n    # 每个群集节点都有一个群集配置文件。 该文件不适合手工编辑。 它由Redis节点创建和更新。\n    # 每个Redis群集节点都需要一个不同的群集配置文件。\n    # 确保在同一系统上运行的实例没有重叠的集群配置文件名。\n    #\n    # cluster-config-file nodes-6379.conf\n\n    # 群集节点超时是一个节点必须不可达的毫秒数，才能将其视为故障状态。\n    # 其他大多数内部时间限制是节点超时的倍数。\n    #\n    # cluster-node-timeout 15000\n\n    # 如果发生故障的主副本的数据看起来太旧，它将避免启动故障转移。\n    #\n    # 没有一种简单的方法可以使副本实际上具有其\"数据寿命\"的准确度量，因此执行以下两项检查：\n    #\n    # 1) 如果存在多个能够进行故障转移的副本，则它们会交换消息，以便尝试利用具有最佳复制偏移量（处理了更多来自主数据库的数据）的副本来获得优势。\n    #    副本将尝试按偏移量获取其等级，并将一个与它们的等级成比例的延迟应用于故障转移。\n    #\n    # 2) 每个单个副本都会计算与其母版之间最后一次交互的时间。\n    #    这可以是最后收到的ping或命令（如果主服务器仍处于\"已连接\"状态），也可以是自从与主服务器断开连接以来经过的时间（如果复制链接当前已关闭）。\n    #    如果最后一次交互太旧，副本将完全不会尝试故障转移。\n    #\n    # 用户可以调整点\"2\"。 具体而言，如果自从上次与主服务器进行交互以来，经过的时间大于以下时间，则副本将不执行故障转移：\n    #\n    #   (node-timeout * replica-validity-factor) + repl-ping-replica-period\n    #\n    # 因此，例如，如果节点超时为30秒，并且副本有效性因子为10，并且假定默认的repl-ping-replica-period值为10秒，\n    # 则副本将无法尝试进行故障转移，如果它不能 与主对话时间超过310秒。\n    #\n    # 较大的副本有效性因子可能会使数据过旧的副本无法对主副本进行故障转移，而值太小可能会使群集根本无法选择副本。\n    #\n    # 为了获得最大可用性，可以将复制品有效性因子设置为0，这意味着，复制品将始终尝试对主数据库进行故障转移，而不考虑它们与主数据库的最后一次交互。\n    # （但是，他们将始终尝试应用与其偏移等级成比例的延迟）。\n    #\n    # 零是唯一能够确保所有分区恢复正常后，群集将始终能够继续运行的值。\n    #\n    # cluster-replica-validity-factor 10\n\n    # 群集副本能够迁移到孤立的主数据库，即那些没有工作副本的主数据库。\n    # 这样可以提高群集抵御故障的能力，因为如果没有工作副本，孤立的主节点在发生故障的情况下将无法进行故障转移。\n    #\n    # 仅当旧的主副本仍存在至少给定数量的其他工作副本时，副本副本才会迁移到孤立的主副本。\n    # 这个数字是\"移民壁垒\"。 迁移障碍为1表示仅当副本数据库的主副本上至少有1个其他工作副本时，副本副本才会迁移。\n    # 它通常反映出集群中每个主数据库所需的副本数。\n    #\n    # 默认为1（副本仅在其主数据库保留至少一个副本时迁移）。 要禁用迁移，只需将其设置为非常大的值即可。\n    # 可以设置为0，但仅对调试和生产危险有用。\n    #\n    # cluster-migration-barrier 1\n\n    # 默认情况下，如果Redis Cluster节点检测到至少发现一个哈希槽（没有可用的节点正在为其提供服务），它们将停止接受查询。\n    # 这样，如果集群部分关闭（例如，不再覆盖哈希槽的范围），则所有集群最终将变得不可用。\n    # 重新覆盖所有插槽后，它将自动返回可用状态。\n    #\n    # 但是有时您希望集群的子集正常工作，以继续接受对仍覆盖的部分键空间的查询。 为此，只需将cluster-require-full-coverage选项设置为no。\n    #\n    # cluster-require-full-coverage yes\n\n    # 此选项设置为yes时，可防止副本在主服务器发生故障时尝试对其主服务器进行故障转移。 但是，主服务器仍然可以执行手动故障转移（如果被迫执行）。\n    #\n    # 这在不同的情况下很有用，尤其是在多个数据中心操作的情况下，如果我们希望在完全DC故障的情况下不对一侧进行升级，则这是不希望的。\n    #\n    # cluster-replica-no-failover no\n\n    # 此选项设置为yes时，只要集群认为自己拥有插槽，就可以在集群处于关闭状态时为节点提供读取流量。\n    #\n    # 这在两种情况下很有用。 第一种情况是在节点故障或网络分区期间应用程序不需要数据一致性时。\n    # 缓存的一个例子，只要节点拥有数据，它就应该能够为它服务。\n    #\n    # 第二个用例是用于不符合建议的三个分片但希望启用集群模式并在以后扩展的配置。\n    # 如果没有设置此选项，则在1或2分片配置中的主服务器中断会导致整个集群的读/写中断，只有在设置了该选项的情况下，才会发生写中断。\n    # 如果没有法定人数的主持人，则插槽所有权不会自动更改。\n    #\n    # cluster-allow-reads-when-down no\n\n    # 为了设置您的集群，请确保阅读文档\n    # 可从http://redis.io网站获得。\n\n    ########################## CLUSTER DOCKER/NAT support  ########################\n\n    # 在某些部署中，Redis Cluster节点的地址发现失败，这是因为地址经过NAT限制或端口被转发（典型情况是Docker和其他容器）。\n    #\n    # 为了使Redis Cluster在这样的环境中工作，需要一个静态配置，其中每个节点都知道其公共地址。 以下两个选项用于此范围，分别是：\n    #\n    # * cluster-announce-ip\n    # * cluster-announce-port\n    # * cluster-announce-bus-port\n    #\n    # 每个命令都向节点指示其地址，客户端端口和集群消息总线端口。 然后将信息发布在总线数据包的标头中，以便其他节点将能够正确映射发布信息的节点的地址。\n    #\n    # 如果未使用上述选项，则将使用常规的Redis群集自动检测。\n    #\n    # 请注意，重新映射后，总线端口可能不在客户端端口+ 10000的固定偏移处，因此您可以根据重新映射的方式指定任何端口和总线端口。\n    # 如果未设置总线端口，通常将使用10000的固定偏移量。\n    #\n    # 示例：\n    #\n    # cluster-announce-ip 10.1.1.5\n    # cluster-announce-port 6379\n    # cluster-announce-bus-port 6380\n\n    ################################## SLOW LOG ###################################\n\n    # Redis Slow Log是一个用于记录超过指定执行时间的查询的系统。\n    # 执行时间不包括与客户端交谈，发送回复等I/O操作，而是实际执行命令所需的时间（\n    # 这是命令执行的唯一阶段，在该阶段线程被阻塞并且可以 在此期间不满足其他要求）。\n    #\n    # 您可以使用以下两个参数配置慢速日志：一个告诉Redis，为了使命令被记录，执行时间要超过多少微秒，而另一个参数是慢速日志的长度。\n    # 记录新命令时，最旧的命令将从记录的命令队列中删除。\n\n    # 以下时间以微秒表示，因此1000000等于一秒。 请注意，负数将禁用慢速日志记录，而零值将强制记录每个命令。\n    slowlog-log-slower-than 10000\n\n    # 此长度没有限制。 请注意，它将消耗内存。\n    # 您可以使用SLOWLOG RESET回收慢速日志使用的内存。\n    slowlog-max-len 128\n\n    ################################ LATENCY MONITOR(延迟监视) ##############################\n\n    # Redis延迟监视子系统会在运行时对不同的操作进行采样，以收集与Redis实例的潜在延迟源相关的数据。\n    #\n    # 通过LATENCY命令，该信息可供打印图形并获取报告的用户使用。\n    #\n    # 系统仅记录在等于或大于通过delay-monitor-threshold配置指令指定的毫秒数内执行的操作。 当其值设置为零时，等待时间监视器将关闭。\n    #\n    # 默认情况下，延迟监视是禁用的，因为如果您没有延迟问题，通常不需要它，并且收集数据会对性能产生影响，尽管影响很小，但是可以在大负载下进行测量。\n    # 如果需要，可以在运行时使用命令\"CONFIG SET delay-monitor-threshold &lt;milliseconds>\"轻松启用延迟监视。\n    latency-monitor-threshold 0\n\n    ############################# EVENT NOTIFICATION(活动通知) ##############################\n\n    # Redis可以将关键空间中发生的事件通知给发布/订阅客户端。\n    # 此功能记录在http://redis.io/topics/notifications\n    #\n    # 例如，如果启用了键空间事件通知，并且客户端对存储在数据库0中的键\"foo\"执行了DEL操作，则将通过Pub / Sub发布两条消息：\n    #\n    # PUBLISH __keyspace@0__:foo del\n    # PUBLISH __keyevent@0__:del foo\n    #\n    # 可以在一组类中选择Redis将通知的事件。 每个类都由一个字符标识：\n    #\n    #  K     键空间事件，以__keyspace@&lt;db>__前缀发布。\n    #  E     键事件，以__keyevent@&lt;db>__前缀发布。\n    #  g     通用命令（非类型专用），例如DEL，EXPIRE，RENAME，...\n    #  $     字符串命令\n    #  l     列出命令\n    #  s     设定指令\n    #  h     哈希命令\n    #  z     排序集命令\n    #  x     过期事件（每次密钥过期时生成的事件）\n    #  e     驱逐事件（驱逐密钥以获取最大内存时生成的事件）\n    #  t     流命令\n    #  m     按键缺失事件（注意：它不包含在\"A\"类中）\n    #  A     g$lshzxet的别名，以便\"AKE\"字符串表示所有事件（由于键丢失事件的独特性质，这些键事件被排除在\"A\"之外）。\n    #\n    # \"notify-keyspace-events\"将由零个或多个字符组成的字符串作为参数。 空字符串表示已禁用通知。\n    #\n    #  Example: to enable list and generic events, from the point of view of the\n    #           event name, use:\n    #\n    #  notify-keyspace-events Elg\n    #\n    #  Example 2: to get the stream of the expired keys subscribing to channel\n    #             name __keyevent@0__:expired use:\n    #\n    #  notify-keyspace-events Ex\n    #\n    # 默认情况下，所有通知均被禁用，因为大多数用户不需要此功能，并且该功能会有一些开销。 请注意，如果您未指定K或E中的至少一个，则不会传递任何事件。\n    notify-keyspace-events \"\"\n\n    ############################### GOPHER SERVER #################################\n\n    # Redis包含RFC 1436（https://www.ietf.org/rfc/rfc1436.txt）中指定的Gopher协议的实现。\n    #\n    # Gopher协议在90年代后期非常流行。 它是Web的替代方法，服务器和客户端的实现是如此简单，以至于Redis服务器只有100行代码才能实现这种支持。\n    #\n    # 您现在如何使用Gopher？ 好吧，Gopher从未真正死过，最近出现了一种运动，目的是使Gopher具有更多层次结构的内容（仅由纯文本文档组成）得以复活。\n    # 有些人希望使用更简单的互联网，另一些人则认为主流互联网已变得过于可控，为想要一点新鲜空气的人们创造替代空间很酷。\n    #\n    # 无论如何，在Redis诞生10周年之际，我们给了它Gopher协议作为礼物。\n    #\n    #   - - 怎么运行的？ ---\n    #\n    # Redis Gopher支持使用Redis的内联协议，特别是两种仍然非法的内联请求：空请求或任何以\"/\"开头的请求（没有以这样的斜杠开头的Redis命令）。\n    # 正常的RESP2/RESP3请求完全超出了Gopher协议实现的范围，并且通常也得到满足。\n    #\n    # 如果在启用Gopher时打开与Redis的连接，并向其发送\"/ foo\"之类的字符串，则如果存在名为\"/ foo\"的密钥，则会通过Gopher协议为其提供服务。\n    #\n    # 为了创建一个真正的Gopher\"hole\"（Gopher对话中Gopher站点的名称），您可能需要类似以下的脚本：\n    #\n    #   https://github.com/antirez/gopher2redis\n    #\n    #   - - 安全警告  - -\n    #\n    # 如果您打算将Redis放在服务器Gopher页面的公共访问地址上，请确保为实例设置密码。\n    # 设置密码后：\n    #\n    #   1. Gopher服务器（启用后，默认情况下未启用）仍将通过Gopher提供内容。\n    #   2. 但是，在客户端进行身份验证之前无法调用其他命令。\n    #\n    # 因此，请使用'requirepass'选项保护您的实例。\n    #\n    # 要启用Gopher支持，请取消注释以下行，并将选项从no（默认）设置为yes。\n    #\n    # gopher-enabled no\n\n    ############################### ADVANCED CONFIG ###############################\n\n    # 当哈希条目数较少且最大条目数不超过给定阈值时，将使用内存高效的数据结构对其进行编码。 可以使用以下指令配置这些阈值。\n    hash-max-ziplist-entries 512\n    hash-max-ziplist-value 64\n\n    # 列表也以特殊方式编码，以节省大量空间。\n    # 每个内部列表节点允许的条目数可以指定为固定的最大大小或最大元素数。\n    # 对于固定的最大大小，请使用-5到-1，表示：\n    # -5：最大大小：64 Kb &lt;-不建议用于正常工作负载\n    # -4：最大大小：32 Kb &lt;-不推荐\n    # -3：最大大小：16 Kb &lt;-可能不建议\n    # -2：最大大小：8 Kb  &lt;-好\n    # -1：最大大小：4 Kb  &lt;-好\n    # 正数表示每个列表节点最多存储_exactly_个元素。\n    # 最高性能的选项通常是-2（8 Kb大小）或-1（4 Kb大小），但是如果您的用例是唯一的，请根据需要调整设置。\n    list-max-ziplist-size -2\n\n\n    # 列表也可能被压缩。\n    # 压缩深度是从列表的*each*侧到*exclude*压缩的快速列表ziplist节点的数量。为了快速执行 push/pop 出操作，列表的开头和结尾始终未压缩。 设置为：\n    # 0: 禁用所有列表压缩\n    # 1: 深度1表示\"直到头上有1个节点之后，才开始压缩\"\n    #    So: [head]->node->node->...->node->[tail]\n    #    [head], [tail] will always be uncompressed; inner nodes will compress.\n    # 2: [head]->[next]->node->node->...->node->[prev]->[tail]\n    #    这里的2表示：不要压缩head或head-> next或tail-> prev或tail，而是压缩它们之间的所有节点。\n    # 3: [head]->[next]->[next]->node->node->...->node->[prev]->[prev]->[tail]\n    # 等\n    list-compress-depth 0\n\n    # 集仅在一种情况下具有特殊的编码：当集仅由字符串组成，这些字符串恰好是基数10中的整数，范围为64位有符号整数。\n    # 以下配置设置设置了大小限制，以便使用此特殊的内存节省编码。\n    set-max-intset-entries 512\n\n    # 与散列和列表类似，对排序集也进行了特殊编码，以节省大量空间。 仅当排序集的长度和元素低于以下限制时，才使用此编码：\n    zset-max-ziplist-entries 128\n    zset-max-ziplist-value 64\n\n    # HyperLogLog稀疏表示字节数限制。 限制包括16个字节的标头。 当使用稀疏表示的HyperLogLog超过此限制时，它将转换为密集表示。\n    #\n    # 大于16000的值是完全没有用的，因为那时候密集表示的存储效率更高。\n    #\n    # 建议的值是〜3000，以便在不减慢PFADD的情况下获得节省空间编码的优点，而PFADD的稀疏编码为O（N）。\n    # 当不关心CPU但空间很大时，该值可以提高到10000，并且数据集由基数在0-15000范围内的许多HyperLogLog组成。\n    hll-sparse-max-bytes 3000\n\n    # 流宏节点的最大大小/项目。 流数据结构是一个大节点的基数树，它对内部的多个项目进行编码。\n    # 使用此配置，可以配置单个节点的大小（以字节为单位），以及在添加新的流条目时切换到新节点之前它可能包含的最大项目数。\n    # 如果以下任何设置被设置为零，则该限制将被忽略，例如，可以通过将max-bytes设置为0并将max-entries设置为所需值来仅设置最大整体限制。\n    stream-node-max-bytes 4096\n    stream-node-max-entries 100\n\n    # 主动重新哈希处理每100毫秒CPU时间使用1毫秒，以帮助重新哈希主Redis哈希表（将顶级键映射到值的一个哈希表）。\n    # Redis使用的哈希表实现（请参见dict.c）执行一次懒惰的重新哈希处理：您在要进行哈希处理的哈希表中运行的操作越多，\n    # 执行的哈希处理\"步骤\"就越多，因此，如果服务器空闲，则哈希处理将永远不会完成 散列表使用更多的内存。\n    #\n    # 默认值是每秒使用10毫秒的毫秒数来主动重新哈希主字典，并在可能的情况下释放内存。\n    #\n    # 如果不确定：\n    # 如果您有严格的延迟要求，请使用\"activerehashing no\"，并且在您的环境中，Redis可以不时地以2毫秒的延迟答复查询不是一件好事。\n    #\n    # 如果您没有如此严格的要求，但希望在可能的情况下尽快释放内存，请使用\"activerehashing yes\"。\n    activerehashing yes\n\n    # 客户端输出缓冲区限制可用于出于某些原因强制断开那些没有足够快地从服务器读取数据的客户端（\n    # 常见原因是Pub/Sub客户端无法像发布者所产生的那样快地消费消息。 他们）。\n    #\n    # 可以为三种不同类别的客户端设置不同的限制：\n    #\n    # normal -> 普通客户，包括MONITOR客户\n    # replica  -> 复制客户端\n    # pubsub -> 客户订阅了至少一个pubsub频道或模式\n    #\n    # 每个client-output-buffer-limit指令的语法如下：\n    #\n    # client-output-buffer-limit &lt;class> &lt;hard limit> &lt;soft limit> &lt;soft seconds>\n    #\n    # 一旦达到硬限制，或者达到软限制并且在指定的秒数内（连续）保持达到此限制，客户端将立即断开连接。\n    # 因此，例如，如果硬限制为32兆字节，软限制为16兆字节/ 10秒，则如果输出缓冲区的大小达到32兆字节，客户端将立即断开连接，\n    # 但是如果客户端达到16兆字节，则也将断开连接 并持续超过限制10秒钟。\n    #\n    # 默认情况下，普通客户端不受限制，因为它们不会在不询问的情况下（以推送方式）接收数据，而是在请求之后才接收数据，\n    # 因此只有异步客户端可能会创建这样一种场景：请求数据的速度比读取数据的速度快。\n    #\n    # 相反，对pubsub和副本客户端没有默认限制，因为订阅者和副本以推送方式接收数据。\n    #\n    # 可以通过将硬限制或软限制设置为零来禁用它们。\n    client-output-buffer-limit normal 0 0 0\n    client-output-buffer-limit replica 256mb 64mb 60\n    client-output-buffer-limit pubsub 32mb 8mb 60\n\n    # 客户端查询缓冲区累积新命令。 默认情况下，它们被限制为固定数量，以避免协议去同步（例如，由于客户端中的错误）会导致查询缓冲区中的未绑定内存使用。 # 但是，如果您有非常特殊的需求，例如巨大的multi / exec请求等，则可以在此处进行配置。\n    #\n    # client-query-buffer-limit 1gb\n\n    # 在Redis协议中，批量请求（即表示单个字符串的元素）通常限制为512 mb以上。 但是，您可以在此处更改此限制。\n    #\n    # proto-max-bulk-len 512mb\n\n    # Redis调用一个内部函数来执行许多后台任务，例如在超时时关闭客户端连接，清除从未请求的过期密钥等。\n    #\n    # 并非所有任务都以相同的频率执行，但是Redis根据指定的\"hz\"值检查要执行的任务。\n    #\n    # 默认情况下，\"hz\"设置为10。提高该值将在Redis空闲时使用更多的CPU，但是同时当有多个键同时到期时，它将使Redis的响应速度更快，并且可以使用 更精确。\n    #\n    # 范围在1到500之间，但是值通常不能超过100。 大多数用户应该使用默认值10，并且仅在要求非常低延迟的环境中才将其提高到100。\n    hz 10\n\n    # 通常，与连接的客户端数量成比例的HZ值很有用。 例如，这有助于避免每次后台任务调用处理过多的客户端，从而避免延迟尖峰。\n    #\n    # 由于默认的默认HZ值保守地设置为10，Redis提供并默认启用了使用自适应HZ值的能力，当有许多连接的客户端时，该值将暂时升高。\n    #\n    # 启用动态HZ时，实际配置的HZ将用作基准，但是一旦连接了更多客户端，实际将使用配置的HZ值的倍数。\n    # 这样，空闲实例将占用很少的CPU时间，而忙碌的实例将具有更高的响应速度。\n    dynamic-hz yes\n\n    # 当孩子重写AOF文件时，如果启用以下选项，则每生成32 MB的数据，文件就会进行同步处理。 为了将文件更多地提交到磁盘并避免大的延迟尖峰，这很有用。\n    aof-rewrite-incremental-fsync yes\n\n    # 当redis保存RDB文件时，如果启用以下选项，则每生成32 MB数据将对文件进行fsync处理。 为了将文件更多地提交到磁盘并避免大的延迟尖峰，这很有用。\n    rdb-save-incremental-fsync yes\n\n    # 可以调整Redis LFU逐出（请参阅maxmemory设置）。\n    # 但是，最好从默认设置开始，仅在研究了如何提高性能以及LFU键随时间的变化后才进行更改，可以通过OBJECT FREQ命令进行检查。\n    #\n    # Redis LFU实现中有两个可调参数：计数器对数因子和计数器衰减时间。 重要的是在更改两个参数之前先了解它们的含义。\n    #\n    # LFU计数器每个密钥只有8位，最大值是255，因此Redis使用具有对数行为的概率增量。 给定旧计数器的值，当访问一个键时，计数器以这种方式递增：\n    #\n    # 1. A random number R between 0 and 1 is extracted.\n    # 2. A probability P is calculated as 1/(old_value*lfu_log_factor+1).\n    # 3. The counter is incremented only if R &lt; P.\n    #\n    # 默认的lfu-log-factor是10。这是一个表格，该表格显示频率计数器如何随着具有不同对数因子的不同访问次数而变化：\n    #\n    # +--------+------------+------------+------------+------------+------------+\n    # | factor | 100 hits   | 1000 hits  | 100K hits  | 1M hits    | 10M hits   |\n    # +--------+------------+------------+------------+------------+------------+\n    # | 0      | 104        | 255        | 255        | 255        | 255        |\n    # +--------+------------+------------+------------+------------+------------+\n    # | 1      | 18         | 49         | 255        | 255        | 255        |\n    # +--------+------------+------------+------------+------------+------------+\n    # | 10     | 10         | 18         | 142        | 255        | 255        |\n    # +--------+------------+------------+------------+------------+------------+\n    # | 100    | 8          | 11         | 49         | 143        | 255        |\n    # +--------+------------+------------+------------+------------+------------+\n    #\n    # 注意：上表是通过运行以下命令获得的：\n    #\n    #   redis-benchmark -n 1000000 incr foo\n    #   redis-cli object freq foo\n    #\n    # 注意2：计数器的初始值为5，以便使新对象有机会累积命中数。\n    #\n    # 计数器衰减时间是必须经过的时间（以分钟为单位），以便将密钥计数器除以2（如果值小于等于10，则递减）。\n    #\n    # lfu-decay-time的默认值为1。特殊值0表示每次碰巧扫描计数器都会使其衰减。\n    #\n    # lfu-log-factor 10\n    # lfu-decay-time 1\n\n    ########################## ACTIVE DEFRAGMENTATION(主动碎片整理) #######################\n    #\n    # 什么是主动碎片整理？\n    # -------------------------------\n    #\n    # 通过主动（在线）碎片整理，Redis服务器可以压缩内存中小量分配和释放数据之间剩余的空间，从而可以回收内存。\n    #\n    # 碎片是每个分配器（幸运的是，Jemalloc发生的情况）和某些工作负载都会发生的自然过程。\n    # 通常，需要重新启动服务器以减少碎片，或者至少清除所有数据并重新创建。\n    # 但是，由于Oran Agra为Redis 4.0实现了此功能，因此在服务器运行时，此过程可以在运行时以\"热\"方式进行。\n    #\n    # 基本上，当碎片超过一定级别时（请参阅下面的配置选项），Redis将开始通过利用某些特定的Jemalloc功能在连续的内存区域中创建值的新副本（\n    # 以了解分配是否导致碎片，并 将其分配到更好的位置），同时将释放数据的旧副本。\n    # 对于所有键，以增量方式重复此过程将导致碎片恢复到正常值。\n    #\n    # 重要事项：\n    #\n    # 1. 默认情况下，此功能是禁用的，并且仅当您编译Redis以使用我们随Redis的源代码提供的Jemalloc副本时才起作用。\n    #    这是Linux构建的默认设置。\n    #\n    # 2. 如果没有碎片问题，则无需启用此功能。\n    #\n    # 3. 一旦遇到碎片，您可以在需要时使用命令\"CONFIG SET activedefrag yes\"启用此功能。\n    #\n    # 配置参数能够微调碎片整理过程的行为。 如果您不确定它们的含义，最好不要更改默认值。\n\n    # 启用主动碎片整理\n    # activedefrag no\n\n    # 启动主动碎片整理的最小碎片浪费\n    # active-defrag-ignore-bytes 100mb\n\n    # 启动活动碎片整理的最小碎片百分比\n    # active-defrag-threshold-lower 10\n\n    # 我们最大程度地努力下的最大碎片百分比\n    # active-defrag-threshold-upper 100\n\n    # 在达到下限阈值时使用最小的CPU碎片整理工作\n    # active-defrag-cycle-min 1\n\n    # 在达到上限阈值时使用最大的精力进行碎片整理\n    # active-defrag-cycle-max 25\n\n    # 将在主字典扫描中处理的set / hash / zset / list字段的最大数量\n    # active-defrag-max-scan-fields 1000\n\n    # 默认情况下，将启用用于清除的Jemalloc后台线程\n    jemalloc-bg-thread yes\n\n    # 可以将Redis的不同线程和进程固定到系统中的特定CPU，以最大化服务器的性能。\n    # 这不仅可以在不同的CPU中固定不同的Redis线程，而且还可以确保将在同一主机上运行的多个Redis实例固定到不同的CPU。\n    #\n    # 通常，您可以使用\"taskset\"命令执行此操作，但是在Linux和FreeBSD中，也可以直接通过Redis配置进行此操作。\n    #\n    # 您可以固定服务器/ IO线程，生物线程，aof重写子进程和bgsave子进程。 指定cpu列表的语法与taskset命令相同：\n    #\n    # Set redis server/io threads to cpu affinity 0,2,4,6:\n    # server_cpulist 0-7:2\n    #\n    # Set bio threads to cpu affinity 1,3:\n    # bio_cpulist 1,3\n    #\n    # Set aof rewrite child process to cpu affinity 8,9,10,11:\n    # aof_rewrite_cpulist 8-11\n    #\n    # Set bgsave child process to cpu affinity 1,10,11\n    # bgsave_cpulist 1,10-11\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"8-2-创建deployment文件\"><a href=\"#8-2-创建deployment文件\" class=\"headerlink\" title=\"8.2 创建deployment文件\"></a>8.2 创建deployment文件</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">1</span>-deployment.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-deployment\n  labels:\n    app: redis\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: redis\n  template:\n    metadata:\n      labels:\n        app: redis\n    spec:\n      containers:\n      - name: redis\n        image: redis:6\n        ports:\n        - containerPort: 6379\n        command:\n            - \"sh\"\n            - \"-c\"\n            - \"redis-server /etc/redis.conf\"\n        volumeMounts:\n        - name: redis-config\n          mountPath: /etc/redis.conf\n          subPath: redis.conf\n      volumes:\n      - name: redis-config\n        configMap:\n          name: redis-config\n          items:\n          - key: redis.conf\n            path: redis.conf\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"8-3-创建服务暴露\"><a href=\"#8-3-创建服务暴露\" class=\"headerlink\" title=\"8.3 创建服务暴露\"></a>8.3 创建服务暴露</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span>-service.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis\n  labels:\n    app: redis\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n      nodePort: 30003\n  type: NodePort\n  selector:\n    app: redis\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"8-4-应用\"><a href=\"#8-4-应用\" class=\"headerlink\" title=\"8.4 应用\"></a>8.4 应用</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">0</span>-configMap.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">1</span>-deployment.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-service.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"九、部署kube-prometheus\"><a href=\"#九、部署kube-prometheus\" class=\"headerlink\" title=\"九、部署kube-prometheus\"></a>九、部署kube-prometheus</h1><h2 id=\"9-1-下载解压，修复监控\"><a href=\"#9-1-下载解压，修复监控\" class=\"headerlink\" title=\"9.1 下载解压，修复监控\"></a>9.1 下载解压，修复监控</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://ghproxy.com/https://github.com/prometheus-operator/kube-prometheus/archive/refs/tags/v0.12.0.zip\n<span class=\"token function\">unzip</span> v0.12.0.zip\n<span class=\"token builtin class-name\">cd</span> kube-prometheus-0.12.0/manifests\n<span class=\"token comment\">#替换所有granfana版本为9.0.2</span>\n<span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s|9.3.2|9.0.2|g'</span> grafana-*<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"1-配置kubeControllermanagerService\"><a href=\"#1-配置kubeControllermanagerService\" class=\"headerlink\" title=\"1.配置kubeControllermanagerService\"></a>1.配置kubeControllermanagerService</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> repair-prometheus <span class=\"token punctuation\">;</span>\n<span class=\"token function\">cat</span> <span class=\"token operator\">>></span> repair-prometheus/kubeControllermanagerService.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  labels: #定义这个service的标签，因为kubernetesControlPlane-serviceMonitorKubeControllerManager.yaml里面定义了这个标签\n      app.kubernetes.io/name: kube-controller-manager\n  name: kube-controller-manager\n  namespace: kube-system        #名称空间是kube-system\nspec:\n  selector:               #这个标签选择器表示我们要关联到kube-controller-manager-master的pod上\n    component: kube-controller-manager  #kubectl get pods kube-controller-manager-master -n kube-system --show-labels\n  ports:\n  - name: https-metrics         #service端口名称，这个名称要与ServiceMonitor的port名称一致\n    port: 10257\n    targetPort: 10257         # kube-controller-manager-master的pod的端口\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"2-配置kubeSchedulerService\"><a href=\"#2-配置kubeSchedulerService\" class=\"headerlink\" title=\"2.配置kubeSchedulerService\"></a>2.配置kubeSchedulerService</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> repair-prometheus/kubeSchedulerService.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  labels: #定义这个service的标签，因为kubernetesControlPlane-serviceMonitorKubeScheduler.yaml里面定义了这个标签\n      app.kubernetes.io/name: kube-scheduler\n  name: kube-scheduler\n  namespace: kube-system    #名称空间是kube-system\nspec:\n  selector:           #这个标签选择器表示我们要关联到kube-scheduler的pod上\n    component: kube-scheduler # kubectl get  pods kube-scheduler-master -n kube-system --show-labels\n  ports:\n  - name: https-metrics     #service端口名称，这个名称要与ServiceMonitor的port名称一致\n    port: 10259\n    targetPort: 10259     #kube-scheduler-master的端口\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"3-修改绑定ip-可选-master节点都需执行\"><a href=\"#3-修改绑定ip-可选-master节点都需执行\" class=\"headerlink\" title=\"3.修改绑定ip(可选,master节点都需执行)\"></a>3.修改绑定ip(可选,master节点都需执行)</h3><blockquote>\n<p>还有一点，kube-scheduler-master和kube-controller-manager这2个pod启动的时候默认绑定的地址是127.0.0.1,所以普罗米修斯通过ip去访问<br>就会被拒绝，所以需要修改一下，我们知道这2个系统组件是是以静态pod的方式启动的，所以进入到master节点的静态pod目录<br>如果我们不指定静态pod目录时在哪里，可以通过kubelet查看</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">\n<span class=\"token punctuation\">[</span>root@master manifests<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl  status kubelet.service | grep '\\-\\-config'</span>\n           └─429488 /usr/bin/kubelet --bootstrap-kubeconfig<span class=\"token operator\">=</span>/etc/kubernetes/bootstrap-kubelet.conf <span class=\"token parameter variable\">--kubeconfig</span><span class=\"token operator\">=</span>/etc/kubernetes/kubelet.conf <span class=\"token parameter variable\">--config</span><span class=\"token operator\">=</span>/var/lib/kubelet/config.yaml --network-plugin<span class=\"token operator\">=</span>cni --pod-infra-container-image<span class=\"token operator\">=</span>registry.aliyuncs.com/google_containers/pause:3.5\n\n<span class=\"token punctuation\">[</span>root@master manifests<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep static /var/lib/kubelet/config.yaml</span>\nstaticPodPath: /etc/kubernetes/manifests\t\t\t\t\t\t<span class=\"token comment\">#这就是静态pod的目录</span>\n<span class=\"token punctuation\">[</span>root@master manifests<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span>\n\n<span class=\"token punctuation\">[</span>root@master ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd /etc/kubernetes/manifests</span>\n<span class=\"token punctuation\">[</span>root@master manifests<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep 192 kube-scheduler.yaml </span>\n    - --bind-address<span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.118.131\t<span class=\"token comment\">#修改127.0.0.1为主机的ip,修改为0.0.0.0也行</span>\n        host: <span class=\"token number\">192.168</span>.118.131\t\t\t<span class=\"token comment\">#其实保持默认127.0.0.1也行</span>\n        host: <span class=\"token number\">192.168</span>.118.131\t\t\t<span class=\"token comment\">#其实保持默认127.0.0.1也行</span>\n<span class=\"token punctuation\">[</span>root@master manifests<span class=\"token punctuation\">]</span><span class=\"token comment\"># </span>\n\n<span class=\"token punctuation\">[</span>root@master manifests<span class=\"token punctuation\">]</span><span class=\"token comment\"># vim kube-controller-manager.yaml \t\t</span>\n    - --bind-address<span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.118.131\t<span class=\"token comment\">#修改127.0.0.1为主机的ip,修改为0.0.0.0也行</span>\n        host: <span class=\"token number\">192.168</span>.118.131\t\t\t<span class=\"token comment\">#其实保持默认127.0.0.1也行</span>\n        host: <span class=\"token number\">192.168</span>.118.131\t\t\t<span class=\"token comment\">#其实保持默认127.0.0.1也行</span>\n<span class=\"token punctuation\">[</span>root@master manifests<span class=\"token punctuation\">]</span><span class=\"token comment\"># </span>\n\n<span class=\"token comment\">#发现修改后scheduler和controller-manager pod消失了，一直也没有重新创建pod</span>\n<span class=\"token comment\">#所以重启kubelet后pod都正常了</span>\n<span class=\"token punctuation\">[</span>root@master manifests<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl  restart kubelet.service\t</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"9-2-配置prometheus持久化\"><a href=\"#9-2-配置prometheus持久化\" class=\"headerlink\" title=\"9.2 配置prometheus持久化\"></a>9.2 配置prometheus持久化</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> prometheus-prometheus.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>添加</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">storage</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#这部分为持久化配置</span>\n    <span class=\"token key atrule\">volumeClaimTemplate</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">storageClassName</span><span class=\"token punctuation\">:</span> nfs<span class=\"token punctuation\">-</span>retain\n        <span class=\"token key atrule\">accessModes</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"ReadWriteOnce\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">storage</span><span class=\"token punctuation\">:</span> 100Gi<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"/_v_images/20230225220608720_31631.png\"></p>\n<h2 id=\"9-3-存储时长配置为30天\"><a href=\"#9-3-存储时长配置为30天\" class=\"headerlink\" title=\"9.3  存储时长配置为30天\"></a>9.3  存储时长配置为30天</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> prometheusOperator-deployment.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>添加</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> storage.tsdb.retention.time=30d <span class=\"token comment\"># 在这添加time参数</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"/_v_images/20230225220844419_31241.png\"></p>\n<h2 id=\"9-4-Grafana配置持久化\"><a href=\"#9-4-Grafana配置持久化\" class=\"headerlink\" title=\"9.4 Grafana配置持久化\"></a>9.4 Grafana配置持久化</h2><h3 id=\"1-建立grafana-pvc\"><a href=\"#1-建立grafana-pvc\" class=\"headerlink\" title=\"1.建立grafana-pvc\"></a>1.建立grafana-pvc</h3><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">cat <span class=\"token punctuation\">></span><span class=\"token punctuation\">></span> grafana<span class=\"token punctuation\">-</span>pvc.yaml &lt;&lt; \"EOF\"\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> PersistentVolumeClaim\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> grafana<span class=\"token punctuation\">-</span>pvc\n    <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> monitoring\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">accessModes</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> ReadWriteOnce\n  <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">storage</span><span class=\"token punctuation\">:</span> 10Gi\n  <span class=\"token key atrule\">storageClassName</span><span class=\"token punctuation\">:</span> nfs<span class=\"token punctuation\">-</span>retain\nEOF\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"2-修改grafana-deployment-yaml\"><a href=\"#2-修改grafana-deployment-yaml\" class=\"headerlink\" title=\"2.修改grafana-deployment.yaml\"></a>2.修改grafana-deployment.yaml</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> grafana-deployment.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>把emptydir存储方式改为pvc方式：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> grafana<span class=\"token punctuation\">-</span>storage\n        <span class=\"token key atrule\">persistentVolumeClaim</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">claimName</span><span class=\"token punctuation\">:</span> grafana<span class=\"token punctuation\">-</span>pvc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"/_v_images/20230225221220644_31675.png\"></p>\n<h2 id=\"9-5-创建服务暴露\"><a href=\"#9-5-创建服务暴露\" class=\"headerlink\" title=\"9.5 创建服务暴露\"></a>9.5 创建服务暴露</h2><h3 id=\"1-暴露grafana\"><a href=\"#1-暴露grafana\" class=\"headerlink\" title=\"1.暴露grafana\"></a>1.暴露grafana</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> grafana-service.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>添加</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">\t<span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30006</span>\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> NodePort <span class=\"token comment\">#Serive的类型，ClusterIP/NodePort/LoaderBalancer</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"/_v_images/20230225223255518_4701.png\"></p>\n<h3 id=\"2-暴露Prometheus\"><a href=\"#2-暴露Prometheus\" class=\"headerlink\" title=\"2.暴露Prometheus\"></a>2.暴露Prometheus</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> prometheus-service.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>修改</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> web\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">9090</span>\n    <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> web\n    <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30007</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> reloader<span class=\"token punctuation\">-</span>web\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n    <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> reloader<span class=\"token punctuation\">-</span>web\n    <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30008</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> NodePort\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"/_v_images/20230225223423127_18660.png\"></p>\n<h3 id=\"3-暴露Alert-Manager\"><a href=\"#3-暴露Alert-Manager\" class=\"headerlink\" title=\"3.暴露Alert Manager\"></a>3.暴露Alert Manager</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> alertmanager-service.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>修改</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> web\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">9093</span>\n    <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> web\n    <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30009</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> reloader<span class=\"token punctuation\">-</span>web\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n    <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> reloader<span class=\"token punctuation\">-</span>web\n    <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30010</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> NodePort\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"/_v_images/20230225223603943_14622.png\"></p>\n<h2 id=\"9-6-自定义DashboardPage文件JS\"><a href=\"#9-6-自定义DashboardPage文件JS\" class=\"headerlink\" title=\"9.6 自定义DashboardPage文件JS\"></a>9.6 自定义DashboardPage文件JS</h2><p>修改<code>grafana-deployment.yaml</code></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> grafana-deployment.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>把emptydir存储方式改为pvc方式：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> dashboardpage<span class=\"token punctuation\">-</span>js<span class=\"token punctuation\">-</span>volume\n          <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /usr/share/grafana/public/build/DashboardPage.53b203c85adb3a57b1ac.js\n          <span class=\"token key atrule\">subPath</span><span class=\"token punctuation\">:</span> DashboardPage.53b203c85adb3a57b1ac.js\n\n\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> dashboardpage<span class=\"token punctuation\">-</span>js<span class=\"token punctuation\">-</span>volume\n        <span class=\"token key atrule\">configMap</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> grafana<span class=\"token punctuation\">-</span>dashboardpage<span class=\"token punctuation\">-</span>js<span class=\"token punctuation\">-</span>configmap\n          <span class=\"token key atrule\">items</span><span class=\"token punctuation\">:</span>\n          <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> DashboardPage.53b203c85adb3a57b1ac.js\n            <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> DashboardPage.53b203c85adb3a57b1ac.js<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>![](_v_images&#x2F;20230226003837612_11533.png &#x3D;693x)</p>\n<p>修改grafana.ini<br><code>vim grafana-config.yaml</code></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">[</span>security<span class=\"token punctuation\">]</span>\nallow_embedding = true\n<span class=\"token punctuation\">[</span>auth.anonymous<span class=\"token punctuation\">]</span>\nenabled = true\n<span class=\"token punctuation\">[</span>users<span class=\"token punctuation\">]</span>\ndefault_theme = light<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"/_v_images/20230314151316709_27596.png\"></p>\n<h2 id=\"9-7-安装\"><a href=\"#9-7-安装\" class=\"headerlink\" title=\"9.7 安装\"></a>9.7 安装</h2><p>上传DashboardPage附件：<br><a href=\"_v_attachments/20230225224217873_1139/DashboardPage.53b203c85adb3a57b1ac.js\">DashboardPage.53b203c85adb3a57b1ac.js</a></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">..</span>\nkubectl create ns monitoring\n<span class=\"token comment\">#将附件DashboardPage.53b203c85adb3a57b1ac.js上传服务器</span>\nkubectl create configmap <span class=\"token parameter variable\">-n</span> monitoring grafana-dashboardpage-js-configmap --from-file<span class=\"token operator\">=</span>DashboardPage.53b203c85adb3a57b1ac.js\n\nkubectl apply --server-side <span class=\"token parameter variable\">-f</span> kube-prometheus-0.12.0/manifests/setup\nkubectl <span class=\"token function\">wait</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token parameter variable\">--for</span> <span class=\"token assign-left variable\">condition</span><span class=\"token operator\">=</span>Established <span class=\"token punctuation\">\\</span>\n\t<span class=\"token parameter variable\">--all</span> CustomResourceDefinition <span class=\"token punctuation\">\\</span>\n\t<span class=\"token parameter variable\">--namespace</span><span class=\"token operator\">=</span>monitoring\nkubectl apply <span class=\"token parameter variable\">-f</span> kube-prometheus-0.12.0/manifests/\n\n\n<span class=\"token comment\">#镜像下载</span>\nctr <span class=\"token parameter variable\">-n</span> k8s.io i pull k8s.dockerproxy.com/kube-state-metrics/kube-state-metrics:v2.7.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i pull k8s.dockerproxy.com/prometheus-adapter/prometheus-adapter:v0.10.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i tag k8s.dockerproxy.com/kube-state-metrics/kube-state-metrics:v2.7.0 registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.7.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i tag k8s.dockerproxy.com/prometheus-adapter/prometheus-adapter:v0.10.0 registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.10.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i <span class=\"token function\">rm</span> k8s.dockerproxy.com/kube-state-metrics/kube-state-metrics:v2.7.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i <span class=\"token function\">rm</span> k8s.dockerproxy.com/prometheus-adapter/prometheus-adapter:v0.10.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"9-8-部署完毕后无法访问，删除网络策略\"><a href=\"#9-8-部署完毕后无法访问，删除网络策略\" class=\"headerlink\" title=\"9.8 部署完毕后无法访问，删除网络策略\"></a>9.8 部署完毕后无法访问，删除网络策略</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl delete networkpolicy <span class=\"token parameter variable\">--all</span> <span class=\"token parameter variable\">-n</span> monitoring<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n<h2 id=\"9-9-访问\"><a href=\"#9-9-访问\" class=\"headerlink\" title=\"9.9 访问\"></a>9.9 访问</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#Prometheus</span>\n通过 http://174.1.0.98:30007/ 访问\n\n<span class=\"token comment\">#Grafana</span>\n通过 http://174.1.0.98:30006/ 访问并使用默认的 grafana 用户：密码 admin:admin\n\n<span class=\"token comment\">#Alert Manager</span>\n通过 http://174.1.0.98:30009/ 访问<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"9-10-导入模板，配置亮色主题\"><a href=\"#9-10-导入模板，配置亮色主题\" class=\"headerlink\" title=\"9.10 导入模板，配置亮色主题\"></a>9.10 导入模板，配置亮色主题</h2><p>模板：<br><a href=\"_v_attachments/20230225224217873_1139/pageinfo-1668405034945.json\">pageinfo-1668405034945.json</a></p>\n<p>![](_v_images&#x2F;20230313122509763_28393.png &#x3D;1091x)<br>![](_v_images&#x2F;20230313122521689_31570.png &#x3D;603x)<br>![](_v_images&#x2F;20230313122543495_21901.png &#x3D;530x)<br>![](_v_images&#x2F;20230313122618215_12330.png &#x3D;762x)</p>\n<h1 id=\"十、era后端部署\"><a href=\"#十、era后端部署\" class=\"headerlink\" title=\"十、era后端部署\"></a>十、era后端部署</h1><h2 id=\"10-1-登陆数据库，创建era用户及库\"><a href=\"#10-1-登陆数据库，创建era用户及库\" class=\"headerlink\" title=\"10.1 登陆数据库，创建era用户及库\"></a>10.1 登陆数据库，创建era用户及库</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">use</span> mysql<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">database</span> era <span class=\"token keyword\">CHARACTER</span> <span class=\"token keyword\">SET</span> utf8mb4 <span class=\"token keyword\">COLLATE</span> utf8mb4_bin<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">user</span> <span class=\"token string\">'era'</span><span class=\"token variable\">@'%'</span> identified <span class=\"token keyword\">by</span> <span class=\"token string\">'&amp;V#^hjmp9%44G@'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">grant</span> <span class=\"token keyword\">all</span> <span class=\"token keyword\">privileges</span> <span class=\"token keyword\">on</span> era<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token keyword\">to</span> <span class=\"token string\">'era'</span><span class=\"token variable\">@'%'</span><span class=\"token punctuation\">;</span>\nflush <span class=\"token keyword\">privileges</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>导入附近sql模板：<br><a href=\"_v_attachments/20230225224217873_1139/era-prod.sql\">era-prod.sql</a></p>\n<h2 id=\"10-2-修改bootstrap-yml配置文件nacos地址\"><a href=\"#10-2-修改bootstrap-yml配置文件nacos地址\" class=\"headerlink\" title=\"10.2 修改bootstrap.yml配置文件nacos地址\"></a>10.2 修改bootstrap.yml配置文件nacos地址</h2><p><code>vim bootstrap.yml</code></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># 开发环境配置</span>\n<span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># 服务器的HTTP端口，默认为8080</span>\n  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n  <span class=\"token key atrule\">servlet</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 应用的访问路径</span>\n    <span class=\"token key atrule\">context-path</span><span class=\"token punctuation\">:</span> /api/v1\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> era<span class=\"token punctuation\">-</span>admin\n  <span class=\"token key atrule\">jackson</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">time-zone</span><span class=\"token punctuation\">:</span> GMT+8\n    <span class=\"token comment\"># 默认属性系列化策略：always、non_null、non_empty、non_absent、use_default..</span>\n    <span class=\"token key atrule\">default-property-inclusion</span><span class=\"token punctuation\">:</span> always\n    <span class=\"token comment\"># date 类型以时间戳返回</span>\n    <span class=\"token key atrule\">serialization</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">write-dates-as-timestamps</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n      <span class=\"token comment\"># 序列化返回空对象</span>\n      <span class=\"token key atrule\">FAIL_ON_EMPTY_BEANS</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> nacos\n      <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> nacos\n      <span class=\"token key atrule\">discovery</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 服务注册地址</span>\n        <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> nacos.default.svc.cluster.local<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span>\n        <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ea2ee798<span class=\"token punctuation\">-</span>43db<span class=\"token punctuation\">-</span>4b50<span class=\"token punctuation\">-</span>8033<span class=\"token punctuation\">-</span>baf43599aea5\n\n        <span class=\"token comment\"># server-addr: 10.36.160.102:8848</span>\n        <span class=\"token comment\"># namespace: dev</span>\n      <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span>spring.cloud.nacos.discovery.server<span class=\"token punctuation\">-</span>addr<span class=\"token punctuation\">&#125;</span>\n        <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span>spring.cloud.nacos.discovery.namespace<span class=\"token punctuation\">&#125;</span>\n        <span class=\"token key atrule\">file-extension</span><span class=\"token punctuation\">:</span> yml\n        <span class=\"token comment\">#指定共享配置，且支持动态刷新</span>\n        <span class=\"token key atrule\">extension-configs</span><span class=\"token punctuation\">:</span>\n          <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">data-id</span><span class=\"token punctuation\">:</span> application.yml\n            <span class=\"token key atrule\">refresh</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n          <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">data-id</span><span class=\"token punctuation\">:</span> sys<span class=\"token punctuation\">-</span>config.yml\n            <span class=\"token key atrule\">refresh</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n          <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">data-id</span><span class=\"token punctuation\">:</span> kubeconfig.yml\n            <span class=\"token key atrule\">refresh</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n          <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">data-id</span><span class=\"token punctuation\">:</span> message.yml\n            <span class=\"token key atrule\">refresh</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"10-3-修改nacos相关配置\"><a href=\"#10-3-修改nacos相关配置\" class=\"headerlink\" title=\"10.3 修改nacos相关配置\"></a>10.3 修改nacos相关配置</h2><p>![](_v_images&#x2F;20230227115633947_11263.png &#x3D;827x)</p>\n<h2 id=\"10-4-创建pvc\"><a href=\"#10-4-创建pvc\" class=\"headerlink\" title=\"10.4 创建pvc\"></a>10.4 创建pvc</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> era-back<span class=\"token punctuation\">;</span><span class=\"token builtin class-name\">cd</span> era-back\n<span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">1</span>-pvc.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: era-back-pvc\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 50Gi\n  storageClassName: nfs-retain\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"10-5-创建deployment文件\"><a href=\"#10-5-创建deployment文件\" class=\"headerlink\" title=\"10.5 创建deployment文件\"></a>10.5 创建deployment文件</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span>-deployment.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: era-back\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: era-back\n  template:\n    metadata:\n      labels:\n        app: era-back\n    spec:\n      hostAliases:\n      #- ip: \"10.17.10.31\"\n      #  hostnames:\n      #  - \"mail.superfluidity.com.cn\"\n      - ip: \"200.0.1.90\"\n        hostnames:\n        - \"lb.cluster.local\"\n      containers:\n      - name: era-back\n        image: openjdk:11\n        imagePullPolicy: IfNotPresent\n        command:\n          - /bin/bash\n          - -c\n          - cd /usr/src/myapp &amp;&amp; java -jar -Duser.timezone=GMT+08 era-admin.jar\n          #- sleep 99999\n        securityContext:\n          privileged: true\n        ports:\n        - name: web\n          containerPort: 8080\n          protocol: \"TCP\"\n        volumeMounts:\n          - mountPath: /usr/src/myapp\n            name: data\n      volumes:\n      - name: data\n        persistentVolumeClaim:\n          claimName: era-back-pvc\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"10-6-创建服务暴露\"><a href=\"#10-6-创建服务暴露\" class=\"headerlink\" title=\"10.6 创建服务暴露\"></a>10.6 创建服务暴露</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">3</span>-service.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: era-back-svc\n  labels:\n    app: era-back\nspec:\n  ports:\n    - name: web-port\n      port: 8080\n      protocol: TCP\n      targetPort: 8080\n      nodePort: 30011\n  type: NodePort\n  selector:\n    app: era-back\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"10-7-应用\"><a href=\"#10-7-应用\" class=\"headerlink\" title=\"10.7 应用\"></a>10.7 应用</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">1</span>-pvc.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-deployment.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">3</span>-service.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"10-8-复制era-back-jar包及bootstrap-yml文件至pvc\"><a href=\"#10-8-复制era-back-jar包及bootstrap-yml文件至pvc\" class=\"headerlink\" title=\"10.8 复制era-back.jar包及bootstrap.yml文件至pvc\"></a>10.8 复制era-back.jar包及bootstrap.yml文件至pvc</h2><p><img src=\"/_v_images/20230227121102596_1385.png\"><br><img src=\"/_v_images/20230227120001444_24644.png\"></p>\n<p><a href=\"_v_attachments/20230225224217873_1139/era-admin.jar\">era-admin.jar</a></p>\n<h2 id=\"10-9-重启服务\"><a href=\"#10-9-重启服务\" class=\"headerlink\" title=\"10.9 重启服务\"></a>10.9 重启服务</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl delete <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-deployment.yaml\nkubectl apply <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-deployment.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n<h1 id=\"十一、era前端部署\"><a href=\"#十一、era前端部署\" class=\"headerlink\" title=\"十一、era前端部署\"></a>十一、era前端部署</h1><h2 id=\"11-1-创建pvc\"><a href=\"#11-1-创建pvc\" class=\"headerlink\" title=\"11.1 创建pvc\"></a>11.1 创建pvc</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> era-front<span class=\"token punctuation\">;</span><span class=\"token builtin class-name\">cd</span> era-front\n<span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">1</span>-pvc.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: era-front-pvc\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 10Gi\n  storageClassName: nfs-retain\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"11-2-创建deployment文件\"><a href=\"#11-2-创建deployment文件\" class=\"headerlink\" title=\"11.2 创建deployment文件\"></a>11.2 创建deployment文件</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span>-deployment.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: era-front\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: era-front\n  template:\n    metadata:\n      labels:\n        app: era-front\n    spec:\n      containers:\n      - name: era-front\n        image: nginx:1.23.1\n        imagePullPolicy: IfNotPresent\n        ports:\n        - name: web\n          containerPort: 80\n          protocol: \"TCP\"\n        volumeMounts:\n          - name: data\n            mountPath: /etc/nginx/conf.d\n            subPath: conf.d\n          - name: data\n            mountPath: /webs\n            subPath: webs\n      volumes:\n      - name: data\n        persistentVolumeClaim:\n          claimName: era-front-pvc\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"11-3-创建服务暴露\"><a href=\"#11-3-创建服务暴露\" class=\"headerlink\" title=\"11.3 创建服务暴露\"></a>11.3 创建服务暴露</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">3</span>-service.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: era-front-svc\n  labels:\n    app: era-front\nspec:\n  ports:\n    - name: web-port\n      port: 80\n      protocol: TCP\n      targetPort: 80\n      nodePort: 30012\n  type: NodePort\n  selector:\n    app: era-front\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"11-4-应用\"><a href=\"#11-4-应用\" class=\"headerlink\" title=\"11.4 应用\"></a>11.4 应用</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">1</span>-pvc.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-deployment.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">3</span>-service.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"11-5-复制era-front-conf包及era-front前端文件至pvc\"><a href=\"#11-5-复制era-front-conf包及era-front前端文件至pvc\" class=\"headerlink\" title=\"11.5 复制era-front.conf包及era-front前端文件至pvc\"></a>11.5 复制era-front.conf包及era-front前端文件至pvc</h2><p><img src=\"/_v_images/20230227121102596_1385.png\"></p>\n<p><img src=\"/_v_images/20230313123535782_27993.png\"></p>\n<p>附件：<br><a href=\"_v_attachments/20230225224217873_1139/era-front.conf\">era-front.conf</a></p>\n<p><a href=\"_v_attachments/20230225224217873_1139/test.tar.gz\">test.tar.gz</a></p>\n<h2 id=\"11-6-重启服务\"><a href=\"#11-6-重启服务\" class=\"headerlink\" title=\"11.6 重启服务\"></a>11.6 重启服务</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl delete <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-deployment.yaml\nkubectl apply <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-deployment.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n<h1 id=\"十二、era镜像服务部署\"><a href=\"#十二、era镜像服务部署\" class=\"headerlink\" title=\"十二、era镜像服务部署\"></a>十二、era镜像服务部署</h1><h2 id=\"12-1-创建pvc\"><a href=\"#12-1-创建pvc\" class=\"headerlink\" title=\"12.1 创建pvc\"></a>12.1 创建pvc</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> era-images<span class=\"token punctuation\">;</span><span class=\"token builtin class-name\">cd</span> era-images\n<span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">1</span>-pvc.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: era-images-pvc\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 500Gi\n  storageClassName: nfs-retain\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"12-2-创建deployment文件\"><a href=\"#12-2-创建deployment文件\" class=\"headerlink\" title=\"12.2 创建deployment文件\"></a>12.2 创建deployment文件</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span>-deployment.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: era-images\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: era-images\n  template:\n    metadata:\n      labels:\n        app: era-images\n    spec:\n      containers:\n      - name: era-images\n        image: nginx:1.23.1\n        imagePullPolicy: IfNotPresent\n        ports:\n        - name: web\n          containerPort: 80\n          protocol: \"TCP\"\n        volumeMounts:\n          - name: data\n            mountPath: /etc/nginx/conf.d\n            subPath: conf.d\n          - name: data\n            mountPath: /images\n            subPath: images\n      volumes:\n      - name: data\n        persistentVolumeClaim:\n          claimName: era-images-pvc\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"12-3-创建服务暴露\"><a href=\"#12-3-创建服务暴露\" class=\"headerlink\" title=\"12.3 创建服务暴露\"></a>12.3 创建服务暴露</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">3</span>-service.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: era-images-svc\n  labels:\n    app: era-images\nspec:\n  ports:\n    - name: web-port\n      port: 80\n      protocol: TCP\n      targetPort: 80\n      nodePort: 30013\n  type: NodePort\n  selector:\n    app: era-images\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"12-4-应用\"><a href=\"#12-4-应用\" class=\"headerlink\" title=\"12.4 应用\"></a>12.4 应用</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">1</span>-pvc.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-deployment.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">3</span>-service.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"12-5-复制era-images-conf包至pvc\"><a href=\"#12-5-复制era-images-conf包至pvc\" class=\"headerlink\" title=\"12.5 复制era-images.conf包至pvc\"></a>12.5 复制era-images.conf包至pvc</h2><p><img src=\"/_v_images/20230227134218648_11795.png\"><br><img src=\"/_v_images/20230313123817260_29670.png\"></p>\n<p><a href=\"_v_attachments/20230225224217873_1139/era-images.conf\">era-images.conf</a></p>\n<h2 id=\"12-6-重启服务\"><a href=\"#12-6-重启服务\" class=\"headerlink\" title=\"12.6 重启服务\"></a>12.6 重启服务</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl delete <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-deployment.yaml\nkubectl apply <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-deployment.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h1 id=\"十三、-可选-监控系统部署\"><a href=\"#十三、-可选-监控系统部署\" class=\"headerlink\" title=\"十三、(可选)监控系统部署\"></a>十三、(可选)监控系统部署</h1><h2 id=\"13-1-数据创建相关库及用户\"><a href=\"#13-1-数据创建相关库及用户\" class=\"headerlink\" title=\"13.1 数据创建相关库及用户\"></a>13.1 数据创建相关库及用户</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">database</span> zabbix <span class=\"token keyword\">character</span> <span class=\"token keyword\">set</span> utf8mb4 <span class=\"token keyword\">collate</span> utf8mb4_bin<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> mysql<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">user</span> <span class=\"token string\">'zabbix'</span><span class=\"token variable\">@'%'</span> identified <span class=\"token keyword\">by</span> <span class=\"token string\">'4GtJvRS%La76iB'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">grant</span> <span class=\"token keyword\">all</span> <span class=\"token keyword\">privileges</span> <span class=\"token keyword\">on</span> zabbix<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token keyword\">to</span> <span class=\"token string\">'zabbix'</span><span class=\"token variable\">@'%'</span><span class=\"token punctuation\">;</span>\nFLUSH <span class=\"token keyword\">PRIVILEGES</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"13-2-创建命名空间\"><a href=\"#13-2-创建命名空间\" class=\"headerlink\" title=\"13.2 创建命名空间\"></a>13.2 创建命名空间</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> zabbix<span class=\"token punctuation\">;</span><span class=\"token builtin class-name\">cd</span> zabbix\n<span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">0</span>-namespace.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: zabbix\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"13-3-创建pvc\"><a href=\"#13-3-创建pvc\" class=\"headerlink\" title=\"13.3 创建pvc\"></a>13.3 创建pvc</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">1</span>-pvc.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: zabbix-pvc\n  namespace: zabbix\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 10Gi\n  storageClassName: nfs-retain\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"13-4-部署\"><a href=\"#13-4-部署\" class=\"headerlink\" title=\"13.4 部署\"></a>13.4 部署</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span>-zabbix-web-service.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zabbix-web-service\n  namespace: zabbix\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: zabbix-web-service\n  template:\n    metadata:\n      labels:\n        app: zabbix-web-service\n    spec:\n      containers:\n      - name: zabbix-web-service\n        image: zabbix/zabbix-web-service:ubuntu-6.0-latest\n        ports:\n        - containerPort: 10053\n        env:\n        - name: ZBX_ALLOWEDIP\n          value: \"::/0\"\n        securityContext:\n          capabilities:\n            add:\n            - SYS_ADMIN\n        volumeMounts:\n        - name: localtime\n          mountPath: /etc/localtime\n          readOnly: true\n        - name: zabbix-data\n          mountPath: /usr/share/fonts/truetype/dejavu/DejaVuSans.ttf\n          subPath: DejaVuSans.ttf\n      volumes:\n      - name: localtime\n        hostPath:\n          path: /etc/localtime\n      - name: zabbix-data\n        persistentVolumeClaim:\n          claimName: zabbix-pvc\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-web-service\n  namespace: zabbix\nspec:\n  selector:\n    app: zabbix-web-service\n  ports:\n  - name: zabbix-web-service\n    port: 10053\n    targetPort: 10053\n    nodePort: 30053\n  type: NodePort\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">3</span>-zabbix-server-mysql.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zabbix-server-mysql\n  namespace: zabbix\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: zabbix-server-mysql\n  template:\n    metadata:\n      labels:\n        app: zabbix-server-mysql\n    spec:\n      containers:\n      - name: zabbix-server-mysql\n        image: zabbix/zabbix-server-mysql:ubuntu-6.0-latest\n        ports:\n        - containerPort: 10051\n        env:\n        - name: DB_SERVER_HOST\n          value: \"mariadb.default.svc.cluster.local\"\n        - name: DB_SERVER_PORT\n          value: \"3306\"\n        - name: MYSQL_DATABASE\n          value: \"zabbix\"\n        - name: MYSQL_USER\n          value: \"zabbix\"\n        - name: MYSQL_PASSWORD\n          value: \"4GtJvRS%La76iB\"\n        - name: MYSQL_ROOT_PASSWORD\n          value: \"4y6Cu%946*!TXY\"\n        - name: ZBX_WEBSERVICEURL\n          value: \"http://zabbix-web-service.zabbix.svc.cluster.local:10053/report\"\n        - name: ZBX_JAVAGATEWAY_ENABLE\n          value: \"true\"\n        - name: ZBX_JAVAGATEWAY\n          value: \"zabbix-java-gateway.zabbix.svc.cluster.local:10052\"\n        - name: ZBX_STARTREPORTWRITERS\n          value: \"2\"\n        - name: ZBX_TIMEOUT\n          value: \"30\"\n        - name: ZBX_UNREACHABLEPERIOD\n          value: \"120\"\n        - name: ZBX_CACHESIZE\n          value: \"512M\"\n        - name: ZBX_HISTORYCACHESIZE\n          value: \"128M\"\n        - name: ZBX_HISTORYINDEXCACHESIZE\n          value: \"128M\"\n        - name: ZBX_TRENDCACHESIZE\n          value: \"128M\"\n        - name: ZBX_VALUECACHESIZE\n          value: \"256M\"\n        volumeMounts:\n        - name: zabbix-data\n          mountPath: /usr/lib/zabbix\n          subPath: zabbix-scripts\n        - name: localtime\n          mountPath: /etc/localtime\n          readOnly: true\n      - name: zabbix-agent\n        image: zabbix/zabbix-agent:ubuntu-6.0-latest\n        imagePullPolicy: IfNotPresent\n        env:\n        - name: ZBX_HOSTNAME\n          value: \"Zabbix server\"\n        - name: ZBX_SERVER_HOST\n          value: \"127.0.0.1\"\n        - name: ZBX_STARTAGENTS\n          value: \"3\"\n        - name: ZBX_UNSAFEUSERPARAMETERS\n          value: \"1\"\n        - name: ZBX_TIMEOUT\n          value: \"10\"\n        ports:\n        - containerPort: 10050\n          name: zabbix-agent\n          protocol: TCP\n      volumes:\n      - name: localtime\n        hostPath:\n          path: /etc/localtime\n      - name: zabbix-data\n        persistentVolumeClaim:\n          claimName: zabbix-pvc\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-server-mysql\n  namespace: zabbix\nspec:\n  selector:\n    app: zabbix-server-mysql\n  ports:\n  - name: zabbix-server\n    port: 10051\n    targetPort: 10051\n    nodePort: 30051\n  type: NodePort\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-server-agent\n  namespace: zabbix\nspec:\n  selector:\n    app: zabbix-server-mysql\n  ports:\n  - name: zabbix-agent\n    port: 10050\n    targetPort: 10050\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">4</span>-zabbix-web-nginx-mysql.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zabbix-web-nginx-mysql\n  namespace: zabbix\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: zabbix-web-nginx-mysql\n  template:\n    metadata:\n      labels:\n        app: zabbix-web-nginx-mysql\n    spec:\n      containers:\n      - name: zabbix-web-nginx-mysql\n        image: zabbix/zabbix-web-nginx-mysql:ubuntu-6.0-latest\n        ports:\n        - containerPort: 8443\n        - containerPort: 8080\n        env:\n        - name: DB_SERVER_HOST\n          value: \"mariadb.default.svc.cluster.local\"\n        - name: DB_SERVER_PORT\n          value: \"3306\"\n        - name: MYSQL_DATABASE\n          value: \"zabbix\"\n        - name: MYSQL_USER\n          value: \"zabbix\"\n        - name: MYSQL_PASSWORD\n          value: \"4GtJvRS%La76iB\"\n        - name: MYSQL_ROOT_PASSWORD\n          value: \"4y6Cu%946*!TXY\"\n        - name: ZBX_SERVER_HOST\n          value: \"zabbix-server-mysql.zabbix.svc.cluster.local\"\n        - name: PHP_TZ\n          value: \"Asia/Shanghai\"\n        volumeMounts:\n        - name: localtime\n          mountPath: /etc/localtime\n          readOnly: true\n        - name: zabbix-data\n          mountPath: /usr/share/zabbix/assets/fonts/DejaVuSans.ttf\n          subPath: DejaVuSans.ttf\n      volumes:\n      - name: localtime\n        hostPath:\n          path: /etc/localtime\n      - name: zabbix-data\n        persistentVolumeClaim:\n          claimName: zabbix-pvc\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-web-nginx-mysql\n  namespace: zabbix\nspec:\n  selector:\n    app: zabbix-web-nginx-mysql\n  ports:\n  - name: zabbix-front\n    port: 8080\n    targetPort: 8080\n    nodePort: 30080\n  type: NodePort\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">5</span>-zabbix-java-gateway.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zabbix-java-gateway\n  namespace: zabbix\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: zabbix-java-gateway\n  template:\n    metadata:\n      labels:\n        app: zabbix-java-gateway\n    spec:\n      containers:\n      - name: zabbix-java-gateway\n        image: zabbix/zabbix-java-gateway:ubuntu-6.0-latest\n        ports:\n        - containerPort: 10052\n        volumeMounts:\n        - name: localtime\n          mountPath: /etc/localtime\n          readOnly: true\n      volumes:\n      - name: localtime\n        hostPath:\n          path: /etc/localtime\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-java-gateway\n  namespace: zabbix\nspec:\n  selector:\n    app: zabbix-java-gateway\n  ports:\n  - name: zabbix-java-gateway\n    port: 10052\n    targetPort: 10052\n    nodePort: 30052\n  type: NodePort\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"13-5-应用\"><a href=\"#13-5-应用\" class=\"headerlink\" title=\"13.5 应用\"></a>13.5 应用</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">0</span>-namespace.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">1</span>-pvc.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-zabbix-web-service.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">3</span>-zabbix-server-mysql.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">4</span>-zabbix-web-nginx-mysql.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">5</span>-zabbix-java-gateway.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"13-6-复制字体进pvc\"><a href=\"#13-6-复制字体进pvc\" class=\"headerlink\" title=\"13.6  复制字体进pvc\"></a>13.6  复制字体进pvc</h2><p><img src=\"/_v_images/20230303111056501_27202.png\"></p>\n<p>附件：<br><a href=\"_v_attachments/20230225224217873_1139/DejaVuSans.ttf\">DejaVuSans.ttf</a></p>\n<h2 id=\"13-7-各物理节点部署agent\"><a href=\"#13-7-各物理节点部署agent\" class=\"headerlink\" title=\"13.7 各物理节点部署agent\"></a>13.7 各物理节点部署agent</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token parameter variable\">-y</span> remove epel-release zabbix-release\n<span class=\"token function\">cat</span> <span class=\"token operator\">></span> /etc/yum.repos.d/zabbix.repo  <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">'EOF'\n[zabbix]\nname=Zabbix Official Repository - $basearch\nbaseurl=http://mirrors.cloud.tencent.com/zabbix/zabbix/6.0/rhel/7/$basearch/\nenabled=1\ngpgcheck=0\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX-A14FE591\n\n[zabbix-debuginfo]\nname=Zabbix Official Repository debuginfo - $basearch\nbaseurl=http://mirrors.cloud.tencent.com/zabbix/zabbix/6.0/rhel/7/$basearch/debuginfo/\nenabled=0\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX-A14FE591\ngpgcheck=1\n\n[zabbix-non-supported]\nname=Zabbix Official Repository non-supported - $basearch\nbaseurl=http://mirrors.cloud.tencent.com/zabbix/non-supported/rhel/7/$basearch/\nenabled=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX\ngpgcheck=0\nEOF</span>\n\n<span class=\"token function\">cat</span> <span class=\"token operator\">></span> /etc/yum.repos.d/zabbix-agent2-plugins.repo <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">'EOF'\n[zabbix-agent2-plugins]\nname=Zabbix Official Repository (Agent2 Plugins) - $basearch\nbaseurl=http://mirrors.cloud.tencent.com/zabbix/zabbix-agent2-plugins/1/rhel/7/$basearch/\nenabled=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX\ngpgcheck=0\nEOF</span>\n\nyum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> zabbix-agent2\n\n<span class=\"token comment\">#替换参数，ServerActive指向zabbix server地址200.0.1.90:30051</span>\n<span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s@^Server=127.0.0.1@#Server=127.0.0.1@'</span> /etc/zabbix/zabbix_agent2.conf\n<span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s@^ServerActive=127.0.0.1@ServerActive=200.0.1.90:30051@'</span> /etc/zabbix/zabbix_agent2.conf\n<span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s@^Hostname=Zabbix server@#Hostname=Zabbix server@'</span> /etc/zabbix/zabbix_agent2.conf\n<span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s@^# HostnameItem=system.hostname@# HostnameItem=system.hostname\\n\\nHostnameItem=system.hostname@'</span> /etc/zabbix/zabbix_agent2.conf\n<span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s@^# HostMetadataItem=@# HostMetadataItem=\\n\\nHostMetadataItem=system.uname@'</span> /etc/zabbix/zabbix_agent2.conf\n<span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s@^# UnsafeUserParameters=0@# UnsafeUserParameters=0\\n\\nUnsafeUserParameters=1@'</span> /etc/zabbix/zabbix_agent2.conf\n\nsystemctl restart zabbix-agent2\nsystemctl <span class=\"token builtin class-name\">enable</span> zabbix-agent2\n\n<span class=\"token function\">tail</span> <span class=\"token parameter variable\">-f</span> /var/log/zabbix/zabbix_agent2.log<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"13-8-设置zabbix自动发现\"><a href=\"#13-8-设置zabbix自动发现\" class=\"headerlink\" title=\"13.8 设置zabbix自动发现\"></a>13.8 设置zabbix自动发现</h2><p>![](_v_images&#x2F;20230303115029819_18034.png &#x3D;1216x)</p>\n<h2 id=\"13-9-修复默认\"><a href=\"#13-9-修复默认\" class=\"headerlink\" title=\"13.9 修复默认\"></a>13.9 修复默认</h2><p>![](_v_images&#x2F;20230305233258302_30922.png &#x3D;853x)</p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}},"cover":"/img/default_cover/geomeric5.png","cover_type":"img","excerpt":"","more":"<h1 id=\"系统初始化\"><a href=\"#系统初始化\" class=\"headerlink\" title=\"系统初始化\"></a>系统初始化</h1><h2 id=\"1-安装Debian11初始化文档初始化\"><a href=\"#1-安装Debian11初始化文档初始化\" class=\"headerlink\" title=\"1.安装Debian11初始化文档初始化\"></a>1.安装Debian11初始化文档初始化</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#必装</span>\n<span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> conntrack ipset socat ebtables ipvsadm\n<span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"一、k8s集群部署\"><a href=\"#一、k8s集群部署\" class=\"headerlink\" title=\"一、k8s集群部署\"></a>一、k8s集群部署</h1><h2 id=\"1-安装kubekey\"><a href=\"#1-安装kubekey\" class=\"headerlink\" title=\"1.安装kubekey\"></a>1.安装kubekey</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">KKZONE</span><span class=\"token operator\">=</span>cn\n<span class=\"token function\">wget</span> https://github.com/kubesphere/kubekey/releases/download/v3.0.13/kubekey-v3.0.13-linux-amd64.tar.gz\n<span class=\"token function\">tar</span> <span class=\"token parameter variable\">-xf</span> kubekey-v3.0.13-linux-amd64.tar.gz\n<span class=\"token function\">mv</span> kk /usr/local/bin/\n\n<span class=\"token comment\">#查看支持k8s版本</span>\nkk version --show-supported-k8s<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"2-编辑配置文件\"><a href=\"#2-编辑配置文件\" class=\"headerlink\" title=\"2.编辑配置文件\"></a>2.编辑配置文件</h2><blockquote>\n<p>参考：<a href=\"https://github.com/kubesphere/kubekey/blob/master/README_zh-CN.md\">https://github.com/kubesphere/kubekey/blob/master/README_zh-CN.md</a></p>\n</blockquote>\n<p>修改对应IP账号密码<br><code>config-v1.24.7-online.yaml</code></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> kubekey.kubesphere.io/v1alpha2\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Cluster\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> k8s<span class=\"token punctuation\">-</span>jy\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">&#123;</span><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> cn098<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">address</span><span class=\"token punctuation\">:</span> 200.0.0.98<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">internalAddress</span><span class=\"token punctuation\">:</span> 200.0.0.98<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> root<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"ycsc_2023\"</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">&#123;</span><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> cn099<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">address</span><span class=\"token punctuation\">:</span> 200.0.0.99<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">internalAddress</span><span class=\"token punctuation\">:</span> 200.0.0.99<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> root<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"ycsc_2023\"</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">&#123;</span><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> cn100<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">address</span><span class=\"token punctuation\">:</span> 200.0.0.100<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">internalAddress</span><span class=\"token punctuation\">:</span> 200.0.0.100<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> root<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"ycsc_2023\"</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">&#123;</span><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gpu002<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">address</span><span class=\"token punctuation\">:</span> 200.0.241.2<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">internalAddress</span><span class=\"token punctuation\">:</span> 200.0.241.2<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> root<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"ycsc_2023\"</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token key atrule\">roleGroups</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">etcd</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> cn098\n    <span class=\"token punctuation\">-</span> cn099\n    <span class=\"token punctuation\">-</span> cn100\n    <span class=\"token key atrule\">control-plane</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> cn098\n    <span class=\"token punctuation\">-</span> cn099\n    <span class=\"token punctuation\">-</span> cn100\n    <span class=\"token key atrule\">worker</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> cn098\n    <span class=\"token punctuation\">-</span> cn099\n    <span class=\"token punctuation\">-</span> cn100\n    <span class=\"token punctuation\">-</span> gpu002\n  <span class=\"token key atrule\">controlPlaneEndpoint</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\">## Internal loadbalancer for apiservers</span>\n    <span class=\"token key atrule\">internalLoadbalancer</span><span class=\"token punctuation\">:</span> kube<span class=\"token punctuation\">-</span>vip\n\n    <span class=\"token key atrule\">domain</span><span class=\"token punctuation\">:</span> lb.cluster.local\n    <span class=\"token key atrule\">address</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"200.0.1.90\"</span>\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">6443</span>\n  <span class=\"token key atrule\">kubernetes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> v1.24.7\n    <span class=\"token key atrule\">clusterName</span><span class=\"token punctuation\">:</span> cluster.local\n    <span class=\"token key atrule\">autoRenewCerts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">containerManager</span><span class=\"token punctuation\">:</span> containerd\n  <span class=\"token key atrule\">etcd</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> kubeadm\n  <span class=\"token key atrule\">network</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span> calico\n    <span class=\"token key atrule\">kubePodsCIDR</span><span class=\"token punctuation\">:</span> 10.233.64.0/18\n    <span class=\"token key atrule\">kubeServiceCIDR</span><span class=\"token punctuation\">:</span> 10.233.0.0/18\n    <span class=\"token comment\">## multus support. https://github.com/k8snetworkplumbingwg/multus-cni</span>\n    <span class=\"token key atrule\">multusCNI</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">enabled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">registry</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">privateRegistry</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token key atrule\">namespaceOverride</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token key atrule\">registryMirrors</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">insecureRegistries</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token key atrule\">addons</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"4-部署\"><a href=\"#4-部署\" class=\"headerlink\" title=\"4.部署\"></a>4.部署</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kk create cluster <span class=\"token parameter variable\">-f</span> config-v1.24.7-online.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"5-安装-bash-completion-可选\"><a href=\"#5-安装-bash-completion-可选\" class=\"headerlink\" title=\"5.安装 bash-completion(可选)\"></a>5.安装 bash-completion(可选)</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 安装 bash-completion</span>\n<span class=\"token function\">apt</span> <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> bash-completion\n\n<span class=\"token comment\"># 将 completion 脚本添加到你的 ~/.bashrc 文件</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'source &lt;(kubectl completion bash)'</span> <span class=\"token operator\">>></span>~/.bashrc\n\n<span class=\"token comment\"># 将 completion 脚本添加到 /etc/bash_completion.d 目录</span>\nkubectl completion <span class=\"token function\">bash</span> <span class=\"token operator\">></span>/etc/bash_completion.d/kubectl\n\n<span class=\"token comment\">#重启生效</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"7-对接NFS存储-可选\"><a href=\"#7-对接NFS存储-可选\" class=\"headerlink\" title=\"7. 对接NFS存储(可选)\"></a>7. 对接NFS存储(可选)</h2><h3 id=\"7-1-格式化硬盘，并且设置共享\"><a href=\"#7-1-格式化硬盘，并且设置共享\" class=\"headerlink\" title=\"7.1 格式化硬盘，并且设置共享\"></a>7.1 格式化硬盘，并且设置共享</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">\n<span class=\"token comment\">#格式化硬盘为xfs格式</span>\nmkfs.xfs /dev/sdb\n<span class=\"token function\">mkdir</span> /opt/nfs-data<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>fstab中设置自动挂载</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">#&#x2F;dev&#x2F;sdb\nUUID&#x3D;7a8c2445-7103-4591-9b73-2db3757a8e6e\t&#x2F;opt&#x2F;nfs-data\txfs\tdefaults\t0 0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>挂载确认格式、uuid、及挂载位置</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mount -a\nlsblk -f<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"7-2-配置NFS服务器，允许Kubernetes节点访问NFS共享\"><a href=\"#7-2-配置NFS服务器，允许Kubernetes节点访问NFS共享\" class=\"headerlink\" title=\"7.2 配置NFS服务器，允许Kubernetes节点访问NFS共享\"></a>7.2 配置NFS服务器，允许Kubernetes节点访问NFS共享</h3><p>将以下内容添加到&#x2F;etc&#x2F;exports文件中：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">/opt/nfs-data *<span class=\"token punctuation\">(</span>rw,sync,no_root_squash,no_subtree_check<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>重启NFS服务使配置生效：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#创建相关文件夹</span>\n<span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> /opt/nfs-data/k8s-sc/retain\n<span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> /opt/nfs-data/k8s-sc/delete\n\n<span class=\"token comment\">#启动服务，设置自启</span>\nsystemctl restart nfs-server\nsystemctl <span class=\"token builtin class-name\">enable</span> nfs-server\n\n<span class=\"token comment\">#在各节点上运行测试通信</span>\nshowmount <span class=\"token parameter variable\">-e</span> cn098<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"7-3-k8s安装nfs存储类插件\"><a href=\"#7-3-k8s安装nfs存储类插件\" class=\"headerlink\" title=\"7.3 k8s安装nfs存储类插件\"></a>7.3 k8s安装nfs存储类插件</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> nfs <span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">cd</span> nfs\n<span class=\"token function\">git</span> clone https://github.com/kubernetes-csi/csi-driver-nfs.git\n\n<span class=\"token builtin class-name\">cd</span> csi-driver-nfs\n\n<span class=\"token comment\">#相关镜像代理，替换tag下载（可选）</span>\n\nctr <span class=\"token parameter variable\">-n</span> k8s.io i pull k8s.dockerproxy.com/sig-storage/csi-node-driver-registrar:v2.9.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i pull k8s.dockerproxy.com/sig-storage/csi-provisioner:v3.6.1\nctr <span class=\"token parameter variable\">-n</span> k8s.io i pull k8s.dockerproxy.com/sig-storage/csi-snapshotter:v6.3.1\nctr <span class=\"token parameter variable\">-n</span> k8s.io i pull k8s.dockerproxy.com/sig-storage/livenessprobe:v2.11.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i pull k8s.dockerproxy.com/sig-storage/nfsplugin:v4.5.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i pull k8s.dockerproxy.com/sig-storage/snapshot-controller:v6.3.1\n\nctr <span class=\"token parameter variable\">-n</span> k8s.io i tag k8s.dockerproxy.com/sig-storage/csi-node-driver-registrar:v2.9.0 registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.9.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i tag k8s.dockerproxy.com/sig-storage/csi-provisioner:v3.6.1 registry.k8s.io/sig-storage/csi-provisioner:v3.6.1\nctr <span class=\"token parameter variable\">-n</span> k8s.io i tag k8s.dockerproxy.com/sig-storage/csi-snapshotter:v6.3.1 registry.k8s.io/sig-storage/csi-snapshotter:v6.3.1\nctr <span class=\"token parameter variable\">-n</span> k8s.io i tag k8s.dockerproxy.com/sig-storage/livenessprobe:v2.11.0 registry.k8s.io/sig-storage/livenessprobe:v2.11.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i tag k8s.dockerproxy.com/sig-storage/nfsplugin:v4.5.0 registry.k8s.io/sig-storage/nfsplugin:v4.5.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i tag k8s.dockerproxy.com/sig-storage/snapshot-controller:v6.3.1 registry.k8s.io/sig-storage/snapshot-controller:v6.3.1\n\nctr <span class=\"token parameter variable\">-n</span> k8s.io i <span class=\"token function\">rm</span> k8s.dockerproxy.com/sig-storage/csi-node-driver-registrar:v2.9.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i <span class=\"token function\">rm</span> k8s.dockerproxy.com/sig-storage/csi-provisioner:v3.6.1\nctr <span class=\"token parameter variable\">-n</span> k8s.io i <span class=\"token function\">rm</span> k8s.dockerproxy.com/sig-storage/csi-snapshotter:v6.3.1\nctr <span class=\"token parameter variable\">-n</span> k8s.io i <span class=\"token function\">rm</span> k8s.dockerproxy.com/sig-storage/livenessprobe:v2.11.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i <span class=\"token function\">rm</span> k8s.dockerproxy.com/sig-storage/nfsplugin:v4.5.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i <span class=\"token function\">rm</span> k8s.dockerproxy.com/sig-storage/snapshot-controller:v6.3.1\n\n./deploy/install-driver.sh v4.5.0 <span class=\"token builtin class-name\">local</span>\n\n<span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">..</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"7-4-创建存储类\"><a href=\"#7-4-创建存储类\" class=\"headerlink\" title=\"7.4 创建存储类\"></a>7.4 创建存储类</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> nfs-sc-delete.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> storage.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> StorageClass\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nfs<span class=\"token punctuation\">-</span>delete\n<span class=\"token key atrule\">provisioner</span><span class=\"token punctuation\">:</span> nfs.csi.k8s.io\n<span class=\"token key atrule\">parameters</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span> 200.0.0.98\n  <span class=\"token key atrule\">share</span><span class=\"token punctuation\">:</span> /opt/nfs<span class=\"token punctuation\">-</span>data/k8s<span class=\"token punctuation\">-</span>sc/delete\n  <span class=\"token comment\"># csi.storage.k8s.io/provisioner-secret is only needed for providing mountOptions in DeleteVolume</span>\n  <span class=\"token comment\"># csi.storage.k8s.io/provisioner-secret-name: \"mount-options\"</span>\n  <span class=\"token comment\"># csi.storage.k8s.io/provisioner-secret-namespace: \"default\"</span>\n<span class=\"token key atrule\">reclaimPolicy</span><span class=\"token punctuation\">:</span> Delete\n<span class=\"token key atrule\">allowVolumeExpansion</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">True</span>\n<span class=\"token key atrule\">volumeBindingMode</span><span class=\"token punctuation\">:</span> Immediate\n<span class=\"token comment\">#mountOptions:</span>\n<span class=\"token comment\">#  - nfsvers=4.1</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> nfs-sc-retain.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> storage.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> StorageClass\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nfs<span class=\"token punctuation\">-</span>retain\n<span class=\"token key atrule\">provisioner</span><span class=\"token punctuation\">:</span> nfs.csi.k8s.io\n<span class=\"token key atrule\">parameters</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span> 200.0.0.98\n  <span class=\"token key atrule\">share</span><span class=\"token punctuation\">:</span> /opt/nfs<span class=\"token punctuation\">-</span>data/k8s<span class=\"token punctuation\">-</span>sc/retain\n  <span class=\"token comment\"># csi.storage.k8s.io/provisioner-secret is only needed for providing mountOptions in DeleteVolume</span>\n  <span class=\"token comment\"># csi.storage.k8s.io/provisioner-secret-name: \"mount-options\"</span>\n  <span class=\"token comment\"># csi.storage.k8s.io/provisioner-secret-namespace: \"default\"</span>\n<span class=\"token key atrule\">reclaimPolicy</span><span class=\"token punctuation\">:</span> Retain\n<span class=\"token key atrule\">allowVolumeExpansion</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">True</span>\n<span class=\"token key atrule\">volumeBindingMode</span><span class=\"token punctuation\">:</span> Immediate\n<span class=\"token comment\">#mountOptions:</span>\n<span class=\"token comment\">#  - nfsvers=4.1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"7-5-使用kubectl-apply命令创建存储类：\"><a href=\"#7-5-使用kubectl-apply命令创建存储类：\" class=\"headerlink\" title=\"7.5 使用kubectl apply命令创建存储类：\"></a>7.5 使用kubectl apply命令创建存储类：</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-f</span> nfs-sc-delete.yaml\nkubectl apply <span class=\"token parameter variable\">-f</span> nfs-sc-retain.yaml\n\nkubectl get sc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"7-6-设置默认存储类：\"><a href=\"#7-6-设置默认存储类：\" class=\"headerlink\" title=\"7.6 设置默认存储类：\"></a>7.6 设置默认存储类：</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#标记</span>\nkubectl patch storageclass nfs-retain <span class=\"token parameter variable\">-p</span> <span class=\"token string\">'&#123;\"metadata\": &#123;\"annotations\":&#123;\"storageclass.kubernetes.io/is-default-class\":\"true\"&#125;&#125;&#125;'</span>\n\n<span class=\"token comment\">#取消</span>\nkubectl patch storageclass nfs-retain <span class=\"token parameter variable\">-p</span> <span class=\"token string\">'&#123;\"metadata\": &#123;\"annotations\":&#123;\"storageclass.kubernetes.io/is-default-class\":\"false\"&#125;&#125;&#125;'</span>\n\nkubectl get storageclass\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"二、KubeVirt部署\"><a href=\"#二、KubeVirt部署\" class=\"headerlink\" title=\"二、KubeVirt部署\"></a>二、KubeVirt部署</h1><blockquote>\n<p>目前era限制版本为0.56.0版本</p>\n</blockquote>\n<h2 id=\"2-1-验证服务器是否支持虚拟化\"><a href=\"#2-1-验证服务器是否支持虚拟化\" class=\"headerlink\" title=\"2.1 验证服务器是否支持虚拟化\"></a>2.1 验证服务器是否支持虚拟化</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">virt-host-validate qemu\n\n\n  QEMU: Checking <span class=\"token keyword\">for</span> hardware virtualization                                 <span class=\"token builtin class-name\">:</span> PASS\n  QEMU: Checking <span class=\"token keyword\">if</span> device /dev/kvm exists                                   <span class=\"token builtin class-name\">:</span> PASS\n  QEMU: Checking <span class=\"token keyword\">if</span> device /dev/kvm is accessible                            <span class=\"token builtin class-name\">:</span> PASS\n  QEMU: Checking <span class=\"token keyword\">if</span> device /dev/vhost-net exists                             <span class=\"token builtin class-name\">:</span> PASS\n  QEMU: Checking <span class=\"token keyword\">if</span> device /dev/net/tun exists                               <span class=\"token builtin class-name\">:</span> PASS\n  <span class=\"token builtin class-name\">.</span> <span class=\"token builtin class-name\">.</span> <span class=\"token builtin class-name\">.</span>\n\n\n<span class=\"token comment\">#若未全部pass，请检查BIOS中开启VT-d和虚拟化支持</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"2-2-安装\"><a href=\"#2-2-安装\" class=\"headerlink\" title=\"2.2 安装\"></a>2.2 安装</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> kubevirt <span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">cd</span> kubevirt\n<span class=\"token comment\"># Deploy the KubeVirt operator</span>\n<span class=\"token function\">wget</span> https://github.com/kubevirt/kubevirt/releases/download/v0.56.0/kubevirt-operator.yaml <span class=\"token parameter variable\">-O</span> <span class=\"token number\">1</span>-kubevirt-operator.yaml\nkubectl apply <span class=\"token parameter variable\">-f</span> <span class=\"token number\">1</span>-kubevirt-operator.yaml\n<span class=\"token comment\"># Create the KubeVirt CR (instance deployment request) which triggers the actual installation</span>\n<span class=\"token function\">wget</span> https://github.com/kubevirt/kubevirt/releases/download/v0.56.0/kubevirt-cr.yaml <span class=\"token parameter variable\">-O</span> <span class=\"token number\">2</span>-kubevirt-cr.yaml\nkubectl apply <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-kubevirt-cr.yaml\n<span class=\"token comment\"># wait until all KubeVirt components are up</span>\nkubectl <span class=\"token parameter variable\">-n</span> kubevirt <span class=\"token function\">wait</span> kv kubevirt <span class=\"token parameter variable\">--for</span> <span class=\"token assign-left variable\">condition</span><span class=\"token operator\">=</span>Available<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"2-3-开启相关特性\"><a href=\"#2-3-开启相关特性\" class=\"headerlink\" title=\"2.3 开启相关特性\"></a>2.3 开启相关特性</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">\n<span class=\"token function\">cat</span> <span class=\"token operator\">></span> <span class=\"token number\">3</span>-kubevirt-enable-feature-gate.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">'EOF'\n---\napiVersion: kubevirt.io/v1\nkind: KubeVirt\nmetadata:\n  name: kubevirt\n  namespace: kubevirt\nspec:\n  configuration:\n    developerConfiguration:\n      featureGates:\n        - LiveMigration\n        - DataVolumes\n        - ExpandDisks\nEOF</span>\n\nkubectl apply <span class=\"token parameter variable\">-f</span> <span class=\"token number\">3</span>-kubevirt-enable-feature-gate.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"2-4-virtctl客户端工具安装\"><a href=\"#2-4-virtctl客户端工具安装\" class=\"headerlink\" title=\"2.4 virtctl客户端工具安装\"></a>2.4 virtctl客户端工具安装</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://github.com/kubevirt/kubevirt/releases/download/v0.56.0/virtctl-v0.56.0-linux-amd64 <span class=\"token parameter variable\">-O</span> /usr/local/bin/virtctl\n<span class=\"token function\">chmod</span> +x /usr/local/bin/virtctl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"2-5-卸载-可选\"><a href=\"#2-5-卸载-可选\" class=\"headerlink\" title=\"2.5 卸载(可选)\"></a>2.5 卸载(可选)</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl delete <span class=\"token parameter variable\">-n</span> kubevirt kubevirt kubevirt <span class=\"token parameter variable\">--wait</span><span class=\"token operator\">=</span>true <span class=\"token comment\"># --wait=true should anyway be default</span>\nkubectl delete apiservices v1.subresources.kubevirt.io <span class=\"token comment\"># this needs to be deleted to avoid stuck terminating namespaces</span>\nkubectl delete mutatingwebhookconfigurations virt-api-mutator <span class=\"token comment\"># not blocking but would be left over</span>\nkubectl delete validatingwebhookconfigurations virt-operator-validator <span class=\"token comment\"># not blocking but would be left over</span>\nkubectl delete validatingwebhookconfigurations virt-api-validator <span class=\"token comment\"># not blocking but would be left over</span>\nkubectl patch crd/kubevirts.kubevirt.io <span class=\"token parameter variable\">-p</span> <span class=\"token string\">'&#123;\"metadata\":&#123;\"finalizers\":[]&#125;&#125;'</span> <span class=\"token parameter variable\">--type</span><span class=\"token operator\">=</span>merge\nkubectl delete <span class=\"token parameter variable\">-f</span> <span class=\"token number\">1</span>-kubevirt-operator.yaml <span class=\"token parameter variable\">--wait</span><span class=\"token operator\">=</span>false<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"三、CDI部署\"><a href=\"#三、CDI部署\" class=\"headerlink\" title=\"三、CDI部署\"></a>三、CDI部署</h1><h2 id=\"3-1-安装-CDI\"><a href=\"#3-1-安装-CDI\" class=\"headerlink\" title=\"3.1 安装 CDI\"></a>3.1 安装 CDI</h2><blockquote>\n<p>目前era限制版本为1.52.0版本</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> cdi <span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">cd</span> cdi\n<span class=\"token function\">wget</span> https://github.com/kubevirt/containerized-data-importer/releases/download/v1.52.0/cdi-operator.yaml <span class=\"token parameter variable\">-O</span> <span class=\"token number\">1</span>-cdi-operator.yaml\nkubectl apply <span class=\"token parameter variable\">-f</span> <span class=\"token number\">1</span>-cdi-operator.yaml\n<span class=\"token function\">wget</span> https://github.com/kubevirt/containerized-data-importer/releases/download/v1.52.0/cdi-cr.yaml <span class=\"token parameter variable\">-O</span> <span class=\"token number\">2</span>-cdi-cr.yaml\nkubectl apply <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-cdi-cr.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"3-2-服务暴露\"><a href=\"#3-2-服务暴露\" class=\"headerlink\" title=\"3.2 服务暴露\"></a>3.2 服务暴露</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">></span> <span class=\"token number\">3</span>-expose-cdi-uploadproxy.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">'EOF'\napiVersion: v1\nkind: Service\nmetadata:\n  name: cdi-uploadproxy-nodeport\n  namespace: cdi\n  labels:\n    cdi.kubevirt.io: \"cdi-uploadproxy\"\nspec:\n  type: NodePort\n  ports:\n    - port: 443\n      targetPort: 8443\n      nodePort: 31001\n      protocol: TCP\n  selector:\n    cdi.kubevirt.io: cdi-uploadproxy\nEOF</span>\n\nkubectl apply <span class=\"token parameter variable\">-f</span> <span class=\"token number\">3</span>-expose-cdi-uploadproxy.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h1 id=\"四、GPU插件支持\"><a href=\"#四、GPU插件支持\" class=\"headerlink\" title=\"四、GPU插件支持\"></a>四、GPU插件支持</h1><p><a href=\"https://github.com/NVIDIA/kubevirt-gpu-device-plugin/\">https://github.com/NVIDIA/kubevirt-gpu-device-plugin/</a></p>\n<h2 id=\"4-1-安装\"><a href=\"#4-1-安装\" class=\"headerlink\" title=\"4.1 安装\"></a>4.1 安装</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> kubevirt\n<span class=\"token function\">mkdir</span> gpu <span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">cd</span> gpu\n<span class=\"token function\">wget</span> https://github.com/NVIDIA/kubevirt-gpu-device-plugin/archive/refs/tags/v1.2.4.tar.gz\n<span class=\"token function\">tar</span> <span class=\"token parameter variable\">-xf</span> v1.2.4.tar.gz\n<span class=\"token function\">cp</span> kubevirt-gpu-device-plugin-1.2.4/manifests/nvidia-kubevirt-gpu-device-plugin.yaml <span class=\"token number\">0</span>-vidia-kubevirt-gpu-device-plugin.yaml\nkubectl apply <span class=\"token parameter variable\">-f</span> <span class=\"token number\">0</span>-vidia-kubevirt-gpu-device-plugin.yaml\n\n<span class=\"token comment\">#使用以下命令确定 GPU 的供应商 ID 和设备 ID</span>\nlspci <span class=\"token parameter variable\">-nn</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-i</span> nvidia<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"4-2-直通模式\"><a href=\"#4-2-直通模式\" class=\"headerlink\" title=\"4.2 直通模式\"></a>4.2 直通模式</h2><h3 id=\"1-在KVM主机上启用IOMMU和黑名单新驱动程序\"><a href=\"#1-在KVM主机上启用IOMMU和黑名单新驱动程序\" class=\"headerlink\" title=\"1. 在KVM主机上启用IOMMU和黑名单新驱动程序\"></a>1. 在KVM主机上启用IOMMU和黑名单新驱动程序</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">vim</span> /etc/default/grub\n<span class=\"token comment\"># line 6: add (if AMD CPU, add [amd_iommu=on])</span>\n<span class=\"token assign-left variable\">GRUB_TIMEOUT</span><span class=\"token operator\">=</span><span class=\"token number\">5</span>\n<span class=\"token assign-left variable\">GRUB_DISTRIBUTOR</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">sed</span> <span class=\"token string\">'s, release .*$,,g'</span> /etc/system-release<span class=\"token variable\">)</span></span>\"</span>\n<span class=\"token assign-left variable\">GRUB_DEFAULT</span><span class=\"token operator\">=</span>saved\n<span class=\"token assign-left variable\">GRUB_DISABLE_SUBMENU</span><span class=\"token operator\">=</span>true\n<span class=\"token assign-left variable\">GRUB_TERMINAL_OUTPUT</span><span class=\"token operator\">=</span><span class=\"token string\">\"console\"</span>\n<span class=\"token assign-left variable\">GRUB_CMDLINE_LINUX</span><span class=\"token operator\">=</span><span class=\"token string\">\"rd.lvm.lv=centos/root rd.lvm.lv=centos/swap rhgb intel_iommu=on quiet iommu=pt modprobe.blacklist=nouveau\"</span>\n<span class=\"token assign-left variable\">GRUB_DISABLE_RECOVERY</span><span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>将“intel_iommu&#x3D;on modprobe.blacklist&#x3D;nouveau”附加到“GRUB_CMDLINE_LINUX”</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">grub2-mkconfig <span class=\"token parameter variable\">-o</span> /boot/grub2/grub.cfg\ngrub2-mkconfig <span class=\"token parameter variable\">-o</span> /boot/efi/EFI/centos/grub.cfg\n<span class=\"token function\">reboot</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>重新启动后，使用以下命令验证是否启用了 IOMMU</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">dmesg</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-E</span> <span class=\"token string\">\"DMAR|IOMMU\"</span>\n<span class=\"token comment\">#验证新版是否已禁用</span>\n<span class=\"token function\">dmesg</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-i</span> nouveau<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-启用-vfio-pci-内核模块\"><a href=\"#2-启用-vfio-pci-内核模块\" class=\"headerlink\" title=\"2. 启用 vfio-pci 内核模块\"></a>2. 启用 vfio-pci 内核模块</h3><p>使用以下命令确定 GPU 的供应商 ID 和设备 ID</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lspci <span class=\"token parameter variable\">-nn</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-i</span> nvidia<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>在下面的示例中，供应商 ID 为 10de，设备 ID 为 1b38</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ lspci <span class=\"token parameter variable\">-nn</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-i</span> nvidia\n04:00.0 3D controller <span class=\"token punctuation\">[</span>0302<span class=\"token punctuation\">]</span>: NVIDIA Corporation GP102GL <span class=\"token punctuation\">[</span>Tesla P40<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>10de:1b38<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>rev a1<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>更新 VFIO 配置</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"options vfio-pci ids=vendor-ID:device-ID\"</span> <span class=\"token operator\">></span> /etc/modprobe.d/vfio.conf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>考虑到供应商 ID 为 10de，设备 ID 为 1b38，命令将如下所示</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"options vfio-pci ids=10de:20f1,10de:1b38\"</span> <span class=\"token operator\">></span> /etc/modprobe.d/vfio.conf\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>更新配置以在重新加载后加载 VFIO-PCI 模块</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'vfio-pci'</span> <span class=\"token operator\">></span> /etc/modules-load.d/vfio-pci.conf\n<span class=\"token function\">reboot</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>验证是否已为 GPU 加载 VFIO-PCI 驱动程序</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lspci <span class=\"token parameter variable\">-nnk</span> <span class=\"token parameter variable\">-d</span> 10de:<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>下面的输出显示“正在使用的内核驱动程序”是“vfio-pci”</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@gpu002 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># lspci -nnk -d 10de:</span>\n<span class=\"token number\">34</span>:00.0 3D controller <span class=\"token punctuation\">[</span>0302<span class=\"token punctuation\">]</span>: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:20b5<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>rev a1<span class=\"token punctuation\">)</span>\n\tSubsystem: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:1533<span class=\"token punctuation\">]</span>\n\tKernel driver <span class=\"token keyword\">in</span> use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n<span class=\"token number\">35</span>:00.0 3D controller <span class=\"token punctuation\">[</span>0302<span class=\"token punctuation\">]</span>: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:20b5<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>rev a1<span class=\"token punctuation\">)</span>\n\tSubsystem: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:1533<span class=\"token punctuation\">]</span>\n\tKernel driver <span class=\"token keyword\">in</span> use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n<span class=\"token number\">36</span>:00.0 3D controller <span class=\"token punctuation\">[</span>0302<span class=\"token punctuation\">]</span>: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:20b5<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>rev a1<span class=\"token punctuation\">)</span>\n\tSubsystem: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:1533<span class=\"token punctuation\">]</span>\n\tKernel driver <span class=\"token keyword\">in</span> use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n<span class=\"token number\">37</span>:00.0 3D controller <span class=\"token punctuation\">[</span>0302<span class=\"token punctuation\">]</span>: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:20b5<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>rev a1<span class=\"token punctuation\">)</span>\n\tSubsystem: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:1533<span class=\"token punctuation\">]</span>\n\tKernel driver <span class=\"token keyword\">in</span> use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n9b:00.0 3D controller <span class=\"token punctuation\">[</span>0302<span class=\"token punctuation\">]</span>: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:20b5<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>rev a1<span class=\"token punctuation\">)</span>\n\tSubsystem: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:1533<span class=\"token punctuation\">]</span>\n\tKernel driver <span class=\"token keyword\">in</span> use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n9c:00.0 3D controller <span class=\"token punctuation\">[</span>0302<span class=\"token punctuation\">]</span>: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:20b5<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>rev a1<span class=\"token punctuation\">)</span>\n\tSubsystem: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:1533<span class=\"token punctuation\">]</span>\n\tKernel driver <span class=\"token keyword\">in</span> use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n9d:00.0 3D controller <span class=\"token punctuation\">[</span>0302<span class=\"token punctuation\">]</span>: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:20b5<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>rev a1<span class=\"token punctuation\">)</span>\n\tSubsystem: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:1533<span class=\"token punctuation\">]</span>\n\tKernel driver <span class=\"token keyword\">in</span> use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n9e:00.0 3D controller <span class=\"token punctuation\">[</span>0302<span class=\"token punctuation\">]</span>: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:20b5<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>rev a1<span class=\"token punctuation\">)</span>\n\tSubsystem: NVIDIA Corporation Device <span class=\"token punctuation\">[</span>10de:1533<span class=\"token punctuation\">]</span>\n\tKernel driver <span class=\"token keyword\">in</span> use: vfio-pci\n\tKernel modules: nouveau, nvidia_drm, nvidia\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-校验节点gpu支持情况\"><a href=\"#3-校验节点gpu支持情况\" class=\"headerlink\" title=\"3. 校验节点gpu支持情况\"></a>3. 校验节点gpu支持情况</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> jq\nkubectl get <span class=\"token function\">node</span> gpu002 <span class=\"token parameter variable\">-o</span> json <span class=\"token operator\">|</span> jq <span class=\"token string\">'.status.allocatable'</span>\n\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token string\">\"cpu\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"63600m\"</span>,\n  <span class=\"token string\">\"devices.kubevirt.io/kvm\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"1k\"</span>,\n  <span class=\"token string\">\"devices.kubevirt.io/tun\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"1k\"</span>,\n  <span class=\"token string\">\"devices.kubevirt.io/vhost-net\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"1k\"</span>,\n  <span class=\"token string\">\"ephemeral-storage\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"434034624Ki\"</span>,\n  <span class=\"token string\">\"hugepages-1Gi\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"0\"</span>,\n  <span class=\"token string\">\"hugepages-2Mi\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"0\"</span>,\n  <span class=\"token string\">\"memory\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"1027098306574\"</span>,\n  <span class=\"token string\">\"nvidia.com/GA100_A100_PCIE_80GB\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"8\"</span>,\n  <span class=\"token string\">\"pods\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"110\"</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h2 id=\"4-3-声明GPU-Kubevirt-加入白名单\"><a href=\"#4-3-声明GPU-Kubevirt-加入白名单\" class=\"headerlink\" title=\"4.3.声明GPU,Kubevirt 加入白名单\"></a>4.3.声明GPU,Kubevirt 加入白名单</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#显卡名称查看</span>\nkubectl logs <span class=\"token parameter variable\">-f</span> <span class=\"token parameter variable\">-n</span> kube-system nvidia-kubevirt-gpu-dp-daemonset-*\nkubectl describe nodes <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> nvidia.com\n\n<span class=\"token function\">cp</span> kubevirt-gpu-device-plugin-1.2.0/examples/kubevirt-featuregate-cm.yaml <span class=\"token number\">1</span>-kubevirt-featuregate-cm.yaml\n\n<span class=\"token function\">vim</span> <span class=\"token number\">1</span>-kubevirt-featuregate-cm.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>修改设备相关对应关系：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> kubevirt.io/v1alpha3\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> KubeVirt\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> kubevirt\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> kubevirt\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">imagePullPolicy</span><span class=\"token punctuation\">:</span> IfNotPresent\n  <span class=\"token key atrule\">certificateRotateStrategy</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token key atrule\">configuration</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">permittedHostDevices</span><span class=\"token punctuation\">:</span>\n       <span class=\"token key atrule\">pciHostDevices</span><span class=\"token punctuation\">:</span>\n       <span class=\"token comment\"># whitelist the permitted devices here</span>\n       <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">pciVendorSelector</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"10DE:20B5\"</span>\n         <span class=\"token key atrule\">resourceName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"nvidia.com/GA100_A100_PCIE_80GB\"</span>\n         <span class=\"token key atrule\">externalResourceProvider</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n       <span class=\"token key atrule\">mediatedDevices</span><span class=\"token punctuation\">:</span>\n       <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">mdevNameSelector</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"GRID A100-1Q\"</span>\n         <span class=\"token key atrule\">resourceName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"nvidia.com/GRID_A100-1Q\"</span>\n    <span class=\"token key atrule\">imagePullPolicy</span><span class=\"token punctuation\">:</span> IfNotPresent\n    <span class=\"token key atrule\">developerConfiguration</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">featureGates</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> GPU\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>应用：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-f</span> <span class=\"token number\">1</span>-kubevirt-featuregate-cm.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>注意不可删除，可apply，删除会删除整个kubevirt</p>\n<h2 id=\"4-5-创建gpu虚机测试\"><a href=\"#4-5-创建gpu虚机测试\" class=\"headerlink\" title=\"4.5 创建gpu虚机测试\"></a>4.5 创建gpu虚机测试</h2><p><code>vim test-gpu.yaml</code></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> kubevirt.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> VirtualMachine\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> testvm\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">running</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">kubevirt.io/size</span><span class=\"token punctuation\">:</span> small\n        <span class=\"token key atrule\">kubevirt.io/domain</span><span class=\"token punctuation\">:</span> testvm\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">domain</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">devices</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">disks</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> containerdisk\n              <span class=\"token key atrule\">disk</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">bus</span><span class=\"token punctuation\">:</span> virtio\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> cloudinitdisk\n              <span class=\"token key atrule\">disk</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">bus</span><span class=\"token punctuation\">:</span> virtio\n          <span class=\"token key atrule\">gpus</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">deviceName</span><span class=\"token punctuation\">:</span> nvidia.com/GV100GL_TESLA_V100_PCIE_16GB\n              <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> gpu1\n\n          <span class=\"token key atrule\">interfaces</span><span class=\"token punctuation\">:</span>\n          <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> default\n            <span class=\"token key atrule\">masquerade</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n        <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> 64M\n      <span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> default\n        <span class=\"token key atrule\">pod</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n      <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> containerdisk\n          <span class=\"token key atrule\">containerDisk</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> quay.io/kubevirt/cirros<span class=\"token punctuation\">-</span>container<span class=\"token punctuation\">-</span>disk<span class=\"token punctuation\">-</span>demo\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> cloudinitdisk\n          <span class=\"token key atrule\">cloudInitNoCloud</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">userDataBase64</span><span class=\"token punctuation\">:</span> SGkuXG4=\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>启动</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-f</span> test-gpu.yaml\nkubectl get vm\nvirtctl start testvm\nvirtctl console testvm\n<span class=\"token comment\">#退出console</span>\nctrl+<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h1 id=\"五、MariaDB部署\"><a href=\"#五、MariaDB部署\" class=\"headerlink\" title=\"五、MariaDB部署\"></a>五、MariaDB部署</h1><h2 id=\"5-1-创建pvc\"><a href=\"#5-1-创建pvc\" class=\"headerlink\" title=\"5.1 创建pvc\"></a>5.1 创建pvc</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> mariadb <span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">cd</span> mariadb\n<span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">0</span>-pvc.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: mariadb-data\nspec:\n  accessModes:\n  - ReadWriteMany\n  resources:\n    requests:\n      storage: 100Gi\n  storageClassName: nfs-retain\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"5-2-创建配置文件\"><a href=\"#5-2-创建配置文件\" class=\"headerlink\" title=\"5.2 创建配置文件\"></a>5.2 创建配置文件</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">1</span>-configMap.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: mariadb-config\ndata:\n  my.cnf: |\n    [mysqld]\n\tdatadir = /var/lib/mysql\n\tsocket = /var/run/mysqld/mysqld.sock\n\tpid-file = /var/run/mysqld/mysqld.pid\n\n\t#user=mysql\n\n\tcharacter-set-server=utf8mb4\n\tcollation-server=utf8mb4_bin\n\n\tdefault-time-zone = '+8:00'\n\n\t#server-id\n\tserver_id=1\n\n\t#禁止名称解析\n\tskip_name_resolve=ON\n\n\t#不区分大小写\n\tlower_case_table_names = 1\n\n\t#最大连接数，当max_connections设置太小时（默认151），MySQL可能会报错Too many connections。\n\t#当max_connections设置太大时（1000以上），>操作系统可能忙于线程间的切换而失去响应。\n\t#每个连接都会消耗一定内存，最大连接数占上限连接数（show global status like 'Max_used_connections';）的85%左右，\n\t#如果发现比例在10%以下，MySQL服务器连接上线就设置得过高了。\n\t#Max_used_connections / max_connections = 0.85\n\tmax_connections = 2048\n\n\t#指mysql服务器端和客户端在一次传送数据包的过程当中最大允许的数据包大小。\n\t#max_allowed_packet 最大值是1G(1073741824)，如果设置超过1G，>查看最终生效结果也只有1G。\n\tmax_allowed_packet = 1G\n\n\t#当客户端断开之后，服务器处理此客户的线程将会缓存起来以响应下一个客户而不是销毁(前提是缓存数未达上限)\n\t#即可以重新利用保存在缓存中线程的数量，当断开连接时如果缓存中还有空间，那么客户端的线程将被放到缓存中，\n\t#如果线程重新被请求，那么请求>将从缓存中读取，\n\t#如果缓存中是空的或者是新的请求，那么这个线程将被重新创建，如果有很多新的线程，增加这个值可以改善系统性能。\n\t#根据并发连接数进行配置，这里假设并发连接数为 1000。\n\tthread_cache_size = 64\n\n\t#物理内存大小的70%-80%,如果服务器上只运行MySQL，则可以将此值增加到90%，这里假设服务器内存为 8GB。\n\tinnodb_buffer_pool_size = 6G\n\n\t# 增加 innodb_log_buffer_size，提高写入性能。\n\tinnodb_log_buffer_size = 16M\n\n\t# 设置innodb_io_capacity，并启用O_DIRECT，提高IO性能。\n\tinnodb_io_capacity = 2000\n\tinnodb_flush_method = O_DIRECT\n\n\t#innodb只读压缩\n\tinnodb_read_only_compressed = 0\n\n\t#innodb可以把每个表的数据单独保存。\n\tinnodb_file_per_table=ON\n\n\t#禁用或启用中继日志，只要不再需要，立即自动清除。默认值为 1（已启用）\n\trelay_log_purge = ON\n\t#定义relay_log的位置和名称，如果值为空，则默认位置在数据文件的目录，文件名为host_name-relay-bin.nnnnnn\n\trelay_log=relay-bin\n\t#定义relay_log_index的位置和名称\n\trelay_log_index=relay-bin.index\n\n\t#是否打开慢查询日志\n\tslow_query_log=ON\n\t#慢查询时间为5s，根据实际业务情况进行配置。\n\tlong_query_time = 5\n\t#慢查询文件位置，将日志文件放在独立的 SSD 盘上。\n\tslow-query-log-file=/var/lib/mysql/slow.log\n\n\t#binlog日志格式\n\tbinlog_format=ROW\n\t#启用二进制日志记录，指定文件名\n\tlog_bin=bin-log\n\t#启用二进制日志记录，指定文件名\n\tlog_bin_index=bin-log.index\n\t#定义了mysql清除过期日志的时间。默认值为0,表示“没有自动删除”。单位天\n\texpire_logs_days=7\n\t#复制服务器从源服务器接收的更新是否应记录到副本自己的二进制日志。\n\tlog_slave_updates=ON\n\n\t#日志的存放位置\n\tlog_error = /var/lib/mysql/mysqld.log\n\t#log_warnings 为0，表示不记录告警信息。\n\t#log_warnings 为1，表示告警信息写入错误日志。\n\t#log_warnings 大于1，表示各类告警信息，例如有关网络故障的信息和重新连接信息写入错误日志。（默认为2）\n\t#log_warnings=2\n\n\t#GTID严格模式\n\tgtid_strict_mode=ON\n\n\t#从库幂等模式\n\tslave_exec_mode= IDEMPOTENT\n\n\t#slave忽略同步的数据库\n\treplicate-ignore-db=information_schema,performance_schema\n\n\t#半同步\n\trpl_semi_sync_master_enabled=on\n\trpl_semi_sync_slave_enabled=on\n\n\t#会话事务状态跟踪\n\tsession_track_state_change = ON\n\tsession_track_transaction_info = CHARACTERISTICS\n\tsession_track_system_variables='autocommit,character_set_client,character_set_connection,character_set_results,time_zone,last_gtid'\n\n\t#\n\t# include *.cnf from the config directory\n\t#\n\t#!includedir /etc/my.cnf.d\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"5-3-创建有状态服务\"><a href=\"#5-3-创建有状态服务\" class=\"headerlink\" title=\"5.3 创建有状态服务\"></a>5.3 创建有状态服务</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span><span class=\"token number\">2</span>-statefulSet.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: mariadb\nspec:\n  replicas: 1\n  serviceName: mariadb\n  selector:\n    matchLabels:\n      app: mariadb\n  template:\n    metadata:\n      labels:\n        app: mariadb\n    spec:\n      containers:\n      - name: mariadb\n        image: mariadb:10.9\n        env:\n        - name: MYSQL_ROOT_PASSWORD\n          value: '4y6Cu%946*!TXY'\n        volumeMounts:\n        - name: mariadb-storage\n          mountPath: /var/lib/mysql\n        - name: mariadb-config\n          mountPath: /etc/mysql/my.cnf\n          subPath: my.cnf\n      volumes:\n      - name: mariadb-storage\n        persistentVolumeClaim:\n          claimName: mariadb-data\n      - name: mariadb-config\n        configMap:\n          name: mariadb-config\n          items:\n            - key: my.cnf\n              path: my.cnf\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"5-4-创建服务暴露\"><a href=\"#5-4-创建服务暴露\" class=\"headerlink\" title=\"5.4 创建服务暴露\"></a>5.4 创建服务暴露</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">3</span>-service.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: mariadb\n  labels:\n    app: mariadb\nspec:\n  ports:\n    - name: mariadb\n      port: 3306\n      protocol: TCP\n      targetPort: 3306\n      nodePort: 30001\n  selector:\n    app: mariadb\n  type: NodePort\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"5-5-应用\"><a href=\"#5-5-应用\" class=\"headerlink\" title=\"5.5 应用\"></a>5.5 应用</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">0</span>-pvc.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">1</span>-configMap.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-statefulSet.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">3</span>-service.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h1 id=\"六、Nacos服务部署\"><a href=\"#六、Nacos服务部署\" class=\"headerlink\" title=\"六、Nacos服务部署\"></a>六、Nacos服务部署</h1><h2 id=\"6-1-登陆数据库，创建nacos用户及库，并导入初始化sql\"><a href=\"#6-1-登陆数据库，创建nacos用户及库，并导入初始化sql\" class=\"headerlink\" title=\"6.1 登陆数据库，创建nacos用户及库，并导入初始化sql\"></a>6.1 登陆数据库，创建nacos用户及库，并导入初始化sql</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">use</span> mysql<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">database</span> nacos <span class=\"token keyword\">CHARACTER</span> <span class=\"token keyword\">SET</span> utf8mb4 <span class=\"token keyword\">COLLATE</span> utf8mb4_bin<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">user</span> <span class=\"token string\">'nacos'</span><span class=\"token variable\">@'%'</span> identified <span class=\"token keyword\">by</span> <span class=\"token string\">'!EdkeJwrtDN45^'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">grant</span> <span class=\"token keyword\">all</span> <span class=\"token keyword\">privileges</span> <span class=\"token keyword\">on</span> nacos<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token keyword\">to</span> <span class=\"token string\">'nacos'</span><span class=\"token variable\">@'%'</span><span class=\"token punctuation\">;</span>\nflush <span class=\"token keyword\">privileges</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"6-2-创建nacos\"><a href=\"#6-2-创建nacos\" class=\"headerlink\" title=\"6.2 创建nacos\"></a>6.2 创建nacos</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> nacos<span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">cd</span> nacos\n<span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">1</span>-nacos-deployment.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nacos\n  labels:\n    app: nacos\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nacos\n  template:\n    metadata:\n      labels:\n        app: nacos\n    spec:\n      containers:\n        - name: nacos\n          image: nacos/nacos-server:v2.2.0\n          env:\n            - name: MODE\n              value: \"standalone\"\n            - name: SPRING_DATASOURCE_PLATFORM\n              value: \"mysql\"\n            - name: MYSQL_SERVICE_HOST\n              value: \"200.0.0.98\"\n            - name: MYSQL_SERVICE_PORT\n              value: \"30001\"\n            - name: MYSQL_SERVICE_DB_NAME\n              value: \"nacos\"\n            - name: MYSQL_SERVICE_USER\n              value: \"nacos\"\n            - name: MYSQL_SERVICE_PASSWORD\n              value: \"!EdkeJwrtDN45^\"\n          ports:\n            - containerPort: 8848\n              name: client-port\n            - containerPort: 9848\n              name: client-rpc\n            - containerPort: 9849\n              name: raft-rpc\n            - containerPort: 7848\n              name: old-raft-rpc\n\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h2 id=\"6-3-创建服务暴露\"><a href=\"#6-3-创建服务暴露\" class=\"headerlink\" title=\"6.3 创建服务暴露\"></a>6.3 创建服务暴露</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span>-nacos-service.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: nacos\n  labels:\n    app: nacos\n  annotations:\n    service.alpha.kubernetes.io/tolerate-unready-endpoints: \"true\"\nspec:\n  ports:\n    - port: 8848\n      name: server\n      targetPort: 8848\n      nodePort: 30002\n    - port: 9848\n      name: client-rpc\n      targetPort: 9848\n    - port: 9849\n      name: raft-rpc\n      targetPort: 9849\n    ## 兼容1.4.x版本的选举端口\n    - port: 7848\n      name: old-raft-rpc\n      targetPort: 7848\n  type: NodePort  #Serive的类型，ClusterIP/NodePort/LoaderBalancer\n  selector:\n    app: nacos\n\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"6-3-数据库中导入预定义sql，见附件\"><a href=\"#6-3-数据库中导入预定义sql，见附件\" class=\"headerlink\" title=\"6.3 数据库中导入预定义sql，见附件\"></a>6.3 数据库中导入预定义sql，见附件</h2><p>初始化sql：<br><a href=\"_v_attachments/20230225224217873_1139/mysql-schema.sql\">mysql-schema.sql</a></p>\n<h2 id=\"6-4-应用\"><a href=\"#6-4-应用\" class=\"headerlink\" title=\"6.4 应用\"></a>6.4 应用</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">1</span>-nacos-deployment.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-nacos-service.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"6-5-创建era命名空间\"><a href=\"#6-5-创建era命名空间\" class=\"headerlink\" title=\"6.5 创建era命名空间\"></a>6.5 创建era命名空间</h2><p>![](_v_images&#x2F;20230227115412128_20323.png &#x3D;1241x)</p>\n<h2 id=\"6-6-在era命名空间中导入附件配置\"><a href=\"#6-6-在era命名空间中导入附件配置\" class=\"headerlink\" title=\"6.6 在era命名空间中导入附件配置\"></a>6.6 在era命名空间中导入附件配置</h2><p>![](_v_images&#x2F;20230227115516361_6927.png &#x3D;810x)</p>\n<p>nacos配置：<br><a href=\"_v_attachments/20230225224217873_1139/nacos_config_export_20230423155621.zip\">nacos_config_export_20230423155621.zip</a></p>\n<h1 id=\"七、MinIO部署\"><a href=\"#七、MinIO部署\" class=\"headerlink\" title=\"七、MinIO部署\"></a>七、MinIO部署</h1><h2 id=\"7-1-创建pvc\"><a href=\"#7-1-创建pvc\" class=\"headerlink\" title=\"7.1 创建pvc\"></a>7.1 创建pvc</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">0</span>-pvc.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: minio-data\nspec:\n  accessModes:\n  - ReadWriteMany\n  resources:\n    requests:\n      storage: 100Gi\n  storageClassName: nfs-retain\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"7-2-创建deployment文件\"><a href=\"#7-2-创建deployment文件\" class=\"headerlink\" title=\"7.2 创建deployment文件\"></a>7.2 创建deployment文件</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">1</span>-deployment.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: minio\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: minio\n  template:\n    metadata:\n      labels:\n        app: minio\n    spec:\n      containers:\n      - name: minio\n        image: minio/minio:RELEASE.2022-06-11T19-55-32Z\n        imagePullPolicy: IfNotPresent\n        command:\n          - /bin/sh\n          - -c\n          - minio server /data --console-address \":9000\" --address \":9001\"\n        env:\n        - name: MINIO_ROOT_USER\n          value: admin\n        - name: MINIO_ROOT_PASSWORD\n          value: 'c!%892w@MWE^T*'\n        ports:\n        - name: web\n          containerPort: 9000\n          protocol: \"TCP\"\n        - name: api\n          containerPort: 9001\n          protocol: \"TCP\"\n        volumeMounts:\n          - mountPath: /data\n            name: data\n      volumes:\n      - name: data\n        persistentVolumeClaim:\n          claimName: minio-data\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"7-3-创建服务暴露\"><a href=\"#7-3-创建服务暴露\" class=\"headerlink\" title=\"7.3 创建服务暴露\"></a>7.3 创建服务暴露</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span>-service.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: minio\n  labels:\n    app: minio\nspec:\n  ports:\n    - name: web-port\n      port: 9000\n      protocol: TCP\n      targetPort: 9000\n      nodePort: 30004\n    - name: api-port\n      port: 9001\n      protocol: TCP\n      targetPort: 9001\n      nodePort: 30005\n  type: NodePort\n  selector:\n    app: minio\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"7-4-应用\"><a href=\"#7-4-应用\" class=\"headerlink\" title=\"7.4 应用\"></a>7.4 应用</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">0</span>-pvc.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">1</span>-deployment.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-service.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"7-5-配置桶及用户\"><a href=\"#7-5-配置桶及用户\" class=\"headerlink\" title=\"7.5 配置桶及用户\"></a>7.5 配置桶及用户</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">era\nera\nE<span class=\"token variable\">$y</span>*uY7@<span class=\"token operator\">&amp;</span>39gW6\n\nAccess Key\n\nBNXMD8gbbM4Q2NoX\nSecret Key\n\n0fRkiYeJ63wMHz98I3Q7c3fUD1f9QZZW\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"1-创建桶\"><a href=\"#1-创建桶\" class=\"headerlink\" title=\"1.创建桶\"></a>1.创建桶</h3><p>![](_v_images&#x2F;20230227103232369_29801.png &#x3D;536x)</p>\n<h3 id=\"2-创建用户\"><a href=\"#2-创建用户\" class=\"headerlink\" title=\"2.创建用户\"></a>2.创建用户</h3><p>![](_v_images&#x2F;20230227114333584_26973.png &#x3D;559x)</p>\n<h3 id=\"3-创建权限策略\"><a href=\"#3-创建权限策略\" class=\"headerlink\" title=\"3.创建权限策略\"></a>3.创建权限策略</h3><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token key atrule\">\"Version\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"2012-10-17\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token key atrule\">\"Statement\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token key atrule\">\"Effect\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Allow\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token key atrule\">\"Action\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">\"s3:*\"</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token key atrule\">\"Resource\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">\"arn:aws:s3:::era/*\"</span>\n            <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>![](_v_images&#x2F;20230227114629100_1990.png &#x3D;553x)</p>\n<h3 id=\"4-用户绑定权限\"><a href=\"#4-用户绑定权限\" class=\"headerlink\" title=\"4.用户绑定权限\"></a>4.用户绑定权限</h3><p>![](_v_images&#x2F;20230227114727497_21480.png &#x3D;858x)</p>\n<h3 id=\"5-创建用户令牌并记录\"><a href=\"#5-创建用户令牌并记录\" class=\"headerlink\" title=\"5.创建用户令牌并记录\"></a>5.创建用户令牌并记录</h3><p>![](_v_images&#x2F;20230227111406643_8560.png &#x3D;769x)</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Access Key:\n\n0psoK6mqbPynGQuh\nSecret Key:\n\nfBWc4MZzPL94DQ8k1l2JsN5MERfrSD2R<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>![](_v_images&#x2F;20230227114800001_7048.png &#x3D;578x)</p>\n<h1 id=\"八、Redis部署\"><a href=\"#八、Redis部署\" class=\"headerlink\" title=\"八、Redis部署\"></a>八、Redis部署</h1><h2 id=\"8-1-创建配置文件\"><a href=\"#8-1-创建配置文件\" class=\"headerlink\" title=\"8.1 创建配置文件\"></a>8.1 创建配置文件</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">0</span>-configMap.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: redis-config\ndata:\n  redis.conf: |\n    # Redis配置文件示例。\n    #\n    # 请注意，为了读取配置文件，Redis必须以文件路径作为第一个参数来启动：\n    #\n    # ./redis-server /path/to/redis.conf\n\n    # 关于单位的注意事项：当需要内存大小时，可以以通常的格式1k 5GB 4M来指定它，依此类推：\n    #\n    # 1k => 1000字节\n    # 1kb => 1024字节\n    # 1m => 1000000字节\n    # 1mb => 1024 * 1024字节\n    # 1g => 1000000000字节\n    # 1gb => 1024 * 1024 * 1024字节\n    #\n    # 单位不区分大小写，因此1GB 1Gb 1gB都相同。\n\n    ################################## INCLUDES ###################################\n\n    # 在此处包含一个或多个其他配置文件。 如果您具有可用于所有Redis服务器的标准模板，但还需要自定义一些每服务器设置，则此功能很有用。\n    # 包含文件可以包含其他文件，因此请明智地使用它。\n    #\n    # 注意admin或Redis Sentinel的命令\"CONFIG REWRITE\"不会重写选项\"include\"。\n    # 由于Redis始终使用最后处理的行作为配置指令的值，因此最好将include放在此文件的开头，以避免在运行时覆盖配置更改。\n    #\n    # 如果您反而对使用include覆盖配置选项感兴趣，则最好将include作为最后一行。\n    #\n    # include /path/to/local.conf\n    # include /path/to/other.conf\n\n    ################################## MODULES #####################################\n\n    # 在启动时加载模块。 如果服务器无法加载模块，它将中止。 可以使用多个loadmodule指令。\n    #\n    # loadmodule /path/to/my_module.so\n    # loadmodule /path/to/other_module.so\n\n    ################################## NETWORK #####################################\n\n    # 默认情况下，如果未指定\"bind\"配置指令，则Redis侦听来自服务器上所有可用网络接口的连接。\n    # 可以使用\"bind\"配置指令仅侦听一个或多个所选接口，然后侦听一个或多个IP地址。\n    #\n    # Examples:\n    #\n    # bind 192.168.1.100 10.0.0.1\n    # bind 127.0.0.1 ::1\n    #\n    # ~~~警告~~~如果运行Redis的计算机直接暴露于Internet，则绑定到所有接口都是危险的，并且会将实例暴露给Internet上的所有人。因此，默认情况下，\n    # 我们取消注释以下bind指令，这将强制Redis仅侦听IPv4环回接口地址（这意味着Redis将只能接受来自正在运行同一台计算机的客户端的连接）。\n    #\n    # 如果您确定要立即侦听所有接口，请仅注意以下几行。\n    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    bind *\n\n    # 保护模式是安全保护的一层，目的是避免访问和利用Internet上打开的Redis实例。\n    #\n    # 启用保护模式时，如果：\n    #\n    # 1）服务器未使用\"bind\"指令显式绑定到一组地址。\n    # 2）未配置密码。\n    #\n    # 服务器仅接受来自通过IPv4和IPv6回送地址127.0.0.1和::: 1以及来自Unix域套接字的客户端的连接。\n    #\n    # 默认情况下启用保护模式。 仅当您确定您希望其他主机的客户端连接到Redis时，\n    # 即使未配置身份验证，也不会使用\"bind\"指令显式列出一组特定的接口，才应禁用它。\n    protected-mode no\n\n    # 接受指定端口上的连接，默认为6379（IANA# 815344）。\n    # 如果指定了端口0，则Redis将不会在TCP套接字上侦听。\n    port 6379\n\n    # TCP listen() backlog.\n    #\n    # 在每秒请求数很高的环境中，您需要大量backlog(积压)，以避免客户端连接速度慢的问题。\n    # 请注意，Linux内核会以无提示的方式将其截断为/proc/sys/net/core/somaxconn的值，\n    # 因此请确保同时提高somaxconn和tcp_max_syn_backlog的值，以获得所需的效果。\n    tcp-backlog 511\n\n    # Unix socket.\n    #\n    # 指定用于监听传入连接的Unix套接字的路径。 没有默认值，因此在未指定Redis的情况下，Redis不会在Unix套接字上侦听。\n    #\n    # unixsocket /tmp/redis.sock\n    # unixsocketperm 700\n\n    # 客户端闲置N秒后关闭连接（0禁用）\n    timeout 0\n\n    # TCP keepalive.\n    #\n    # 如果非零，请在没有通信的情况下使用SO_KEEPALIVE向客户端发送TCP ACK。 这很有用，原因有两个：\n    # \n    # 1）检测死亡的同伴。\n    # 2）从中间的网络设备的角度来看，使连接保持活动状态。\n    # \n    # 在Linux上，指定的值（以秒为单位）是用于发送ACK的时间段。\n    # 请注意，关闭连接需要两倍的时间。\n    # 在其他内核上，期限取决于内核配置。\n    # \n    # 此选项的合理值是300秒，这是从Redis 3.2.1开始的新Redis默认值。\n    tcp-keepalive 300\n\n    ################################# TLS/SSL #####################################\n\n    # 默认情况下，禁用TLS / SSL。 要启用它，可以使用\"tls-port\"配置指令来定义TLS侦听端口。 \n    # 要在默认端口上启用TLS，请使用：\n    #\n    # port 0\n    # tls-port 6379\n\n    # 配置X.509证书和私钥，用于对连接的客户端，主服务器或集群对等服务器进行身份验证。 这些文件应为PEM格式。\n    #\n    # tls-cert-file redis.crt\n    # tls-key-file redis.key\n\n    # 配置DH参数文件，启用Diffie-Hellman（DH）密钥交换。\n    #\n    # tls-dh-params-file redis.dh\n\n    # 配置CA证书捆绑包或目录以认证TLS/SSL客户端和对等方。 Redis需要其中至少一项的显式配置，并且不会隐式使用系统范围的配置。\n    #\n    # tls-ca-cert-file ca.crt\n    # tls-ca-cert-dir /etc/ssl/certs\n\n    # 默认情况下，TLS端口上的客户端（包括副本服务器）需要使用有效的客户端证书进行身份验证。\n    #\n    # 可以使用此伪指令禁用身份验证。\n    #\n    # tls-auth-clients no\n\n    # 默认情况下，Redis副本不尝试与其主服务器建立TLS连接。\n    #\n    # 使用以下指令在复制链接上启用TLS。\n    #\n    # tls-replication yes\n\n    # 默认情况下，Redis群集总线使用纯TCP连接。 要为总线协议启用TLS，请使用以下指令：\n    #\n    # tls-cluster yes\n\n    # 明确指定要支持的TLS版本。 允许的值不区分大小写，包括\"TLSv1\"，\"TLSv1.1\"，\"TLSv1.2\"，\"TLSv1.3\"（OpenSSL> = 1.1.1）或任意组合。\n    # 要仅启用TLSv1.2和TLSv1.3，请使用：\n    #\n    # tls-protocols \"TLSv1.2 TLSv1.3\"\n\n    # 配置允许的密码。 有关此字符串的语法的更多信息，请参见ciphers（1ssl）联机帮助页。\n    #\n    # 注意：此配置仅适用于&lt;= TLSv1.2。\n    #\n    # tls-ciphers DEFAULT:!MEDIUM\n\n    # 配置允许的TLSv1.3密码套件。 有关此字符串的语法（尤其是TLSv1.3密码套件）的语法的更多信息，请参见ciphers（1ssl）联机帮助页。\n    #\n    # tls-ciphersuites TLS_CHACHA20_POLY1305_SHA256\n\n    # 选择密码时，请使用服务器的首选项而不是客户端的首选项。 默认情况下，服务器遵循客户端的首选项。\n    #\n    # tls-prefer-server-ciphers yes\n\n    ################################# GENERAL(通常) #####################################\n\n    # 默认情况下，Redis不会作为守护程序运行。 如果需要，请使用\"是\"。\n    # 注意，Redis守护进程将在/var/run/redis.pid中写入一个pid文件。\n    daemonize no\n\n    # 如果从upstart或systemd运行Redis，Redis可以与您的supervision(监督) tree进行交互。 选项：\n    #   supervised no      - 没有supervision(监督)互动\n    #   supervised upstart - 通过将Redis置于SIGSTOP模式来发出信号\n    #   supervised systemd - 通过将READY = 1写入$ NOTIFY_SOCKET来产生信号\n    #   supervised auto    - 根据UPSTART_JOB或NOTIFY_SOCKET环境变量检测upstart或systemd方法\n\n    # 注意：这些supervision(监督)方法仅表示\"过程已准备就绪\"。\n    #       他们无法使您的主管连续不断地进行ping操作。\n    supervised no\n\n    # 如果指定了pid文件，则Redis会在启动时将其写入指定位置，并在退出时将其删除。\n    #\n    # 当服务器在非守护进程中运行时，如果未在配置中指定任何pid文件，则不会创建该文件。\n    # 守护服务器时，即使未指定，也会使用pid文件，默认为\"/var/run/redis.pid\"。\n    #\n    # 尽最大努力创建一个pid文件：如果Redis无法创建它，那么一切正常，服务器将正常启动并运行。\n    pidfile /var/run/redis_6379.pid\n\n    # 指定服务器的详细级别。\n    # 这可以是以下之一：\n    # debug (很多信息，对于开发/测试很有用）\n    # verbose (很多很少有用的信息，但不会像调试级别那样混乱）\n    # notice (适度冗长，可能在生产中需要什么）\n    # warning (仅记录非常重要/重要的消息）\n    loglevel notice\n\n    # 指定日志文件名。 空字符串也可以用于强制Redis登录标准输出。\n    # 请注意，如果您使用标准输出进行日志记录但进行守护进程，则日志将发送到/dev/null\n    logfile \"\"\n\n    # 要启用登录到系统记录器的功能，只需将'syslog-enabled'设置为yes，然后根据需要更新其他syslog参数。\n    # syslog-enabled no\n\n    # 指定系统日志标识。\n    # syslog-ident redis\n\n    # 指定系统日志工具。 必须是USER或在LOCAL0-LOCAL7之间。\n    # syslog-facility local0\n\n    # 设置数据库数量。 默认数据库为DB 0，您可以使用SELECT &lt;dbid>在每个连接的基础上选择一个不同的数据库，\n    # 其中dbid是介于0和'databases'-1之间的数字\n    databases 16\n\n    # 默认情况下，仅当开始记录到标准输出并且标准输出为TTY时，Redis才会显示ASCII艺术logo。\n    # 基本上，这意味着logo通常仅在交互式会话中显示。\n    #\n    # 但是，可以通过将以下选项设置为yes，来强制执行4.0之前的行为并始终在启动日志中显示ASCII艺术logo。\n    always-show-logo yes\n\n    ################################ SNAPSHOTTING(快照)  ################################\n    #\n    # 将数据库保存在磁盘上：\n    #\n    #   save &lt;seconds> &lt;changes>\n    #\n    # 如果同时发生了给定的秒数和给定的针对数据库的写操作数，则将保存数据库。\n    #\n    # 在下面的示例中，行为将是保存：\n    #     900秒（15分钟）后，如果至少更改了1个键\n    #     300秒（5分钟）后，如果至少更改了10个按键\n    #     60秒后，如果至少更改了10000个键\n    #\n    # 注意：您可以通过注释掉所有\"保存\"行来完全禁用保存。\n    #\n    # 也可以通过添加带有单个空字符串参数的save指令来删除所有先前配置的保存点，如以下示例所示：\n    #\n    #   save \"\"\n\n    save 900 1\n    save 300 10\n    save 60 10000\n\n    # 默认情况下，如果启用了RDB快照（至少一个保存点）并且最新的后台保存失败，Redis将停止接受写入。\n    # 这将使用户（以一种困难的方式）意识到数据无法正确地持久存储在磁盘上，否则，可能没人会注意到并且会发生一些灾难。\n    #\n    # 如果后台保存过程将再次开始工作，则Redis将自动允许再次写入。\n    #\n    # 但是，如果您设置了对Redis服务器和持久性的适当监视，则可能要禁用此功能，以便即使磁盘，权限等出现问题，Redis也将继续照常工作。\n    stop-writes-on-bgsave-error yes\n\n    # 转储.rdb数据库时使用LZF压缩字符串对象？\n    # 默认情况下将其设置为\"是\"，因为它几乎总是胜利。\n    # 如果要在保存子项中保存一些CPU，请将其设置为\"no\"，但是如果您具有可压缩的值或键，则数据集可能会更大。\n    rdbcompression yes\n\n    # 从RDB版本5开始，在文件末尾放置了CRC64校验和。\n    # 这使得该格式更能抵抗损坏，但是在保存和加载RDB文件时会付出一定的性能损失（大约10％），因此可以禁用该格式以获得最佳性能。\n    #\n    # 在禁用校验和的情况下创建的RDB文件的校验和为零，这将指示加载代码跳过该校验。\n    rdbchecksum yes\n\n    # 转储数据库的文件名\n    dbfilename dump.rdb\n\n    # 删除没有启用持久性的实例中复制使用的RDB文件。 默认情况下，此选项是禁用的，\n    # 但是在某些环境中，出于法规或其他安全方面的考虑，应将RDB文件由主数据库持久存储在磁盘上以提供副本，\n    # 或将RDB文件由副本存储在磁盘上以加载它们以进行初始同步。\n    # 尽快删除。 请注意，此选项仅在同时禁用AOF和RDB持久性的实例中起作用，否则将被完全忽略。\n    #\n    # 获得相同效果的另一种方法（有时是更好的方法）是在主实例和副本实例上都使用无盘复制。 但是，对于副本，无盘并非始终是一种选择。\n    rdb-del-sync-files no\n\n    # 工作目录。\n    #\n    # 数据库将被写入该目录内，文件名使用\"dbfilename\"配置指令在上面指定。\n    #\n    # 也将在此目录中创建\"仅追加文件\"。\n    #\n    # 请注意，您必须在此处指定目录，而不是文件名。\n    dir ./\n\n    ################################# REPLICATION(复制) #################################\n\n    # 主副本复制。 使用copyof可以使Redis实例成为另一个Redis服务器的副本。 尽快了解有关Redis复制的几件事。\n    #\n    #   +------------------+      +---------------+\n    #   |      Master      | ---> |    Replica    |\n    #   | (receive writes) |      |  (exact copy) |\n    #   +------------------+      +---------------+\n    #\n    # 1) Redis复制是异步的，但是您可以将主服务器配置为在似乎未与至少给定数量的副本连接时停止接受写操作。\n    # 2) 如果复制链接在相对较短的时间内丢失，则Redis副本能够与主副本执行部分重新同步。\n    #    您可能需要根据需要将复制积压大小（请参阅此文件的下一部分）配置为合理的值。\n    # 3) 复制是自动的，不需要用户干预。 网络分区副本之后，副本会自动尝试重新连接到母版并与它们重新同步。\n    #\n    # replicaof &lt;masterip> &lt;masterport>\n\n    # 如果主服务器受密码保护（使用下面的\"requirepass\"配置指令），\n    # 则可以在开始复制同步过程之前告诉副本服务器进行身份验证，否则主服务器将拒绝副本请求。\n    #\n    # masterauth &lt;master-password>\n    #\n    # 但是，如果使用Redis ACL（对于Redis版本6或更高版本），并且默认用户无法运行PSYNC命令和/或其他复制所需的命令，\n    # 这还不够。 在这种情况下，最好配置一个特殊用户以用于复制，并这样指定masteruser配置：\n    #\n    # masteruser &lt;username>\n    #\n    # 指定了masteruser时，副本将使用新的AUTH形式针对其主服务器进行身份验证：AUTH &lt;用户名> &lt;密码>。\n\n    # 当副本断开与主数据库的连接时，或者仍在进行复制时，副本可以以两种不同的方式起作用：\n    #\n    # 1) 如果复制副本服务过时的数据设置为\"是\"（默认值），则复制副本仍将回复客户端请求，\n    #    可能包含过期数据，或者如果这是第一次同步，则数据集可能只是空的。\n    #\n    # 2) 如果复制副本服务过时的数据设置为\"否\"，则复制副本将对所有命令发出错误\"与主机进行同步\"错误，\n    #    但对INFO, replicaOF, AUTH, PING, SHUTDOWN, REPLCONF, ROLE, CONFIG, SUBSCRIBE, UNSUBSCRIBE,\n    #    PSUBSCRIBE, PUNSUBSCRIBE, PUBLISH, PUBSUB, COMMAND, POST, HOST: and LATENCY.\n    #\n    replica-serve-stale-data yes\n\n    # 您可以配置副本实例以接受或不接受写入。 针对副本实例进行写操作可能对存储某些临时数据很有用（\n    # 因为与主实例重新同步后，写入副本上的数据很容易删除），但是如果客户端由于配置错误而向其进行写操作，也可能导致问题。\n    #\n    # 由于Redis 2.6默认情况下，副本是只读的。\n    #\n    # 注意：只读副本并非旨在向Internet上不受信任的客户端公开。 它只是防止实例滥用的保护层。\n    # 默认情况下，只读副本仍会导出所有管理命令，例如CONFIG，DEBUG等。\n    # 在一定程度上，您可以使用'rename-command'隐藏所有管理/危险命令来提高只读副本的安全性。\n    replica-read-only yes\n\n    # 复制同步策略：磁盘或套接字。\n    #\n    # 仅能接收差异而无法继续复制过程的新副本和重新连接的副本需要执行所谓的\"完全同步\"。 RDB文件从主数据库传输到副本数据库。\n    #\n    # 传输可以两种不同的方式发生：\n    #\n    # 1) 磁盘备份: Redis主服务器创建一个新过程，将RDB文件写入磁盘。 后来，文件由父进程逐步传输到副本。\n    # 2) 无盘：Redis主服务器创建一个新进程，该进程将RDB文件直接写入副本套接字，而完全不接触磁盘。\n    #\n    # 使用磁盘支持的复制，在生成RDB文件时，一旦生成RDB文件的当前子级完成工作，就可以将更多副本排入队列并与RDB文件一起使用。\n    # 如果使用无盘复制，则一旦传输开始，新的副本将排队，并且当当前副本终止时将开始新的传输。\n    #\n    # 使用无盘复制时，主服务器在开始传输之前等待一段可配置的时间（以秒为单位），以希望多个副本可以到达并且传输可以并行化。\n    #\n    # 对于慢速磁盘和快速（大带宽）网络，无盘复制效果更好。\n    repl-diskless-sync no\n\n    # 启用无盘复制后，可以配置服务器等待的延迟，以生成通过套接字将RDB传输到副本的子代。\n    #\n    # 这很重要，因为一旦传输开始，就无法为到达下一个RDB传输的新副本提供服务，因此服务器会等待一段时间才能让更多副本到达。\n    #\n    # 以秒为单位指定延迟，默认为5秒。 要完全禁用它，只需将其设置为0秒，传输就会尽快开始。\n    repl-diskless-sync-delay 5\n\n    # -----------------------------------------------------------------------------\n    # 警告：RDB无盘加载是实验性的。 因为在此设置中，副本不会立即在磁盘上存储RDB，所以它可能会导致故障转移期间的数据丢失。\n    # 在与主机的初始同步阶段，如果I/O错误，则RDB无盘负载+ Redis模块不处理I/O读取也可能导致Redis中止。 仅在执行自己的操作时使用。\n    # -----------------------------------------------------------------------------\n    #\n    # 副本可以直接从套接字加载从复制链接读取的RDB，也可以将RDB存储到文件中，并在从主服务器完全获取文件后读取该文件。\n    #\n    # 在许多情况下，磁盘的速度比网络慢，并且存储和加载RDB文件可能会增加复制时间（甚至会增加主服务器的\"写时复制\"内存和从属缓冲区）。\n    # 但是，直接从套接字解析RDB文件可能意味着我们必须在接收到完整的rdb之前刷新当前数据库的内容。 因此，我们有以下选择：\n    #\n    # \"disabled\"    - 不要使用无盘负载（首先将rdb文件存储到磁盘）\n    # \"on-empty-db\" - 仅在完全安全时才使用无盘加载。\n    # \"swapdb\"      - 直接从套接字解析数据时，在RAM中保留当前数据库内容的副本。 请注意，这需要足够的内存，如果没有足够的内存，则可能会杀死OOM。\n    repl-diskless-load disabled\n\n    # 副本以预定义的时间间隔将PING发送到服务器。 可以使用repl_ping_replica_period选项更改此间隔。 默认值为10秒。\n    #\n    # repl-ping-replica-period 10\n\n    # 以下选项为以下项设置复制超时：\n    #\n    # 1）从副本的角度来看，在SYNC期间进行批量传输I/O。\n    # 2）从副本（数据，Ping）的角度来看，主超时。\n    # 3）从主服务器角度来看，副本超时（REPLCONF ACK ping）。\n    #\n    # 确保该值大于为repl-ping-replica-period指定的值非常重要，否则，每当主服务器和副本之间的通信量较低时，都会检测到超时。\n    #\n    # repl-timeout 60\n\n    # 在SYNC之后禁用副本套接字上的TCP_NODELAY？\n    #\n    # 如果选择\"是\"，则Redis将使用更少的TCP数据包和更少的带宽将数据发送到副本。\n    # 但这会增加数据出现在副本端的延迟，对于使用默认配置的Linux内核，此延迟最多可达40毫秒。\n    #\n    # 如果选择\"否\"，将减少数据在副本侧出现的延迟，但将使用更多带宽进行复制。\n    #\n    # 默认情况下，我们针对低延迟进行了优化，但是在通信量非常高的情况下，或者当主服务器和副本距离很多跳时，将其设置为\"是\"可能是个好主意。\n    repl-disable-tcp-nodelay no\n\n    # 设置复制backlog(积压)大小。 待办事项是一个缓冲区，当副本断开连接一段时间后，该缓冲区会累积副本数据，\n    # 因此当副本想要重新连接时，通常不需要完全重新同步，但是部分重新同步就足够了，只需传递副本的部分数据即可 断开连接时错过。\n    #\n    # 复制待办事项越大，副本可以断开连接并在以后能够执行部分重新同步的时间越长。\n    #\n    # 仅在至少连接一个副本后才分配backlog(积压)。\n    #\n    # repl-backlog-size 1mb\n\n    # 在主服务器一段时间不再连接副本后，backlog(积压)的事务将被释放。 以下选项配置了从断开最后一个副本的时间开始到释放待办事项缓冲区所需的秒数。\n    #\n    # 请注意，副本永远不会释放backlog(积压)的超时，因为它们可能会在以后升级为主副本，\n    # 并且应该能够与副本正确\"部分重新同步\"：因此，它们应始终累积backlog(积压)。\n    #\n    # 值0表示从不释放backlog(积压)。\n    #\n    # repl-backlog-ttl 3600\n\n    # 副本优先级是Redis在INFO输出中发布的整数。 如果主服务器不再正常工作，Redis Sentinel会使用它来选择要升级为主服务器的副本。\n    #\n    # 优先级低的副本被认为更适合升级，例如，如果有三个副本的优先级分别为10、100和25，Sentinel将选择优先级为10的副本，这是最低的。\n    #\n    # 但是，特殊优先级0会将副本标记为不能执行主角色，因此Redis Sentinel永远不会选择优先级为0的副本进行升级。\n    #\n    # 默认情况下，优先级为100。\n    replica-priority 100\n\n    # 如果连接的副本少于N个，且延迟小于或等于M秒，则主服务器可能会停止接受写入。\n    #\n    # N个副本必须处于\"联机\"状态。\n    #\n    # 以秒为单位的延迟必须小于等于指定值，该延迟是根据从副本接收到的最后一次ping计算得出的，通常是每秒发送一次。\n    #\n    # 此选项不能保证N个副本将接受写操作，但是如果没有足够的副本可用，则会将丢失写操作的暴露窗口限制为指定的秒数。\n    #\n    # 例如，至少需要3个滞后&lt;= 10秒的副本，请使用：\n    #\n    # min-replicas-to-write 3\n    # min-replicas-max-lag 10\n    #\n    # 将其中一个设置为0将禁用该功能。\n    #\n    # 默认情况下，min-replicas-to-write设置为0（禁用功能），min-replicas-max-lag设置为10。\n\n    # Redis主服务器能够以不同方式列出附加副本的地址和端口。 例如，\"INFO复制\"部分提供了此信息，Redis Sentinel使用此信息以及其他工具来发现副本实例。\n    # 该信息可用的另一个位置是主服务器的\"ROLE\"命令的输出。\n    #\n    # 通常通过以下方式获取副本列出的IP和地址：\n    #\n    #   IP: 通过检查副本用于与主服务器连接的套接字的对等地址来自动检测该地址。\n    #   Port: 该端口在复制握手期间由副本进行通信，通常是副本用来侦听连接的端口。\n    #\n    # 但是，当使用端口转发或网络地址转换（NAT）时，实际上可以通过不同的IP和端口对访问该副本。\n    # 副本可以使用以下两个选项，以便向其主服务器报告特定的IP和端口集，以便INFO和ROLE都将报告这些值。\n    #\n    # 如果只需要覆盖端口或IP地址，则无需同时使用这两个选项。\n    #\n    # replica-announce-ip 5.5.5.5\n    # replica-announce-port 1234\n\n    ############################### KEYS TRACKING（KEYS跟踪） #################################\n\n    # Redis为客户端的值缓存实现服务器辅助的支持。\n    # 这是使用无效表实现的，该无效表使用1600万个插槽记住哪些客户端可能具有某些键子集。\n    # 依次使用此命令是为了向客户端发送无效消息。 请了解有关此功能的更多信息，请检查以下页面：\n    #\n    #   https://redis.io/topics/client-side-caching\n    #\n    # 为客户端启用跟踪时，假定所有只读查询都已缓存：这将强制Redis将信息存储在失效表中。 修改密钥后，此类信息将被清除，并将无效消息发送到客户端。\n    # 但是，如果工作量主要由读取决定，Redis可以使用越来越多的内存来跟踪许多客户端获取的密钥。\n    #\n    # 因此，可以为失效表配置最大填充值。 默认情况下，它设置为1M键，一旦达到此限制，Redis将开始撤消失效表中的键，\n    # 即使它们没有被修改，只是为了回收内存：这反过来将迫使客户端使缓存无效。 价值观。 \n    # 基本上，表的最大大小是要在服务器端用来跟踪有关谁缓存内容的信息的内存与客户端将缓存的对象保留在内存中的能力之间进行权衡的。\n    #\n    # 如果将值设置为0，则表示没有限制，Redis将在失效表中保留所需数量的键。\n    # 在\"统计信息\"信息部分中，您可以在每个给定的时间找到有关失效表中密钥数量的信息。\n    #\n    # 注意：在广播模式下使用键跟踪时，服务器端未使用任何内存，因此此设置无用。\n    #\n    # tracking-table-max-keys 1000000\n\n    ################################## SECURITY ###################################\n\n    # 警告：由于Redis的速度非常快，外部用户每秒可以在一个现代化的设备上尝试高达100万个密码。\n    # 这意味着您应该使用非常安全的密码，否则密码很容易破解。\n    # 请注意，由于该密码实际上是客户端和服务器之间的共享机密，并且不应由任何人记住，\n    # 因此该密码可以很容易地由/dev/urandom或其他方式中的长字符串组成，因此请使用冗长且不可猜测的内容 密码不会有暴力攻击。\n\n    # Redis ACL用户的定义如下：\n    #\n    #   user &lt;username> ... acl rules ...\n    #\n    #  例如：\n    #\n    #   user worker +@list +@connection ~jobs:* on >ffa9203c493aa99\n    #\n    # 特殊用户名\"默认\"用于新连接。 如果该用户具有\"nopass\"规则，则新连接将立即被认证为\"默认\"用户，\n    # 而无需通过AUTH命令提供任何密码。 否则，如果未将\"默认\"用户标记为\"nopass\"，\n    # 则连接将以未认证状态启动，并且需要AUTH（或HELLO命令AUTH选项）才能进行认证并开始工作。\n    #\n    # 描述用户可以执行的操作的ACL规则如下：\n    #\n    #  on           启用用户：可以验证为该用户。\n    #  off          禁用用户：不再可以与此用户进行身份验证，但是已经身份验证的连接仍然可以使用。\n    #  +&lt;command>   允许执行该命令\n    #  -&lt;command>   禁止执行该命令\n    #  +@&lt;category> 允许执行此类中具有有效类别的所有命令，例如@ admin，@ set，@ sortedset等，等等，\n    #               请参阅server.c文件中的完整列表，其中描述和定义了Redis命令表 。\n    #               特殊类别@all表示所有命令，但是当前在服务器中存在，并且将来会通过模块加载。\n    #  +&lt;command>|subcommand    允许使用本来禁用的命令的特定子命令。 注意，这种形式不允许像-DEBUG|SEGFAULT那样为负数，而只能以\"+\"开头。\n    #  allcommands  +@all的别名。 注意，这意味着可以执行将来通过模块系统加载的所有命令。\n    #  nocommands   -@all的别名。\n    #  ~&lt;pattern>   添加可以在命令中提及的键模式。 例如~*允许所有键。 该模式是类似于KEYS之一的球形样式的模式。\n    #               可以指定多个模式。\n    #  allkeys      ~*的别名。\n    #  resetkeys    刷新允许的键模式列表。\n    #  >&lt;password>  将此密码添加到用户的有效密码列表中。\n    #               例如> mypass将\"mypass\"添加到列表中。\n    #               此指令清除\"no pass\"标志（请参阅下文）。\n    #  &lt;&lt;password>  从有效密码列表中删除此密码。\n    #  nopass       用户的所有设置密码都将被删除，并且该用户被标记为不需要密码：这意味着每个密码都将对该用户起作用。\n    #               如果此指令用于默认用户，则每个新连接都将立即通过默认用户进行身份验证，而无需任何显式的AUTH命令。\n    #               请注意，\"resetpass\"指令将清除此情况。\n    #  resetpass    刷新允许的密码列表。 此外，删除\"nopass\"状态。 在\"重置密码\"之后，\n    #               用户将没有关联的密码，并且没有添加一些密码（或稍后将其设置为\"nopass\"）就无法进行身份验证的方法。\n    #  reset        执行以下动作: resetpass, resetkeys, off, -@all. 用户返回到创建后立即具有的相同状态。\n    #\n    # ACL规则可以以任何顺序指定：例如，您可以以密码，标志或密钥模式开头。 但是请注意，加法和减法规则将根据订购顺序进行更改。\n    # 例如，请参见以下示例：\n    #\n    #   user alice on +@all -DEBUG ~* >somepassword\n    #\n    # 这将允许\"alice\"使用除DEBUG命令之外的所有命令，因为+ @ all将所有命令添加到了alice可以使用的命令集中，并且后来删除了DEBUG。\n    # 但是，如果我们颠倒两个ACL规则的顺序，结果将是不同的：\n    #\n    #   user alice on -DEBUG +@all ~* >somepassword\n    #\n    # 现在，当alice在允许的命令集中还没有命令时，DEBUG被删除，之后又添加了所有命令，因此用户将能够执行所有操作。\n    #\n    # 基本上，ACL规则是从左到右处理的。\n    #\n    # 有关ACL配置的更多信息，请参阅Redis网站https://redis.io/topics/acl\n\n    # ACL日志\n    #\n    # ACL日志跟踪与ACL相关的失败命令和身份验证事件。 ACL日志可用于对ACL阻止的失败命令进行故障排除。 \n    # ACL日志存储在其中并消耗内存。 它的长度没有限制。您可以使用ACL LOG RESET回收内存，也可以在下面设置最大长度。\n    acllog-max-len 128\n\n    # 使用外部ACL文件\n    #\n    # 除了在此文件中配置用户外，还可以使用仅列出用户的独立文件。 两种方法不能混合使用：\n    # 如果在此处配置用户并同时激活外部ACL文件，则服务器将拒绝启动。\n    #\n    # 外部ACL用户文件的格式与redis.conf内部用来描述用户的格式完全相同。\n    #\n    # aclfile /etc/redis/users.acl\n\n    # 重要说明：从Redis 6开始，\"requirepass\"只是新ACL系统之上的兼容性层。 选项效果将只是为默认用户设置密码。\n    # 客户端仍然可以像往常一样使用AUTH &lt;password>进行身份验证，或者如果它们遵循新协议，\n    # 则可以使用AUTH default &lt;password>进行更明确的身份验证：两者都可以使用。\n    #\n    # requirepass foobared\n    requirepass 26Rgj^86*SN7y%\n\n    # 命令重命名（不建议使用）。\n    #\n    # ------------------------------------------------------------------------\n    # 警告：尽可能避免使用此选项。 而是使用ACL从默认用户中删除命令，并将其仅放置在您出于管理目的而创建的某些admin用户中。\n    # ------------------------------------------------------------------------\n    #\n    # 可以在共享环境中更改危险命令的名称。 例如，可以将CONFIG命令重命名为一些难以猜测的名称，以便它仍可用于内部使用的工具，但不适用于一般客户。\n    #\n    # 示例：\n    #\n    # rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52\n    #\n    # 也可以通过将命令重命名为空字符串来完全终止命令：\n    #\n    # rename-command CONFIG \"\"\n    #\n    # 请注意，更改登录到AOF文件或传输到副本的命令的名称可能会导致问题。\n\n    ################################### CLIENTS ####################################\n\n    # 设置同时连接的最大客户端数。 默认情况下，此限制设置为10000个客户端，\n    # 但是，如果Redis服务器无法配置进程文件限制以允许指定的限制，\n    # 则允许的最大客户端数将设置为当前文件限制减去32（因为Redis保留了 内部使用的文件描述符很少）。\n    #\n    # 一旦达到限制，Redis将关闭所有新连接，并发送错误消息\"已达到最大客户端数\"。\n    #\n    # maxclients 10000\n\n    ############################## MEMORY MANAGEMENT ################################\n\n    # 设置内存使用限制为指定的字节数。\n    # 当达到内存限制时，Redis将尝试根据所选的逐出策略来删除密钥（请参阅maxmemory-policy）。\n    #\n    # 如果Redis无法根据该策略删除密钥，或者如果该策略设置为'noeviction'，\n    # 则Redis将开始对将使用更多内存的命令（例如SET，LPUSH等）进行错误回复，并会 继续回复诸如GET之类的只读命令。\n    #\n    # 当将Redis用作LRU或LFU缓存，或为实例设置硬盘限制（使用\"noeviction\"策略）时，此选项通常很有用。\n    #\n    # 警告：如果您将副本附加到实例上且maxmemory处于打开状态，则从使用的内存数量中减去提供副本所需的输出缓冲区的大小，\n    # 以便网络问题/重新同步不会触发收回密钥的循环，反过来，副本的输出缓冲区已满，有被驱逐的DEL密钥触发了更多密钥的删除，\n    # 依此类推，直到数据库完全清空。\n    #\n    # 简而言之...如果您附加了副本，建议您设置maxmemory的下限，\n    # 以便系统上有一些可用RAM用于副本输出缓冲区（但是如果策略为'noeviction'，则不需要这样做） 。\n    #\n    # maxmemory &lt;bytes>\n\n    # MAXMEMORY POLICY：达到maxmemory时，Redis将如何选择要删除的内容。 您可以从以下行为中选择一种：\n    #\n    # volatile-lru -> 使用近似的LRU驱逐，只有具有过期集的key。\n    # allkeys-lru -> 使用近似的LRU退出任何key。\n    # volatile-lfu -> 使用近似的LFU驱逐，只有具有过期集的key。\n    # allkeys-lfu -> 使用近似的LFU退出任何key。\n    # volatile-random -> 删除具有过期设置的随机key。\n    # allkeys-random -> 删除随机key，任何key。\n    # volatile-ttl -> 删除最接近到期时间（较小的TTL）的key\n    # noeviction -> 不要逐出任何东西，只需在写操作中返回错误。\n    #\n    # LRU表示最近最少使用\n    # LFU表示最少使用\n    #\n    # LRU，LFU和volatile-ttl均使用近似随机算法实现。\n    #\n    # 注意：使用上述任何策略时，如果没有合适的退出键，Redis将在写入操作中返回错误。\n    #\n    #       At the date of writing these commands are: set setnx setex append\n    #       incr decr rpush lpush rpushx lpushx linsert lset rpoplpush sadd\n    #       sinter sinterstore sunion sunionstore sdiff sdiffstore zadd zincrby\n    #       zunionstore zinterstore hset hsetnx hmset hincrby incrby decrby\n    #       getset mset msetnx exec sort\n    #\n    # 默认为：\n    #\n    # maxmemory-policy noeviction\n\n    # LRU，LFU和最小TTL算法不是精确算法，而是近似算法（以节省内存），因此您可以调整它的速度或准确性。 \n    # 对于默认情况，Redis将检查五个键并选择最近使用的键，您可以使用以下配置指令更改样本大小。\n    #\n    # 默认值5产生足够好的结果。 10非常接近真实的LRU，但是会花费更多的CPU。 3更快，但不是很准确。\n    #\n    # maxmemory-samples 5\n\n    # 从Redis 5开始，默认情况下，副本将忽略其maxmemory设置（除非在故障转移后或手动提升为主副本）。\n    # 这意味着密钥的移出将仅由主服务器处理，将DEL命令作为副本在主计算机侧逐出，将DEL命令发送到副本。\n    #\n    # 此行为可确保主副本和副本副本保持一致，这通常是您想要的，但是，如果副本副本是可写的，\n    # 或者您希望副本副本具有不同的内存设置，并且您确定对副本副本执行的所有写入都是幂等的 ，那么您可以更改此默认设置（但请务必了解您在做什么）。\n    #\n    # 请注意，由于默认情况下该副本不会退出，所以它可能会比使用maxmemory设置的一组内存占用更多的内存（\n    # 某些缓冲区在副本上可能会更大，或者数据结构有时会占用更多内存，依此类推）。 \n    # 因此，请确保您监视副本，并确保副本具有足够的内存，以便在主副本达到配置的最大内存设置之前，永远不会达到真正的内存不足状态。\n    #\n    # replica-ignore-maxmemory yes\n\n    # Redis有两种回收过期密钥的方法：访问时发现这些密钥已过期，以及在后台，称为\"活动过期密钥\"。\n    # 缓慢地，交互地扫描密钥空间，以查找要回收的过期密钥，以便可以释放已过期且不久之后将不再访问的密钥的内存。\n    #\n    # 过期周期的默认工作将尝试避免在内存中保留超过百分之十的过期密钥，并尝试避免消耗超过总内存的25％并增加系统延迟。\n    # 但是，可以将通常设置为\"1\"的过期\"努力\"增加到更大的值，直到值\"10\"。\n    # 系统将以其最大值使用更多的CPU，更长的周期（并且从技术上讲可能会引入更多的延迟），并将减少仍然存在于系统中的已过期密钥的数量。\n    # 在内存，CPU和延迟之间进行权衡。\n    #\n    # active-expire-effort 1\n\n    ############################# LAZY FREEING(懒惰释放) ####################################\n\n    # Redis有两个删除键的原语。 一种称为DEL，它是对象的阻塞删除。 这意味着服务器停止处理新命令，以便以同步方式回收与对象关联的所有内存。 \n    # 如果删除的键与一个小对象相关联，则执行DEL命令所需的时间非常短，可与Redis中的大多数其他O（1）或O（log_N）命令相提并论。\n    # 但是，如果键与包含数百万个元素的聚合值关联，则服务器可能会阻塞很长时间（甚至几秒钟）以完成操作。\n    #\n    # 由于上述原因，Redis还提供了非阻塞删除原语，例如UNLINK（非阻塞DEL）以及FLUSHALL和FLUSHDB命令的ASYNC选项，以便在后台回收内存。\n    # 这些命令在固定时间内执行。 另一个线程将尽可能快地在后台逐渐释放对象。\n    #\n    # FLUSHALL和FLUSHDB的DEL，UNLINK和ASYNC选项是用户控制的。\n    # 由应用程序的设计决定何时使用一个或另一个是一个好主意。 但是，Redis服务器有时必须删除键或刷新整个数据库，这是其他操作的副作用。\n    # 特别是在以下情况下，Redis会独立于用户调用删除对象：\n    #\n    # 1) 逐出时，由于maxmemory和maxmemory策略配置，以便在不超出指定的内存限制的情况下为新数据腾出空间。\n    # 2) 因为到期：必须从内存中删除具有相关生存时间的密钥（请参阅EXPIRE命令）。\n    # 3) 由于将数据存储在可能已经存在的键上的命令的副作用。 例如，当RENAME命令被另一旧密钥内容替换时，它可能会删除它。\n    #    同样，SUNIONSTORE或SORT with STORE选项可能会删除现有密钥。 SET命令本身会删除指定键的所有旧内容，以便将其替换为指定的字符串。\n    # 4) 在复制期间，当副本与其主副本执行完全重新同步时，将删除整个数据库的内容，以便加载刚传输的RDB文件。\n    #\n    # 在上述所有情况下，默认设置都是以阻塞方式删除对象，就像调用DEL一样。 \n    # 但是，您可以专门配置每种情况，以便使用以下配置指令以非阻塞方式释放内存，例如调用UNLINK的情况。\n\n    lazyfree-lazy-eviction no\n    lazyfree-lazy-expire no\n    lazyfree-lazy-server-del no\n    replica-lazy-flush no\n\n    # 对于将用户代码DEL调用替换为UNLINK调用并不容易的情况，也可以使用以下配置指令将DEL命令的默认行为修改为与UNLINK完全相同：\n\n    lazyfree-lazy-user-del no\n\n    ################################ THREADED I/O #################################\n\n    # Redis主要是单线程的，但是有一些线程操作，例如UNLINK，缓慢的I/O访问和其他在侧线程上执行的操作。\n    #\n    # 现在，还可以在不同的I/O线程中处理Redis客户端套接字的读写。\n    # 由于特别慢的写入速度，因此Redis用户通常使用流水线以加快每个内核的Redis性能，并生成多个实例以扩大规模。\n    # 使用I/O线程可以轻松地将Redis加速两次，而无需求助于实例的流水线处理或分片。\n    #\n    # 默认情况下，线程处于禁用状态，我们建议仅在具有至少4个或更多内核的计算机上启用该功能，并至少保留一个备用内核。\n    # 使用8个以上的线程不太可能有很大帮助。\n    # 我们还建议仅在确实存在性能问题时才使用线程I/O，Redis实例可以使用很大一部分CPU时间，否则就没有必要使用此功能。\n    #\n    # 例如，如果您有四个核的core，请尝试使用2或3个I/O线程，如果您有8个核，请尝试使用6个线程。 为了启用I/O线程，请使用以下配置指令：\n    #\n    # io-threads 4\n    #\n    # 将io-threads设置为1只会照常使用主线程。\n    # 启用I/O线程后，我们仅将线程用于写操作，即对write（2）系统调用进行线程化，并将客户端缓冲区传输到套接字。\n    # 但是，也可以通过将以下配置指令设置为yes来启用读取线程和协议解析功能：\n    #\n    # io-threads-do-reads no\n    #\n    # 通常，线程读取无济于事。\n    #\n    # 注意1：无法在运行时通过CONFIG SET更改此配置伪指令。 启用SSL时，Aso此功能当前不起作用。\n    #\n    # 注意2：如果要使用redis-benchmark测试Redis加速，请确保还以线程模式运行基准测试本身，使用--threads选项匹配Redis thead的数量，\n    # 否则您将无法使用 注意到改进。\n\n    ############################## APPEND ONLY MODE(追加模式) ###############################\n\n    # 默认情况下，Redis异步将数据集转储到磁盘上。 此模式在许多应用程序中已经足够好，\n    # 但是Redis进程问题或电源中断可能会导致几分钟的写入丢失（取决于配置的保存点）。\n    #\n    # 仅附加文件是一种替代的持久性模式，可提供更好的持久性。 例如，使用默认数据fsync策略（请参阅配置文件中的稍后内容），\n    # Redis可能在服务器断电等严重事件中丢失一秒钟的写入，如果Redis进程本身发生错误，则一次写入将丢失一次，但是 操作系统仍在正常运行。\n    #\n    # 可以同时启用AOF和RDB持久性，而不会出现问题。\n    # 如果启动时启用了AOF，则Redis将加载AOF，即具有更好持久性的文件。\n    #\n    # 请检查http://redis.io/topics/persistence了解更多信息。\n\n    appendonly no\n\n    # 仅附加文件的名称（默认值：\"appendonly.aof\"）\n\n    appendfilename \"appendonly.aof\"\n\n    # fsync（）调用告诉操作系统将数据实际写入磁盘，而不是等待输出缓冲区中的更多数据。\n    # 有些操作系统确实会刷新磁盘上的数据，而另一些操作系统只会尝试尽快完成该操作。\n    #\n    # Redis支持三种不同的模式：\n    #\n    # no: 不要fsync，只要让OS在需要时刷新数据即可。 Faster 始终：每次写入仅附加日志后，fsync。 慢，最安全。 everysec：每秒仅同步一次fsync。 妥协。\n    #\n    # 默认值为\"everysec\"，因为这通常是速度和数据安全性之间的正确折衷。\n    # 您可以了解是否可以将其放松为\"no\"，这将使操作系统在需要时刷新输出缓冲区，\n    # 以获得更好的性能（但是如果您可以忍受某些数据丢失的想法，\n    # 请考虑使用默认的持久性模式 （即快照），或者相反，使用\"总是\"，该速度非常慢，但比秒安全。\n    #\n    # 更多详细信息，请查看以下文章：\n    # http://antirez.com/post/redis-persistence-demystified.html\n    #\n    # 如果不确定，请使用\"everysec\"。\n\n    # appendfsync always\n    appendfsync everysec\n    # appendfsync no\n\n    # 当AOF fsync策略设置为always或everysec，并且后台保存进程（后台保存或AOF日志后台重写）对磁盘执行大量I/O时，\n    # 在某些Linux配置中，Redis可能会阻塞太长时间 fsync（）调用。\n    # 请注意，目前尚无此修复程序，因为即使在其他线程中执行fsync也将阻止我们的同步write（2）调用。\n    #\n    # 为了减轻此问题，可以使用以下选项，以防止在进行BGSAVE或BGREWRITEAOF时在主进程中调用fsync（）。\n    #\n    # 这意味着当另一个孩子正在保存时，Redis的持久性与\"appendfsync none\"相同。\n    # 实际上，这意味着在最坏的情况下（使用默认的Linux设置）可能会丢失多达30秒的日志。\n    #\n    # 如果您有延迟问题，请将其设为\"是\"。 否则，从耐久性的角度来看，将其保留为\"否\"是最安全的选择。\n\n    no-appendfsync-on-rewrite no\n\n    # 自动重写仅附加文件。\n    # 当AOF日志大小增加指定百分比时，Redis可以自动重写日志文件，隐式调用BGREWRITEAOF。\n    #\n    # 它是这样工作的：Redis会在最近一次重写后记住AOF文件的大小（如果自重新启动以来未发生任何重写，则使用启动时AOF的大小）。\n    #\n    # 将此基本大小与当前大小进行比较。 如果当前大小大于指定的百分比，则触发重写。\n    # 另外，您需要指定要重写的AOF文件的最小大小，这对于避免重写AOF文件非常有用，即使达到百分比增加，但它仍然很小。\n    #\n    # 指定零百分比以禁用自动AOF重写功能。\n\n    auto-aof-rewrite-percentage 100\n    auto-aof-rewrite-min-size 64mb\n\n    # 当AOF数据重新加载到内存中时，在Redis启动过程中可能会发现AOF文件在末尾被截断。\n    # 这可能在运行Redis的系统崩溃时发生，尤其是在没有data = ordered选项的情况下挂载ext4文件系统时（\n    # 但是当Redis本身崩溃或中止但操作系统仍然可以正常工作时，这不会发生）。\n    #\n    # Redis在发生这种情况时可能会退出并显示错误，也可能会加载尽可能多的数据（当前为默认值），\n    # 如果发现AOF文件在末尾被截断，则会重新启动。 以下选项控制此行为。\n    #\n    # 如果aof-load-truncated设置为yes，则将加载截短的AOF文件，并且Redis服务器将开始发出日志以将事件通知用户。\n    # 否则，如果该选项设置为no，则服务器将中止并显示错误并拒绝启动。\n    # 如果将该选项设置为no，则用户需要在重新启动服务器之前使用\"redis-check-aof\"实用程序修复AOF文件。\n    #\n    # 请注意，如果在中间发现AOF文件已损坏，则服务器仍将退出并出现错误。 仅当Redis尝试从AOF文件读取更多数据但找不到足够的字节时，此选项才适用。\n    aof-load-truncated yes\n\n    # 重写AOF文件时，Redis可以使用AOF文件中的RDB前同步码来更快地进行重写和恢复。 启用此选项后，重写的AOF文件由两个不同的节组成：\n    #\n    #   [RDB file][AOF tail]\n    #\n    # 加载时，Redis会识别AOF文件以\"REDIS\"字符串开头并加载带前缀的RDB文件，然后继续加载AOF尾部。\n    aof-use-rdb-preamble yes\n\n    ################################ LUA SCRIPTING(LUA脚本)  ###############################\n\n    # Lua脚本的最大执行时间（以毫秒为单位）。\n    #\n    # 如果达到了最大执行时间，则Redis将记录脚本在允许的最大时间后仍在执行中，并将开始以错误答复查询。\n    #\n    # 当长时间运行的脚本超过最大执行时间时，仅SCRIPT KILL和SHUTDOWN NOSAVE命令可用。\n    # 第一个可用于停止尚未调用写命令的脚本。\n    # 第二种是在脚本已发出写命令但用户不想等待脚本自然终止的情况下关闭服务器的唯一方法。\n    #\n    # 将其设置为0或负值以无警告地无限执行。\n    lua-time-limit 5000\n\n    ################################ REDIS CLUSTER  ###############################\n\n    # 普通Redis实例不能属于Redis集群； 只有作为群集节点启动的节点可以。 为了将Redis实例作为群集节点启动，请在不注释以下内容的情况下启用群集支持：\n    #\n    # cluster-enabled yes\n\n    # 每个群集节点都有一个群集配置文件。 该文件不适合手工编辑。 它由Redis节点创建和更新。\n    # 每个Redis群集节点都需要一个不同的群集配置文件。\n    # 确保在同一系统上运行的实例没有重叠的集群配置文件名。\n    #\n    # cluster-config-file nodes-6379.conf\n\n    # 群集节点超时是一个节点必须不可达的毫秒数，才能将其视为故障状态。\n    # 其他大多数内部时间限制是节点超时的倍数。\n    #\n    # cluster-node-timeout 15000\n\n    # 如果发生故障的主副本的数据看起来太旧，它将避免启动故障转移。\n    #\n    # 没有一种简单的方法可以使副本实际上具有其\"数据寿命\"的准确度量，因此执行以下两项检查：\n    #\n    # 1) 如果存在多个能够进行故障转移的副本，则它们会交换消息，以便尝试利用具有最佳复制偏移量（处理了更多来自主数据库的数据）的副本来获得优势。\n    #    副本将尝试按偏移量获取其等级，并将一个与它们的等级成比例的延迟应用于故障转移。\n    #\n    # 2) 每个单个副本都会计算与其母版之间最后一次交互的时间。\n    #    这可以是最后收到的ping或命令（如果主服务器仍处于\"已连接\"状态），也可以是自从与主服务器断开连接以来经过的时间（如果复制链接当前已关闭）。\n    #    如果最后一次交互太旧，副本将完全不会尝试故障转移。\n    #\n    # 用户可以调整点\"2\"。 具体而言，如果自从上次与主服务器进行交互以来，经过的时间大于以下时间，则副本将不执行故障转移：\n    #\n    #   (node-timeout * replica-validity-factor) + repl-ping-replica-period\n    #\n    # 因此，例如，如果节点超时为30秒，并且副本有效性因子为10，并且假定默认的repl-ping-replica-period值为10秒，\n    # 则副本将无法尝试进行故障转移，如果它不能 与主对话时间超过310秒。\n    #\n    # 较大的副本有效性因子可能会使数据过旧的副本无法对主副本进行故障转移，而值太小可能会使群集根本无法选择副本。\n    #\n    # 为了获得最大可用性，可以将复制品有效性因子设置为0，这意味着，复制品将始终尝试对主数据库进行故障转移，而不考虑它们与主数据库的最后一次交互。\n    # （但是，他们将始终尝试应用与其偏移等级成比例的延迟）。\n    #\n    # 零是唯一能够确保所有分区恢复正常后，群集将始终能够继续运行的值。\n    #\n    # cluster-replica-validity-factor 10\n\n    # 群集副本能够迁移到孤立的主数据库，即那些没有工作副本的主数据库。\n    # 这样可以提高群集抵御故障的能力，因为如果没有工作副本，孤立的主节点在发生故障的情况下将无法进行故障转移。\n    #\n    # 仅当旧的主副本仍存在至少给定数量的其他工作副本时，副本副本才会迁移到孤立的主副本。\n    # 这个数字是\"移民壁垒\"。 迁移障碍为1表示仅当副本数据库的主副本上至少有1个其他工作副本时，副本副本才会迁移。\n    # 它通常反映出集群中每个主数据库所需的副本数。\n    #\n    # 默认为1（副本仅在其主数据库保留至少一个副本时迁移）。 要禁用迁移，只需将其设置为非常大的值即可。\n    # 可以设置为0，但仅对调试和生产危险有用。\n    #\n    # cluster-migration-barrier 1\n\n    # 默认情况下，如果Redis Cluster节点检测到至少发现一个哈希槽（没有可用的节点正在为其提供服务），它们将停止接受查询。\n    # 这样，如果集群部分关闭（例如，不再覆盖哈希槽的范围），则所有集群最终将变得不可用。\n    # 重新覆盖所有插槽后，它将自动返回可用状态。\n    #\n    # 但是有时您希望集群的子集正常工作，以继续接受对仍覆盖的部分键空间的查询。 为此，只需将cluster-require-full-coverage选项设置为no。\n    #\n    # cluster-require-full-coverage yes\n\n    # 此选项设置为yes时，可防止副本在主服务器发生故障时尝试对其主服务器进行故障转移。 但是，主服务器仍然可以执行手动故障转移（如果被迫执行）。\n    #\n    # 这在不同的情况下很有用，尤其是在多个数据中心操作的情况下，如果我们希望在完全DC故障的情况下不对一侧进行升级，则这是不希望的。\n    #\n    # cluster-replica-no-failover no\n\n    # 此选项设置为yes时，只要集群认为自己拥有插槽，就可以在集群处于关闭状态时为节点提供读取流量。\n    #\n    # 这在两种情况下很有用。 第一种情况是在节点故障或网络分区期间应用程序不需要数据一致性时。\n    # 缓存的一个例子，只要节点拥有数据，它就应该能够为它服务。\n    #\n    # 第二个用例是用于不符合建议的三个分片但希望启用集群模式并在以后扩展的配置。\n    # 如果没有设置此选项，则在1或2分片配置中的主服务器中断会导致整个集群的读/写中断，只有在设置了该选项的情况下，才会发生写中断。\n    # 如果没有法定人数的主持人，则插槽所有权不会自动更改。\n    #\n    # cluster-allow-reads-when-down no\n\n    # 为了设置您的集群，请确保阅读文档\n    # 可从http://redis.io网站获得。\n\n    ########################## CLUSTER DOCKER/NAT support  ########################\n\n    # 在某些部署中，Redis Cluster节点的地址发现失败，这是因为地址经过NAT限制或端口被转发（典型情况是Docker和其他容器）。\n    #\n    # 为了使Redis Cluster在这样的环境中工作，需要一个静态配置，其中每个节点都知道其公共地址。 以下两个选项用于此范围，分别是：\n    #\n    # * cluster-announce-ip\n    # * cluster-announce-port\n    # * cluster-announce-bus-port\n    #\n    # 每个命令都向节点指示其地址，客户端端口和集群消息总线端口。 然后将信息发布在总线数据包的标头中，以便其他节点将能够正确映射发布信息的节点的地址。\n    #\n    # 如果未使用上述选项，则将使用常规的Redis群集自动检测。\n    #\n    # 请注意，重新映射后，总线端口可能不在客户端端口+ 10000的固定偏移处，因此您可以根据重新映射的方式指定任何端口和总线端口。\n    # 如果未设置总线端口，通常将使用10000的固定偏移量。\n    #\n    # 示例：\n    #\n    # cluster-announce-ip 10.1.1.5\n    # cluster-announce-port 6379\n    # cluster-announce-bus-port 6380\n\n    ################################## SLOW LOG ###################################\n\n    # Redis Slow Log是一个用于记录超过指定执行时间的查询的系统。\n    # 执行时间不包括与客户端交谈，发送回复等I/O操作，而是实际执行命令所需的时间（\n    # 这是命令执行的唯一阶段，在该阶段线程被阻塞并且可以 在此期间不满足其他要求）。\n    #\n    # 您可以使用以下两个参数配置慢速日志：一个告诉Redis，为了使命令被记录，执行时间要超过多少微秒，而另一个参数是慢速日志的长度。\n    # 记录新命令时，最旧的命令将从记录的命令队列中删除。\n\n    # 以下时间以微秒表示，因此1000000等于一秒。 请注意，负数将禁用慢速日志记录，而零值将强制记录每个命令。\n    slowlog-log-slower-than 10000\n\n    # 此长度没有限制。 请注意，它将消耗内存。\n    # 您可以使用SLOWLOG RESET回收慢速日志使用的内存。\n    slowlog-max-len 128\n\n    ################################ LATENCY MONITOR(延迟监视) ##############################\n\n    # Redis延迟监视子系统会在运行时对不同的操作进行采样，以收集与Redis实例的潜在延迟源相关的数据。\n    #\n    # 通过LATENCY命令，该信息可供打印图形并获取报告的用户使用。\n    #\n    # 系统仅记录在等于或大于通过delay-monitor-threshold配置指令指定的毫秒数内执行的操作。 当其值设置为零时，等待时间监视器将关闭。\n    #\n    # 默认情况下，延迟监视是禁用的，因为如果您没有延迟问题，通常不需要它，并且收集数据会对性能产生影响，尽管影响很小，但是可以在大负载下进行测量。\n    # 如果需要，可以在运行时使用命令\"CONFIG SET delay-monitor-threshold &lt;milliseconds>\"轻松启用延迟监视。\n    latency-monitor-threshold 0\n\n    ############################# EVENT NOTIFICATION(活动通知) ##############################\n\n    # Redis可以将关键空间中发生的事件通知给发布/订阅客户端。\n    # 此功能记录在http://redis.io/topics/notifications\n    #\n    # 例如，如果启用了键空间事件通知，并且客户端对存储在数据库0中的键\"foo\"执行了DEL操作，则将通过Pub / Sub发布两条消息：\n    #\n    # PUBLISH __keyspace@0__:foo del\n    # PUBLISH __keyevent@0__:del foo\n    #\n    # 可以在一组类中选择Redis将通知的事件。 每个类都由一个字符标识：\n    #\n    #  K     键空间事件，以__keyspace@&lt;db>__前缀发布。\n    #  E     键事件，以__keyevent@&lt;db>__前缀发布。\n    #  g     通用命令（非类型专用），例如DEL，EXPIRE，RENAME，...\n    #  $     字符串命令\n    #  l     列出命令\n    #  s     设定指令\n    #  h     哈希命令\n    #  z     排序集命令\n    #  x     过期事件（每次密钥过期时生成的事件）\n    #  e     驱逐事件（驱逐密钥以获取最大内存时生成的事件）\n    #  t     流命令\n    #  m     按键缺失事件（注意：它不包含在\"A\"类中）\n    #  A     g$lshzxet的别名，以便\"AKE\"字符串表示所有事件（由于键丢失事件的独特性质，这些键事件被排除在\"A\"之外）。\n    #\n    # \"notify-keyspace-events\"将由零个或多个字符组成的字符串作为参数。 空字符串表示已禁用通知。\n    #\n    #  Example: to enable list and generic events, from the point of view of the\n    #           event name, use:\n    #\n    #  notify-keyspace-events Elg\n    #\n    #  Example 2: to get the stream of the expired keys subscribing to channel\n    #             name __keyevent@0__:expired use:\n    #\n    #  notify-keyspace-events Ex\n    #\n    # 默认情况下，所有通知均被禁用，因为大多数用户不需要此功能，并且该功能会有一些开销。 请注意，如果您未指定K或E中的至少一个，则不会传递任何事件。\n    notify-keyspace-events \"\"\n\n    ############################### GOPHER SERVER #################################\n\n    # Redis包含RFC 1436（https://www.ietf.org/rfc/rfc1436.txt）中指定的Gopher协议的实现。\n    #\n    # Gopher协议在90年代后期非常流行。 它是Web的替代方法，服务器和客户端的实现是如此简单，以至于Redis服务器只有100行代码才能实现这种支持。\n    #\n    # 您现在如何使用Gopher？ 好吧，Gopher从未真正死过，最近出现了一种运动，目的是使Gopher具有更多层次结构的内容（仅由纯文本文档组成）得以复活。\n    # 有些人希望使用更简单的互联网，另一些人则认为主流互联网已变得过于可控，为想要一点新鲜空气的人们创造替代空间很酷。\n    #\n    # 无论如何，在Redis诞生10周年之际，我们给了它Gopher协议作为礼物。\n    #\n    #   - - 怎么运行的？ ---\n    #\n    # Redis Gopher支持使用Redis的内联协议，特别是两种仍然非法的内联请求：空请求或任何以\"/\"开头的请求（没有以这样的斜杠开头的Redis命令）。\n    # 正常的RESP2/RESP3请求完全超出了Gopher协议实现的范围，并且通常也得到满足。\n    #\n    # 如果在启用Gopher时打开与Redis的连接，并向其发送\"/ foo\"之类的字符串，则如果存在名为\"/ foo\"的密钥，则会通过Gopher协议为其提供服务。\n    #\n    # 为了创建一个真正的Gopher\"hole\"（Gopher对话中Gopher站点的名称），您可能需要类似以下的脚本：\n    #\n    #   https://github.com/antirez/gopher2redis\n    #\n    #   - - 安全警告  - -\n    #\n    # 如果您打算将Redis放在服务器Gopher页面的公共访问地址上，请确保为实例设置密码。\n    # 设置密码后：\n    #\n    #   1. Gopher服务器（启用后，默认情况下未启用）仍将通过Gopher提供内容。\n    #   2. 但是，在客户端进行身份验证之前无法调用其他命令。\n    #\n    # 因此，请使用'requirepass'选项保护您的实例。\n    #\n    # 要启用Gopher支持，请取消注释以下行，并将选项从no（默认）设置为yes。\n    #\n    # gopher-enabled no\n\n    ############################### ADVANCED CONFIG ###############################\n\n    # 当哈希条目数较少且最大条目数不超过给定阈值时，将使用内存高效的数据结构对其进行编码。 可以使用以下指令配置这些阈值。\n    hash-max-ziplist-entries 512\n    hash-max-ziplist-value 64\n\n    # 列表也以特殊方式编码，以节省大量空间。\n    # 每个内部列表节点允许的条目数可以指定为固定的最大大小或最大元素数。\n    # 对于固定的最大大小，请使用-5到-1，表示：\n    # -5：最大大小：64 Kb &lt;-不建议用于正常工作负载\n    # -4：最大大小：32 Kb &lt;-不推荐\n    # -3：最大大小：16 Kb &lt;-可能不建议\n    # -2：最大大小：8 Kb  &lt;-好\n    # -1：最大大小：4 Kb  &lt;-好\n    # 正数表示每个列表节点最多存储_exactly_个元素。\n    # 最高性能的选项通常是-2（8 Kb大小）或-1（4 Kb大小），但是如果您的用例是唯一的，请根据需要调整设置。\n    list-max-ziplist-size -2\n\n\n    # 列表也可能被压缩。\n    # 压缩深度是从列表的*each*侧到*exclude*压缩的快速列表ziplist节点的数量。为了快速执行 push/pop 出操作，列表的开头和结尾始终未压缩。 设置为：\n    # 0: 禁用所有列表压缩\n    # 1: 深度1表示\"直到头上有1个节点之后，才开始压缩\"\n    #    So: [head]->node->node->...->node->[tail]\n    #    [head], [tail] will always be uncompressed; inner nodes will compress.\n    # 2: [head]->[next]->node->node->...->node->[prev]->[tail]\n    #    这里的2表示：不要压缩head或head-> next或tail-> prev或tail，而是压缩它们之间的所有节点。\n    # 3: [head]->[next]->[next]->node->node->...->node->[prev]->[prev]->[tail]\n    # 等\n    list-compress-depth 0\n\n    # 集仅在一种情况下具有特殊的编码：当集仅由字符串组成，这些字符串恰好是基数10中的整数，范围为64位有符号整数。\n    # 以下配置设置设置了大小限制，以便使用此特殊的内存节省编码。\n    set-max-intset-entries 512\n\n    # 与散列和列表类似，对排序集也进行了特殊编码，以节省大量空间。 仅当排序集的长度和元素低于以下限制时，才使用此编码：\n    zset-max-ziplist-entries 128\n    zset-max-ziplist-value 64\n\n    # HyperLogLog稀疏表示字节数限制。 限制包括16个字节的标头。 当使用稀疏表示的HyperLogLog超过此限制时，它将转换为密集表示。\n    #\n    # 大于16000的值是完全没有用的，因为那时候密集表示的存储效率更高。\n    #\n    # 建议的值是〜3000，以便在不减慢PFADD的情况下获得节省空间编码的优点，而PFADD的稀疏编码为O（N）。\n    # 当不关心CPU但空间很大时，该值可以提高到10000，并且数据集由基数在0-15000范围内的许多HyperLogLog组成。\n    hll-sparse-max-bytes 3000\n\n    # 流宏节点的最大大小/项目。 流数据结构是一个大节点的基数树，它对内部的多个项目进行编码。\n    # 使用此配置，可以配置单个节点的大小（以字节为单位），以及在添加新的流条目时切换到新节点之前它可能包含的最大项目数。\n    # 如果以下任何设置被设置为零，则该限制将被忽略，例如，可以通过将max-bytes设置为0并将max-entries设置为所需值来仅设置最大整体限制。\n    stream-node-max-bytes 4096\n    stream-node-max-entries 100\n\n    # 主动重新哈希处理每100毫秒CPU时间使用1毫秒，以帮助重新哈希主Redis哈希表（将顶级键映射到值的一个哈希表）。\n    # Redis使用的哈希表实现（请参见dict.c）执行一次懒惰的重新哈希处理：您在要进行哈希处理的哈希表中运行的操作越多，\n    # 执行的哈希处理\"步骤\"就越多，因此，如果服务器空闲，则哈希处理将永远不会完成 散列表使用更多的内存。\n    #\n    # 默认值是每秒使用10毫秒的毫秒数来主动重新哈希主字典，并在可能的情况下释放内存。\n    #\n    # 如果不确定：\n    # 如果您有严格的延迟要求，请使用\"activerehashing no\"，并且在您的环境中，Redis可以不时地以2毫秒的延迟答复查询不是一件好事。\n    #\n    # 如果您没有如此严格的要求，但希望在可能的情况下尽快释放内存，请使用\"activerehashing yes\"。\n    activerehashing yes\n\n    # 客户端输出缓冲区限制可用于出于某些原因强制断开那些没有足够快地从服务器读取数据的客户端（\n    # 常见原因是Pub/Sub客户端无法像发布者所产生的那样快地消费消息。 他们）。\n    #\n    # 可以为三种不同类别的客户端设置不同的限制：\n    #\n    # normal -> 普通客户，包括MONITOR客户\n    # replica  -> 复制客户端\n    # pubsub -> 客户订阅了至少一个pubsub频道或模式\n    #\n    # 每个client-output-buffer-limit指令的语法如下：\n    #\n    # client-output-buffer-limit &lt;class> &lt;hard limit> &lt;soft limit> &lt;soft seconds>\n    #\n    # 一旦达到硬限制，或者达到软限制并且在指定的秒数内（连续）保持达到此限制，客户端将立即断开连接。\n    # 因此，例如，如果硬限制为32兆字节，软限制为16兆字节/ 10秒，则如果输出缓冲区的大小达到32兆字节，客户端将立即断开连接，\n    # 但是如果客户端达到16兆字节，则也将断开连接 并持续超过限制10秒钟。\n    #\n    # 默认情况下，普通客户端不受限制，因为它们不会在不询问的情况下（以推送方式）接收数据，而是在请求之后才接收数据，\n    # 因此只有异步客户端可能会创建这样一种场景：请求数据的速度比读取数据的速度快。\n    #\n    # 相反，对pubsub和副本客户端没有默认限制，因为订阅者和副本以推送方式接收数据。\n    #\n    # 可以通过将硬限制或软限制设置为零来禁用它们。\n    client-output-buffer-limit normal 0 0 0\n    client-output-buffer-limit replica 256mb 64mb 60\n    client-output-buffer-limit pubsub 32mb 8mb 60\n\n    # 客户端查询缓冲区累积新命令。 默认情况下，它们被限制为固定数量，以避免协议去同步（例如，由于客户端中的错误）会导致查询缓冲区中的未绑定内存使用。 # 但是，如果您有非常特殊的需求，例如巨大的multi / exec请求等，则可以在此处进行配置。\n    #\n    # client-query-buffer-limit 1gb\n\n    # 在Redis协议中，批量请求（即表示单个字符串的元素）通常限制为512 mb以上。 但是，您可以在此处更改此限制。\n    #\n    # proto-max-bulk-len 512mb\n\n    # Redis调用一个内部函数来执行许多后台任务，例如在超时时关闭客户端连接，清除从未请求的过期密钥等。\n    #\n    # 并非所有任务都以相同的频率执行，但是Redis根据指定的\"hz\"值检查要执行的任务。\n    #\n    # 默认情况下，\"hz\"设置为10。提高该值将在Redis空闲时使用更多的CPU，但是同时当有多个键同时到期时，它将使Redis的响应速度更快，并且可以使用 更精确。\n    #\n    # 范围在1到500之间，但是值通常不能超过100。 大多数用户应该使用默认值10，并且仅在要求非常低延迟的环境中才将其提高到100。\n    hz 10\n\n    # 通常，与连接的客户端数量成比例的HZ值很有用。 例如，这有助于避免每次后台任务调用处理过多的客户端，从而避免延迟尖峰。\n    #\n    # 由于默认的默认HZ值保守地设置为10，Redis提供并默认启用了使用自适应HZ值的能力，当有许多连接的客户端时，该值将暂时升高。\n    #\n    # 启用动态HZ时，实际配置的HZ将用作基准，但是一旦连接了更多客户端，实际将使用配置的HZ值的倍数。\n    # 这样，空闲实例将占用很少的CPU时间，而忙碌的实例将具有更高的响应速度。\n    dynamic-hz yes\n\n    # 当孩子重写AOF文件时，如果启用以下选项，则每生成32 MB的数据，文件就会进行同步处理。 为了将文件更多地提交到磁盘并避免大的延迟尖峰，这很有用。\n    aof-rewrite-incremental-fsync yes\n\n    # 当redis保存RDB文件时，如果启用以下选项，则每生成32 MB数据将对文件进行fsync处理。 为了将文件更多地提交到磁盘并避免大的延迟尖峰，这很有用。\n    rdb-save-incremental-fsync yes\n\n    # 可以调整Redis LFU逐出（请参阅maxmemory设置）。\n    # 但是，最好从默认设置开始，仅在研究了如何提高性能以及LFU键随时间的变化后才进行更改，可以通过OBJECT FREQ命令进行检查。\n    #\n    # Redis LFU实现中有两个可调参数：计数器对数因子和计数器衰减时间。 重要的是在更改两个参数之前先了解它们的含义。\n    #\n    # LFU计数器每个密钥只有8位，最大值是255，因此Redis使用具有对数行为的概率增量。 给定旧计数器的值，当访问一个键时，计数器以这种方式递增：\n    #\n    # 1. A random number R between 0 and 1 is extracted.\n    # 2. A probability P is calculated as 1/(old_value*lfu_log_factor+1).\n    # 3. The counter is incremented only if R &lt; P.\n    #\n    # 默认的lfu-log-factor是10。这是一个表格，该表格显示频率计数器如何随着具有不同对数因子的不同访问次数而变化：\n    #\n    # +--------+------------+------------+------------+------------+------------+\n    # | factor | 100 hits   | 1000 hits  | 100K hits  | 1M hits    | 10M hits   |\n    # +--------+------------+------------+------------+------------+------------+\n    # | 0      | 104        | 255        | 255        | 255        | 255        |\n    # +--------+------------+------------+------------+------------+------------+\n    # | 1      | 18         | 49         | 255        | 255        | 255        |\n    # +--------+------------+------------+------------+------------+------------+\n    # | 10     | 10         | 18         | 142        | 255        | 255        |\n    # +--------+------------+------------+------------+------------+------------+\n    # | 100    | 8          | 11         | 49         | 143        | 255        |\n    # +--------+------------+------------+------------+------------+------------+\n    #\n    # 注意：上表是通过运行以下命令获得的：\n    #\n    #   redis-benchmark -n 1000000 incr foo\n    #   redis-cli object freq foo\n    #\n    # 注意2：计数器的初始值为5，以便使新对象有机会累积命中数。\n    #\n    # 计数器衰减时间是必须经过的时间（以分钟为单位），以便将密钥计数器除以2（如果值小于等于10，则递减）。\n    #\n    # lfu-decay-time的默认值为1。特殊值0表示每次碰巧扫描计数器都会使其衰减。\n    #\n    # lfu-log-factor 10\n    # lfu-decay-time 1\n\n    ########################## ACTIVE DEFRAGMENTATION(主动碎片整理) #######################\n    #\n    # 什么是主动碎片整理？\n    # -------------------------------\n    #\n    # 通过主动（在线）碎片整理，Redis服务器可以压缩内存中小量分配和释放数据之间剩余的空间，从而可以回收内存。\n    #\n    # 碎片是每个分配器（幸运的是，Jemalloc发生的情况）和某些工作负载都会发生的自然过程。\n    # 通常，需要重新启动服务器以减少碎片，或者至少清除所有数据并重新创建。\n    # 但是，由于Oran Agra为Redis 4.0实现了此功能，因此在服务器运行时，此过程可以在运行时以\"热\"方式进行。\n    #\n    # 基本上，当碎片超过一定级别时（请参阅下面的配置选项），Redis将开始通过利用某些特定的Jemalloc功能在连续的内存区域中创建值的新副本（\n    # 以了解分配是否导致碎片，并 将其分配到更好的位置），同时将释放数据的旧副本。\n    # 对于所有键，以增量方式重复此过程将导致碎片恢复到正常值。\n    #\n    # 重要事项：\n    #\n    # 1. 默认情况下，此功能是禁用的，并且仅当您编译Redis以使用我们随Redis的源代码提供的Jemalloc副本时才起作用。\n    #    这是Linux构建的默认设置。\n    #\n    # 2. 如果没有碎片问题，则无需启用此功能。\n    #\n    # 3. 一旦遇到碎片，您可以在需要时使用命令\"CONFIG SET activedefrag yes\"启用此功能。\n    #\n    # 配置参数能够微调碎片整理过程的行为。 如果您不确定它们的含义，最好不要更改默认值。\n\n    # 启用主动碎片整理\n    # activedefrag no\n\n    # 启动主动碎片整理的最小碎片浪费\n    # active-defrag-ignore-bytes 100mb\n\n    # 启动活动碎片整理的最小碎片百分比\n    # active-defrag-threshold-lower 10\n\n    # 我们最大程度地努力下的最大碎片百分比\n    # active-defrag-threshold-upper 100\n\n    # 在达到下限阈值时使用最小的CPU碎片整理工作\n    # active-defrag-cycle-min 1\n\n    # 在达到上限阈值时使用最大的精力进行碎片整理\n    # active-defrag-cycle-max 25\n\n    # 将在主字典扫描中处理的set / hash / zset / list字段的最大数量\n    # active-defrag-max-scan-fields 1000\n\n    # 默认情况下，将启用用于清除的Jemalloc后台线程\n    jemalloc-bg-thread yes\n\n    # 可以将Redis的不同线程和进程固定到系统中的特定CPU，以最大化服务器的性能。\n    # 这不仅可以在不同的CPU中固定不同的Redis线程，而且还可以确保将在同一主机上运行的多个Redis实例固定到不同的CPU。\n    #\n    # 通常，您可以使用\"taskset\"命令执行此操作，但是在Linux和FreeBSD中，也可以直接通过Redis配置进行此操作。\n    #\n    # 您可以固定服务器/ IO线程，生物线程，aof重写子进程和bgsave子进程。 指定cpu列表的语法与taskset命令相同：\n    #\n    # Set redis server/io threads to cpu affinity 0,2,4,6:\n    # server_cpulist 0-7:2\n    #\n    # Set bio threads to cpu affinity 1,3:\n    # bio_cpulist 1,3\n    #\n    # Set aof rewrite child process to cpu affinity 8,9,10,11:\n    # aof_rewrite_cpulist 8-11\n    #\n    # Set bgsave child process to cpu affinity 1,10,11\n    # bgsave_cpulist 1,10-11\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"8-2-创建deployment文件\"><a href=\"#8-2-创建deployment文件\" class=\"headerlink\" title=\"8.2 创建deployment文件\"></a>8.2 创建deployment文件</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">1</span>-deployment.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-deployment\n  labels:\n    app: redis\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: redis\n  template:\n    metadata:\n      labels:\n        app: redis\n    spec:\n      containers:\n      - name: redis\n        image: redis:6\n        ports:\n        - containerPort: 6379\n        command:\n            - \"sh\"\n            - \"-c\"\n            - \"redis-server /etc/redis.conf\"\n        volumeMounts:\n        - name: redis-config\n          mountPath: /etc/redis.conf\n          subPath: redis.conf\n      volumes:\n      - name: redis-config\n        configMap:\n          name: redis-config\n          items:\n          - key: redis.conf\n            path: redis.conf\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"8-3-创建服务暴露\"><a href=\"#8-3-创建服务暴露\" class=\"headerlink\" title=\"8.3 创建服务暴露\"></a>8.3 创建服务暴露</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span>-service.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis\n  labels:\n    app: redis\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n      nodePort: 30003\n  type: NodePort\n  selector:\n    app: redis\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"8-4-应用\"><a href=\"#8-4-应用\" class=\"headerlink\" title=\"8.4 应用\"></a>8.4 应用</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">0</span>-configMap.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">1</span>-deployment.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-service.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"九、部署kube-prometheus\"><a href=\"#九、部署kube-prometheus\" class=\"headerlink\" title=\"九、部署kube-prometheus\"></a>九、部署kube-prometheus</h1><h2 id=\"9-1-下载解压，修复监控\"><a href=\"#9-1-下载解压，修复监控\" class=\"headerlink\" title=\"9.1 下载解压，修复监控\"></a>9.1 下载解压，修复监控</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://ghproxy.com/https://github.com/prometheus-operator/kube-prometheus/archive/refs/tags/v0.12.0.zip\n<span class=\"token function\">unzip</span> v0.12.0.zip\n<span class=\"token builtin class-name\">cd</span> kube-prometheus-0.12.0/manifests\n<span class=\"token comment\">#替换所有granfana版本为9.0.2</span>\n<span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s|9.3.2|9.0.2|g'</span> grafana-*<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"1-配置kubeControllermanagerService\"><a href=\"#1-配置kubeControllermanagerService\" class=\"headerlink\" title=\"1.配置kubeControllermanagerService\"></a>1.配置kubeControllermanagerService</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> repair-prometheus <span class=\"token punctuation\">;</span>\n<span class=\"token function\">cat</span> <span class=\"token operator\">>></span> repair-prometheus/kubeControllermanagerService.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  labels: #定义这个service的标签，因为kubernetesControlPlane-serviceMonitorKubeControllerManager.yaml里面定义了这个标签\n      app.kubernetes.io/name: kube-controller-manager\n  name: kube-controller-manager\n  namespace: kube-system        #名称空间是kube-system\nspec:\n  selector:               #这个标签选择器表示我们要关联到kube-controller-manager-master的pod上\n    component: kube-controller-manager  #kubectl get pods kube-controller-manager-master -n kube-system --show-labels\n  ports:\n  - name: https-metrics         #service端口名称，这个名称要与ServiceMonitor的port名称一致\n    port: 10257\n    targetPort: 10257         # kube-controller-manager-master的pod的端口\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"2-配置kubeSchedulerService\"><a href=\"#2-配置kubeSchedulerService\" class=\"headerlink\" title=\"2.配置kubeSchedulerService\"></a>2.配置kubeSchedulerService</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> repair-prometheus/kubeSchedulerService.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  labels: #定义这个service的标签，因为kubernetesControlPlane-serviceMonitorKubeScheduler.yaml里面定义了这个标签\n      app.kubernetes.io/name: kube-scheduler\n  name: kube-scheduler\n  namespace: kube-system    #名称空间是kube-system\nspec:\n  selector:           #这个标签选择器表示我们要关联到kube-scheduler的pod上\n    component: kube-scheduler # kubectl get  pods kube-scheduler-master -n kube-system --show-labels\n  ports:\n  - name: https-metrics     #service端口名称，这个名称要与ServiceMonitor的port名称一致\n    port: 10259\n    targetPort: 10259     #kube-scheduler-master的端口\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"3-修改绑定ip-可选-master节点都需执行\"><a href=\"#3-修改绑定ip-可选-master节点都需执行\" class=\"headerlink\" title=\"3.修改绑定ip(可选,master节点都需执行)\"></a>3.修改绑定ip(可选,master节点都需执行)</h3><blockquote>\n<p>还有一点，kube-scheduler-master和kube-controller-manager这2个pod启动的时候默认绑定的地址是127.0.0.1,所以普罗米修斯通过ip去访问<br>就会被拒绝，所以需要修改一下，我们知道这2个系统组件是是以静态pod的方式启动的，所以进入到master节点的静态pod目录<br>如果我们不指定静态pod目录时在哪里，可以通过kubelet查看</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">\n<span class=\"token punctuation\">[</span>root@master manifests<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl  status kubelet.service | grep '\\-\\-config'</span>\n           └─429488 /usr/bin/kubelet --bootstrap-kubeconfig<span class=\"token operator\">=</span>/etc/kubernetes/bootstrap-kubelet.conf <span class=\"token parameter variable\">--kubeconfig</span><span class=\"token operator\">=</span>/etc/kubernetes/kubelet.conf <span class=\"token parameter variable\">--config</span><span class=\"token operator\">=</span>/var/lib/kubelet/config.yaml --network-plugin<span class=\"token operator\">=</span>cni --pod-infra-container-image<span class=\"token operator\">=</span>registry.aliyuncs.com/google_containers/pause:3.5\n\n<span class=\"token punctuation\">[</span>root@master manifests<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep static /var/lib/kubelet/config.yaml</span>\nstaticPodPath: /etc/kubernetes/manifests\t\t\t\t\t\t<span class=\"token comment\">#这就是静态pod的目录</span>\n<span class=\"token punctuation\">[</span>root@master manifests<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span>\n\n<span class=\"token punctuation\">[</span>root@master ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd /etc/kubernetes/manifests</span>\n<span class=\"token punctuation\">[</span>root@master manifests<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep 192 kube-scheduler.yaml </span>\n    - --bind-address<span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.118.131\t<span class=\"token comment\">#修改127.0.0.1为主机的ip,修改为0.0.0.0也行</span>\n        host: <span class=\"token number\">192.168</span>.118.131\t\t\t<span class=\"token comment\">#其实保持默认127.0.0.1也行</span>\n        host: <span class=\"token number\">192.168</span>.118.131\t\t\t<span class=\"token comment\">#其实保持默认127.0.0.1也行</span>\n<span class=\"token punctuation\">[</span>root@master manifests<span class=\"token punctuation\">]</span><span class=\"token comment\"># </span>\n\n<span class=\"token punctuation\">[</span>root@master manifests<span class=\"token punctuation\">]</span><span class=\"token comment\"># vim kube-controller-manager.yaml \t\t</span>\n    - --bind-address<span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.118.131\t<span class=\"token comment\">#修改127.0.0.1为主机的ip,修改为0.0.0.0也行</span>\n        host: <span class=\"token number\">192.168</span>.118.131\t\t\t<span class=\"token comment\">#其实保持默认127.0.0.1也行</span>\n        host: <span class=\"token number\">192.168</span>.118.131\t\t\t<span class=\"token comment\">#其实保持默认127.0.0.1也行</span>\n<span class=\"token punctuation\">[</span>root@master manifests<span class=\"token punctuation\">]</span><span class=\"token comment\"># </span>\n\n<span class=\"token comment\">#发现修改后scheduler和controller-manager pod消失了，一直也没有重新创建pod</span>\n<span class=\"token comment\">#所以重启kubelet后pod都正常了</span>\n<span class=\"token punctuation\">[</span>root@master manifests<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl  restart kubelet.service\t</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"9-2-配置prometheus持久化\"><a href=\"#9-2-配置prometheus持久化\" class=\"headerlink\" title=\"9.2 配置prometheus持久化\"></a>9.2 配置prometheus持久化</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> prometheus-prometheus.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>添加</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">storage</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#这部分为持久化配置</span>\n    <span class=\"token key atrule\">volumeClaimTemplate</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">storageClassName</span><span class=\"token punctuation\">:</span> nfs<span class=\"token punctuation\">-</span>retain\n        <span class=\"token key atrule\">accessModes</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"ReadWriteOnce\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">storage</span><span class=\"token punctuation\">:</span> 100Gi<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"/_v_images/20230225220608720_31631.png\"></p>\n<h2 id=\"9-3-存储时长配置为30天\"><a href=\"#9-3-存储时长配置为30天\" class=\"headerlink\" title=\"9.3  存储时长配置为30天\"></a>9.3  存储时长配置为30天</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> prometheusOperator-deployment.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>添加</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> storage.tsdb.retention.time=30d <span class=\"token comment\"># 在这添加time参数</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"/_v_images/20230225220844419_31241.png\"></p>\n<h2 id=\"9-4-Grafana配置持久化\"><a href=\"#9-4-Grafana配置持久化\" class=\"headerlink\" title=\"9.4 Grafana配置持久化\"></a>9.4 Grafana配置持久化</h2><h3 id=\"1-建立grafana-pvc\"><a href=\"#1-建立grafana-pvc\" class=\"headerlink\" title=\"1.建立grafana-pvc\"></a>1.建立grafana-pvc</h3><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">cat <span class=\"token punctuation\">></span><span class=\"token punctuation\">></span> grafana<span class=\"token punctuation\">-</span>pvc.yaml &lt;&lt; \"EOF\"\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> PersistentVolumeClaim\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> grafana<span class=\"token punctuation\">-</span>pvc\n    <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> monitoring\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">accessModes</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> ReadWriteOnce\n  <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">storage</span><span class=\"token punctuation\">:</span> 10Gi\n  <span class=\"token key atrule\">storageClassName</span><span class=\"token punctuation\">:</span> nfs<span class=\"token punctuation\">-</span>retain\nEOF\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"2-修改grafana-deployment-yaml\"><a href=\"#2-修改grafana-deployment-yaml\" class=\"headerlink\" title=\"2.修改grafana-deployment.yaml\"></a>2.修改grafana-deployment.yaml</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> grafana-deployment.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>把emptydir存储方式改为pvc方式：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> grafana<span class=\"token punctuation\">-</span>storage\n        <span class=\"token key atrule\">persistentVolumeClaim</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">claimName</span><span class=\"token punctuation\">:</span> grafana<span class=\"token punctuation\">-</span>pvc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"/_v_images/20230225221220644_31675.png\"></p>\n<h2 id=\"9-5-创建服务暴露\"><a href=\"#9-5-创建服务暴露\" class=\"headerlink\" title=\"9.5 创建服务暴露\"></a>9.5 创建服务暴露</h2><h3 id=\"1-暴露grafana\"><a href=\"#1-暴露grafana\" class=\"headerlink\" title=\"1.暴露grafana\"></a>1.暴露grafana</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> grafana-service.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>添加</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">\t<span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30006</span>\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> NodePort <span class=\"token comment\">#Serive的类型，ClusterIP/NodePort/LoaderBalancer</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"/_v_images/20230225223255518_4701.png\"></p>\n<h3 id=\"2-暴露Prometheus\"><a href=\"#2-暴露Prometheus\" class=\"headerlink\" title=\"2.暴露Prometheus\"></a>2.暴露Prometheus</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> prometheus-service.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>修改</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> web\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">9090</span>\n    <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> web\n    <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30007</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> reloader<span class=\"token punctuation\">-</span>web\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n    <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> reloader<span class=\"token punctuation\">-</span>web\n    <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30008</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> NodePort\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"/_v_images/20230225223423127_18660.png\"></p>\n<h3 id=\"3-暴露Alert-Manager\"><a href=\"#3-暴露Alert-Manager\" class=\"headerlink\" title=\"3.暴露Alert Manager\"></a>3.暴露Alert Manager</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> alertmanager-service.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>修改</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> web\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">9093</span>\n    <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> web\n    <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30009</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> reloader<span class=\"token punctuation\">-</span>web\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n    <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> reloader<span class=\"token punctuation\">-</span>web\n    <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30010</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> NodePort\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"/_v_images/20230225223603943_14622.png\"></p>\n<h2 id=\"9-6-自定义DashboardPage文件JS\"><a href=\"#9-6-自定义DashboardPage文件JS\" class=\"headerlink\" title=\"9.6 自定义DashboardPage文件JS\"></a>9.6 自定义DashboardPage文件JS</h2><p>修改<code>grafana-deployment.yaml</code></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> grafana-deployment.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>把emptydir存储方式改为pvc方式：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> dashboardpage<span class=\"token punctuation\">-</span>js<span class=\"token punctuation\">-</span>volume\n          <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /usr/share/grafana/public/build/DashboardPage.53b203c85adb3a57b1ac.js\n          <span class=\"token key atrule\">subPath</span><span class=\"token punctuation\">:</span> DashboardPage.53b203c85adb3a57b1ac.js\n\n\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> dashboardpage<span class=\"token punctuation\">-</span>js<span class=\"token punctuation\">-</span>volume\n        <span class=\"token key atrule\">configMap</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> grafana<span class=\"token punctuation\">-</span>dashboardpage<span class=\"token punctuation\">-</span>js<span class=\"token punctuation\">-</span>configmap\n          <span class=\"token key atrule\">items</span><span class=\"token punctuation\">:</span>\n          <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> DashboardPage.53b203c85adb3a57b1ac.js\n            <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> DashboardPage.53b203c85adb3a57b1ac.js<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>![](_v_images&#x2F;20230226003837612_11533.png &#x3D;693x)</p>\n<p>修改grafana.ini<br><code>vim grafana-config.yaml</code></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">[</span>security<span class=\"token punctuation\">]</span>\nallow_embedding = true\n<span class=\"token punctuation\">[</span>auth.anonymous<span class=\"token punctuation\">]</span>\nenabled = true\n<span class=\"token punctuation\">[</span>users<span class=\"token punctuation\">]</span>\ndefault_theme = light<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"/_v_images/20230314151316709_27596.png\"></p>\n<h2 id=\"9-7-安装\"><a href=\"#9-7-安装\" class=\"headerlink\" title=\"9.7 安装\"></a>9.7 安装</h2><p>上传DashboardPage附件：<br><a href=\"_v_attachments/20230225224217873_1139/DashboardPage.53b203c85adb3a57b1ac.js\">DashboardPage.53b203c85adb3a57b1ac.js</a></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">..</span>\nkubectl create ns monitoring\n<span class=\"token comment\">#将附件DashboardPage.53b203c85adb3a57b1ac.js上传服务器</span>\nkubectl create configmap <span class=\"token parameter variable\">-n</span> monitoring grafana-dashboardpage-js-configmap --from-file<span class=\"token operator\">=</span>DashboardPage.53b203c85adb3a57b1ac.js\n\nkubectl apply --server-side <span class=\"token parameter variable\">-f</span> kube-prometheus-0.12.0/manifests/setup\nkubectl <span class=\"token function\">wait</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token parameter variable\">--for</span> <span class=\"token assign-left variable\">condition</span><span class=\"token operator\">=</span>Established <span class=\"token punctuation\">\\</span>\n\t<span class=\"token parameter variable\">--all</span> CustomResourceDefinition <span class=\"token punctuation\">\\</span>\n\t<span class=\"token parameter variable\">--namespace</span><span class=\"token operator\">=</span>monitoring\nkubectl apply <span class=\"token parameter variable\">-f</span> kube-prometheus-0.12.0/manifests/\n\n\n<span class=\"token comment\">#镜像下载</span>\nctr <span class=\"token parameter variable\">-n</span> k8s.io i pull k8s.dockerproxy.com/kube-state-metrics/kube-state-metrics:v2.7.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i pull k8s.dockerproxy.com/prometheus-adapter/prometheus-adapter:v0.10.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i tag k8s.dockerproxy.com/kube-state-metrics/kube-state-metrics:v2.7.0 registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.7.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i tag k8s.dockerproxy.com/prometheus-adapter/prometheus-adapter:v0.10.0 registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.10.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i <span class=\"token function\">rm</span> k8s.dockerproxy.com/kube-state-metrics/kube-state-metrics:v2.7.0\nctr <span class=\"token parameter variable\">-n</span> k8s.io i <span class=\"token function\">rm</span> k8s.dockerproxy.com/prometheus-adapter/prometheus-adapter:v0.10.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"9-8-部署完毕后无法访问，删除网络策略\"><a href=\"#9-8-部署完毕后无法访问，删除网络策略\" class=\"headerlink\" title=\"9.8 部署完毕后无法访问，删除网络策略\"></a>9.8 部署完毕后无法访问，删除网络策略</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl delete networkpolicy <span class=\"token parameter variable\">--all</span> <span class=\"token parameter variable\">-n</span> monitoring<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n<h2 id=\"9-9-访问\"><a href=\"#9-9-访问\" class=\"headerlink\" title=\"9.9 访问\"></a>9.9 访问</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#Prometheus</span>\n通过 http://174.1.0.98:30007/ 访问\n\n<span class=\"token comment\">#Grafana</span>\n通过 http://174.1.0.98:30006/ 访问并使用默认的 grafana 用户：密码 admin:admin\n\n<span class=\"token comment\">#Alert Manager</span>\n通过 http://174.1.0.98:30009/ 访问<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"9-10-导入模板，配置亮色主题\"><a href=\"#9-10-导入模板，配置亮色主题\" class=\"headerlink\" title=\"9.10 导入模板，配置亮色主题\"></a>9.10 导入模板，配置亮色主题</h2><p>模板：<br><a href=\"_v_attachments/20230225224217873_1139/pageinfo-1668405034945.json\">pageinfo-1668405034945.json</a></p>\n<p>![](_v_images&#x2F;20230313122509763_28393.png &#x3D;1091x)<br>![](_v_images&#x2F;20230313122521689_31570.png &#x3D;603x)<br>![](_v_images&#x2F;20230313122543495_21901.png &#x3D;530x)<br>![](_v_images&#x2F;20230313122618215_12330.png &#x3D;762x)</p>\n<h1 id=\"十、era后端部署\"><a href=\"#十、era后端部署\" class=\"headerlink\" title=\"十、era后端部署\"></a>十、era后端部署</h1><h2 id=\"10-1-登陆数据库，创建era用户及库\"><a href=\"#10-1-登陆数据库，创建era用户及库\" class=\"headerlink\" title=\"10.1 登陆数据库，创建era用户及库\"></a>10.1 登陆数据库，创建era用户及库</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">use</span> mysql<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">database</span> era <span class=\"token keyword\">CHARACTER</span> <span class=\"token keyword\">SET</span> utf8mb4 <span class=\"token keyword\">COLLATE</span> utf8mb4_bin<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">user</span> <span class=\"token string\">'era'</span><span class=\"token variable\">@'%'</span> identified <span class=\"token keyword\">by</span> <span class=\"token string\">'&amp;V#^hjmp9%44G@'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">grant</span> <span class=\"token keyword\">all</span> <span class=\"token keyword\">privileges</span> <span class=\"token keyword\">on</span> era<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token keyword\">to</span> <span class=\"token string\">'era'</span><span class=\"token variable\">@'%'</span><span class=\"token punctuation\">;</span>\nflush <span class=\"token keyword\">privileges</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>导入附近sql模板：<br><a href=\"_v_attachments/20230225224217873_1139/era-prod.sql\">era-prod.sql</a></p>\n<h2 id=\"10-2-修改bootstrap-yml配置文件nacos地址\"><a href=\"#10-2-修改bootstrap-yml配置文件nacos地址\" class=\"headerlink\" title=\"10.2 修改bootstrap.yml配置文件nacos地址\"></a>10.2 修改bootstrap.yml配置文件nacos地址</h2><p><code>vim bootstrap.yml</code></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># 开发环境配置</span>\n<span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># 服务器的HTTP端口，默认为8080</span>\n  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n  <span class=\"token key atrule\">servlet</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 应用的访问路径</span>\n    <span class=\"token key atrule\">context-path</span><span class=\"token punctuation\">:</span> /api/v1\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> era<span class=\"token punctuation\">-</span>admin\n  <span class=\"token key atrule\">jackson</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">time-zone</span><span class=\"token punctuation\">:</span> GMT+8\n    <span class=\"token comment\"># 默认属性系列化策略：always、non_null、non_empty、non_absent、use_default..</span>\n    <span class=\"token key atrule\">default-property-inclusion</span><span class=\"token punctuation\">:</span> always\n    <span class=\"token comment\"># date 类型以时间戳返回</span>\n    <span class=\"token key atrule\">serialization</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">write-dates-as-timestamps</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n      <span class=\"token comment\"># 序列化返回空对象</span>\n      <span class=\"token key atrule\">FAIL_ON_EMPTY_BEANS</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">nacos</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> nacos\n      <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> nacos\n      <span class=\"token key atrule\">discovery</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 服务注册地址</span>\n        <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> nacos.default.svc.cluster.local<span class=\"token punctuation\">:</span><span class=\"token number\">8848</span>\n        <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ea2ee798<span class=\"token punctuation\">-</span>43db<span class=\"token punctuation\">-</span>4b50<span class=\"token punctuation\">-</span>8033<span class=\"token punctuation\">-</span>baf43599aea5\n\n        <span class=\"token comment\"># server-addr: 10.36.160.102:8848</span>\n        <span class=\"token comment\"># namespace: dev</span>\n      <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">server-addr</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span>spring.cloud.nacos.discovery.server<span class=\"token punctuation\">-</span>addr<span class=\"token punctuation\">&#125;</span>\n        <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span>spring.cloud.nacos.discovery.namespace<span class=\"token punctuation\">&#125;</span>\n        <span class=\"token key atrule\">file-extension</span><span class=\"token punctuation\">:</span> yml\n        <span class=\"token comment\">#指定共享配置，且支持动态刷新</span>\n        <span class=\"token key atrule\">extension-configs</span><span class=\"token punctuation\">:</span>\n          <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">data-id</span><span class=\"token punctuation\">:</span> application.yml\n            <span class=\"token key atrule\">refresh</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n          <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">data-id</span><span class=\"token punctuation\">:</span> sys<span class=\"token punctuation\">-</span>config.yml\n            <span class=\"token key atrule\">refresh</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n          <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">data-id</span><span class=\"token punctuation\">:</span> kubeconfig.yml\n            <span class=\"token key atrule\">refresh</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n          <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">data-id</span><span class=\"token punctuation\">:</span> message.yml\n            <span class=\"token key atrule\">refresh</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"10-3-修改nacos相关配置\"><a href=\"#10-3-修改nacos相关配置\" class=\"headerlink\" title=\"10.3 修改nacos相关配置\"></a>10.3 修改nacos相关配置</h2><p>![](_v_images&#x2F;20230227115633947_11263.png &#x3D;827x)</p>\n<h2 id=\"10-4-创建pvc\"><a href=\"#10-4-创建pvc\" class=\"headerlink\" title=\"10.4 创建pvc\"></a>10.4 创建pvc</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> era-back<span class=\"token punctuation\">;</span><span class=\"token builtin class-name\">cd</span> era-back\n<span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">1</span>-pvc.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: era-back-pvc\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 50Gi\n  storageClassName: nfs-retain\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"10-5-创建deployment文件\"><a href=\"#10-5-创建deployment文件\" class=\"headerlink\" title=\"10.5 创建deployment文件\"></a>10.5 创建deployment文件</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span>-deployment.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: era-back\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: era-back\n  template:\n    metadata:\n      labels:\n        app: era-back\n    spec:\n      hostAliases:\n      #- ip: \"10.17.10.31\"\n      #  hostnames:\n      #  - \"mail.superfluidity.com.cn\"\n      - ip: \"200.0.1.90\"\n        hostnames:\n        - \"lb.cluster.local\"\n      containers:\n      - name: era-back\n        image: openjdk:11\n        imagePullPolicy: IfNotPresent\n        command:\n          - /bin/bash\n          - -c\n          - cd /usr/src/myapp &amp;&amp; java -jar -Duser.timezone=GMT+08 era-admin.jar\n          #- sleep 99999\n        securityContext:\n          privileged: true\n        ports:\n        - name: web\n          containerPort: 8080\n          protocol: \"TCP\"\n        volumeMounts:\n          - mountPath: /usr/src/myapp\n            name: data\n      volumes:\n      - name: data\n        persistentVolumeClaim:\n          claimName: era-back-pvc\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"10-6-创建服务暴露\"><a href=\"#10-6-创建服务暴露\" class=\"headerlink\" title=\"10.6 创建服务暴露\"></a>10.6 创建服务暴露</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">3</span>-service.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: era-back-svc\n  labels:\n    app: era-back\nspec:\n  ports:\n    - name: web-port\n      port: 8080\n      protocol: TCP\n      targetPort: 8080\n      nodePort: 30011\n  type: NodePort\n  selector:\n    app: era-back\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"10-7-应用\"><a href=\"#10-7-应用\" class=\"headerlink\" title=\"10.7 应用\"></a>10.7 应用</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">1</span>-pvc.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-deployment.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">3</span>-service.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"10-8-复制era-back-jar包及bootstrap-yml文件至pvc\"><a href=\"#10-8-复制era-back-jar包及bootstrap-yml文件至pvc\" class=\"headerlink\" title=\"10.8 复制era-back.jar包及bootstrap.yml文件至pvc\"></a>10.8 复制era-back.jar包及bootstrap.yml文件至pvc</h2><p><img src=\"/_v_images/20230227121102596_1385.png\"><br><img src=\"/_v_images/20230227120001444_24644.png\"></p>\n<p><a href=\"_v_attachments/20230225224217873_1139/era-admin.jar\">era-admin.jar</a></p>\n<h2 id=\"10-9-重启服务\"><a href=\"#10-9-重启服务\" class=\"headerlink\" title=\"10.9 重启服务\"></a>10.9 重启服务</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl delete <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-deployment.yaml\nkubectl apply <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-deployment.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n<h1 id=\"十一、era前端部署\"><a href=\"#十一、era前端部署\" class=\"headerlink\" title=\"十一、era前端部署\"></a>十一、era前端部署</h1><h2 id=\"11-1-创建pvc\"><a href=\"#11-1-创建pvc\" class=\"headerlink\" title=\"11.1 创建pvc\"></a>11.1 创建pvc</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> era-front<span class=\"token punctuation\">;</span><span class=\"token builtin class-name\">cd</span> era-front\n<span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">1</span>-pvc.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: era-front-pvc\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 10Gi\n  storageClassName: nfs-retain\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"11-2-创建deployment文件\"><a href=\"#11-2-创建deployment文件\" class=\"headerlink\" title=\"11.2 创建deployment文件\"></a>11.2 创建deployment文件</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span>-deployment.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: era-front\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: era-front\n  template:\n    metadata:\n      labels:\n        app: era-front\n    spec:\n      containers:\n      - name: era-front\n        image: nginx:1.23.1\n        imagePullPolicy: IfNotPresent\n        ports:\n        - name: web\n          containerPort: 80\n          protocol: \"TCP\"\n        volumeMounts:\n          - name: data\n            mountPath: /etc/nginx/conf.d\n            subPath: conf.d\n          - name: data\n            mountPath: /webs\n            subPath: webs\n      volumes:\n      - name: data\n        persistentVolumeClaim:\n          claimName: era-front-pvc\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"11-3-创建服务暴露\"><a href=\"#11-3-创建服务暴露\" class=\"headerlink\" title=\"11.3 创建服务暴露\"></a>11.3 创建服务暴露</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">3</span>-service.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: era-front-svc\n  labels:\n    app: era-front\nspec:\n  ports:\n    - name: web-port\n      port: 80\n      protocol: TCP\n      targetPort: 80\n      nodePort: 30012\n  type: NodePort\n  selector:\n    app: era-front\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"11-4-应用\"><a href=\"#11-4-应用\" class=\"headerlink\" title=\"11.4 应用\"></a>11.4 应用</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">1</span>-pvc.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-deployment.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">3</span>-service.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"11-5-复制era-front-conf包及era-front前端文件至pvc\"><a href=\"#11-5-复制era-front-conf包及era-front前端文件至pvc\" class=\"headerlink\" title=\"11.5 复制era-front.conf包及era-front前端文件至pvc\"></a>11.5 复制era-front.conf包及era-front前端文件至pvc</h2><p><img src=\"/_v_images/20230227121102596_1385.png\"></p>\n<p><img src=\"/_v_images/20230313123535782_27993.png\"></p>\n<p>附件：<br><a href=\"_v_attachments/20230225224217873_1139/era-front.conf\">era-front.conf</a></p>\n<p><a href=\"_v_attachments/20230225224217873_1139/test.tar.gz\">test.tar.gz</a></p>\n<h2 id=\"11-6-重启服务\"><a href=\"#11-6-重启服务\" class=\"headerlink\" title=\"11.6 重启服务\"></a>11.6 重启服务</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl delete <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-deployment.yaml\nkubectl apply <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-deployment.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n<h1 id=\"十二、era镜像服务部署\"><a href=\"#十二、era镜像服务部署\" class=\"headerlink\" title=\"十二、era镜像服务部署\"></a>十二、era镜像服务部署</h1><h2 id=\"12-1-创建pvc\"><a href=\"#12-1-创建pvc\" class=\"headerlink\" title=\"12.1 创建pvc\"></a>12.1 创建pvc</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> era-images<span class=\"token punctuation\">;</span><span class=\"token builtin class-name\">cd</span> era-images\n<span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">1</span>-pvc.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: era-images-pvc\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 500Gi\n  storageClassName: nfs-retain\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"12-2-创建deployment文件\"><a href=\"#12-2-创建deployment文件\" class=\"headerlink\" title=\"12.2 创建deployment文件\"></a>12.2 创建deployment文件</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span>-deployment.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: era-images\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: era-images\n  template:\n    metadata:\n      labels:\n        app: era-images\n    spec:\n      containers:\n      - name: era-images\n        image: nginx:1.23.1\n        imagePullPolicy: IfNotPresent\n        ports:\n        - name: web\n          containerPort: 80\n          protocol: \"TCP\"\n        volumeMounts:\n          - name: data\n            mountPath: /etc/nginx/conf.d\n            subPath: conf.d\n          - name: data\n            mountPath: /images\n            subPath: images\n      volumes:\n      - name: data\n        persistentVolumeClaim:\n          claimName: era-images-pvc\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"12-3-创建服务暴露\"><a href=\"#12-3-创建服务暴露\" class=\"headerlink\" title=\"12.3 创建服务暴露\"></a>12.3 创建服务暴露</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">3</span>-service.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: Service\nmetadata:\n  name: era-images-svc\n  labels:\n    app: era-images\nspec:\n  ports:\n    - name: web-port\n      port: 80\n      protocol: TCP\n      targetPort: 80\n      nodePort: 30013\n  type: NodePort\n  selector:\n    app: era-images\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"12-4-应用\"><a href=\"#12-4-应用\" class=\"headerlink\" title=\"12.4 应用\"></a>12.4 应用</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">1</span>-pvc.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-deployment.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">3</span>-service.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"12-5-复制era-images-conf包至pvc\"><a href=\"#12-5-复制era-images-conf包至pvc\" class=\"headerlink\" title=\"12.5 复制era-images.conf包至pvc\"></a>12.5 复制era-images.conf包至pvc</h2><p><img src=\"/_v_images/20230227134218648_11795.png\"><br><img src=\"/_v_images/20230313123817260_29670.png\"></p>\n<p><a href=\"_v_attachments/20230225224217873_1139/era-images.conf\">era-images.conf</a></p>\n<h2 id=\"12-6-重启服务\"><a href=\"#12-6-重启服务\" class=\"headerlink\" title=\"12.6 重启服务\"></a>12.6 重启服务</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl delete <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-deployment.yaml\nkubectl apply <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-deployment.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h1 id=\"十三、-可选-监控系统部署\"><a href=\"#十三、-可选-监控系统部署\" class=\"headerlink\" title=\"十三、(可选)监控系统部署\"></a>十三、(可选)监控系统部署</h1><h2 id=\"13-1-数据创建相关库及用户\"><a href=\"#13-1-数据创建相关库及用户\" class=\"headerlink\" title=\"13.1 数据创建相关库及用户\"></a>13.1 数据创建相关库及用户</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">database</span> zabbix <span class=\"token keyword\">character</span> <span class=\"token keyword\">set</span> utf8mb4 <span class=\"token keyword\">collate</span> utf8mb4_bin<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> mysql<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">user</span> <span class=\"token string\">'zabbix'</span><span class=\"token variable\">@'%'</span> identified <span class=\"token keyword\">by</span> <span class=\"token string\">'4GtJvRS%La76iB'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">grant</span> <span class=\"token keyword\">all</span> <span class=\"token keyword\">privileges</span> <span class=\"token keyword\">on</span> zabbix<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token keyword\">to</span> <span class=\"token string\">'zabbix'</span><span class=\"token variable\">@'%'</span><span class=\"token punctuation\">;</span>\nFLUSH <span class=\"token keyword\">PRIVILEGES</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"13-2-创建命名空间\"><a href=\"#13-2-创建命名空间\" class=\"headerlink\" title=\"13.2 创建命名空间\"></a>13.2 创建命名空间</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> zabbix<span class=\"token punctuation\">;</span><span class=\"token builtin class-name\">cd</span> zabbix\n<span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">0</span>-namespace.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: zabbix\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"13-3-创建pvc\"><a href=\"#13-3-创建pvc\" class=\"headerlink\" title=\"13.3 创建pvc\"></a>13.3 创建pvc</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">1</span>-pvc.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: zabbix-pvc\n  namespace: zabbix\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 10Gi\n  storageClassName: nfs-retain\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"13-4-部署\"><a href=\"#13-4-部署\" class=\"headerlink\" title=\"13.4 部署\"></a>13.4 部署</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span>-zabbix-web-service.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zabbix-web-service\n  namespace: zabbix\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: zabbix-web-service\n  template:\n    metadata:\n      labels:\n        app: zabbix-web-service\n    spec:\n      containers:\n      - name: zabbix-web-service\n        image: zabbix/zabbix-web-service:ubuntu-6.0-latest\n        ports:\n        - containerPort: 10053\n        env:\n        - name: ZBX_ALLOWEDIP\n          value: \"::/0\"\n        securityContext:\n          capabilities:\n            add:\n            - SYS_ADMIN\n        volumeMounts:\n        - name: localtime\n          mountPath: /etc/localtime\n          readOnly: true\n        - name: zabbix-data\n          mountPath: /usr/share/fonts/truetype/dejavu/DejaVuSans.ttf\n          subPath: DejaVuSans.ttf\n      volumes:\n      - name: localtime\n        hostPath:\n          path: /etc/localtime\n      - name: zabbix-data\n        persistentVolumeClaim:\n          claimName: zabbix-pvc\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-web-service\n  namespace: zabbix\nspec:\n  selector:\n    app: zabbix-web-service\n  ports:\n  - name: zabbix-web-service\n    port: 10053\n    targetPort: 10053\n    nodePort: 30053\n  type: NodePort\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">3</span>-zabbix-server-mysql.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zabbix-server-mysql\n  namespace: zabbix\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: zabbix-server-mysql\n  template:\n    metadata:\n      labels:\n        app: zabbix-server-mysql\n    spec:\n      containers:\n      - name: zabbix-server-mysql\n        image: zabbix/zabbix-server-mysql:ubuntu-6.0-latest\n        ports:\n        - containerPort: 10051\n        env:\n        - name: DB_SERVER_HOST\n          value: \"mariadb.default.svc.cluster.local\"\n        - name: DB_SERVER_PORT\n          value: \"3306\"\n        - name: MYSQL_DATABASE\n          value: \"zabbix\"\n        - name: MYSQL_USER\n          value: \"zabbix\"\n        - name: MYSQL_PASSWORD\n          value: \"4GtJvRS%La76iB\"\n        - name: MYSQL_ROOT_PASSWORD\n          value: \"4y6Cu%946*!TXY\"\n        - name: ZBX_WEBSERVICEURL\n          value: \"http://zabbix-web-service.zabbix.svc.cluster.local:10053/report\"\n        - name: ZBX_JAVAGATEWAY_ENABLE\n          value: \"true\"\n        - name: ZBX_JAVAGATEWAY\n          value: \"zabbix-java-gateway.zabbix.svc.cluster.local:10052\"\n        - name: ZBX_STARTREPORTWRITERS\n          value: \"2\"\n        - name: ZBX_TIMEOUT\n          value: \"30\"\n        - name: ZBX_UNREACHABLEPERIOD\n          value: \"120\"\n        - name: ZBX_CACHESIZE\n          value: \"512M\"\n        - name: ZBX_HISTORYCACHESIZE\n          value: \"128M\"\n        - name: ZBX_HISTORYINDEXCACHESIZE\n          value: \"128M\"\n        - name: ZBX_TRENDCACHESIZE\n          value: \"128M\"\n        - name: ZBX_VALUECACHESIZE\n          value: \"256M\"\n        volumeMounts:\n        - name: zabbix-data\n          mountPath: /usr/lib/zabbix\n          subPath: zabbix-scripts\n        - name: localtime\n          mountPath: /etc/localtime\n          readOnly: true\n      - name: zabbix-agent\n        image: zabbix/zabbix-agent:ubuntu-6.0-latest\n        imagePullPolicy: IfNotPresent\n        env:\n        - name: ZBX_HOSTNAME\n          value: \"Zabbix server\"\n        - name: ZBX_SERVER_HOST\n          value: \"127.0.0.1\"\n        - name: ZBX_STARTAGENTS\n          value: \"3\"\n        - name: ZBX_UNSAFEUSERPARAMETERS\n          value: \"1\"\n        - name: ZBX_TIMEOUT\n          value: \"10\"\n        ports:\n        - containerPort: 10050\n          name: zabbix-agent\n          protocol: TCP\n      volumes:\n      - name: localtime\n        hostPath:\n          path: /etc/localtime\n      - name: zabbix-data\n        persistentVolumeClaim:\n          claimName: zabbix-pvc\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-server-mysql\n  namespace: zabbix\nspec:\n  selector:\n    app: zabbix-server-mysql\n  ports:\n  - name: zabbix-server\n    port: 10051\n    targetPort: 10051\n    nodePort: 30051\n  type: NodePort\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-server-agent\n  namespace: zabbix\nspec:\n  selector:\n    app: zabbix-server-mysql\n  ports:\n  - name: zabbix-agent\n    port: 10050\n    targetPort: 10050\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">4</span>-zabbix-web-nginx-mysql.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zabbix-web-nginx-mysql\n  namespace: zabbix\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: zabbix-web-nginx-mysql\n  template:\n    metadata:\n      labels:\n        app: zabbix-web-nginx-mysql\n    spec:\n      containers:\n      - name: zabbix-web-nginx-mysql\n        image: zabbix/zabbix-web-nginx-mysql:ubuntu-6.0-latest\n        ports:\n        - containerPort: 8443\n        - containerPort: 8080\n        env:\n        - name: DB_SERVER_HOST\n          value: \"mariadb.default.svc.cluster.local\"\n        - name: DB_SERVER_PORT\n          value: \"3306\"\n        - name: MYSQL_DATABASE\n          value: \"zabbix\"\n        - name: MYSQL_USER\n          value: \"zabbix\"\n        - name: MYSQL_PASSWORD\n          value: \"4GtJvRS%La76iB\"\n        - name: MYSQL_ROOT_PASSWORD\n          value: \"4y6Cu%946*!TXY\"\n        - name: ZBX_SERVER_HOST\n          value: \"zabbix-server-mysql.zabbix.svc.cluster.local\"\n        - name: PHP_TZ\n          value: \"Asia/Shanghai\"\n        volumeMounts:\n        - name: localtime\n          mountPath: /etc/localtime\n          readOnly: true\n        - name: zabbix-data\n          mountPath: /usr/share/zabbix/assets/fonts/DejaVuSans.ttf\n          subPath: DejaVuSans.ttf\n      volumes:\n      - name: localtime\n        hostPath:\n          path: /etc/localtime\n      - name: zabbix-data\n        persistentVolumeClaim:\n          claimName: zabbix-pvc\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-web-nginx-mysql\n  namespace: zabbix\nspec:\n  selector:\n    app: zabbix-web-nginx-mysql\n  ports:\n  - name: zabbix-front\n    port: 8080\n    targetPort: 8080\n    nodePort: 30080\n  type: NodePort\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token number\">5</span>-zabbix-java-gateway.yaml <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EOF\"\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zabbix-java-gateway\n  namespace: zabbix\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: zabbix-java-gateway\n  template:\n    metadata:\n      labels:\n        app: zabbix-java-gateway\n    spec:\n      containers:\n      - name: zabbix-java-gateway\n        image: zabbix/zabbix-java-gateway:ubuntu-6.0-latest\n        ports:\n        - containerPort: 10052\n        volumeMounts:\n        - name: localtime\n          mountPath: /etc/localtime\n          readOnly: true\n      volumes:\n      - name: localtime\n        hostPath:\n          path: /etc/localtime\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: zabbix-java-gateway\n  namespace: zabbix\nspec:\n  selector:\n    app: zabbix-java-gateway\n  ports:\n  - name: zabbix-java-gateway\n    port: 10052\n    targetPort: 10052\n    nodePort: 30052\n  type: NodePort\n\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"13-5-应用\"><a href=\"#13-5-应用\" class=\"headerlink\" title=\"13.5 应用\"></a>13.5 应用</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">0</span>-namespace.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">1</span>-pvc.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">2</span>-zabbix-web-service.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">3</span>-zabbix-server-mysql.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">4</span>-zabbix-web-nginx-mysql.yaml\nkubectl apply  <span class=\"token parameter variable\">-f</span> <span class=\"token number\">5</span>-zabbix-java-gateway.yaml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"13-6-复制字体进pvc\"><a href=\"#13-6-复制字体进pvc\" class=\"headerlink\" title=\"13.6  复制字体进pvc\"></a>13.6  复制字体进pvc</h2><p><img src=\"/_v_images/20230303111056501_27202.png\"></p>\n<p>附件：<br><a href=\"_v_attachments/20230225224217873_1139/DejaVuSans.ttf\">DejaVuSans.ttf</a></p>\n<h2 id=\"13-7-各物理节点部署agent\"><a href=\"#13-7-各物理节点部署agent\" class=\"headerlink\" title=\"13.7 各物理节点部署agent\"></a>13.7 各物理节点部署agent</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token parameter variable\">-y</span> remove epel-release zabbix-release\n<span class=\"token function\">cat</span> <span class=\"token operator\">></span> /etc/yum.repos.d/zabbix.repo  <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">'EOF'\n[zabbix]\nname=Zabbix Official Repository - $basearch\nbaseurl=http://mirrors.cloud.tencent.com/zabbix/zabbix/6.0/rhel/7/$basearch/\nenabled=1\ngpgcheck=0\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX-A14FE591\n\n[zabbix-debuginfo]\nname=Zabbix Official Repository debuginfo - $basearch\nbaseurl=http://mirrors.cloud.tencent.com/zabbix/zabbix/6.0/rhel/7/$basearch/debuginfo/\nenabled=0\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX-A14FE591\ngpgcheck=1\n\n[zabbix-non-supported]\nname=Zabbix Official Repository non-supported - $basearch\nbaseurl=http://mirrors.cloud.tencent.com/zabbix/non-supported/rhel/7/$basearch/\nenabled=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX\ngpgcheck=0\nEOF</span>\n\n<span class=\"token function\">cat</span> <span class=\"token operator\">></span> /etc/yum.repos.d/zabbix-agent2-plugins.repo <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">'EOF'\n[zabbix-agent2-plugins]\nname=Zabbix Official Repository (Agent2 Plugins) - $basearch\nbaseurl=http://mirrors.cloud.tencent.com/zabbix/zabbix-agent2-plugins/1/rhel/7/$basearch/\nenabled=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX\ngpgcheck=0\nEOF</span>\n\nyum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> zabbix-agent2\n\n<span class=\"token comment\">#替换参数，ServerActive指向zabbix server地址200.0.1.90:30051</span>\n<span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s@^Server=127.0.0.1@#Server=127.0.0.1@'</span> /etc/zabbix/zabbix_agent2.conf\n<span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s@^ServerActive=127.0.0.1@ServerActive=200.0.1.90:30051@'</span> /etc/zabbix/zabbix_agent2.conf\n<span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s@^Hostname=Zabbix server@#Hostname=Zabbix server@'</span> /etc/zabbix/zabbix_agent2.conf\n<span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s@^# HostnameItem=system.hostname@# HostnameItem=system.hostname\\n\\nHostnameItem=system.hostname@'</span> /etc/zabbix/zabbix_agent2.conf\n<span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s@^# HostMetadataItem=@# HostMetadataItem=\\n\\nHostMetadataItem=system.uname@'</span> /etc/zabbix/zabbix_agent2.conf\n<span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s@^# UnsafeUserParameters=0@# UnsafeUserParameters=0\\n\\nUnsafeUserParameters=1@'</span> /etc/zabbix/zabbix_agent2.conf\n\nsystemctl restart zabbix-agent2\nsystemctl <span class=\"token builtin class-name\">enable</span> zabbix-agent2\n\n<span class=\"token function\">tail</span> <span class=\"token parameter variable\">-f</span> /var/log/zabbix/zabbix_agent2.log<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"13-8-设置zabbix自动发现\"><a href=\"#13-8-设置zabbix自动发现\" class=\"headerlink\" title=\"13.8 设置zabbix自动发现\"></a>13.8 设置zabbix自动发现</h2><p>![](_v_images&#x2F;20230303115029819_18034.png &#x3D;1216x)</p>\n<h2 id=\"13-9-修复默认\"><a href=\"#13-9-修复默认\" class=\"headerlink\" title=\"13.9 修复默认\"></a>13.9 修复默认</h2><p>![](_v_images&#x2F;20230305233258302_30922.png &#x3D;853x)</p>\n"},{"title":"mysql 创建用户并赋予管理员权限","date":"2023-12-28T16:00:00.000Z","updated":"2025-09-24T06:00:08.740Z","keywords":null,"copyright":false,"_content":"\n# mysql 创建用户并赋予管理员权限\n\n```sql\n-- 创建新用户，将new_username替换为你想要创建的新用户名，将password替换为用户的密码。\nCREATE USER 'new_username'@'localhost' IDENTIFIED BY 'password';\n\n-- 授予new_username用户在所有数据库和所有表上的所有权限，并且WITH GRANT OPTION选项允许该用户授予其他用户权限\nGRANT ALL PRIVILEGES ON *.* TO 'new_username'@'localhost' WITH GRANT OPTION;\n\n-- 刷新权限以使更改生效\nFLUSH PRIVILEGES;\n```","source":"_posts/mysql/mysql 创建用户并赋予管理员权限.md","raw":"---\ntitle: mysql 创建用户并赋予管理员权限\ndate: 2023-12-29\nupdated:\ntags:\n  - mysql\ncategories: mysql\nkeywords:\ncopyright: false\n---\n\n# mysql 创建用户并赋予管理员权限\n\n```sql\n-- 创建新用户，将new_username替换为你想要创建的新用户名，将password替换为用户的密码。\nCREATE USER 'new_username'@'localhost' IDENTIFIED BY 'password';\n\n-- 授予new_username用户在所有数据库和所有表上的所有权限，并且WITH GRANT OPTION选项允许该用户授予其他用户权限\nGRANT ALL PRIVILEGES ON *.* TO 'new_username'@'localhost' WITH GRANT OPTION;\n\n-- 刷新权限以使更改生效\nFLUSH PRIVILEGES;\n```","slug":"mysql/mysql 创建用户并赋予管理员权限","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cmfxkya2a0000ac7h5rhvau76","content":"<h1 id=\"mysql-创建用户并赋予管理员权限\"><a href=\"#mysql-创建用户并赋予管理员权限\" class=\"headerlink\" title=\"mysql 创建用户并赋予管理员权限\"></a>mysql 创建用户并赋予管理员权限</h1><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 创建新用户，将new_username替换为你想要创建的新用户名，将password替换为用户的密码。</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">USER</span> <span class=\"token string\">'new_username'</span><span class=\"token variable\">@'localhost'</span> IDENTIFIED <span class=\"token keyword\">BY</span> <span class=\"token string\">'password'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 授予new_username用户在所有数据库和所有表上的所有权限，并且WITH GRANT OPTION选项允许该用户授予其他用户权限</span>\n<span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">ALL</span> <span class=\"token keyword\">PRIVILEGES</span> <span class=\"token keyword\">ON</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token keyword\">TO</span> <span class=\"token string\">'new_username'</span><span class=\"token variable\">@'localhost'</span> <span class=\"token keyword\">WITH</span> <span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">OPTION</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 刷新权限以使更改生效</span>\nFLUSH <span class=\"token keyword\">PRIVILEGES</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}},"cover":"/img/default_cover/geomeric2.png","cover_type":"img","excerpt":"","more":"<h1 id=\"mysql-创建用户并赋予管理员权限\"><a href=\"#mysql-创建用户并赋予管理员权限\" class=\"headerlink\" title=\"mysql 创建用户并赋予管理员权限\"></a>mysql 创建用户并赋予管理员权限</h1><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 创建新用户，将new_username替换为你想要创建的新用户名，将password替换为用户的密码。</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">USER</span> <span class=\"token string\">'new_username'</span><span class=\"token variable\">@'localhost'</span> IDENTIFIED <span class=\"token keyword\">BY</span> <span class=\"token string\">'password'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 授予new_username用户在所有数据库和所有表上的所有权限，并且WITH GRANT OPTION选项允许该用户授予其他用户权限</span>\n<span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">ALL</span> <span class=\"token keyword\">PRIVILEGES</span> <span class=\"token keyword\">ON</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token keyword\">TO</span> <span class=\"token string\">'new_username'</span><span class=\"token variable\">@'localhost'</span> <span class=\"token keyword\">WITH</span> <span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">OPTION</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 刷新权限以使更改生效</span>\nFLUSH <span class=\"token keyword\">PRIVILEGES</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"title":"MySQL ORDER BY 有索引却不用？揭秘 `EXPLAIN` 中的“索引失效”真相","date":"2025-09-23T16:00:00.000Z","updated":"2025-09-24T06:13:04.740Z","keywords":null,"copyright":false,"_content":"\n# MySQL ORDER BY 有索引却不用？揭秘 `EXPLAIN` 中的“索引失效”真相\n\n\n在日常的 MySQL 性能优化中，我们常常会遇到一个令人困惑的现象：**明明为 `ORDER BY` 的字段创建了索引，但使用 `EXPLAIN` 查看执行计划时，却发现 `key` 为 `NULL`，`Extra` 中出现了 `Using filesort`，索引似乎“失效”了。**\n\n这究竟是怎么回事？是索引没建好？还是 MySQL 优化器“抽风”了？今天，我们就来深入剖析这一现象背后的真正原因，并提供切实可行的解决方案。\n\n\n### 一、问题重现\n\n假设我们有一个用户表 `users`，并为 `created_at` 字段创建了索引：\n\n```sql\nCREATE INDEX idx_created_at ON users(created_at)\n```\n\n执行查询：\n\n```sql\nEXPLAIN SELECT * FROM users ORDER BY created_at;\n```\n\n\n你可能会惊讶地发现，执行计划中并未使用 `idx_created_at` 索引，而是进行了全表扫描和 `filesort`。\n\n这到底是为什么？\n\n\n### 二、核心原因：回表成本过高\n\n要理解这个问题，我们必须先了解 MySQL 索引的底层机制。\n\n1. **二级索引的结构**：在 InnoDB 存储引擎中，除了主键索引（聚簇索引）外，其他索引都是**二级索引**。二级索引的叶子节点存储的是**索引字段的值 + 主键值**，而不是完整的数据行。\n\n2. **`SELECT *` 带来的“回表”问题**：\n   * 当执行 `SELECT * FROM users ORDER BY created_at` 时，MySQL 可以利用 `idx_created_at` 索引快速获取按 `created_at` 排序的主键列表。\n   * 但为了获取 `*` 所代表的所有字段数据，MySQL 必须拿着这些主键，**逐个回到主键索引中查找完整的数据行**。这个过程称为“**回表**”（Bookmark Lookup）。\n\n3. **优化器的权衡**：\n   * 如果表中有成千上万条数据，`ORDER BY` 又需要返回大部分或全部数据，那么这个“回表”过程就会产生**大量的随机 I/O 操作**。\n   * 随机 I/O 的成本远高于顺序 I/O。\n   * 因此，MySQL 优化器会进行成本估算：与其进行上万次随机 I/O（回表），不如直接进行一次**全表扫描**（顺序 I/O），然后在内存中对结果集进行排序（`filesort`）。\n   * 在大多数情况下，**全表扫描 + 内存排序**的总成本低于**遍历二级索引 + 大量回表**的成本。\n\n这就是为什么 `EXPLAIN` 显示未使用索引的根本原因——**优化器认为全表扫描更高效**。\n\n\n### 三、常见场景与解决方案\n\n除了上述核心原因，还有其他几种常见情况会导致 `ORDER BY` 索引未被使用：\n\n#### 1. `WHERE` 条件优先级更高\n\n* **场景**：`SELECT * FROM users WHERE status = 'active' ORDER BY created_at;`\n* **原因**：如果 `status` 字段的过滤性很强（如只有少量用户是 'active'），优化器可能优先选择 `status` 上的索引，然后对少量结果进行 `filesort`。\n* **方案**：创建**复合索引** `idx_status_created(status, created_at)`，让查询既能高效过滤，又能避免排序。\n\n#### 2. 范围查询阻断索引排序\n\n* **场景**：`WHERE age > 18 ORDER BY created_at`，索引为 `(age, created_at)`。\n* **原因**：“最左前缀原则”下，`age > 18` 是范围查询，其后的 `created_at` 无法再利用索引排序。\n* **方案**：调整查询逻辑，或接受 `filesort` 的存在。\n\n#### 3. 数据量过大或分布不均\n\n* **场景**：表数据量极大，或 `ORDER BY` 字段值重复率高。\n* **原因**：索引优势减弱，优化器可能选择全表扫描。\n* **方案**：优化查询条件，减少结果集。\n\n\n\n### 四、终极解决方案：覆盖索引\n\n要让 `ORDER BY` 索引真正发挥作用，最有效的方法是避免“回表”。\n\n#### ✅ 方案一：避免 `SELECT *`\n\n永远不要在生产环境使用 `SELECT *`！只查询必要的字段：\n\n```sql\n-- 好的做法\nSELECT id, name, created_at FROM users ORDER BY created_at;</code></pre>\n```\n如果查询的字段恰好都在索引中，就可能实现“覆盖索引”。\n\n#### ✅ 方案二：创建覆盖索引（Covering Index）\n\n将查询中用到的所有字段都包含在索引中，使索引“覆盖”查询需求。\n\n```sql\n-- 创建覆盖索引\nCREATE INDEX idx_cover ON users(created_at, id, name, email, status);\n```\n\n此时，`EXPLAIN` 的 `Extra` 列会显示 `Using index`，表示索引覆盖，无需回表，性能极佳。\n\n> **注意**：覆盖索引会增加索引大小和写入开销，需根据读写比和业务场景权衡。\n\n\n\n### 五、如何验证？\n\n使用 `EXPLAIN` 或 `EXPLAIN FORMAT=JSON` 观察执行计划：\n\n* `key`：实际使用的索引。\n* `Extra`：\n  * `Using index`：覆盖索引，最佳。\n  * `Using filesort`：进行了排序，可能未用索引。\n  * `Using index condition`：索引条件下推，部分优化。\n\n\n\n### 六、总结\n\n| 原因 | 解决方案 |\n|------|----------|\n| `SELECT *` 导致回表成本高 | 避免 `SELECT *`，只查必要字段 |\n| 未使用复合索引 | 创建 `(where_col, order_by_col)` 复合索引 |\n| 无法避免回表 | 创建覆盖索引，包含所有查询字段 |\n| 优化器误判 | 使用 `ANALYZE TABLE` 更新统计信息，或 `FORCE INDEX`（慎用） |\n\n**核心思想**：MySQL 优化器的目标是**总成本最低**，而不是“必须用索引”。理解索引结构（尤其是回表机制）和优化器的决策逻辑，才能写出真正高效的 SQL。\n","source":"_posts/mysql/20250924.md","raw":"---\ntitle: MySQL ORDER BY 有索引却不用？揭秘 `EXPLAIN` 中的“索引失效”真相\ndate: 2025-09-24\nupdated:\ntags:\n  - mysql\ncategories: mysql\nkeywords:\ncopyright: false\n---\n\n# MySQL ORDER BY 有索引却不用？揭秘 `EXPLAIN` 中的“索引失效”真相\n\n\n在日常的 MySQL 性能优化中，我们常常会遇到一个令人困惑的现象：**明明为 `ORDER BY` 的字段创建了索引，但使用 `EXPLAIN` 查看执行计划时，却发现 `key` 为 `NULL`，`Extra` 中出现了 `Using filesort`，索引似乎“失效”了。**\n\n这究竟是怎么回事？是索引没建好？还是 MySQL 优化器“抽风”了？今天，我们就来深入剖析这一现象背后的真正原因，并提供切实可行的解决方案。\n\n\n### 一、问题重现\n\n假设我们有一个用户表 `users`，并为 `created_at` 字段创建了索引：\n\n```sql\nCREATE INDEX idx_created_at ON users(created_at)\n```\n\n执行查询：\n\n```sql\nEXPLAIN SELECT * FROM users ORDER BY created_at;\n```\n\n\n你可能会惊讶地发现，执行计划中并未使用 `idx_created_at` 索引，而是进行了全表扫描和 `filesort`。\n\n这到底是为什么？\n\n\n### 二、核心原因：回表成本过高\n\n要理解这个问题，我们必须先了解 MySQL 索引的底层机制。\n\n1. **二级索引的结构**：在 InnoDB 存储引擎中，除了主键索引（聚簇索引）外，其他索引都是**二级索引**。二级索引的叶子节点存储的是**索引字段的值 + 主键值**，而不是完整的数据行。\n\n2. **`SELECT *` 带来的“回表”问题**：\n   * 当执行 `SELECT * FROM users ORDER BY created_at` 时，MySQL 可以利用 `idx_created_at` 索引快速获取按 `created_at` 排序的主键列表。\n   * 但为了获取 `*` 所代表的所有字段数据，MySQL 必须拿着这些主键，**逐个回到主键索引中查找完整的数据行**。这个过程称为“**回表**”（Bookmark Lookup）。\n\n3. **优化器的权衡**：\n   * 如果表中有成千上万条数据，`ORDER BY` 又需要返回大部分或全部数据，那么这个“回表”过程就会产生**大量的随机 I/O 操作**。\n   * 随机 I/O 的成本远高于顺序 I/O。\n   * 因此，MySQL 优化器会进行成本估算：与其进行上万次随机 I/O（回表），不如直接进行一次**全表扫描**（顺序 I/O），然后在内存中对结果集进行排序（`filesort`）。\n   * 在大多数情况下，**全表扫描 + 内存排序**的总成本低于**遍历二级索引 + 大量回表**的成本。\n\n这就是为什么 `EXPLAIN` 显示未使用索引的根本原因——**优化器认为全表扫描更高效**。\n\n\n### 三、常见场景与解决方案\n\n除了上述核心原因，还有其他几种常见情况会导致 `ORDER BY` 索引未被使用：\n\n#### 1. `WHERE` 条件优先级更高\n\n* **场景**：`SELECT * FROM users WHERE status = 'active' ORDER BY created_at;`\n* **原因**：如果 `status` 字段的过滤性很强（如只有少量用户是 'active'），优化器可能优先选择 `status` 上的索引，然后对少量结果进行 `filesort`。\n* **方案**：创建**复合索引** `idx_status_created(status, created_at)`，让查询既能高效过滤，又能避免排序。\n\n#### 2. 范围查询阻断索引排序\n\n* **场景**：`WHERE age > 18 ORDER BY created_at`，索引为 `(age, created_at)`。\n* **原因**：“最左前缀原则”下，`age > 18` 是范围查询，其后的 `created_at` 无法再利用索引排序。\n* **方案**：调整查询逻辑，或接受 `filesort` 的存在。\n\n#### 3. 数据量过大或分布不均\n\n* **场景**：表数据量极大，或 `ORDER BY` 字段值重复率高。\n* **原因**：索引优势减弱，优化器可能选择全表扫描。\n* **方案**：优化查询条件，减少结果集。\n\n\n\n### 四、终极解决方案：覆盖索引\n\n要让 `ORDER BY` 索引真正发挥作用，最有效的方法是避免“回表”。\n\n#### ✅ 方案一：避免 `SELECT *`\n\n永远不要在生产环境使用 `SELECT *`！只查询必要的字段：\n\n```sql\n-- 好的做法\nSELECT id, name, created_at FROM users ORDER BY created_at;</code></pre>\n```\n如果查询的字段恰好都在索引中，就可能实现“覆盖索引”。\n\n#### ✅ 方案二：创建覆盖索引（Covering Index）\n\n将查询中用到的所有字段都包含在索引中，使索引“覆盖”查询需求。\n\n```sql\n-- 创建覆盖索引\nCREATE INDEX idx_cover ON users(created_at, id, name, email, status);\n```\n\n此时，`EXPLAIN` 的 `Extra` 列会显示 `Using index`，表示索引覆盖，无需回表，性能极佳。\n\n> **注意**：覆盖索引会增加索引大小和写入开销，需根据读写比和业务场景权衡。\n\n\n\n### 五、如何验证？\n\n使用 `EXPLAIN` 或 `EXPLAIN FORMAT=JSON` 观察执行计划：\n\n* `key`：实际使用的索引。\n* `Extra`：\n  * `Using index`：覆盖索引，最佳。\n  * `Using filesort`：进行了排序，可能未用索引。\n  * `Using index condition`：索引条件下推，部分优化。\n\n\n\n### 六、总结\n\n| 原因 | 解决方案 |\n|------|----------|\n| `SELECT *` 导致回表成本高 | 避免 `SELECT *`，只查必要字段 |\n| 未使用复合索引 | 创建 `(where_col, order_by_col)` 复合索引 |\n| 无法避免回表 | 创建覆盖索引，包含所有查询字段 |\n| 优化器误判 | 使用 `ANALYZE TABLE` 更新统计信息，或 `FORCE INDEX`（慎用） |\n\n**核心思想**：MySQL 优化器的目标是**总成本最低**，而不是“必须用索引”。理解索引结构（尤其是回表机制）和优化器的决策逻辑，才能写出真正高效的 SQL。\n","slug":"mysql/20250924","published":1,"_id":"cmfxkya2a0001ac7h4b4tbw0s","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"MySQL-ORDER-BY-有索引却不用？揭秘-EXPLAIN-中的“索引失效”真相\"><a href=\"#MySQL-ORDER-BY-有索引却不用？揭秘-EXPLAIN-中的“索引失效”真相\" class=\"headerlink\" title=\"MySQL ORDER BY 有索引却不用？揭秘 EXPLAIN 中的“索引失效”真相\"></a>MySQL ORDER BY 有索引却不用？揭秘 <code>EXPLAIN</code> 中的“索引失效”真相</h1><p>在日常的 MySQL 性能优化中，我们常常会遇到一个令人困惑的现象：<strong>明明为 <code>ORDER BY</code> 的字段创建了索引，但使用 <code>EXPLAIN</code> 查看执行计划时，却发现 <code>key</code> 为 <code>NULL</code>，<code>Extra</code> 中出现了 <code>Using filesort</code>，索引似乎“失效”了。</strong></p>\n<p>这究竟是怎么回事？是索引没建好？还是 MySQL 优化器“抽风”了？今天，我们就来深入剖析这一现象背后的真正原因，并提供切实可行的解决方案。</p>\n<h3 id=\"一、问题重现\"><a href=\"#一、问题重现\" class=\"headerlink\" title=\"一、问题重现\"></a>一、问题重现</h3><p>假设我们有一个用户表 <code>users</code>，并为 <code>created_at</code> 字段创建了索引：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">INDEX</span> idx_created_at <span class=\"token keyword\">ON</span> users<span class=\"token punctuation\">(</span>created_at<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>执行查询：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">EXPLAIN</span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> users <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> created_at<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n<p>你可能会惊讶地发现，执行计划中并未使用 <code>idx_created_at</code> 索引，而是进行了全表扫描和 <code>filesort</code>。</p>\n<p>这到底是为什么？</p>\n<h3 id=\"二、核心原因：回表成本过高\"><a href=\"#二、核心原因：回表成本过高\" class=\"headerlink\" title=\"二、核心原因：回表成本过高\"></a>二、核心原因：回表成本过高</h3><p>要理解这个问题，我们必须先了解 MySQL 索引的底层机制。</p>\n<ol>\n<li><p><strong>二级索引的结构</strong>：在 InnoDB 存储引擎中，除了主键索引（聚簇索引）外，其他索引都是<strong>二级索引</strong>。二级索引的叶子节点存储的是<strong>索引字段的值 + 主键值</strong>，而不是完整的数据行。</p>\n</li>\n<li><p><strong><code>SELECT *</code> 带来的“回表”问题</strong>：</p>\n<ul>\n<li>当执行 <code>SELECT * FROM users ORDER BY created_at</code> 时，MySQL 可以利用 <code>idx_created_at</code> 索引快速获取按 <code>created_at</code> 排序的主键列表。</li>\n<li>但为了获取 <code>*</code> 所代表的所有字段数据，MySQL 必须拿着这些主键，<strong>逐个回到主键索引中查找完整的数据行</strong>。这个过程称为“<strong>回表</strong>”（Bookmark Lookup）。</li>\n</ul>\n</li>\n<li><p><strong>优化器的权衡</strong>：</p>\n<ul>\n<li>如果表中有成千上万条数据，<code>ORDER BY</code> 又需要返回大部分或全部数据，那么这个“回表”过程就会产生<strong>大量的随机 I&#x2F;O 操作</strong>。</li>\n<li>随机 I&#x2F;O 的成本远高于顺序 I&#x2F;O。</li>\n<li>因此，MySQL 优化器会进行成本估算：与其进行上万次随机 I&#x2F;O（回表），不如直接进行一次<strong>全表扫描</strong>（顺序 I&#x2F;O），然后在内存中对结果集进行排序（<code>filesort</code>）。</li>\n<li>在大多数情况下，<strong>全表扫描 + 内存排序</strong>的总成本低于<strong>遍历二级索引 + 大量回表</strong>的成本。</li>\n</ul>\n</li>\n</ol>\n<p>这就是为什么 <code>EXPLAIN</code> 显示未使用索引的根本原因——<strong>优化器认为全表扫描更高效</strong>。</p>\n<h3 id=\"三、常见场景与解决方案\"><a href=\"#三、常见场景与解决方案\" class=\"headerlink\" title=\"三、常见场景与解决方案\"></a>三、常见场景与解决方案</h3><p>除了上述核心原因，还有其他几种常见情况会导致 <code>ORDER BY</code> 索引未被使用：</p>\n<h4 id=\"1-WHERE-条件优先级更高\"><a href=\"#1-WHERE-条件优先级更高\" class=\"headerlink\" title=\"1. WHERE 条件优先级更高\"></a>1. <code>WHERE</code> 条件优先级更高</h4><ul>\n<li><strong>场景</strong>：<code>SELECT * FROM users WHERE status = &#39;active&#39; ORDER BY created_at;</code></li>\n<li><strong>原因</strong>：如果 <code>status</code> 字段的过滤性很强（如只有少量用户是 ‘active’），优化器可能优先选择 <code>status</code> 上的索引，然后对少量结果进行 <code>filesort</code>。</li>\n<li><strong>方案</strong>：创建<strong>复合索引</strong> <code>idx_status_created(status, created_at)</code>，让查询既能高效过滤，又能避免排序。</li>\n</ul>\n<h4 id=\"2-范围查询阻断索引排序\"><a href=\"#2-范围查询阻断索引排序\" class=\"headerlink\" title=\"2. 范围查询阻断索引排序\"></a>2. 范围查询阻断索引排序</h4><ul>\n<li><strong>场景</strong>：<code>WHERE age &gt; 18 ORDER BY created_at</code>，索引为 <code>(age, created_at)</code>。</li>\n<li><strong>原因</strong>：“最左前缀原则”下，<code>age &gt; 18</code> 是范围查询，其后的 <code>created_at</code> 无法再利用索引排序。</li>\n<li><strong>方案</strong>：调整查询逻辑，或接受 <code>filesort</code> 的存在。</li>\n</ul>\n<h4 id=\"3-数据量过大或分布不均\"><a href=\"#3-数据量过大或分布不均\" class=\"headerlink\" title=\"3. 数据量过大或分布不均\"></a>3. 数据量过大或分布不均</h4><ul>\n<li><strong>场景</strong>：表数据量极大，或 <code>ORDER BY</code> 字段值重复率高。</li>\n<li><strong>原因</strong>：索引优势减弱，优化器可能选择全表扫描。</li>\n<li><strong>方案</strong>：优化查询条件，减少结果集。</li>\n</ul>\n<h3 id=\"四、终极解决方案：覆盖索引\"><a href=\"#四、终极解决方案：覆盖索引\" class=\"headerlink\" title=\"四、终极解决方案：覆盖索引\"></a>四、终极解决方案：覆盖索引</h3><p>要让 <code>ORDER BY</code> 索引真正发挥作用，最有效的方法是避免“回表”。</p>\n<h4 id=\"✅-方案一：避免-SELECT\"><a href=\"#✅-方案一：避免-SELECT\" class=\"headerlink\" title=\"✅ 方案一：避免 SELECT *\"></a>✅ 方案一：避免 <code>SELECT *</code></h4><p>永远不要在生产环境使用 <code>SELECT *</code>！只查询必要的字段：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 好的做法</span>\n<span class=\"token keyword\">SELECT</span> id<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> created_at <span class=\"token keyword\">FROM</span> users <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> created_at<span class=\"token punctuation\">;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>code<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>pre<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>如果查询的字段恰好都在索引中，就可能实现“覆盖索引”。</p>\n<h4 id=\"✅-方案二：创建覆盖索引（Covering-Index）\"><a href=\"#✅-方案二：创建覆盖索引（Covering-Index）\" class=\"headerlink\" title=\"✅ 方案二：创建覆盖索引（Covering Index）\"></a>✅ 方案二：创建覆盖索引（Covering Index）</h4><p>将查询中用到的所有字段都包含在索引中，使索引“覆盖”查询需求。</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 创建覆盖索引</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">INDEX</span> idx_cover <span class=\"token keyword\">ON</span> users<span class=\"token punctuation\">(</span>created_at<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> email<span class=\"token punctuation\">,</span> <span class=\"token keyword\">status</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>此时，<code>EXPLAIN</code> 的 <code>Extra</code> 列会显示 <code>Using index</code>，表示索引覆盖，无需回表，性能极佳。</p>\n<blockquote>\n<p><strong>注意</strong>：覆盖索引会增加索引大小和写入开销，需根据读写比和业务场景权衡。</p>\n</blockquote>\n<h3 id=\"五、如何验证？\"><a href=\"#五、如何验证？\" class=\"headerlink\" title=\"五、如何验证？\"></a>五、如何验证？</h3><p>使用 <code>EXPLAIN</code> 或 <code>EXPLAIN FORMAT=JSON</code> 观察执行计划：</p>\n<ul>\n<li><code>key</code>：实际使用的索引。</li>\n<li><code>Extra</code>：<ul>\n<li><code>Using index</code>：覆盖索引，最佳。</li>\n<li><code>Using filesort</code>：进行了排序，可能未用索引。</li>\n<li><code>Using index condition</code>：索引条件下推，部分优化。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"六、总结\"><a href=\"#六、总结\" class=\"headerlink\" title=\"六、总结\"></a>六、总结</h3><table>\n<thead>\n<tr>\n<th>原因</th>\n<th>解决方案</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>SELECT *</code> 导致回表成本高</td>\n<td>避免 <code>SELECT *</code>，只查必要字段</td>\n</tr>\n<tr>\n<td>未使用复合索引</td>\n<td>创建 <code>(where_col, order_by_col)</code> 复合索引</td>\n</tr>\n<tr>\n<td>无法避免回表</td>\n<td>创建覆盖索引，包含所有查询字段</td>\n</tr>\n<tr>\n<td>优化器误判</td>\n<td>使用 <code>ANALYZE TABLE</code> 更新统计信息，或 <code>FORCE INDEX</code>（慎用）</td>\n</tr>\n</tbody></table>\n<p><strong>核心思想</strong>：MySQL 优化器的目标是<strong>总成本最低</strong>，而不是“必须用索引”。理解索引结构（尤其是回表机制）和优化器的决策逻辑，才能写出真正高效的 SQL。</p>\n","site":{"data":{"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的博客框架"},{"name":"ButterFly","link":"https://butterfly.js.org/","avatar":"https://butterfly.js.org/img/avatar.png","descr":"一款 Hexo 简约美观的主题"}]}]}},"cover":"/img/default_cover/geomeric5.png","cover_type":"img","excerpt":"","more":"<h1 id=\"MySQL-ORDER-BY-有索引却不用？揭秘-EXPLAIN-中的“索引失效”真相\"><a href=\"#MySQL-ORDER-BY-有索引却不用？揭秘-EXPLAIN-中的“索引失效”真相\" class=\"headerlink\" title=\"MySQL ORDER BY 有索引却不用？揭秘 EXPLAIN 中的“索引失效”真相\"></a>MySQL ORDER BY 有索引却不用？揭秘 <code>EXPLAIN</code> 中的“索引失效”真相</h1><p>在日常的 MySQL 性能优化中，我们常常会遇到一个令人困惑的现象：<strong>明明为 <code>ORDER BY</code> 的字段创建了索引，但使用 <code>EXPLAIN</code> 查看执行计划时，却发现 <code>key</code> 为 <code>NULL</code>，<code>Extra</code> 中出现了 <code>Using filesort</code>，索引似乎“失效”了。</strong></p>\n<p>这究竟是怎么回事？是索引没建好？还是 MySQL 优化器“抽风”了？今天，我们就来深入剖析这一现象背后的真正原因，并提供切实可行的解决方案。</p>\n<h3 id=\"一、问题重现\"><a href=\"#一、问题重现\" class=\"headerlink\" title=\"一、问题重现\"></a>一、问题重现</h3><p>假设我们有一个用户表 <code>users</code>，并为 <code>created_at</code> 字段创建了索引：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">INDEX</span> idx_created_at <span class=\"token keyword\">ON</span> users<span class=\"token punctuation\">(</span>created_at<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>执行查询：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">EXPLAIN</span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> users <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> created_at<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n<p>你可能会惊讶地发现，执行计划中并未使用 <code>idx_created_at</code> 索引，而是进行了全表扫描和 <code>filesort</code>。</p>\n<p>这到底是为什么？</p>\n<h3 id=\"二、核心原因：回表成本过高\"><a href=\"#二、核心原因：回表成本过高\" class=\"headerlink\" title=\"二、核心原因：回表成本过高\"></a>二、核心原因：回表成本过高</h3><p>要理解这个问题，我们必须先了解 MySQL 索引的底层机制。</p>\n<ol>\n<li><p><strong>二级索引的结构</strong>：在 InnoDB 存储引擎中，除了主键索引（聚簇索引）外，其他索引都是<strong>二级索引</strong>。二级索引的叶子节点存储的是<strong>索引字段的值 + 主键值</strong>，而不是完整的数据行。</p>\n</li>\n<li><p><strong><code>SELECT *</code> 带来的“回表”问题</strong>：</p>\n<ul>\n<li>当执行 <code>SELECT * FROM users ORDER BY created_at</code> 时，MySQL 可以利用 <code>idx_created_at</code> 索引快速获取按 <code>created_at</code> 排序的主键列表。</li>\n<li>但为了获取 <code>*</code> 所代表的所有字段数据，MySQL 必须拿着这些主键，<strong>逐个回到主键索引中查找完整的数据行</strong>。这个过程称为“<strong>回表</strong>”（Bookmark Lookup）。</li>\n</ul>\n</li>\n<li><p><strong>优化器的权衡</strong>：</p>\n<ul>\n<li>如果表中有成千上万条数据，<code>ORDER BY</code> 又需要返回大部分或全部数据，那么这个“回表”过程就会产生<strong>大量的随机 I&#x2F;O 操作</strong>。</li>\n<li>随机 I&#x2F;O 的成本远高于顺序 I&#x2F;O。</li>\n<li>因此，MySQL 优化器会进行成本估算：与其进行上万次随机 I&#x2F;O（回表），不如直接进行一次<strong>全表扫描</strong>（顺序 I&#x2F;O），然后在内存中对结果集进行排序（<code>filesort</code>）。</li>\n<li>在大多数情况下，<strong>全表扫描 + 内存排序</strong>的总成本低于<strong>遍历二级索引 + 大量回表</strong>的成本。</li>\n</ul>\n</li>\n</ol>\n<p>这就是为什么 <code>EXPLAIN</code> 显示未使用索引的根本原因——<strong>优化器认为全表扫描更高效</strong>。</p>\n<h3 id=\"三、常见场景与解决方案\"><a href=\"#三、常见场景与解决方案\" class=\"headerlink\" title=\"三、常见场景与解决方案\"></a>三、常见场景与解决方案</h3><p>除了上述核心原因，还有其他几种常见情况会导致 <code>ORDER BY</code> 索引未被使用：</p>\n<h4 id=\"1-WHERE-条件优先级更高\"><a href=\"#1-WHERE-条件优先级更高\" class=\"headerlink\" title=\"1. WHERE 条件优先级更高\"></a>1. <code>WHERE</code> 条件优先级更高</h4><ul>\n<li><strong>场景</strong>：<code>SELECT * FROM users WHERE status = &#39;active&#39; ORDER BY created_at;</code></li>\n<li><strong>原因</strong>：如果 <code>status</code> 字段的过滤性很强（如只有少量用户是 ‘active’），优化器可能优先选择 <code>status</code> 上的索引，然后对少量结果进行 <code>filesort</code>。</li>\n<li><strong>方案</strong>：创建<strong>复合索引</strong> <code>idx_status_created(status, created_at)</code>，让查询既能高效过滤，又能避免排序。</li>\n</ul>\n<h4 id=\"2-范围查询阻断索引排序\"><a href=\"#2-范围查询阻断索引排序\" class=\"headerlink\" title=\"2. 范围查询阻断索引排序\"></a>2. 范围查询阻断索引排序</h4><ul>\n<li><strong>场景</strong>：<code>WHERE age &gt; 18 ORDER BY created_at</code>，索引为 <code>(age, created_at)</code>。</li>\n<li><strong>原因</strong>：“最左前缀原则”下，<code>age &gt; 18</code> 是范围查询，其后的 <code>created_at</code> 无法再利用索引排序。</li>\n<li><strong>方案</strong>：调整查询逻辑，或接受 <code>filesort</code> 的存在。</li>\n</ul>\n<h4 id=\"3-数据量过大或分布不均\"><a href=\"#3-数据量过大或分布不均\" class=\"headerlink\" title=\"3. 数据量过大或分布不均\"></a>3. 数据量过大或分布不均</h4><ul>\n<li><strong>场景</strong>：表数据量极大，或 <code>ORDER BY</code> 字段值重复率高。</li>\n<li><strong>原因</strong>：索引优势减弱，优化器可能选择全表扫描。</li>\n<li><strong>方案</strong>：优化查询条件，减少结果集。</li>\n</ul>\n<h3 id=\"四、终极解决方案：覆盖索引\"><a href=\"#四、终极解决方案：覆盖索引\" class=\"headerlink\" title=\"四、终极解决方案：覆盖索引\"></a>四、终极解决方案：覆盖索引</h3><p>要让 <code>ORDER BY</code> 索引真正发挥作用，最有效的方法是避免“回表”。</p>\n<h4 id=\"✅-方案一：避免-SELECT\"><a href=\"#✅-方案一：避免-SELECT\" class=\"headerlink\" title=\"✅ 方案一：避免 SELECT *\"></a>✅ 方案一：避免 <code>SELECT *</code></h4><p>永远不要在生产环境使用 <code>SELECT *</code>！只查询必要的字段：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 好的做法</span>\n<span class=\"token keyword\">SELECT</span> id<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> created_at <span class=\"token keyword\">FROM</span> users <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> created_at<span class=\"token punctuation\">;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>code<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>pre<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>如果查询的字段恰好都在索引中，就可能实现“覆盖索引”。</p>\n<h4 id=\"✅-方案二：创建覆盖索引（Covering-Index）\"><a href=\"#✅-方案二：创建覆盖索引（Covering-Index）\" class=\"headerlink\" title=\"✅ 方案二：创建覆盖索引（Covering Index）\"></a>✅ 方案二：创建覆盖索引（Covering Index）</h4><p>将查询中用到的所有字段都包含在索引中，使索引“覆盖”查询需求。</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 创建覆盖索引</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">INDEX</span> idx_cover <span class=\"token keyword\">ON</span> users<span class=\"token punctuation\">(</span>created_at<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> email<span class=\"token punctuation\">,</span> <span class=\"token keyword\">status</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>此时，<code>EXPLAIN</code> 的 <code>Extra</code> 列会显示 <code>Using index</code>，表示索引覆盖，无需回表，性能极佳。</p>\n<blockquote>\n<p><strong>注意</strong>：覆盖索引会增加索引大小和写入开销，需根据读写比和业务场景权衡。</p>\n</blockquote>\n<h3 id=\"五、如何验证？\"><a href=\"#五、如何验证？\" class=\"headerlink\" title=\"五、如何验证？\"></a>五、如何验证？</h3><p>使用 <code>EXPLAIN</code> 或 <code>EXPLAIN FORMAT=JSON</code> 观察执行计划：</p>\n<ul>\n<li><code>key</code>：实际使用的索引。</li>\n<li><code>Extra</code>：<ul>\n<li><code>Using index</code>：覆盖索引，最佳。</li>\n<li><code>Using filesort</code>：进行了排序，可能未用索引。</li>\n<li><code>Using index condition</code>：索引条件下推，部分优化。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"六、总结\"><a href=\"#六、总结\" class=\"headerlink\" title=\"六、总结\"></a>六、总结</h3><table>\n<thead>\n<tr>\n<th>原因</th>\n<th>解决方案</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>SELECT *</code> 导致回表成本高</td>\n<td>避免 <code>SELECT *</code>，只查必要字段</td>\n</tr>\n<tr>\n<td>未使用复合索引</td>\n<td>创建 <code>(where_col, order_by_col)</code> 复合索引</td>\n</tr>\n<tr>\n<td>无法避免回表</td>\n<td>创建覆盖索引，包含所有查询字段</td>\n</tr>\n<tr>\n<td>优化器误判</td>\n<td>使用 <code>ANALYZE TABLE</code> 更新统计信息，或 <code>FORCE INDEX</code>（慎用）</td>\n</tr>\n</tbody></table>\n<p><strong>核心思想</strong>：MySQL 优化器的目标是<strong>总成本最低</strong>，而不是“必须用索引”。理解索引结构（尤其是回表机制）和优化器的决策逻辑，才能写出真正高效的 SQL。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clny08vf000015ovffvbgfro5","category_id":"clny08vf500045ovf7bbn2etq","_id":"clny08vfb000h5ovfh1m36txl"},{"post_id":"clny08vf400035ovf39yk3bau","category_id":"clny08vf9000c5ovf4n57h7n9","_id":"clny08vfd000n5ovfait399vo"},{"post_id":"clny08vf700075ovf8wcv6o0c","category_id":"clny08vfb000i5ovf4soy741i","_id":"clny08vfe000t5ovf2grg0w25"},{"post_id":"clny08vfd000q5ovfef7bgbhg","category_id":"clny08vf9000c5ovf4n57h7n9","_id":"clny08vfg000x5ovfce9b3fo9"},{"post_id":"clny08vf800095ovf5oipeh5f","category_id":"clny08vfd000o5ovf110j0ti1","_id":"clny08vfh00105ovfe0yi6nzv"},{"post_id":"clny08vf9000b5ovf291p39hv","category_id":"clny08vf9000c5ovf4n57h7n9","_id":"clny08vfh00125ovfbbud7cb5"},{"post_id":"clny08vfa000f5ovfdse5ebgy","category_id":"clny08vfg000y5ovf8idz8hjc","_id":"clny08vfh00175ovf6nue5xnr"},{"post_id":"clny08vfb000g5ovfd4xn3fuy","category_id":"clny08vfb000i5ovf4soy741i","_id":"clny08vfi001a5ovf5mpv0tfu"},{"post_id":"clny08vfb000k5ovf8xs7dl2b","category_id":"clny08vfh00165ovfc8zb5dug","_id":"clny08vfi001f5ovfb6vx0nb2"},{"post_id":"clny08vfd000m5ovf702baqr3","category_id":"clny08vfi001b5ovf3eu8a2q3","_id":"clny08vfj001j5ovfb3mh9o55"},{"post_id":"clny08vfe000s5ovf3dk93nf4","category_id":"clny08vfi001b5ovf3eu8a2q3","_id":"clny08vfj001m5ovf1383cyy3"},{"post_id":"clo6vbzvv0000xcvfes2ieeey","category_id":"clo6vbzvz0001xcvf5utxadpz","_id":"clo6vbzw30004xcvf649x2qnc"},{"post_id":"cloi7akot0000s8vf7ogu62pn","category_id":"clny08vf9000c5ovf4n57h7n9","_id":"cloi7akoy0003s8vfe1ye8dbi"},{"post_id":"cloi7akow0001s8vf0grb2y0e","category_id":"clo6vbzvz0001xcvf5utxadpz","_id":"clqm0efuv00013w7hdfu3gaqz"},{"post_id":"clqn5fifg0000mg7h3d4w07v0","category_id":"clqn5fifm0001mg7h4xp874rc","_id":"clqn5fifr0004mg7h2j21h5b1"},{"post_id":"clqqa13nn000496jx59x82ts7","category_id":"clny08vfd000o5ovf110j0ti1","_id":"clqqa13np000896jx72b1gdu7"},{"post_id":"clqqa13ne000096jxdfqr4z69","category_id":"clqqa13nk000296jx4okwakya","_id":"clqqa13np000a96jx27ei0ghx"},{"post_id":"clqqa13nj000196jxhhaa2k10","category_id":"clqqa13no000696jxb6074bt0","_id":"clqqa13nq000c96jx0kkb3qjk"},{"post_id":"clqqa13nm000396jxc5ax3urc","category_id":"clqqa13np000996jxaa9s7on5","_id":"clqqa13nq000e96jx17962qt0"},{"post_id":"clqqa13no000596jx2apf0c02","category_id":"clqqa13nq000d96jxfysf9cw3","_id":"clqqa13nq000f96jx6iyraz87"},{"post_id":"cmfxkya2a0000ac7h5rhvau76","category_id":"clqn5fifm0001mg7h4xp874rc","_id":"cmfxkya2c0004ac7h4ic50qoe"},{"post_id":"cmfxkya2a0001ac7h4b4tbw0s","category_id":"clqn5fifm0001mg7h4xp874rc","_id":"cmfxkya2c0005ac7h4aw3c5vr"}],"PostTag":[{"post_id":"clny08vf000015ovffvbgfro5","tag_id":"clny08vf600055ovfbwxj1bkd","_id":"clny08vfa000e5ovf7kn31c4u"},{"post_id":"clny08vf400035ovf39yk3bau","tag_id":"clny08vf9000d5ovf6cosfr2m","_id":"clny08vfc000l5ovf1b8igbps"},{"post_id":"clny08vf700075ovf8wcv6o0c","tag_id":"clny08vfb000j5ovfh6h9atqi","_id":"clny08vfe000r5ovfbkci2qji"},{"post_id":"clny08vf800095ovf5oipeh5f","tag_id":"clny08vfd000p5ovfcate7fw4","_id":"clny08vfg000w5ovfh9dk737b"},{"post_id":"clny08vf9000b5ovf291p39hv","tag_id":"clny08vf9000d5ovf6cosfr2m","_id":"clny08vfh00115ovf9h494d0o"},{"post_id":"clny08vfa000f5ovfdse5ebgy","tag_id":"clny08vfg000z5ovfb5cm1ljs","_id":"clny08vfh00155ovffyqafun6"},{"post_id":"clny08vfb000g5ovfd4xn3fuy","tag_id":"clny08vfb000j5ovfh6h9atqi","_id":"clny08vfi00195ovf1u5ce30m"},{"post_id":"clny08vfb000k5ovf8xs7dl2b","tag_id":"clny08vf9000d5ovf6cosfr2m","_id":"clny08vfi001d5ovfcr020hf8"},{"post_id":"clny08vfb000k5ovf8xs7dl2b","tag_id":"clny08vfh00185ovf9au056ba","_id":"clny08vfi001e5ovfb3rg0yty"},{"post_id":"clny08vfd000m5ovf702baqr3","tag_id":"clny08vfi001c5ovf8gfg74ip","_id":"clny08vfj001i5ovfcz3t4kj5"},{"post_id":"clny08vfd000q5ovfef7bgbhg","tag_id":"clny08vf9000d5ovf6cosfr2m","_id":"clny08vfj001l5ovffm10e7q4"},{"post_id":"clny08vfd000q5ovfef7bgbhg","tag_id":"clny08vfi001h5ovf9wfp0mcf","_id":"clny08vfj001n5ovfe2i054m7"},{"post_id":"clny08vfe000s5ovf3dk93nf4","tag_id":"clny08vfj001k5ovf22b9dtgz","_id":"clny08vfj001o5ovfclkle1tl"},{"post_id":"clo6vbzvv0000xcvfes2ieeey","tag_id":"clo6vbzw20002xcvf54k21iws","_id":"clo6vbzw20003xcvf5sri8rtt"},{"post_id":"cloi7akot0000s8vf7ogu62pn","tag_id":"clny08vf9000d5ovf6cosfr2m","_id":"cloi7akoy0002s8vf9rdq1nie"},{"post_id":"cloi7akow0001s8vf0grb2y0e","tag_id":"clqm0efur00003w7hcwz4d78f","_id":"clqm0efuv00023w7h49ll2me7"},{"post_id":"clqn5fifg0000mg7h3d4w07v0","tag_id":"clqn5fifp0002mg7hctg6a9lt","_id":"clqn5fifr0003mg7hacuddp3d"},{"post_id":"clqqa13nn000496jx59x82ts7","tag_id":"clqqa13np000796jx2vht037f","_id":"clqqa13nq000b96jxa3w23ppe"},{"post_id":"cmfxkya2a0000ac7h5rhvau76","tag_id":"clqn5fifp0002mg7hctg6a9lt","_id":"cmfxkya2b0002ac7hesj32pjk"},{"post_id":"cmfxkya2a0001ac7h4b4tbw0s","tag_id":"clqn5fifp0002mg7hctg6a9lt","_id":"cmfxkya2b0003ac7h8ize5r4z"}],"Tag":[{"name":"Dockerfile","_id":"clny08vf600055ovfbwxj1bkd"},{"name":"k8s","_id":"clny08vf9000d5ovf6cosfr2m"},{"name":"ceph","_id":"clny08vfb000j5ovfh6h9atqi"},{"name":"vi","_id":"clny08vfd000p5ovfcate7fw4"},{"name":"java, 遇坑记录，mysql","_id":"clny08vfg000z5ovfb5cm1ljs"},{"name":"学习","_id":"clny08vfh00185ovf9au056ba"},{"name":"Java 笔记","_id":"clny08vfi001c5ovf8gfg74ip"},{"name":"kubevirt","_id":"clny08vfi001h5ovf9wfp0mcf"},{"name":"Java 面试","_id":"clny08vfj001k5ovf22b9dtgz"},{"name":"openid","_id":"clo6vbzw20002xcvf54k21iws"},{"name":"OAuth 2.0","_id":"clqm0efur00003w7hcwz4d78f"},{"name":"mysql","_id":"clqn5fifp0002mg7hctg6a9lt"},{"name":"linux","_id":"clqqa13np000796jx2vht037f"}]}}